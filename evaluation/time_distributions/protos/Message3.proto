// Copyright 2023 The Fleetbench Authors
//
// Licensed under the Apache License, Version 2.0 (the "License" );
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an " AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// WARNING: DO NOT EDIT! This file is auto-generated.
syntax = "proto2";

package fleetbench.proto;

message Message3 {
  optional uint64 f_0 = 2;
  optional string f_1 = 3;
  optional uint64 f_2 = 7;
  enum E1 {
    E1_UNSPECIFIED = 0;
    E1_CONST_1 = 115;
    E1_CONST_2 = 16;
    E1_CONST_3 = 50;
    E1_CONST_4 = 31;
    E1_CONST_5 = 64;
  }
  optional E1 f_3 = 8;
  optional int32 f_4 = 9;
  optional string f_5 = 10;
  message M1 {
    optional int64 f_0 = 2;
    message M12 {
      optional int64 f_0 = 1;
      message M27 {
        optional string f_0 = 1;
        optional int64 f_1 = 2;
        optional string f_2 = 5;
        optional int64 f_3 = 6;
        optional int32 f_4 = 8;
        enum E15 {
          E15_UNSPECIFIED = 0;
          E15_CONST_1 = 80;
          E15_CONST_2 = 107;
          E15_CONST_3 = 121;
          E15_CONST_4 = 34;
          E15_CONST_5 = 63;
        }
        optional E15 f_5 = 9;
      }
      optional M27 f_1 = 3;
    }
    repeated M12 f_2 = 4;
  }
  optional M1 f_10 = 11;
  message M2 {
    enum E2 {
      E2_UNSPECIFIED = 0;
      E2_CONST_1 = 105;
      E2_CONST_2 = 54;
      E2_CONST_3 = 23;
      E2_CONST_4 = 41;
      E2_CONST_5 = 29;
    }
    optional E2 f_0 = 2;
    message M10 {
      enum E7 {
        E7_UNSPECIFIED = 0;
        E7_CONST_1 = 87;
        E7_CONST_2 = 48;
        E7_CONST_3 = 10;
        E7_CONST_4 = 47;
        E7_CONST_5 = 44;
      }
      optional E7 f_0 = 1;
      optional double f_1 = 3;
      optional string f_2 = 4;
      optional int32 f_3 = 5;
      enum E8 {
        E8_UNSPECIFIED = 0;
        E8_CONST_1 = 96;
        E8_CONST_2 = 22;
        E8_CONST_3 = 63;
        E8_CONST_4 = 85;
        E8_CONST_5 = 126;
      }
      optional E8 f_4 = 8;
      enum E9 {
        E9_UNSPECIFIED = 0;
        E9_CONST_1 = 98;
        E9_CONST_2 = 1;
        E9_CONST_3 = 44;
        E9_CONST_4 = 70;
        E9_CONST_5 = 117;
      }
      optional E9 f_5 = 10;
      message M33 {
        enum E18 {
          E18_UNSPECIFIED = 0;
          E18_CONST_1 = 40;
          E18_CONST_2 = 101;
          E18_CONST_3 = 79;
          E18_CONST_4 = 9;
          E18_CONST_5 = 70;
        }
        optional E18 f_0 = 1;
        message M45 {
          optional bool f_0 = 1;
          optional uint64 f_1 = 2;
          optional int64 f_2 = 4;
          optional int32 f_3 = 6;
          optional fixed64 f_4 = 7;
          optional uint32 f_5 = 8;
          optional uint64 f_6 = 9;
          optional bool f_7 = 10;
          optional string f_8 = 11;
          message M49 {
            optional int32 f_0 = 3;
            message M55 {
              optional int32 f_0 = 1;
            }
            optional M55 f_3 = 4;
            message M56 {
              optional int32 f_0 = 2;
            }
            optional M56 f_4 = 6;
            message M63 {
              optional uint32 f_0 = 2;
              message M81 {
                optional float f_0 = 2;
                optional bool f_1 = 5;
                optional bool f_2 = 7;
                optional bytes f_3 = 10;
              }
              optional M81 f_2 = 3;
            }
            repeated M63 f_6 = 8;
            message M67 {
              optional int32 f_0 = 1;
              message M78 {
                optional int32 f_0 = 3;
                message M82 {
                  optional bool f_0 = 1;
                  enum E30 {
                    E30_UNSPECIFIED = 0;
                    E30_CONST_1 = 89;
                    E30_CONST_2 = 86;
                    E30_CONST_3 = 118;
                    E30_CONST_4 = 96;
                    E30_CONST_5 = 60;
                  }
                  optional E30 f_1 = 2;
                  enum E31 {
                    E31_UNSPECIFIED = 0;
                    E31_CONST_1 = 62;
                    E31_CONST_2 = 23;
                    E31_CONST_3 = 64;
                    E31_CONST_4 = 15;
                    E31_CONST_5 = 117;
                  }
                  optional E31 f_2 = 3;
                }
                optional M82 f_3 = 5;
              }
              optional M78 f_1 = 2;
            }
            optional M67 f_8 = 9;
            message M71 {
              repeated int64 f_0 = 1 [packed = true];
              message M75 {
                optional int64 f_0 = 3;
                optional int64 f_1 = 6;
                message M88 {
                  enum E34 {
                    E34_UNSPECIFIED = 0;
                    E34_CONST_1 = 50;
                    E34_CONST_2 = 51;
                    E34_CONST_3 = 56;
                    E34_CONST_4 = 30;
                    E34_CONST_5 = 72;
                  }
                  optional E34 f_0 = 1;
                }
                optional M88 f_6 = 7;
              }
              optional M75 f_1 = 2;
              message M80 {
                optional string f_0 = 1;
                message M85 {
                  enum E32 {
                    E32_UNSPECIFIED = 0;
                    E32_CONST_1 = 26;
                    E32_CONST_2 = 29;
                    E32_CONST_3 = 50;
                    E32_CONST_4 = 116;
                    E32_CONST_5 = 39;
                  }
                  optional E32 f_0 = 1;
                  message M90 {
                    optional int64 f_0 = 1;
                  }
                  repeated M90 f_1 = 2;
                  message M94 {
                    optional int32 f_0 = 1;
                    message M96 {
                      optional bool f_0 = 3;
                      enum E35 {
                        E35_UNSPECIFIED = 0;
                        E35_CONST_1 = 50;
                        E35_CONST_2 = 73;
                        E35_CONST_3 = 20;
                        E35_CONST_4 = 113;
                        E35_CONST_5 = 14;
                      }
                      optional E35 f_1 = 4;
                      optional int64 f_2 = 5;
                      optional float f_3 = 7;
                      optional bool f_4 = 8;
                      optional int32 f_5 = 9;
                      optional double f_6 = 10;
                      enum E36 {
                        E36_UNSPECIFIED = 0;
                        E36_CONST_1 = 103;
                        E36_CONST_2 = 101;
                        E36_CONST_3 = 42;
                        E36_CONST_4 = 39;
                        E36_CONST_5 = 68;
                      }
                      optional E36 f_7 = 12;
                      optional int64 f_8 = 13;
                      optional float f_9 = 14;
                      enum E37 {
                        E37_UNSPECIFIED = 0;
                        E37_CONST_1 = 54;
                        E37_CONST_2 = 89;
                        E37_CONST_3 = 109;
                        E37_CONST_4 = 29;
                        E37_CONST_5 = 56;
                      }
                      optional E37 f_10 = 15;
                      optional string f_11 = 16;
                      optional bool f_12 = 18;
                      optional string f_13 = 20;
                      optional bytes f_14 = 21;
                      optional fixed32 f_15 = 23;
                      optional fixed64 f_16 = 24;
                      optional float f_17 = 25;
                      enum E38 {
                        E38_UNSPECIFIED = 0;
                        E38_CONST_1 = 28;
                        E38_CONST_2 = 17;
                        E38_CONST_3 = 50;
                        E38_CONST_4 = 2;
                        E38_CONST_5 = 125;
                      }
                      optional E38 f_18 = 27;
                      enum E39 {
                        E39_UNSPECIFIED = 0;
                        E39_CONST_1 = 7;
                        E39_CONST_2 = 125;
                        E39_CONST_3 = 86;
                        E39_CONST_4 = 70;
                        E39_CONST_5 = 84;
                      }
                      optional E39 f_19 = 29;
                      optional int64 f_20 = 30;
                      optional int32 f_21 = 32;
                      enum E40 {
                        E40_UNSPECIFIED = 0;
                        E40_CONST_1 = 52;
                        E40_CONST_2 = 115;
                        E40_CONST_3 = 123;
                        E40_CONST_4 = 70;
                        E40_CONST_5 = 116;
                      }
                      optional E40 f_22 = 33;
                      optional string f_23 = 35;
                      optional string f_24 = 36;
                      optional int64 f_25 = 38;
                      optional int64 f_26 = 39;
                      optional uint32 f_27 = 40;
                      optional uint32 f_28 = 42;
                      optional int32 f_29 = 43;
                      enum E41 {
                        E41_UNSPECIFIED = 0;
                        E41_CONST_1 = 38;
                        E41_CONST_2 = 76;
                        E41_CONST_3 = 82;
                        E41_CONST_4 = 108;
                        E41_CONST_5 = 58;
                      }
                      optional E41 f_30 = 45;
                      optional float f_31 = 46;
                      optional string f_32 = 47;
                      optional float f_33 = 48;
                      optional uint64 f_34 = 49;
                      optional fixed32 f_35 = 50;
                      message M98 {
                        optional bytes f_0 = 4 ;
                      }
                      repeated M98 f_50 = 52;
                      message M99 {
                        optional string f_0 = 2;
                        optional float f_1 = 3;
                        enum E43 {
                          E43_UNSPECIFIED = 0;
                          E43_CONST_1 = 124;
                          E43_CONST_2 = 29;
                          E43_CONST_3 = 51;
                          E43_CONST_4 = 20;
                          E43_CONST_5 = 104;
                        }
                        optional E43 f_2 = 5;
                        optional float f_3 = 7;
                        message M100 {
                          optional int64 f_0 = 3;
                          optional int32 f_1 = 5;
                          message M101 {
                            optional uint64 f_0 = 1;
                            message M102 {
                              optional int32 f_0 = 2;
                              message M103 {
                                optional bool f_0 = 1;
                                message M104 {
                                  optional int64 f_0 = 1;
                                  enum E44 {
                                    E44_UNSPECIFIED = 0;
                                    E44_CONST_1 = 34;
                                    E44_CONST_2 = 48;
                                    E44_CONST_3 = 76;
                                    E44_CONST_4 = 24;
                                    E44_CONST_5 = 28;
                                  }
                                  optional E44 f_1 = 2;
                                  enum E45 {
                                    E45_UNSPECIFIED = 0;
                                    E45_CONST_1 = 44;
                                    E45_CONST_2 = 97;
                                    E45_CONST_3 = 106;
                                    E45_CONST_4 = 24;
                                    E45_CONST_5 = 21;
                                  }
                                  optional E45 f_2 = 4;
                                  optional string f_3 = 6;
                                  message M105 {
                                    optional int32 f_0 = 1;
                                    optional string f_1 = 2;
                                    message M106 {
                                      optional int32 f_0 = 1;
                                    }
                                    optional M106 f_2 = 3;
                                    message M107 {
                                      optional int32 f_0 = 1;
                                      optional int64 f_1 = 3;
                                      optional bool f_2 = 4;
                                      optional string f_3 = 6;
                                    }
                                    optional M107 f_3 = 4;
                                  }
                                  repeated M105 f_6 = 8;
                                }
                                optional M104 f_1 = 4;
                              }
                              optional M103 f_2 = 3;
                            }
                            repeated M102 f_1 = 3;
                          }
                          repeated M101 f_5 = 6;
                        }
                        repeated M100 f_7 = 9;
                      }
                      optional M99 f_52 = 53;
                    }
                    optional M96 f_1 = 2;
                  }
                  optional M94 f_2 = 4;
                }
                repeated M85 f_1 = 2;
                message M86 {
                  enum E33 {
                    E33_UNSPECIFIED = 0;
                    E33_CONST_1 = 121;
                    E33_CONST_2 = 71;
                    E33_CONST_3 = 42;
                    E33_CONST_4 = 8;
                    E33_CONST_5 = 100;
                  }
                  optional E33 f_0 = 1;
                  message M91 {
                    optional int32 f_0 = 2;
                  }
                  repeated M91 f_1 = 2;
                }
                optional M86 f_2 = 3;
                message M87 {
                  optional string f_0 = 2;
                }
                optional M87 f_3 = 4;
                message M89 {
                  optional int64 f_0 = 1;
                }
                optional M89 f_4 = 5;
              }
              optional M80 f_2 = 3;
            }
            optional M71 f_9 = 10;
          }
          optional M49 f_11 = 12;
          message M51 {
            optional int32 f_0 = 2;
            optional uint64 f_1 = 3;
            optional int32 f_2 = 4;
            optional uint32 f_3 = 6;
            optional int32 f_4 = 7;
            optional int64 f_5 = 8;
            optional string f_6 = 10;
            optional string f_7 = 11;
            optional string f_8 = 15;
            enum E23 {
              E23_UNSPECIFIED = 0;
              E23_CONST_1 = 115;
              E23_CONST_2 = 68;
              E23_CONST_3 = 92;
              E23_CONST_4 = 53;
              E23_CONST_5 = 56;
            }
            optional E23 f_9 = 17;
            optional int32 f_10 = 19;
            enum E24 {
              E24_UNSPECIFIED = 0;
              E24_CONST_1 = 71;
              E24_CONST_2 = 3;
              E24_CONST_3 = 50;
              E24_CONST_4 = 29;
              E24_CONST_5 = 15;
            }
            optional E24 f_11 = 21;
            optional bool f_12 = 22;
            optional string f_13 = 23;
            optional string f_14 = 24;
            optional string f_15 = 25;
            optional string f_16 = 29;
            optional int64 f_17 = 31;
            optional fixed32 f_18 = 33;
            optional int32 f_19 = 34;
            optional int64 f_20 = 35;
            repeated float f_21 = 37 [packed = true];
            enum E25 {
              E25_UNSPECIFIED = 0;
              E25_CONST_1 = 48;
              E25_CONST_2 = 60;
              E25_CONST_3 = 122;
              E25_CONST_4 = 83;
              E25_CONST_5 = 21;
            }
            optional E25 f_22 = 39;
            message M52 {
              enum E26 {
                E26_UNSPECIFIED = 0;
                E26_CONST_1 = 56;
                E26_CONST_2 = 59;
                E26_CONST_3 = 110;
                E26_CONST_4 = 123;
                E26_CONST_5 = 107;
              }
              optional E26 f_0 = 2;
              message M77 {
                optional uint64 f_0 = 1;
              }
              optional M77 f_2 = 4;
            }
            repeated M52 f_39 = 41;
            message M53 {
              optional int64 f_0 = 2;
            }
            optional M53 f_41 = 44;
            message M57 {
              optional int64 f_0 = 1;
            }
            optional M57 f_44 = 45;
            message M58 {
              optional int64 f_0 = 4;
              message M73 {
                optional float f_0 = 1;
              }
              optional M73 f_4 = 6;
              message M74 {
                optional uint32 f_0 = 1;
              }
              optional M74 f_6 = 7;
            }
            optional M58 f_45 = 46;
            message M61 {
              optional int64 f_0 = 1;
            }
            optional M61 f_46 = 47;
            message M62 {
              enum E27 {
                E27_UNSPECIFIED = 0;
                E27_CONST_1 = 10;
                E27_CONST_2 = 60;
                E27_CONST_3 = 125;
                E27_CONST_4 = 121;
                E27_CONST_5 = 120;
              }
              optional E27 f_0 = 2;
              message M79 {
                optional fixed64 f_0 = 3;
                message M83 {
                  optional string f_0 = 4;
                  message M92 {
                    repeated int32 f_0 = 1 [packed = true];
                  }
                  repeated M92 f_4 = 8;
                }
                optional M83 f_3 = 4;
                message M84 {
                  optional bytes f_0 = 1;
                  message M93 {
                    optional int32 f_0 = 2;
                    message M95 {
                      optional fixed32 f_0 = 2;
                      message M97 {
                        enum E42 {
                          E42_UNSPECIFIED = 0;
                          E42_CONST_1 = 109;
                          E42_CONST_2 = 28;
                          E42_CONST_3 = 52;
                          E42_CONST_4 = 111;
                          E42_CONST_5 = 120;
                        }
                        optional E42 f_0 = 2;
                      }
                      optional M97 f_2 = 4;
                    }
                    repeated M95 f_2 = 5;
                  }
                  optional M93 f_1 = 3;
                }
                optional M84 f_4 = 5;
              }
              repeated M79 f_2 = 4;
            }
            optional M62 f_47 = 48;
            message M66 {
              optional int64 f_0 = 1;
            }
            repeated M66 f_48 = 49;
            message M69 {
              optional int32 f_0 = 1;
              enum E28 {
                E28_UNSPECIFIED = 0;
                E28_CONST_1 = 18;
                E28_CONST_2 = 106;
                E28_CONST_3 = 15;
                E28_CONST_4 = 17;
                E28_CONST_5 = 115;
              }
              optional E28 f_1 = 2;
              optional int32 f_2 = 4;
              optional int64 f_3 = 5;
            }
            repeated M69 f_49 = 50;
          }
          optional M51 f_12 = 13;
        }
        optional M45 f_1 = 3;
      }
      repeated M33 f_10 = 11;
      message M40 {
        optional string f_0 = 1;
        enum E19 {
          E19_UNSPECIFIED = 0;
          E19_CONST_1 = 64;
          E19_CONST_2 = 66;
          E19_CONST_3 = 107;
          E19_CONST_4 = 57;
          E19_CONST_5 = 110;
        }
        optional E19 f_1 = 2;
        optional string f_2 = 5;
        enum E20 {
          E20_UNSPECIFIED = 0;
          E20_CONST_1 = 99;
          E20_CONST_2 = 65;
          E20_CONST_3 = 113;
          E20_CONST_4 = 18;
          E20_CONST_5 = 3;
        }
        optional E20 f_3 = 7;
      }
      repeated M40 f_11 = 12;
    }
    optional M10 f_2 = 3;
    message M18 {
      optional int64 f_0 = 1;
      message M23 {
        optional int32 f_0 = 2;
      }
      optional M23 f_1 = 2;
    }
    optional M18 f_3 = 4;
  }
  optional M2 f_11 = 12;
  message M3 {
    optional int32 f_0 = 1;
    optional int32 f_1 = 2;
    optional bytes f_2 = 3;
    optional int64 f_3 = 4;
    optional string f_4 = 5;
    enum E3 {
      E3_UNSPECIFIED = 0;
      E3_CONST_1 = 124;
      E3_CONST_2 = 73;
      E3_CONST_3 = 41;
      E3_CONST_4 = 29;
      E3_CONST_5 = 51;
    }
    optional E3 f_5 = 7;
    optional int64 f_6 = 10;
    message M13 {
      optional bytes f_0 = 3 ;
      message M34 {
        optional int32 f_0 = 2;
        optional fixed32 f_1 = 3;
      }
      repeated M34 f_3 = 4;
    }
    repeated M13 f_10 = 12;
  }
  optional M3 f_12 = 13;
  message M4 {
    optional int32 f_0 = 1;
    message M9 {
      optional string f_0 = 1;
      enum E6 {
        E6_UNSPECIFIED = 0;
        E6_CONST_1 = 101;
        E6_CONST_2 = 6;
        E6_CONST_3 = 42;
        E6_CONST_4 = 67;
        E6_CONST_5 = 115;
      }
      optional E6 f_1 = 2;
    }
    optional M9 f_1 = 2;
    message M15 {
      optional int64 f_0 = 1;
      optional float f_1 = 2;
      message M22 {
        optional uint32 f_0 = 1;
      }
      optional M22 f_2 = 3;
      message M24 {
        enum E14 {
          E14_UNSPECIFIED = 0;
          E14_CONST_1 = 29;
          E14_CONST_2 = 64;
          E14_CONST_3 = 59;
          E14_CONST_4 = 77;
          E14_CONST_5 = 116;
        }
        optional E14 f_0 = 2;
        message M42 {
          optional int64 f_0 = 1;
          optional uint64 f_1 = 3;
          repeated sint64 f_2 = 5 [packed = true];
          optional string f_3 = 6;
          optional bytes f_4 = 8 ;
          optional int64 f_5 = 10;
          optional bool f_6 = 11;
          optional int64 f_7 = 12;
          optional float f_8 = 13;
          optional double f_9 = 15;
          optional string f_10 = 16;
          optional bool f_11 = 17;
          optional string f_12 = 18;
          enum E21 {
            E21_UNSPECIFIED = 0;
            E21_CONST_1 = 16;
            E21_CONST_2 = 109;
            E21_CONST_3 = 10;
            E21_CONST_4 = 21;
            E21_CONST_5 = 38;
          }
          optional E21 f_13 = 19;
        }
        optional M42 f_2 = 3;
      }
      optional M24 f_3 = 4;
      message M32 {
        enum E17 {
          E17_UNSPECIFIED = 0;
          E17_CONST_1 = 79;
          E17_CONST_2 = 73;
          E17_CONST_3 = 68;
          E17_CONST_4 = 109;
          E17_CONST_5 = 107;
        }
        optional E17 f_0 = 2;
      }
      optional M32 f_4 = 5;
    }
    optional M15 f_2 = 3;
    message M16 {
      optional int32 f_0 = 3;
      message M29 {
        optional fixed64 f_0 = 1;
      }
      optional M29 f_3 = 4;
      message M30 {
        optional float f_0 = 1;
        message M43 {
          optional int64 f_0 = 1;
          optional int64 f_1 = 2;
          message M50 {
            optional int32 f_0 = 1;
            message M54 {
              optional bytes f_0 = 2;
            }
            optional M54 f_1 = 2;
            message M59 {
              optional uint64 f_0 = 1;
            }
            optional M59 f_2 = 3;
            message M60 {
              optional float f_0 = 3;
            }
            optional M60 f_3 = 4;
            message M64 {
              optional int64 f_0 = 2;
              optional uint32 f_1 = 3;
              optional string f_2 = 4;
            }
            optional M64 f_4 = 5;
            message M65 {
              optional bool f_0 = 1;
              message M76 {
                optional float f_0 = 2;
                optional bytes f_1 = 4 ;
                optional string f_2 = 5;
                repeated string f_3 = 6;
                optional int64 f_4 = 7;
                optional string f_5 = 8;
              }
              optional M76 f_1 = 3;
            }
            repeated M65 f_5 = 6;
            message M68 {
              optional int32 f_0 = 2;
            }
            optional M68 f_6 = 7;
            message M70 {
              optional int64 f_0 = 1;
            }
            optional M70 f_7 = 8;
            message M72 {
              optional int64 f_0 = 2;
              optional int32 f_1 = 3;
              optional uint64 f_2 = 4;
              optional fixed32 f_3 = 6;
              optional fixed32 f_4 = 7;
              enum E29 {
                E29_UNSPECIFIED = 0;
                E29_CONST_1 = 118;
                E29_CONST_2 = 14910;
                E29_CONST_3 = 111;
                E29_CONST_4 = 20;
                E29_CONST_5 = 18;
              }
              optional E29 f_5 = 9;
              optional int64 f_6 = 11;
            }
            optional M72 f_8 = 10;
          }
          optional M50 f_2 = 3;
        }
        optional M43 f_1 = 2;
      }
      optional M30 f_4 = 5;
    }
    optional M16 f_3 = 4;
    message M20 {
      optional int32 f_0 = 2;
      message M39 {
        optional fixed64 f_0 = 1;
      }
      repeated M39 f_2 = 4;
    }
    optional M20 f_4 = 6;
  }
  repeated M4 f_13 = 15;
  message M5 {
    optional int32 f_0 = 2;
  }
  optional M5 f_15 = 16;
  message M6 {
    optional int32 f_0 = 3;
    message M21 {
      enum E10 {
        E10_UNSPECIFIED = 0;
        E10_CONST_1 = 30;
        E10_CONST_2 = 50;
        E10_CONST_3 = 31;
        E10_CONST_4 = 51;
        E10_CONST_5 = 13;
      }
      optional E10 f_0 = 2;
      enum E11 {
        E11_UNSPECIFIED = 0;
        E11_CONST_1 = 47;
        E11_CONST_2 = 75;
        E11_CONST_3 = 92;
        E11_CONST_4 = 83;
        E11_CONST_5 = 70;
      }
      optional E11 f_1 = 3;
      optional int64 f_2 = 4;
      optional fixed64 f_3 = 5;
      optional bool f_4 = 7;
      optional string f_5 = 9;
      optional string f_6 = 10;
      optional string f_7 = 13;
      optional string f_8 = 15;
      optional string f_9 = 18;
      optional fixed32 f_10 = 19;
      optional int32 f_11 = 20;
      enum E12 {
        E12_UNSPECIFIED = 0;
        E12_CONST_1 = 69;
        E12_CONST_2 = 84;
        E12_CONST_3 = 83;
        E12_CONST_4 = 62;
        E12_CONST_5 = 9;
      }
      optional E12 f_12 = 22;
      optional double f_13 = 24;
      repeated uint64 f_14 = 26 [packed = true];
      repeated int32 f_15 = 28 [packed = true];
      optional double f_16 = 29;
      optional int32 f_17 = 30;
      optional uint32 f_18 = 32;
      optional bytes f_19 = 34;
      //optional bytes f_19 = 34 [ctype = CORD];
      optional fixed32 f_20 = 35;
      optional int32 f_21 = 37;
      optional string f_22 = 38;
      optional bytes f_23 = 39;
      //optional bytes f_23 = 39 [ctype = CORD];
      optional int64 f_24 = 40;
      optional int64 f_25 = 41;
      optional int32 f_26 = 43;
      optional string f_27 = 44;
      optional string f_28 = 47;
      optional uint64 f_29 = 49;
      optional string f_30 = 50;
      optional int64 f_31 = 51;
      optional bytes f_32 = 54;
      optional int32 f_33 = 55;
      optional bytes f_34 = 56;
      enum E13 {
        E13_UNSPECIFIED = 0;
        E13_CONST_1 = 8;
        E13_CONST_2 = 23;
        E13_CONST_3 = 92;
        E13_CONST_4 = 65;
        E13_CONST_5 = 57;
      }
      optional E13 f_35 = 59;
      optional uint64 f_36 = 60;
      optional string f_37 = 61;
      optional float f_38 = 62;
      optional int32 f_39 = 63;
      optional string f_40 = 64;
      optional fixed64 f_41 = 66;
      optional int64 f_42 = 67;
    }
    repeated M21 f_3 = 5;
  }
  optional M6 f_16 = 17;
  message M7 {
    optional int64 f_0 = 1;
    message M14 {
      optional string f_0 = 1;
      message M36 {
        repeated string f_0 = 2;
      }
      optional M36 f_1 = 2;
      message M37 {
        optional uint64 f_0 = 2;
      }
      optional M37 f_2 = 4;
      message M38 {
        optional bool f_0 = 2;
        message M41 {
          optional string f_0 = 1;
        }
        optional M41 f_2 = 3;
      }
      optional M38 f_4 = 5;
    }
    optional M14 f_1 = 2;
  }
  optional M7 f_17 = 19;
  message M8 {
    enum E4 {
      E4_UNSPECIFIED = 0;
      E4_CONST_1 = 63;
      E4_CONST_2 = 81;
      E4_CONST_3 = 22;
      E4_CONST_4 = 116;
      E4_CONST_5 = 96;
    }
    optional E4 f_0 = 1;
    enum E5 {
      E5_UNSPECIFIED = 0;
      E5_CONST_1 = 70;
      E5_CONST_2 = 108;
      E5_CONST_3 = 6;
      E5_CONST_4 = 118;
      E5_CONST_5 = 32;
    }
    optional E5 f_1 = 2;
    optional int64 f_2 = 4;
    message M11 {
      optional fixed32 f_0 = 1;
    }
    optional M11 f_4 = 5;
    message M17 {
      optional bool f_0 = 2;
      message M28 {
        enum E16 {
          E16_UNSPECIFIED = 0;
          E16_CONST_1 = 91;
          E16_CONST_2 = 3;
          E16_CONST_3 = 45;
          E16_CONST_4 = 47;
          E16_CONST_5 = 42;
        }
        optional E16 f_0 = 1;
      }
      optional M28 f_2 = 5;
      message M31 {
        optional string f_0 = 1;
        optional string f_1 = 2;
        message M48 {
          enum E22 {
            E22_UNSPECIFIED = 0;
            E22_CONST_1 = 96;
            E22_CONST_2 = 31;
            E22_CONST_3 = 113;
            E22_CONST_4 = 36;
            E22_CONST_5 = 8;
          }
          optional E22 f_0 = 1;
        }
        optional M48 f_2 = 3;
      }
      optional M31 f_5 = 6;
      message M35 {
        optional float f_0 = 1;
        optional int64 f_1 = 2;
        optional float f_2 = 4;
      }
      repeated M35 f_6 = 8;
    }
    optional M17 f_5 = 6;
    message M19 {
      optional bytes f_0 = 2;
      message M25 {
        optional bytes f_0 = 1 ;
        message M46 {
          optional bool f_0 = 1;
        }
        repeated M46 f_1 = 2;
      }
      optional M25 f_2 = 3;
      message M26 {
        optional float f_0 = 4;
        message M44 {
          repeated int32 f_0 = 1 [packed = true];
        }
        optional M44 f_4 = 6;
        message M47 {
          optional bool f_0 = 2;
        }
        repeated M47 f_6 = 7;
      }
      optional M26 f_3 = 6;
    }
    repeated M19 f_6 = 7;
  }
  optional M8 f_19 = 23;
}
