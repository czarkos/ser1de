// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/Message8.proto
// Protobuf C++ Version: 5.27.0-dev

#include "protos/Message8.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace fleetbench {
namespace proto {

inline constexpr Message8_M2_M8::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_1_{::int64_t{0}},
        f_2_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M8::Message8_M2_M8(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M8DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M8DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M8DefaultTypeInternal() {}
  union {
    Message8_M2_M8 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M8DefaultTypeInternal _Message8_M2_M8_default_instance_;

inline constexpr Message8_M2_M7::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M7::Message8_M2_M7(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M7DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M7DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M7DefaultTypeInternal() {}
  union {
    Message8_M2_M7 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M7DefaultTypeInternal _Message8_M2_M7_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M43_M51::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M43_M51::Message8_M2_M6_M12_M24_M43_M51(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M43_M51DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M43_M51DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M43_M51DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M43_M51 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M43_M51DefaultTypeInternal _Message8_M2_M6_M12_M24_M43_M51_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M43_M49_M68::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M43_M49_M68::Message8_M2_M6_M12_M24_M43_M49_M68(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M43_M49_M68DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M43_M49_M68DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M43_M49_M68DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M43_M49_M68 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M43_M49_M68DefaultTypeInternal _Message8_M2_M6_M12_M24_M43_M49_M68_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M35_M63::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_3_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_6_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_7_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_11_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_1_{::int64_t{0}},
        f_0_{0},
        f_4_{0},
        f_5_{0u},
        f_9_{0},
        f_8_{0},
        f_10_{static_cast< ::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63_E19 >(0)},
        f_12_{0},
        f_13_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M63::Message8_M2_M6_M12_M24_M35_M63(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M35_M63DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M63DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M35_M63DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M35_M63 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M35_M63DefaultTypeInternal _Message8_M2_M6_M12_M24_M35_M63_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M35_M62_M66::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_0_{0},
        f_2_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M62_M66::Message8_M2_M6_M12_M24_M35_M62_M66(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M35_M62_M66DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M62_M66DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M35_M62_M66DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M35_M62_M66 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M35_M62_M66DefaultTypeInternal _Message8_M2_M6_M12_M24_M35_M62_M66_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M35_M62_M65::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_1_{::int64_t{0}},
        f_2_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M62_M65::Message8_M2_M6_M12_M24_M35_M62_M65(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M35_M62_M65DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M62_M65DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M35_M62_M65DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M35_M62_M65 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M35_M62_M65DefaultTypeInternal _Message8_M2_M6_M12_M24_M35_M62_M65_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M35_M54::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_3_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_0_{false},
        f_1_{false},
        f_4_{static_cast< ::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54_E14 >(0)},
        f_5_{::int64_t{0}},
        f_6_{0},
        f_7_{static_cast< ::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54_E15 >(0)},
        f_8_{static_cast< ::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54_E16 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M54::Message8_M2_M6_M12_M24_M35_M54(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M35_M54DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M54DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M35_M54DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M35_M54 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M35_M54DefaultTypeInternal _Message8_M2_M6_M12_M24_M35_M54_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M35_M52_M67::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M52_M67::Message8_M2_M6_M12_M24_M35_M52_M67(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M35_M52_M67DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M52_M67DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M35_M52_M67DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M35_M52_M67 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M35_M52_M67DefaultTypeInternal _Message8_M2_M6_M12_M24_M35_M52_M67_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M35_M52_M64_M78::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : f_0_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M52_M64_M78::Message8_M2_M6_M12_M24_M35_M52_M64_M78(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M35_M52_M64_M78DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M52_M64_M78DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M35_M52_M64_M78DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M35_M52_M64_M78 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M35_M52_M64_M78DefaultTypeInternal _Message8_M2_M6_M12_M24_M35_M52_M64_M78_default_instance_;

inline constexpr Message8_M2_M6_M12_M22_M41_M59_M70::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M22_M41_M59_M70::Message8_M2_M6_M12_M22_M41_M59_M70(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M22_M41_M59_M70DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M22_M41_M59_M70DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M22_M41_M59_M70DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M22_M41_M59_M70 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M22_M41_M59_M70DefaultTypeInternal _Message8_M2_M6_M12_M22_M41_M59_M70_default_instance_;

inline constexpr Message8_M2_M6_M12_M21_M34_M55_M71::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M21_M34_M55_M71::Message8_M2_M6_M12_M21_M34_M55_M71(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M21_M34_M55_M71DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M21_M34_M55_M71DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M21_M34_M55_M71DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M21_M34_M55_M71 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M21_M34_M55_M71DefaultTypeInternal _Message8_M2_M6_M12_M21_M34_M55_M71_default_instance_;

inline constexpr Message8_M2_M5_M13_M26_M47::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{false},
        f_1_{0},
        f_2_{0u},
        f_3_{static_cast< ::fleetbench::proto::Message8_M2_M5_M13_M26_M47_E12 >(0)},
        f_4_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M26_M47::Message8_M2_M5_M13_M26_M47(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M5_M13_M26_M47DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M26_M47DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M5_M13_M26_M47DefaultTypeInternal() {}
  union {
    Message8_M2_M5_M13_M26_M47 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M5_M13_M26_M47DefaultTypeInternal _Message8_M2_M5_M13_M26_M47_default_instance_;

inline constexpr Message8_M2_M5_M13_M26_M36::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M26_M36::Message8_M2_M5_M13_M26_M36(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M5_M13_M26_M36DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M26_M36DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M5_M13_M26_M36DefaultTypeInternal() {}
  union {
    Message8_M2_M5_M13_M26_M36 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M5_M13_M26_M36DefaultTypeInternal _Message8_M2_M5_M13_M26_M36_default_instance_;

inline constexpr Message8_M2_M5_M13_M17_M29_M61::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{static_cast< ::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M61_E17 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17_M29_M61::Message8_M2_M5_M13_M17_M29_M61(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M5_M13_M17_M29_M61DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17_M29_M61DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M5_M13_M17_M29_M61DefaultTypeInternal() {}
  union {
    Message8_M2_M5_M13_M17_M29_M61 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M5_M13_M17_M29_M61DefaultTypeInternal _Message8_M2_M5_M13_M17_M29_M61_default_instance_;

inline constexpr Message8_M2_M5_M13_M17_M29_M50_M72_M77::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17_M29_M50_M72_M77::Message8_M2_M5_M13_M17_M29_M50_M72_M77(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M5_M13_M17_M29_M50_M72_M77DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17_M29_M50_M72_M77DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M5_M13_M17_M29_M50_M72_M77DefaultTypeInternal() {}
  union {
    Message8_M2_M5_M13_M17_M29_M50_M72_M77 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M5_M13_M17_M29_M50_M72_M77DefaultTypeInternal _Message8_M2_M5_M13_M17_M29_M50_M72_M77_default_instance_;

inline constexpr Message8_M2_M3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{},
        f_2_{},
        _f_2_cached_byte_size_{0},
        f_3_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_4_{::uint64_t{0u}},
        f_0_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M3::Message8_M2_M3(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M3DefaultTypeInternal() {}
  union {
    Message8_M2_M3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M3DefaultTypeInternal _Message8_M2_M3_default_instance_;

inline constexpr Message8_M2_M10::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_5_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_0_{::int64_t{0}},
        f_2_{::int64_t{0}},
        f_1_{static_cast< ::fleetbench::proto::Message8_M2_M10_E1 >(0)},
        f_3_{static_cast< ::fleetbench::proto::Message8_M2_M10_E2 >(0)},
        f_4_{::uint64_t{0u}},
        f_6_{0},
        f_7_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M10::Message8_M2_M10(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M10DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M10DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M10DefaultTypeInternal() {}
  union {
    Message8_M2_M10 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M10DefaultTypeInternal _Message8_M2_M10_default_instance_;

inline constexpr Message8_M1_M9::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M9::Message8_M1_M9(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M9DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M9DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M9DefaultTypeInternal() {}
  union {
    Message8_M1_M9 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M9DefaultTypeInternal _Message8_M1_M9_default_instance_;

inline constexpr Message8_M1_M4_M15_M28::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M28::Message8_M1_M4_M15_M28(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M28DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M28DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M28DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M28 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M28DefaultTypeInternal _Message8_M1_M4_M15_M28_default_instance_;

inline constexpr Message8_M1_M4_M15_M25::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M25::Message8_M1_M4_M15_M25(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M25DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M25DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M25DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M25 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M25DefaultTypeInternal _Message8_M1_M4_M15_M25_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : f_0_{},
        _f_0_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_9_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_11_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_15_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_16_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_22_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_0_{::int64_t{0}},
        f_2_{::uint64_t{0u}},
        f_4_{::int64_t{0}},
        f_6_{::int64_t{0}},
        f_5_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31 >(0)},
        f_7_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32 >(0)},
        f_8_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33 >(0)},
        f_3_{false},
        f_10_{false},
        f_20_{false},
        f_12_{::int64_t{0}},
        f_13_{0},
        f_14_{0},
        f_17_{::int64_t{0}},
        f_18_{::int64_t{0}},
        f_19_{::int64_t{0}},
        f_21_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{::uint64_t{0u}},
        f_1_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_1_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M38::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M38::Message8_M1_M4_M15_M23_M38(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M38DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M38DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M38DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M38 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M38DefaultTypeInternal _Message8_M1_M4_M15_M23_M38_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M31::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M31::Message8_M1_M4_M15_M23_M31(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M31DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M31DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M31DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M31 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M31DefaultTypeInternal _Message8_M1_M4_M15_M23_M31_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M30::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : f_0_{},
        _f_0_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M30::Message8_M1_M4_M15_M23_M30(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M30DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M30DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M30DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M30 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M30DefaultTypeInternal _Message8_M1_M4_M15_M23_M30_default_instance_;

inline constexpr Message8_M1_M4_M15_M20_M46_M56::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M20_M46_M56::Message8_M1_M4_M15_M20_M46_M56(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M20_M46_M56DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M20_M46_M56DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M20_M46_M56DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M20_M46_M56 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M20_M46_M56DefaultTypeInternal _Message8_M1_M4_M15_M20_M46_M56_default_instance_;

inline constexpr Message8_M1_M4_M15_M20_M45_M57::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M20_M45_M57::Message8_M1_M4_M15_M20_M45_M57(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M20_M45_M57DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M20_M45_M57DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M20_M45_M57DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M20_M45_M57 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M20_M45_M57DefaultTypeInternal _Message8_M1_M4_M15_M20_M45_M57_default_instance_;

inline constexpr Message8_M1_M4_M15_M16_M44::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M44::Message8_M1_M4_M15_M16_M44(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M16_M44DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M44DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M16_M44DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M16_M44 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M16_M44DefaultTypeInternal _Message8_M1_M4_M15_M16_M44_default_instance_;

inline constexpr Message8_M1_M4_M15_M16_M33_M60::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33_M60::Message8_M1_M4_M15_M16_M33_M60(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M16_M33_M60DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33_M60DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M16_M33_M60DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M16_M33_M60 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M16_M33_M60DefaultTypeInternal _Message8_M1_M4_M15_M16_M33_M60_default_instance_;

inline constexpr Message8_M1_M4_M15_M16_M33_M53_M74::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33_M53_M74::Message8_M1_M4_M15_M16_M33_M53_M74(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M16_M33_M53_M74DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33_M53_M74DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M16_M33_M53_M74DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M16_M33_M53_M74 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M16_M33_M53_M74DefaultTypeInternal _Message8_M1_M4_M15_M16_M33_M53_M74_default_instance_;

inline constexpr Message8_M1_M4_M15_M16_M33_M53_M69_M76::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33_M53_M69_M76::Message8_M1_M4_M15_M16_M33_M53_M69_M76(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M16_M33_M53_M69_M76DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33_M53_M69_M76DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M16_M33_M53_M69_M76DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M16_M33_M53_M69_M76 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M16_M33_M53_M69_M76DefaultTypeInternal _Message8_M1_M4_M15_M16_M33_M53_M69_M76_default_instance_;

inline constexpr Message8_M1_M11_M14_M27_M39_M58::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M27_M39_M58::Message8_M1_M11_M14_M27_M39_M58(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M11_M14_M27_M39_M58DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M27_M39_M58DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M11_M14_M27_M39_M58DefaultTypeInternal() {}
  union {
    Message8_M1_M11_M14_M27_M39_M58 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M11_M14_M27_M39_M58DefaultTypeInternal _Message8_M1_M11_M14_M27_M39_M58_default_instance_;

inline constexpr Message8_M1_M11_M14_M27_M32::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{static_cast< ::fleetbench::proto::Message8_M1_M11_M14_M27_M32_E8 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M27_M32::Message8_M1_M11_M14_M27_M32(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M11_M14_M27_M32DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M27_M32DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M11_M14_M27_M32DefaultTypeInternal() {}
  union {
    Message8_M1_M11_M14_M27_M32 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M11_M14_M27_M32DefaultTypeInternal _Message8_M1_M11_M14_M27_M32_default_instance_;

inline constexpr Message8_M1_M11_M14_M19_M37::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M19_M37::Message8_M1_M11_M14_M19_M37(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M11_M14_M19_M37DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M19_M37DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M11_M14_M19_M37DefaultTypeInternal() {}
  union {
    Message8_M1_M11_M14_M19_M37 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M11_M14_M19_M37DefaultTypeInternal _Message8_M1_M11_M14_M19_M37_default_instance_;

inline constexpr Message8_M1_M11_M14_M18_M42::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_1_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M18_M42::Message8_M1_M11_M14_M18_M42(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M11_M14_M18_M42DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M18_M42DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M11_M14_M18_M42DefaultTypeInternal() {}
  union {
    Message8_M1_M11_M14_M18_M42 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M11_M14_M18_M42DefaultTypeInternal _Message8_M1_M11_M14_M18_M42_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M43_M49::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{nullptr},
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M43_M49::Message8_M2_M6_M12_M24_M43_M49(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M43_M49DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M43_M49DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M43_M49DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M43_M49 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M43_M49DefaultTypeInternal _Message8_M2_M6_M12_M24_M43_M49_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M35_M62::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_2_{nullptr},
        f_0_{static_cast< ::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_E18 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M62::Message8_M2_M6_M12_M24_M35_M62(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M35_M62DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M62DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M35_M62DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M35_M62 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M35_M62DefaultTypeInternal _Message8_M2_M6_M12_M24_M35_M62_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M35_M52_M64::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_1_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M52_M64::Message8_M2_M6_M12_M24_M35_M52_M64(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M35_M52_M64DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M52_M64DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M35_M52_M64DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M35_M52_M64 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M35_M52_M64DefaultTypeInternal _Message8_M2_M6_M12_M24_M35_M52_M64_default_instance_;

inline constexpr Message8_M2_M6_M12_M22_M41_M59::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{nullptr},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M22_M41_M59::Message8_M2_M6_M12_M22_M41_M59(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M22_M41_M59DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M22_M41_M59DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M22_M41_M59DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M22_M41_M59 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M22_M41_M59DefaultTypeInternal _Message8_M2_M6_M12_M22_M41_M59_default_instance_;

inline constexpr Message8_M2_M6_M12_M21_M34_M55::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{nullptr},
        f_0_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M21_M34_M55::Message8_M2_M6_M12_M21_M34_M55(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M21_M34_M55DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M21_M34_M55DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M21_M34_M55DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M21_M34_M55 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M21_M34_M55DefaultTypeInternal _Message8_M2_M6_M12_M21_M34_M55_default_instance_;

inline constexpr Message8_M2_M5_M13_M26::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_11_{},
        f_21_{},
        f_10_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_22_{nullptr},
        f_1_{::int64_t{0}},
        f_0_{0},
        f_2_{0},
        f_3_{::uint64_t{0u}},
        f_4_{::int64_t{0}},
        f_5_{0},
        f_7_{0},
        f_6_{::int64_t{0}},
        f_8_{::int64_t{0}},
        f_9_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M26::Message8_M2_M5_M13_M26(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M5_M13_M26DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M26DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M5_M13_M26DefaultTypeInternal() {}
  union {
    Message8_M2_M5_M13_M26 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M5_M13_M26DefaultTypeInternal _Message8_M2_M5_M13_M26_default_instance_;

inline constexpr Message8_M2_M5_M13_M17_M29_M50_M72::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{nullptr},
        f_0_{static_cast< ::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72_E20 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17_M29_M50_M72::Message8_M2_M5_M13_M17_M29_M50_M72(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M5_M13_M17_M29_M50_M72DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17_M29_M50_M72DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M5_M13_M17_M29_M50_M72DefaultTypeInternal() {}
  union {
    Message8_M2_M5_M13_M17_M29_M50_M72 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M5_M13_M17_M29_M50_M72DefaultTypeInternal _Message8_M2_M5_M13_M17_M29_M50_M72_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_3_{},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_4_{},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_3_{nullptr},
        f_1_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_default_instance_;

inline constexpr Message8_M1_M4_M15_M20_M46::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_{},
        f_5_{nullptr},
        f_1_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M20_M46_E11 >(0)},
        f_2_{0},
        f_3_{::int64_t{0}},
        f_4_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M20_M46::Message8_M1_M4_M15_M20_M46(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M20_M46DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M20_M46DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M20_M46DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M20_M46 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M20_M46DefaultTypeInternal _Message8_M1_M4_M15_M20_M46_default_instance_;

inline constexpr Message8_M1_M4_M15_M20_M45::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_0_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M20_M45::Message8_M1_M4_M15_M20_M45(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M20_M45DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M20_M45DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M20_M45DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M20_M45 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M20_M45DefaultTypeInternal _Message8_M1_M4_M15_M20_M45_default_instance_;

inline constexpr Message8_M1_M4_M15_M16_M33_M53_M69::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_2_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33_M53_M69::Message8_M1_M4_M15_M16_M33_M53_M69(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M16_M33_M53_M69DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33_M53_M69DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M16_M33_M53_M69DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M16_M33_M53_M69 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M16_M33_M53_M69DefaultTypeInternal _Message8_M1_M4_M15_M16_M33_M53_M69_default_instance_;

inline constexpr Message8_M1_M11_M14_M27_M39::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{},
        f_0_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M27_M39::Message8_M1_M11_M14_M27_M39(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M11_M14_M27_M39DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M27_M39DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M11_M14_M27_M39DefaultTypeInternal() {}
  union {
    Message8_M1_M11_M14_M27_M39 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M11_M14_M27_M39DefaultTypeInternal _Message8_M1_M11_M14_M27_M39_default_instance_;

inline constexpr Message8_M1_M11_M14_M19::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_3_{},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M19::Message8_M1_M11_M14_M19(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M11_M14_M19DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M19DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M11_M14_M19DefaultTypeInternal() {}
  union {
    Message8_M1_M11_M14_M19 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M11_M14_M19DefaultTypeInternal _Message8_M1_M11_M14_M19_default_instance_;

inline constexpr Message8_M1_M11_M14_M18::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_0_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M18::Message8_M1_M11_M14_M18(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M11_M14_M18DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M18DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M11_M14_M18DefaultTypeInternal() {}
  union {
    Message8_M1_M11_M14_M18 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M11_M14_M18DefaultTypeInternal _Message8_M1_M11_M14_M18_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M43::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{nullptr},
        f_3_{nullptr},
        f_0_{static_cast< ::fleetbench::proto::Message8_M2_M6_M12_M24_M43_E10 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M43::Message8_M2_M6_M12_M24_M43(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M43DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M43DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M43DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M43 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M43DefaultTypeInternal _Message8_M2_M6_M12_M24_M43_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M35_M52::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_3_{nullptr},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M52::Message8_M2_M6_M12_M24_M35_M52(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M35_M52DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35_M52DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M35_M52DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M35_M52 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M35_M52DefaultTypeInternal _Message8_M2_M6_M12_M24_M35_M52_default_instance_;

inline constexpr Message8_M2_M6_M12_M22_M41::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_3_{nullptr},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M22_M41::Message8_M2_M6_M12_M22_M41(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M22_M41DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M22_M41DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M22_M41DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M22_M41 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M22_M41DefaultTypeInternal _Message8_M2_M6_M12_M22_M41_default_instance_;

inline constexpr Message8_M2_M6_M12_M21_M34::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{},
        f_0_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M21_M34::Message8_M2_M6_M12_M21_M34(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M21_M34DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M21_M34DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M21_M34DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M21_M34 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M21_M34DefaultTypeInternal _Message8_M2_M6_M12_M21_M34_default_instance_;

inline constexpr Message8_M2_M5_M13_M17_M29_M50::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : f_0_{},
        _f_0_cached_byte_size_{0},
        f_2_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17_M29_M50::Message8_M2_M5_M13_M17_M29_M50(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M5_M13_M17_M29_M50DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17_M29_M50DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M5_M13_M17_M29_M50DefaultTypeInternal() {}
  union {
    Message8_M2_M5_M13_M17_M29_M50 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M5_M13_M17_M29_M50DefaultTypeInternal _Message8_M2_M5_M13_M17_M29_M50_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_6_{},
        _f_6_cached_byte_size_{0},
        f_19_{},
        _f_19_cached_byte_size_{0},
        f_56_{},
        _f_56_cached_byte_size_{0},
        f_72_{},
        _f_72_cached_byte_size_{0},
        f_73_{},
        f_11_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_14_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_17_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_18_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_24_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_31_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_34_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_43_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_44_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_46_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_52_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_61_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_75_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_77_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_78_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_117_{nullptr},
        f_2_{::int64_t{0}},
        f_1_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21 >(0)},
        f_3_{0},
        f_4_{::int64_t{0}},
        f_5_{0},
        f_7_{0},
        f_8_{::uint64_t{0u}},
        f_9_{0},
        f_10_{0u},
        f_12_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23 >(0)},
        f_13_{0u},
        f_16_{::int64_t{0}},
        f_20_{0},
        f_21_{0},
        f_22_{0u},
        f_23_{0},
        f_25_{::int64_t{0}},
        f_26_{0u},
        f_0_{false},
        f_15_{false},
        f_37_{false},
        f_53_{false},
        f_27_{::int64_t{0}},
        f_28_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24 >(0)},
        f_29_{0},
        f_30_{0},
        f_32_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25 >(0)},
        f_33_{0},
        f_35_{0},
        f_36_{::int64_t{0}},
        f_38_{0},
        f_39_{0},
        f_40_{::int64_t{0}},
        f_41_{::int64_t{0}},
        f_42_{::int64_t{0}},
        f_45_{::uint64_t{0u}},
        f_47_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26 >(0)},
        f_48_{0},
        f_49_{0},
        f_51_{0u},
        f_50_{0},
        f_54_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27 >(0)},
        f_55_{0},
        f_58_{0},
        f_60_{::int64_t{0}},
        f_59_{0},
        f_62_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28 >(0)},
        f_57_{false},
        f_65_{false},
        f_66_{false},
        f_64_{0u},
        f_63_{::int64_t{0}},
        f_67_{0},
        f_69_{0},
        f_68_{::int64_t{0}},
        f_70_{0u},
        f_71_{0},
        f_76_{::uint64_t{0u}},
        f_74_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M79::Message8_M1_M4_M15_M23_M40_M48_M73_M79(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M79DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M79DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M79DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M79 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M79DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M79_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_6_{nullptr},
        f_0_{0u},
        f_1_{0},
        f_2_{::uint64_t{0u}},
        f_3_{::int64_t{0}},
        f_4_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_default_instance_;

inline constexpr Message8_M1_M4_M15_M20::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{},
        f_2_{nullptr},
        f_0_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M20::Message8_M1_M4_M15_M20(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M20DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M20DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M20DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M20 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M20DefaultTypeInternal _Message8_M1_M4_M15_M20_default_instance_;

inline constexpr Message8_M1_M4_M15_M16_M33_M53::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_4_{},
        f_1_{nullptr},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33_M53::Message8_M1_M4_M15_M16_M33_M53(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M16_M33_M53DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33_M53DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M16_M33_M53DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M16_M33_M53 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M16_M33_M53DefaultTypeInternal _Message8_M1_M4_M15_M16_M33_M53_default_instance_;

inline constexpr Message8_M1_M11_M14_M27::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{nullptr},
        f_3_{nullptr},
        f_0_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M27::Message8_M1_M11_M14_M27(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M11_M14_M27DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M11_M14_M27DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M11_M14_M27DefaultTypeInternal() {}
  union {
    Message8_M1_M11_M14_M27 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M11_M14_M27DefaultTypeInternal _Message8_M1_M11_M14_M27_default_instance_;

inline constexpr Message8_M2_M6_M12_M24_M35::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{},
        f_5_{},
        f_7_{},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_3_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35::Message8_M2_M6_M12_M24_M35(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24_M35DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24_M35DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24_M35DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24_M35 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24_M35DefaultTypeInternal _Message8_M2_M6_M12_M24_M35_default_instance_;

inline constexpr Message8_M2_M6_M12_M22::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_1_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M22::Message8_M2_M6_M12_M22(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M22DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M22DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M22DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M22 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M22DefaultTypeInternal _Message8_M2_M6_M12_M22_default_instance_;

inline constexpr Message8_M2_M6_M12_M21::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_3_{nullptr},
        f_0_{static_cast< ::fleetbench::proto::Message8_M2_M6_M12_M21_E6 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M21::Message8_M2_M6_M12_M21(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M21DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M21DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M21DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M21 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M21DefaultTypeInternal _Message8_M2_M6_M12_M21_default_instance_;

inline constexpr Message8_M2_M5_M13_M17_M29::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{nullptr},
        f_3_{nullptr},
        f_0_{::int64_t{0}},
        f_1_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17_M29::Message8_M2_M5_M13_M17_M29(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M5_M13_M17_M29DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17_M29DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M5_M13_M17_M29DefaultTypeInternal() {}
  union {
    Message8_M2_M5_M13_M17_M29 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M5_M13_M17_M29DefaultTypeInternal _Message8_M2_M5_M13_M17_M29_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_49_{},
        _f_49_cached_byte_size_{0},
        f_76_{},
        _f_76_cached_byte_size_{0},
        f_82_{},
        f_114_{},
        f_174_{},
        f_12_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_16_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_19_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_23_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_24_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_29_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_32_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_40_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_46_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_53_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_57_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_58_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_60_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_61_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_74_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_84_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_87_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_95_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_96_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_103_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_104_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_106_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_108_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_113_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_115_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_120_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_123_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_128_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_129_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_136_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_150_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_153_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_157_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_162_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_164_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_180_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_181_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_289_{nullptr},
        f_1_{::uint64_t{0u}},
        f_3_{0},
        f_2_{0},
        f_5_{0},
        f_4_{::uint64_t{0u}},
        f_6_{::int64_t{0}},
        f_7_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35 >(0)},
        f_10_{0},
        f_8_{::uint64_t{0u}},
        f_9_{::uint64_t{0u}},
        f_11_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36 >(0)},
        f_13_{0},
        f_15_{::int64_t{0}},
        f_14_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37 >(0)},
        f_17_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38 >(0)},
        f_18_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39 >(0)},
        f_20_{0},
        f_21_{::uint64_t{0u}},
        f_22_{0},
        f_25_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40 >(0)},
        f_26_{0},
        f_27_{0},
        f_28_{0},
        f_30_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41 >(0)},
        f_31_{::int64_t{0}},
        f_34_{::uint64_t{0u}},
        f_33_{0},
        f_35_{0},
        f_36_{0},
        f_37_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42 >(0)},
        f_39_{::int64_t{0}},
        f_38_{0},
        f_41_{0u},
        f_42_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43 >(0)},
        f_43_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44 >(0)},
        f_44_{0},
        f_45_{0},
        f_50_{::int64_t{0}},
        f_51_{0},
        f_48_{0u},
        f_0_{false},
        f_47_{false},
        f_62_{false},
        f_100_{false},
        f_52_{::int64_t{0}},
        f_55_{::int64_t{0}},
        f_54_{0},
        f_56_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46 >(0)},
        f_59_{::uint64_t{0u}},
        f_63_{::int64_t{0}},
        f_64_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47 >(0)},
        f_65_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48 >(0)},
        f_67_{::int64_t{0}},
        f_68_{::uint64_t{0u}},
        f_66_{0u},
        f_69_{0u},
        f_70_{::int64_t{0}},
        f_71_{0},
        f_72_{0u},
        f_75_{::int64_t{0}},
        f_73_{0},
        f_80_{0},
        f_77_{::int64_t{0}},
        f_78_{::int64_t{0}},
        f_79_{::int64_t{0}},
        f_83_{::int64_t{0}},
        f_81_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49 >(0)},
        f_86_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50 >(0)},
        f_85_{::uint64_t{0u}},
        f_89_{::int64_t{0}},
        f_88_{0},
        f_90_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51 >(0)},
        f_92_{::int64_t{0}},
        f_91_{0},
        f_93_{0},
        f_94_{0},
        f_98_{0},
        f_97_{::int64_t{0}},
        f_99_{0},
        f_101_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52 >(0)},
        f_102_{0},
        f_105_{0},
        f_107_{0},
        f_109_{::uint64_t{0u}},
        f_110_{::uint64_t{0u}},
        f_112_{::int64_t{0}},
        f_111_{0u},
        f_116_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53 >(0)},
        f_117_{::int64_t{0}},
        f_119_{::int64_t{0}},
        f_118_{0},
        f_124_{0},
        f_121_{::int64_t{0}},
        f_122_{::int64_t{0}},
        f_125_{0},
        f_126_{0},
        f_127_{::int64_t{0}},
        f_130_{::int64_t{0}},
        f_132_{::int64_t{0}},
        f_131_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54 >(0)},
        f_134_{0},
        f_133_{::int64_t{0}},
        f_135_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55 >(0)},
        f_138_{0},
        f_137_{::int64_t{0}},
        f_139_{::int64_t{0}},
        f_140_{::uint64_t{0u}},
        f_141_{::int64_t{0}},
        f_142_{::int64_t{0}},
        f_144_{0},
        f_145_{0},
        f_147_{0},
        f_148_{::int64_t{0}},
        f_149_{0},
        f_143_{false},
        f_146_{false},
        f_152_{false},
        f_161_{false},
        f_151_{0},
        f_154_{0u},
        f_155_{0},
        f_156_{::int64_t{0}},
        f_158_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56 >(0)},
        f_160_{0},
        f_159_{::int64_t{0}},
        f_165_{::int64_t{0}},
        f_166_{::int64_t{0}},
        f_163_{0u},
        f_168_{0},
        f_167_{::int64_t{0}},
        f_169_{0},
        f_170_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57 >(0)},
        f_171_{::int64_t{0}},
        f_173_{::int64_t{0}},
        f_172_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58 >(0)},
        f_175_{0u},
        f_176_{::int64_t{0}},
        f_177_{0},
        f_178_{0},
        f_179_{0},
        f_182_{0},
        f_183_{::int64_t{0}},
        f_185_{::int64_t{0}},
        f_184_{0},
        f_186_{false},
        f_188_{::int64_t{0}},
        f_187_{0},
        f_189_{0u},
        f_191_{::int64_t{0}},
        f_190_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_default_instance_;

inline constexpr Message8_M1_M4_M15_M16_M33::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{},
        f_3_{nullptr},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33::Message8_M1_M4_M15_M16_M33(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M16_M33DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16_M33DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M16_M33DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M16_M33 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M16_M33DefaultTypeInternal _Message8_M1_M4_M15_M16_M33_default_instance_;

inline constexpr Message8_M1_M11_M14::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{},
        _f_1_cached_byte_size_{0},
        f_9_{},
        _f_9_cached_byte_size_{0},
        f_33_{},
        f_2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_6_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_7_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_10_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_13_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_16_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_31_{nullptr},
        f_34_{nullptr},
        f_0_{::int64_t{0}},
        f_4_{::int64_t{0}},
        f_5_{::int64_t{0}},
        f_3_{false},
        f_12_{false},
        f_8_{static_cast< ::fleetbench::proto::Message8_M1_M11_M14_E4 >(0)},
        f_11_{0},
        f_14_{0},
        f_15_{static_cast< ::fleetbench::proto::Message8_M1_M11_M14_E5 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M11_M14::Message8_M1_M11_M14(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M11_M14DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M11_M14DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M11_M14DefaultTypeInternal() {}
  union {
    Message8_M1_M11_M14 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M11_M14DefaultTypeInternal _Message8_M1_M11_M14_default_instance_;

inline constexpr Message8_M2_M6_M12_M24::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_6_{},
        _f_6_cached_byte_size_{0},
        f_2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_3_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_4_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_14_{nullptr},
        f_15_{nullptr},
        f_0_{static_cast< ::fleetbench::proto::Message8_M2_M6_M12_M24_E7 >(0)},
        f_1_{false},
        f_5_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24::Message8_M2_M6_M12_M24(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12_M24DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12_M24DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12_M24DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12_M24 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12_M24DefaultTypeInternal _Message8_M2_M6_M12_M24_default_instance_;

inline constexpr Message8_M2_M5_M13_M17::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{nullptr},
        f_0_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17::Message8_M2_M5_M13_M17(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M5_M13_M17DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M5_M13_M17DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M5_M13_M17DefaultTypeInternal() {}
  union {
    Message8_M2_M5_M13_M17 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M5_M13_M17DefaultTypeInternal _Message8_M2_M5_M13_M17_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_default_instance_;

inline constexpr Message8_M1_M4_M15_M16::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_4_{nullptr},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16::Message8_M1_M4_M15_M16(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M16DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M16DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M16DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M16 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M16DefaultTypeInternal _Message8_M1_M4_M15_M16_default_instance_;

inline constexpr Message8_M1_M11::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_6_{nullptr},
        f_1_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M11::Message8_M1_M11(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M11DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M11DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M11DefaultTypeInternal() {}
  union {
    Message8_M1_M11 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M11DefaultTypeInternal _Message8_M1_M11_default_instance_;

inline constexpr Message8_M2_M6_M12::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{},
        _f_2_cached_byte_size_{0},
        f_3_{nullptr},
        f_4_{nullptr},
        f_5_{nullptr},
        f_0_{false},
        f_1_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6_M12::Message8_M2_M6_M12(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6_M12DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6_M12DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6_M12DefaultTypeInternal() {}
  union {
    Message8_M2_M6_M12 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6_M12DefaultTypeInternal _Message8_M2_M6_M12_default_instance_;

inline constexpr Message8_M2_M5_M13::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{},
        f_2_{},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M5_M13::Message8_M2_M5_M13(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M5_M13DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M5_M13DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M5_M13DefaultTypeInternal() {}
  union {
    Message8_M2_M5_M13 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M5_M13DefaultTypeInternal _Message8_M2_M5_M13_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{},
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_default_instance_;

inline constexpr Message8_M2_M6::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{},
        f_0_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M6::Message8_M2_M6(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M6DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M6DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M6DefaultTypeInternal() {}
  union {
    Message8_M2_M6 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M6DefaultTypeInternal _Message8_M2_M6_default_instance_;

inline constexpr Message8_M2_M5::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_0_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2_M5::Message8_M2_M5(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2_M5DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2_M5DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2_M5DefaultTypeInternal() {}
  union {
    Message8_M2_M5 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2_M5DefaultTypeInternal _Message8_M2_M5_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_default_instance_;

inline constexpr Message8_M2::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{},
        _f_1_cached_byte_size_{0},
        f_5_{},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_3_{nullptr},
        f_6_{nullptr},
        f_7_{nullptr},
        f_8_{nullptr},
        f_9_{nullptr},
        f_2_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M2::Message8_M2(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M2DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M2DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M2DefaultTypeInternal() {}
  union {
    Message8_M2 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M2DefaultTypeInternal _Message8_M2_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{nullptr},
        f_4_{nullptr},
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : f_0_{},
        _f_0_cached_byte_size_{0},
        f_3_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_4_{},
        f_3_{nullptr},
        f_8_{nullptr},
        f_0_{::int64_t{0}},
        f_2_{::int64_t{0}},
        f_1_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_3_{nullptr},
        f_0_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75::Message8_M1_M4_M15_M23_M40_M48_M73_M75(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73_M75DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73_M75DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73_M75DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73_M75 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73_M75DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_M75_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48_M73::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_3_{},
        f_4_{nullptr},
        f_0_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73::Message8_M1_M4_M15_M23_M40_M48_M73(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48_M73DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48_M73DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48_M73DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48_M73 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48_M73DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_M73_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40_M48::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48::Message8_M1_M4_M15_M23_M40_M48(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40_M48DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40_M48DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40_M48DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40_M48 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40_M48DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_M48_default_instance_;

inline constexpr Message8_M1_M4_M15_M23_M40::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_2_{nullptr},
        f_0_{static_cast< ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_E9 >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40::Message8_M1_M4_M15_M23_M40(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23_M40DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23_M40DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23_M40DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23_M40 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23_M40DefaultTypeInternal _Message8_M1_M4_M15_M23_M40_default_instance_;

inline constexpr Message8_M1_M4_M15_M23::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_2_{nullptr},
        f_5_{nullptr},
        f_7_{nullptr},
        f_0_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23::Message8_M1_M4_M15_M23(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15_M23DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15_M23DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15_M23DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15_M23 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15_M23DefaultTypeInternal _Message8_M1_M4_M15_M23_default_instance_;

inline constexpr Message8_M1_M4_M15::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_8_{},
        f_18_{},
        f_21_{},
        f_22_{},
        f_4_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_10_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_19_{nullptr},
        f_20_{nullptr},
        f_0_{0},
        f_1_{0},
        f_2_{0},
        f_3_{0},
        f_5_{::int64_t{0}},
        f_7_{0},
        f_6_{false},
        f_9_{false},
        f_11_{::uint64_t{0u}},
        f_12_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4_M15::Message8_M1_M4_M15(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4_M15DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4_M15DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4_M15DefaultTypeInternal() {}
  union {
    Message8_M1_M4_M15 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4_M15DefaultTypeInternal _Message8_M1_M4_M15_default_instance_;

inline constexpr Message8_M1_M4::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_1_{nullptr},
        f_0_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1_M4::Message8_M1_M4(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1_M4DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1_M4DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1_M4DefaultTypeInternal() {}
  union {
    Message8_M1_M4 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1_M4DefaultTypeInternal _Message8_M1_M4_default_instance_;

inline constexpr Message8_M1::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_16_{},
        f_18_{},
        f_0_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_4_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        f_17_{nullptr},
        f_1_{::uint64_t{0u}},
        f_3_{0u},
        f_6_{0},
        f_5_{::uint64_t{0u}},
        f_7_{0},
        f_8_{0},
        f_9_{0},
        f_10_{0u},
        f_11_{::int64_t{0}},
        f_12_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Message8_M1::Message8_M1(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8_M1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8_M1DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8_M1DefaultTypeInternal() {}
  union {
    Message8_M1 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8_M1DefaultTypeInternal _Message8_M1_default_instance_;

inline constexpr Message8::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        f_10_{},
        f_11_{nullptr},
        f_0_{::uint64_t{0u}},
        f_1_{::uint64_t{0u}},
        f_2_{false},
        f_3_{0},
        f_4_{0},
        f_5_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Message8::Message8(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Message8DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Message8DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Message8DefaultTypeInternal() {}
  union {
    Message8 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Message8DefaultTypeInternal _Message8_default_instance_;
}  // namespace proto
}  // namespace fleetbench
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_protos_2fMessage8_2eproto[59];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2fMessage8_2eproto = nullptr;
const ::uint32_t
    TableStruct_protos_2fMessage8_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69_M76, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69_M76, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69_M76, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69, _impl_.f_2_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M74, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M74, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M74, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M74, _impl_.f_1_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53, _impl_.f_4_),
        1,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M60, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M60, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M60, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M33, _impl_.f_3_),
        1,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M44, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M44, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16_M44, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M16, _impl_.f_4_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M45_M57, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M45_M57, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M45_M57, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M45, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M45, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M45, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M45, _impl_.f_1_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M46_M56, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M46_M56, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M46_M56, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M46, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M46, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M46, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M46, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M46, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M46, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M46, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20_M46, _impl_.f_5_),
        ~0u,
        1,
        2,
        3,
        4,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M20, _impl_.f_2_),
        1,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M30, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M30, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M31, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M31, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M31, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M38, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M38, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M38, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_.f_2_),
        0,
        2,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_4_),
        0,
        2,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_6_),
        1,
        2,
        3,
        4,
        5,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_7_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_8_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_9_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_10_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_11_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_12_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_13_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_14_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_15_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_16_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_17_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_18_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_19_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_20_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_21_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_22_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_23_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_24_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_25_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_26_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_27_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_28_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_29_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_30_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_31_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_32_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_33_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_34_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_35_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_36_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_37_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_38_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_39_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_40_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_41_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_42_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_43_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_44_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_45_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_46_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_47_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_48_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_49_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_50_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_51_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_52_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_53_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_54_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_55_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_56_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_57_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_58_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_59_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_60_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_61_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_62_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_63_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_64_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_65_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_66_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_67_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_68_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_69_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_70_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_71_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_72_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_73_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_74_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_75_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_76_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_77_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_78_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_79_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_80_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_81_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_82_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_83_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_84_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_85_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_86_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_87_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_88_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_89_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_90_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_91_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_92_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_93_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_94_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_95_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_96_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_97_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_98_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_99_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_100_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_101_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_102_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_103_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_104_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_105_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_106_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_107_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_108_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_109_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_110_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_111_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_112_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_113_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_114_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_115_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_116_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_117_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_118_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_119_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_120_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_121_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_122_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_123_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_124_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_125_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_126_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_127_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_128_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_129_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_130_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_131_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_132_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_133_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_134_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_135_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_136_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_137_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_138_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_139_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_140_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_141_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_142_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_143_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_144_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_145_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_146_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_147_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_148_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_149_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_150_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_151_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_152_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_153_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_154_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_155_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_156_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_157_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_158_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_159_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_160_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_161_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_162_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_163_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_164_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_165_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_166_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_167_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_168_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_169_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_170_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_171_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_172_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_173_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_174_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_175_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_176_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_177_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_178_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_179_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_180_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_181_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_182_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_183_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_184_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_185_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_186_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_187_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_188_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_189_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_190_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_191_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_289_),
        78,
        38,
        40,
        39,
        42,
        41,
        43,
        44,
        46,
        47,
        45,
        48,
        0,
        49,
        51,
        50,
        1,
        52,
        53,
        2,
        54,
        55,
        56,
        3,
        4,
        57,
        58,
        59,
        60,
        5,
        61,
        62,
        6,
        64,
        63,
        65,
        66,
        67,
        69,
        68,
        7,
        70,
        71,
        72,
        73,
        74,
        8,
        79,
        77,
        ~0u,
        75,
        76,
        82,
        9,
        84,
        83,
        85,
        10,
        11,
        86,
        12,
        13,
        80,
        87,
        88,
        89,
        92,
        90,
        91,
        93,
        94,
        95,
        96,
        98,
        14,
        97,
        ~0u,
        100,
        101,
        102,
        99,
        104,
        ~0u,
        103,
        15,
        106,
        105,
        16,
        108,
        107,
        109,
        111,
        110,
        112,
        113,
        17,
        18,
        115,
        114,
        116,
        81,
        117,
        118,
        19,
        20,
        119,
        21,
        120,
        22,
        121,
        122,
        124,
        123,
        23,
        ~0u,
        24,
        125,
        126,
        128,
        127,
        25,
        130,
        131,
        26,
        129,
        132,
        133,
        134,
        27,
        28,
        135,
        137,
        136,
        139,
        138,
        140,
        29,
        142,
        141,
        143,
        144,
        145,
        146,
        152,
        147,
        148,
        153,
        149,
        150,
        151,
        30,
        156,
        154,
        31,
        157,
        158,
        159,
        32,
        160,
        162,
        161,
        155,
        33,
        165,
        34,
        163,
        164,
        167,
        166,
        168,
        169,
        170,
        172,
        171,
        ~0u,
        173,
        174,
        175,
        176,
        177,
        35,
        36,
        178,
        179,
        181,
        180,
        182,
        184,
        183,
        185,
        187,
        186,
        37,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_.f_1_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _impl_.f_1_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90, _impl_.f_1_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_4_),
        2,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_.f_1_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_.f_1_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_8_),
        2,
        4,
        3,
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_7_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_8_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_9_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_10_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_11_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_12_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_13_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_14_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_15_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_16_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_17_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_18_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_19_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_20_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_21_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_22_),
        6,
        0,
        7,
        13,
        8,
        10,
        9,
        11,
        12,
        1,
        14,
        2,
        16,
        17,
        18,
        3,
        4,
        19,
        20,
        21,
        15,
        22,
        5,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_.f_3_),
        2,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80, _impl_.f_3_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_7_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_8_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_9_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_10_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_11_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_12_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_13_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_14_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_15_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_16_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_17_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_18_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_19_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_20_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_21_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_22_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_23_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_24_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_25_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_26_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_27_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_28_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_29_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_30_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_31_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_32_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_33_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_34_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_35_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_36_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_37_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_38_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_39_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_40_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_41_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_42_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_43_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_44_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_45_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_46_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_47_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_48_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_49_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_50_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_51_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_52_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_53_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_54_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_55_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_56_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_57_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_58_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_59_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_60_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_61_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_62_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_63_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_64_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_65_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_66_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_67_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_68_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_69_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_70_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_71_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_72_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_73_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_74_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_75_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_76_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_77_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_78_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_117_),
        34,
        17,
        16,
        18,
        19,
        20,
        ~0u,
        21,
        22,
        23,
        24,
        0,
        25,
        26,
        1,
        35,
        27,
        2,
        3,
        ~0u,
        28,
        29,
        30,
        31,
        4,
        32,
        33,
        38,
        39,
        40,
        41,
        5,
        42,
        43,
        6,
        44,
        45,
        36,
        46,
        47,
        48,
        49,
        50,
        7,
        8,
        51,
        9,
        52,
        53,
        54,
        56,
        55,
        10,
        37,
        57,
        58,
        ~0u,
        63,
        59,
        61,
        60,
        11,
        62,
        67,
        66,
        64,
        65,
        68,
        70,
        69,
        71,
        72,
        ~0u,
        ~0u,
        74,
        12,
        73,
        13,
        14,
        15,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_4_),
        1,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48, _impl_.f_1_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23_M40, _impl_.f_2_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M23, _impl_.f_7_),
        4,
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M25, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M25, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M25, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M28, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M28, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15_M28, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_7_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_8_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_9_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_10_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_11_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_12_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_18_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_19_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_20_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_21_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4_M15, _impl_.f_22_),
        4,
        5,
        6,
        7,
        0,
        8,
        10,
        9,
        ~0u,
        11,
        1,
        12,
        13,
        ~0u,
        2,
        3,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M4, _impl_.f_1_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M9, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M9, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M9, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M18_M42, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M18_M42, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M18_M42, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M18_M42, _impl_.f_1_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M18, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M18, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M18, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M18, _impl_.f_1_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M19_M37, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M19_M37, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M19_M37, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M19, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M19, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M19, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M19, _impl_.f_3_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27_M32, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27_M32, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27_M32, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27_M39_M58, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27_M39_M58, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27_M39_M58, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27_M39, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27_M39, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27_M39, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27_M39, _impl_.f_1_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14_M27, _impl_.f_3_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_7_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_8_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_9_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_10_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_11_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_12_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_13_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_14_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_15_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_16_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_31_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_33_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11_M14, _impl_.f_34_),
        8,
        ~0u,
        0,
        11,
        9,
        10,
        1,
        2,
        13,
        ~0u,
        3,
        14,
        12,
        4,
        15,
        16,
        5,
        6,
        ~0u,
        7,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1_M11, _impl_.f_6_),
        0,
        3,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_7_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_8_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_9_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_10_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_11_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_12_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_16_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_17_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M1, _impl_.f_18_),
        0,
        4,
        1,
        5,
        2,
        7,
        6,
        8,
        9,
        10,
        11,
        12,
        13,
        ~0u,
        3,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M3, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M3, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M3, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M3, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M3, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M3, _impl_.f_4_),
        2,
        ~0u,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72_M77, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72_M77, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72_M77, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72, _impl_.f_2_),
        1,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M61, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M61, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M61, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17_M29, _impl_.f_3_),
        2,
        3,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M17, _impl_.f_2_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26_M36, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26_M36, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26_M36, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26_M47, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26_M47, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26_M47, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26_M47, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26_M47, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26_M47, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26_M47, _impl_.f_4_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_7_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_8_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_9_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_10_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_11_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_21_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13_M26, _impl_.f_22_),
        3,
        2,
        4,
        5,
        6,
        7,
        9,
        8,
        10,
        11,
        0,
        ~0u,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5_M13, _impl_.f_2_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M5, _impl_.f_1_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55_M71, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55_M71, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55_M71, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55, _impl_.f_2_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21_M34, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21_M34, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21_M34, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21_M34, _impl_.f_1_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M21, _impl_.f_3_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59_M70, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59_M70, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59_M70, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59, _impl_.f_2_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22_M41, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22_M41, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22_M41, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22_M41, _impl_.f_3_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M22, _impl_.f_1_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64_M78, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64_M78, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64, _impl_.f_1_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M67, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M67, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M67, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52, _impl_.f_3_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54, _impl_.f_7_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54, _impl_.f_8_),
        2,
        3,
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M65, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M65, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_2_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M66, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M66, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_2_),
        1,
        0,
        2,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62, _impl_.f_2_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_7_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_8_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_9_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_10_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_11_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_12_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63, _impl_.f_13_),
        6,
        5,
        0,
        1,
        7,
        8,
        2,
        3,
        10,
        9,
        11,
        4,
        12,
        13,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M35, _impl_.f_7_),
        0,
        ~0u,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49_M68, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49_M68, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49_M68, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49, _impl_.f_2_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M51, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M51, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M51, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24_M43, _impl_.f_3_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24, _impl_.f_14_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12_M24, _impl_.f_15_),
        5,
        6,
        0,
        1,
        2,
        7,
        ~0u,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6_M12, _impl_.f_5_),
        3,
        4,
        ~0u,
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M6, _impl_.f_2_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M7, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M7, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M7, _impl_.f_0_),
        0,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M8, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M8, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M8, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M8, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M8, _impl_.f_2_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M10, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M10, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M10, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M10, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M10, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M10, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M10, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M10, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M10, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2_M10, _impl_.f_7_),
        1,
        3,
        2,
        4,
        5,
        0,
        6,
        7,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2, _impl_.f_6_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2, _impl_.f_7_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2, _impl_.f_8_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8_M2, _impl_.f_9_),
        0,
        ~0u,
        6,
        1,
        ~0u,
        2,
        3,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8, _impl_.f_0_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8, _impl_.f_1_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8, _impl_.f_2_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8, _impl_.f_3_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8, _impl_.f_4_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8, _impl_.f_5_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8, _impl_.f_10_),
        PROTOBUF_FIELD_OFFSET(::fleetbench::proto::Message8, _impl_.f_11_),
        1,
        2,
        3,
        4,
        5,
        6,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69_M76)},
        {10, 20, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69)},
        {22, 32, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M74)},
        {34, 45, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53)},
        {48, 57, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M60)},
        {58, 69, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M16_M33)},
        {72, 81, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M16_M44)},
        {82, 93, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M16)},
        {96, 105, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M20_M45_M57)},
        {106, 116, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M20_M45)},
        {118, 127, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M20_M46_M56)},
        {128, 142, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M20_M46)},
        {148, 159, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M20)},
        {162, -1, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M30)},
        {171, 180, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M31)},
        {181, 190, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M38)},
        {191, 200, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89)},
        {201, 210, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96)},
        {211, 222, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97)},
        {225, 237, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95)},
        {241, 255, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94)},
        {261, 462, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93)},
        {655, 665, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92)},
        {667, 677, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91)},
        {679, 689, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90)},
        {691, 702, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88)},
        {705, -1, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83)},
        {715, 724, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84)},
        {725, 735, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87)},
        {737, 747, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86)},
        {749, 763, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81)},
        {769, 800, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82)},
        {823, 834, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75)},
        {837, -1, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85)},
        {846, 856, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80)},
        {858, 946, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79)},
        {1026, 1037, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73)},
        {1040, 1050, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48)},
        {1052, 1062, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23_M40)},
        {1064, 1077, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M23)},
        {1082, 1091, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M25)},
        {1092, 1101, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15_M28)},
        {1102, 1128, -1, sizeof(::fleetbench::proto::Message8_M1_M4_M15)},
        {1146, 1156, -1, sizeof(::fleetbench::proto::Message8_M1_M4)},
        {1158, 1167, -1, sizeof(::fleetbench::proto::Message8_M1_M9)},
        {1168, 1178, -1, sizeof(::fleetbench::proto::Message8_M1_M11_M14_M18_M42)},
        {1180, 1190, -1, sizeof(::fleetbench::proto::Message8_M1_M11_M14_M18)},
        {1192, 1201, -1, sizeof(::fleetbench::proto::Message8_M1_M11_M14_M19_M37)},
        {1202, 1212, -1, sizeof(::fleetbench::proto::Message8_M1_M11_M14_M19)},
        {1214, 1223, -1, sizeof(::fleetbench::proto::Message8_M1_M11_M14_M27_M32)},
        {1224, 1233, -1, sizeof(::fleetbench::proto::Message8_M1_M11_M14_M27_M39_M58)},
        {1234, 1244, -1, sizeof(::fleetbench::proto::Message8_M1_M11_M14_M27_M39)},
        {1246, 1257, -1, sizeof(::fleetbench::proto::Message8_M1_M11_M14_M27)},
        {1260, 1288, -1, sizeof(::fleetbench::proto::Message8_M1_M11_M14)},
        {1308, 1320, -1, sizeof(::fleetbench::proto::Message8_M1_M11)},
        {1324, 1348, -1, sizeof(::fleetbench::proto::Message8_M1)},
        {1364, 1377, -1, sizeof(::fleetbench::proto::Message8_M2_M3)},
        {1382, 1391, -1, sizeof(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72_M77)},
        {1392, 1402, -1, sizeof(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72)},
        {1404, -1, -1, sizeof(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50)},
        {1414, 1423, -1, sizeof(::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M61)},
        {1424, 1436, -1, sizeof(::fleetbench::proto::Message8_M2_M5_M13_M17_M29)},
        {1440, 1450, -1, sizeof(::fleetbench::proto::Message8_M2_M5_M13_M17)},
        {1452, 1461, -1, sizeof(::fleetbench::proto::Message8_M2_M5_M13_M26_M36)},
        {1462, 1475, -1, sizeof(::fleetbench::proto::Message8_M2_M5_M13_M26_M47)},
        {1480, 1502, -1, sizeof(::fleetbench::proto::Message8_M2_M5_M13_M26)},
        {1516, 1527, -1, sizeof(::fleetbench::proto::Message8_M2_M5_M13)},
        {1530, 1540, -1, sizeof(::fleetbench::proto::Message8_M2_M5)},
        {1542, 1551, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55_M71)},
        {1552, 1562, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55)},
        {1564, 1574, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M21_M34)},
        {1576, 1586, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M21)},
        {1588, 1597, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59_M70)},
        {1598, 1608, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59)},
        {1610, 1620, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M22_M41)},
        {1622, 1632, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M22)},
        {1634, -1, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64_M78)},
        {1643, 1653, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64)},
        {1655, 1664, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M67)},
        {1665, 1676, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52)},
        {1679, 1696, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54)},
        {1705, 1716, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M65)},
        {1719, 1730, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M66)},
        {1733, 1744, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62)},
        {1747, 1769, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63)},
        {1783, 1796, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M35)},
        {1801, 1810, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49_M68)},
        {1811, 1821, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49)},
        {1823, 1832, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M51)},
        {1833, 1844, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24_M43)},
        {1847, 1864, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12_M24)},
        {1873, 1887, -1, sizeof(::fleetbench::proto::Message8_M2_M6_M12)},
        {1893, 1903, -1, sizeof(::fleetbench::proto::Message8_M2_M6)},
        {1905, 1914, -1, sizeof(::fleetbench::proto::Message8_M2_M7)},
        {1915, 1926, -1, sizeof(::fleetbench::proto::Message8_M2_M8)},
        {1929, 1945, -1, sizeof(::fleetbench::proto::Message8_M2_M10)},
        {1953, 1970, -1, sizeof(::fleetbench::proto::Message8_M2)},
        {1979, 1995, -1, sizeof(::fleetbench::proto::Message8)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::fleetbench::proto::_Message8_M1_M4_M15_M16_M33_M53_M69_M76_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M16_M33_M53_M69_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M16_M33_M53_M74_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M16_M33_M53_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M16_M33_M60_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M16_M33_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M16_M44_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M16_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M20_M45_M57_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M20_M45_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M20_M46_M56_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M20_M46_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M20_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M30_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M31_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M38_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M75_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_M79_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_M73_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_M48_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_M40_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M23_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M25_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_M28_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_M15_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M4_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M9_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M11_M14_M18_M42_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M11_M14_M18_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M11_M14_M19_M37_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M11_M14_M19_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M11_M14_M27_M32_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M11_M14_M27_M39_M58_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M11_M14_M27_M39_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M11_M14_M27_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M11_M14_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_M11_default_instance_._instance,
    &::fleetbench::proto::_Message8_M1_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M3_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M5_M13_M17_M29_M50_M72_M77_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M5_M13_M17_M29_M50_M72_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M5_M13_M17_M29_M50_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M5_M13_M17_M29_M61_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M5_M13_M17_M29_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M5_M13_M17_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M5_M13_M26_M36_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M5_M13_M26_M47_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M5_M13_M26_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M5_M13_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M5_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M21_M34_M55_M71_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M21_M34_M55_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M21_M34_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M21_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M22_M41_M59_M70_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M22_M41_M59_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M22_M41_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M22_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M35_M52_M64_M78_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M35_M52_M64_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M35_M52_M67_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M35_M52_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M35_M54_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M35_M62_M65_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M35_M62_M66_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M35_M62_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M35_M63_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M35_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M43_M49_M68_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M43_M49_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M43_M51_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_M43_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_M24_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_M12_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M6_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M7_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M8_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_M10_default_instance_._instance,
    &::fleetbench::proto::_Message8_M2_default_instance_._instance,
    &::fleetbench::proto::_Message8_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2fMessage8_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025protos/Message8.proto\022\020fleetbench.prot"
    "o\"\271\303\001\n\010Message8\022\013\n\003f_0\030\002 \001(\004\022\013\n\003f_1\030\003 \001("
    "\004\022\013\n\003f_2\030\006 \001(\010\022\013\n\003f_3\030\010 \001(\005\022\013\n\003f_4\030\t \001(\001"
    "\022\013\n\003f_5\030\n \001(\003\022+\n\004f_10\030\013 \003(\0132\035.fleetbench"
    ".proto.Message8.M1\022+\n\004f_11\030\014 \001(\0132\035.fleet"
    "bench.proto.Message8.M2\032\243\217\001\n\002M1\022\013\n\003f_0\030\001"
    " \001(\t\022\013\n\003f_1\030\002 \001(\004\022\013\n\003f_2\030\004 \001(\t\022\013\n\003f_3\030\006 "
    "\001(\007\022\013\n\003f_4\030\007 \001(\014\022\013\n\003f_5\030\010 \001(\004\022\013\n\003f_6\030\t \001"
    "(\005\022\013\n\003f_7\030\n \001(\002\022\013\n\003f_8\030\013 \001(\005\022\013\n\003f_9\030\r \001("
    "\005\022\014\n\004f_10\030\016 \001(\r\022\014\n\004f_11\030\017 \001(\003\022\014\n\004f_12\030\020 "
    "\001(\r\022.\n\004f_16\030\021 \003(\0132 .fleetbench.proto.Mes"
    "sage8.M1.M4\022.\n\004f_17\030\022 \001(\0132 .fleetbench.p"
    "roto.Message8.M1.M9\022/\n\004f_18\030\023 \003(\0132!.flee"
    "tbench.proto.Message8.M1.M11\032\246\201\001\n\002M4\022\013\n\003"
    "f_0\030\001 \001(\005\0221\n\003f_1\030\002 \001(\0132$.fleetbench.prot"
    "o.Message8.M1.M4.M15\032\336\200\001\n\003M15\022\013\n\003f_0\030\002 \001"
    "(\005\022\013\n\003f_1\030\003 \001(\002\022\013\n\003f_2\030\004 \001(\002\022\013\n\003f_3\030\005 \001("
    "\002\022\013\n\003f_4\030\007 \001(\t\022\013\n\003f_5\030\t \001(\003\022\013\n\003f_6\030\n \001(\010"
    "\022\013\n\003f_7\030\013 \001(\002\022\017\n\003f_8\030\016 \003(\007B\002\020\001\022\013\n\003f_9\030\017 "
    "\001(\010\022\014\n\004f_10\030\020 \001(\t\022\014\n\004f_11\030\021 \001(\006\022\014\n\004f_12\030"
    "\022 \001(\002\0226\n\004f_18\030\023 \003(\0132(.fleetbench.proto.M"
    "essage8.M1.M4.M15.M16\0226\n\004f_19\030\024 \001(\0132(.fl"
    "eetbench.proto.Message8.M1.M4.M15.M20\0226\n"
    "\004f_20\030\025 \001(\0132(.fleetbench.proto.Message8."
    "M1.M4.M15.M23\0226\n\004f_21\030\026 \003(\0132(.fleetbench"
    ".proto.Message8.M1.M4.M15.M25\0226\n\004f_22\030\030 "
    "\003(\0132(.fleetbench.proto.Message8.M1.M4.M1"
    "5.M28\032\356\004\n\003M16\022\013\n\003f_0\030\001 \001(\002\0229\n\003f_1\030\004 \001(\0132"
    ",.fleetbench.proto.Message8.M1.M4.M15.M1"
    "6.M33\0229\n\003f_4\030\006 \001(\0132,.fleetbench.proto.Me"
    "ssage8.M1.M4.M15.M16.M44\032\317\003\n\003M33\022\013\n\003f_0\030"
    "\002 \001(\002\022=\n\003f_2\030\003 \003(\01320.fleetbench.proto.Me"
    "ssage8.M1.M4.M15.M16.M33.M53\022=\n\003f_3\030\004 \001("
    "\01320.fleetbench.proto.Message8.M1.M4.M15."
    "M16.M33.M60\032\250\002\n\003M53\022\013\n\003f_0\030\001 \001(\002\022A\n\003f_1\030"
    "\004 \001(\01324.fleetbench.proto.Message8.M1.M4."
    "M15.M16.M33.M53.M69\022A\n\003f_4\030\005 \003(\01324.fleet"
    "bench.proto.Message8.M1.M4.M15.M16.M33.M"
    "53.M74\032m\n\003M69\022\013\n\003f_0\030\002 \001(\t\022E\n\003f_2\030\003 \001(\0132"
    "8.fleetbench.proto.Message8.M1.M4.M15.M1"
    "6.M33.M53.M69.M76\032\022\n\003M76\022\013\n\003f_0\030\001 \001(\t\032\037\n"
    "\003M74\022\013\n\003f_0\030\001 \001(\003\022\013\n\003f_1\030\002 \001(\014\032\022\n\003M60\022\013\n"
    "\003f_0\030\002 \001(\014\032\022\n\003M44\022\013\n\003f_0\030\001 \001(\014\032\256\004\n\003M20\022\013"
    "\n\003f_0\030\001 \001(\006\0229\n\003f_1\030\002 \003(\0132,.fleetbench.pr"
    "oto.Message8.M1.M4.M15.M20.M45\0229\n\003f_2\030\004 "
    "\001(\0132,.fleetbench.proto.Message8.M1.M4.M1"
    "5.M20.M46\032e\n\003M45\022\013\n\003f_0\030\001 \001(\010\022=\n\003f_1\030\002 \001"
    "(\01320.fleetbench.proto.Message8.M1.M4.M15"
    ".M20.M45.M57\032\022\n\003M57\022\013\n\003f_0\030\004 \001(\t\032\274\002\n\003M46"
    "\022\013\n\003f_0\030\001 \003(\014\022=\n\003f_1\030\002 \001(\01620.fleetbench."
    "proto.Message8.M1.M4.M15.M20.M46.E11\022\013\n\003"
    "f_2\030\003 \001(\002\022\013\n\003f_3\030\004 \001(\003\022\013\n\003f_4\030\005 \001(\002\022=\n\003f"
    "_5\030\006 \001(\01320.fleetbench.proto.Message8.M1."
    "M4.M15.M20.M46.M56\032\022\n\003M56\022\013\n\003f_0\030\001 \001(\014\"o"
    "\n\003E11\022\023\n\017E11_UNSPECIFIED\020\000\022\017\n\013E11_CONST_"
    "1\020\020\022\017\n\013E11_CONST_2\020X\022\017\n\013E11_CONST_3\020+\022\017\n"
    "\013E11_CONST_4\020\n\022\017\n\013E11_CONST_5\020S\032\304s\n\003M23\022"
    "\013\n\003f_0\030\001 \001(\004\0229\n\003f_1\030\002 \001(\0132,.fleetbench.p"
    "roto.Message8.M1.M4.M15.M23.M30\0229\n\003f_2\030\005"
    " \001(\0132,.fleetbench.proto.Message8.M1.M4.M"
    "15.M23.M31\0229\n\003f_5\030\007 \001(\0132,.fleetbench.pro"
    "to.Message8.M1.M4.M15.M23.M38\0229\n\003f_7\030\010 \001"
    "(\0132,.fleetbench.proto.Message8.M1.M4.M15"
    ".M23.M40\032\026\n\003M30\022\017\n\003f_0\030\001 \003(\003B\002\020\001\032\022\n\003M31\022"
    "\013\n\003f_0\030\002 \001(\t\032\022\n\003M38\022\013\n\003f_0\030\002 \001(\r\032\203q\n\003M40"
    "\022<\n\003f_0\030\002 \001(\0162/.fleetbench.proto.Message"
    "8.M1.M4.M15.M23.M40.E9\022=\n\003f_2\030\003 \001(\01320.fl"
    "eetbench.proto.Message8.M1.M4.M15.M23.M4"
    "0.M48\032\224o\n\003M48\022\013\n\003f_0\030\001 \001(\005\022A\n\003f_1\030\002 \001(\0132"
    "4.fleetbench.proto.Message8.M1.M4.M15.M2"
    "3.M40.M48.M73\032\274n\n\003M73\022\013\n\003f_0\030\003 \001(\003\022E\n\003f_"
    "3\030\004 \003(\01328.fleetbench.proto.Message8.M1.M"
    "4.M15.M23.M40.M48.M73.M75\022E\n\003f_4\030\006 \001(\01328"
    ".fleetbench.proto.Message8.M1.M4.M15.M23"
    ".M40.M48.M73.M79\032\221U\n\003M75\022\013\n\003f_0\030\001 \001(\010\022I\n"
    "\003f_1\030\003 \001(\0132<.fleetbench.proto.Message8.M"
    "1.M4.M15.M23.M40.M48.M73.M75.M81\022I\n\003f_3\030"
    "\005 \001(\0132<.fleetbench.proto.Message8.M1.M4."
    "M15.M23.M40.M48.M73.M75.M82\032\215M\n\003M81\022\013\n\003f"
    "_0\030\001 \001(\003\022M\n\003f_1\030\002 \001(\0162@.fleetbench.proto"
    ".Message8.M1.M4.M15.M23.M40.M48.M73.M75."
    "M81.E30\022\013\n\003f_2\030\003 \001(\003\022M\n\003f_3\030\004 \001(\0132@.flee"
    "tbench.proto.Message8.M1.M4.M15.M23.M40."
    "M48.M73.M75.M81.M83\022M\n\003f_4\030\010 \003(\0132@.fleet"
    "bench.proto.Message8.M1.M4.M15.M23.M40.M"
    "48.M73.M75.M81.M84\022M\n\003f_8\030\t \001(\0132@.fleetb"
    "ench.proto.Message8.M1.M4.M15.M23.M40.M4"
    "8.M73.M75.M81.M86\032\241H\n\003M83\022\017\n\003f_0\030\003 \003(\003B\002"
    "\020\001\022Q\n\003f_3\030\004 \003(\0132D.fleetbench.proto.Messa"
    "ge8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M8"
    "3.M88\032\265G\n\003M88\022\013\n\003f_0\030\002 \001(\003\022U\n\003f_2\030\004 \001(\0132"
    "H.fleetbench.proto.Message8.M1.M4.M15.M2"
    "3.M40.M48.M73.M75.M81.M83.M88.M89\022U\n\003f_4"
    "\030\005 \001(\0132H.fleetbench.proto.Message8.M1.M4"
    ".M15.M23.M40.M48.M73.M75.M81.M83.M88.M90"
    "\032\022\n\003M89\022\013\n\003f_0\030\001 \001(\t\032\336E\n\003M90\022\013\n\003f_0\030\001 \001("
    "\002\022Y\n\003f_1\030\002 \003(\0132L.fleetbench.proto.Messag"
    "e8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83"
    ".M88.M90.M91\032\356D\n\003M91\022\013\n\003f_0\030\001 \001(\003\022]\n\003f_1"
    "\030\002 \003(\0132P.fleetbench.proto.Message8.M1.M4"
    ".M15.M23.M40.M48.M73.M75.M81.M83.M88.M90"
    ".M91.M92\032\372C\n\003M92\022\013\n\003f_0\030\001 \001(\003\022a\n\003f_1\030\004 \001"
    "(\0132T.fleetbench.proto.Message8.M1.M4.M15"
    ".M23.M40.M48.M73.M75.M81.M83.M88.M90.M91"
    ".M92.M93\032\202C\n\003M93\022\013\n\003f_0\030\002 \001(\010\022\013\n\003f_1\030\003 \001"
    "(\004\022\013\n\003f_2\030\004 \001(\005\022\013\n\003f_3\030\006 \001(\001\022\013\n\003f_4\030\007 \001("
    "\006\022\013\n\003f_5\030\010 \001(\005\022\013\n\003f_6\030\n \001(\003\022e\n\003f_7\030\013 \001(\016"
    "2X.fleetbench.proto.Message8.M1.M4.M15.M"
    "23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M"
    "92.M93.E35\022\013\n\003f_8\030\016 \001(\006\022\013\n\003f_9\030\017 \001(\004\022\014\n\004"
    "f_10\030\020 \001(\005\022f\n\004f_11\030\022 \001(\0162X.fleetbench.pr"
    "oto.Message8.M1.M4.M15.M23.M40.M48.M73.M"
    "75.M81.M83.M88.M90.M91.M92.M93.E36\022\014\n\004f_"
    "12\030\024 \001(\t\022\014\n\004f_13\030\025 \001(\002\022f\n\004f_14\030\026 \001(\0162X.f"
    "leetbench.proto.Message8.M1.M4.M15.M23.M"
    "40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M"
    "93.E37\022\014\n\004f_15\030\031 \001(\003\022\014\n\004f_16\030\032 \001(\t\022f\n\004f_"
    "17\030\034 \001(\0162X.fleetbench.proto.Message8.M1."
    "M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M"
    "90.M91.M92.M93.E38\022f\n\004f_18\030\035 \001(\0162X.fleet"
    "bench.proto.Message8.M1.M4.M15.M23.M40.M"
    "48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E"
    "39\022\014\n\004f_19\030\037 \001(\t\022\014\n\004f_20\030  \001(\005\022\014\n\004f_21\030!"
    " \001(\004\022\014\n\004f_22\030& \001(\005\022\014\n\004f_23\030\' \001(\t\022\014\n\004f_24"
    "\030( \001(\t\022f\n\004f_25\030* \001(\0162X.fleetbench.proto."
    "Message8.M1.M4.M15.M23.M40.M48.M73.M75.M"
    "81.M83.M88.M90.M91.M92.M93.E40\022\014\n\004f_26\030+"
    " \001(\002\022\014\n\004f_27\030- \001(\002\022\014\n\004f_28\030/ \001(\002\022\014\n\004f_29"
    "\0301 \001(\t\022f\n\004f_30\0302 \001(\0162X.fleetbench.proto."
    "Message8.M1.M4.M15.M23.M40.M48.M73.M75.M"
    "81.M83.M88.M90.M91.M92.M93.E41\022\014\n\004f_31\0304"
    " \001(\003\022\014\n\004f_32\0305 \001(\t\022\014\n\004f_33\0306 \001(\002\022\014\n\004f_34"
    "\0307 \001(\004\022\014\n\004f_35\0308 \001(\002\022\014\n\004f_36\0309 \001(\002\022f\n\004f_"
    "37\030; \001(\0162X.fleetbench.proto.Message8.M1."
    "M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M"
    "90.M91.M92.M93.E42\022\014\n\004f_38\030> \001(\005\022\014\n\004f_39"
    "\030\? \001(\003\022\014\n\004f_40\030A \001(\014\022\014\n\004f_41\030C \001(\r\022f\n\004f_"
    "42\030D \001(\0162X.fleetbench.proto.Message8.M1."
    "M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M"
    "90.M91.M92.M93.E43\022f\n\004f_43\030E \001(\0162X.fleet"
    "bench.proto.Message8.M1.M4.M15.M23.M40.M"
    "48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E"
    "44\022\014\n\004f_44\030F \001(\017\022\014\n\004f_45\030G \001(\005\022\014\n\004f_46\030I"
    " \001(\t\022\014\n\004f_47\030K \001(\010\022\014\n\004f_48\030L \001(\007\022j\n\004f_49"
    "\030M \003(\0162X.fleetbench.proto.Message8.M1.M4"
    ".M15.M23.M40.M48.M73.M75.M81.M83.M88.M90"
    ".M91.M92.M93.E45B\002\020\001\022\014\n\004f_50\030N \001(\003\022\014\n\004f_"
    "51\030O \001(\001\022\014\n\004f_52\030R \001(\003\022\014\n\004f_53\030S \001(\t\022\014\n\004"
    "f_54\030T \001(\005\022\014\n\004f_55\030U \001(\003\022f\n\004f_56\030X \001(\0162X"
    ".fleetbench.proto.Message8.M1.M4.M15.M23"
    ".M40.M48.M73.M75.M81.M83.M88.M90.M91.M92"
    ".M93.E46\022\014\n\004f_57\030Y \001(\t\022\014\n\004f_58\030[ \001(\t\022\014\n\004"
    "f_59\030] \001(\004\022\014\n\004f_60\030_ \001(\014\022\014\n\004f_61\030` \001(\t\022\014"
    "\n\004f_62\030a \001(\010\022\014\n\004f_63\030c \001(\003\022f\n\004f_64\030d \001(\016"
    "2X.fleetbench.proto.Message8.M1.M4.M15.M"
    "23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M"
    "92.M93.E47\022f\n\004f_65\030f \001(\0162X.fleetbench.pr"
    "oto.Message8.M1.M4.M15.M23.M40.M48.M73.M"
    "75.M81.M83.M88.M90.M91.M92.M93.E48\022\014\n\004f_"
    "66\030h \001(\007\022\014\n\004f_67\030i \001(\003\022\014\n\004f_68\030k \001(\004\022\014\n\004"
    "f_69\030n \001(\007\022\014\n\004f_70\030o \001(\003\022\014\n\004f_71\030p \001(\005\022\014"
    "\n\004f_72\030q \001(\007\022\014\n\004f_73\030r \001(\002\022\014\n\004f_74\030s \001(\t"
    "\022\014\n\004f_75\030t \001(\003\022\020\n\004f_76\030u \003(\005B\002\020\001\022\014\n\004f_77"
    "\030w \001(\003\022\014\n\004f_78\030x \001(\003\022\014\n\004f_79\030y \001(\003\022\014\n\004f_"
    "80\030z \001(\005\022f\n\004f_81\030{ \001(\0162X.fleetbench.prot"
    "o.Message8.M1.M4.M15.M23.M40.M48.M73.M75"
    ".M81.M83.M88.M90.M91.M92.M93.E49\022\020\n\004f_82"
    "\030} \003(\002B\002\020\001\022\014\n\004f_83\030\177 \001(\003\022\r\n\004f_84\030\200\001 \001(\t\022"
    "\r\n\004f_85\030\202\001 \001(\004\022g\n\004f_86\030\204\001 \001(\0162X.fleetben"
    "ch.proto.Message8.M1.M4.M15.M23.M40.M48."
    "M73.M75.M81.M83.M88.M90.M91.M92.M93.E50\022"
    "\r\n\004f_87\030\206\001 \001(\t\022\r\n\004f_88\030\210\001 \001(\005\022\r\n\004f_89\030\211\001"
    " \001(\003\022g\n\004f_90\030\214\001 \001(\0162X.fleetbench.proto.M"
    "essage8.M1.M4.M15.M23.M40.M48.M73.M75.M8"
    "1.M83.M88.M90.M91.M92.M93.E51\022\r\n\004f_91\030\216\001"
    " \001(\005\022\r\n\004f_92\030\217\001 \001(\003\022\r\n\004f_93\030\220\001 \001(\005\022\r\n\004f_"
    "94\030\221\001 \001(\002\022\r\n\004f_95\030\222\001 \001(\t\022\r\n\004f_96\030\223\001 \001(\t\022"
    "\r\n\004f_97\030\224\001 \001(\003\022\r\n\004f_98\030\226\001 \001(\005\022\r\n\004f_99\030\230\001"
    " \001(\005\022\016\n\005f_100\030\231\001 \001(\010\022h\n\005f_101\030\232\001 \001(\0162X.f"
    "leetbench.proto.Message8.M1.M4.M15.M23.M"
    "40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M"
    "93.E52\022\016\n\005f_102\030\234\001 \001(\002\022\016\n\005f_103\030\235\001 \001(\t\022\016"
    "\n\005f_104\030\236\001 \001(\t\022\016\n\005f_105\030\237\001 \001(\005\022\016\n\005f_106\030"
    "\241\001 \001(\t\022\016\n\005f_107\030\244\001 \001(\001\022\016\n\005f_108\030\246\001 \001(\t\022\016"
    "\n\005f_109\030\247\001 \001(\004\022\016\n\005f_110\030\251\001 \001(\004\022\016\n\005f_111\030"
    "\253\001 \001(\007\022\016\n\005f_112\030\254\001 \001(\003\022\016\n\005f_113\030\256\001 \001(\t\022\016"
    "\n\005f_114\030\257\001 \003(\014\022\016\n\005f_115\030\262\001 \001(\t\022h\n\005f_116\030"
    "\263\001 \001(\0162X.fleetbench.proto.Message8.M1.M4"
    ".M15.M23.M40.M48.M73.M75.M81.M83.M88.M90"
    ".M91.M92.M93.E53\022\016\n\005f_117\030\264\001 \001(\003\022\016\n\005f_11"
    "8\030\266\001 \001(\005\022\016\n\005f_119\030\267\001 \001(\003\022\016\n\005f_120\030\272\001 \001(\014"
    "\022\016\n\005f_121\030\275\001 \001(\003\022\016\n\005f_122\030\276\001 \001(\003\022\016\n\005f_12"
    "3\030\277\001 \001(\t\022\016\n\005f_124\030\301\001 \001(\002\022\016\n\005f_125\030\302\001 \001(\021"
    "\022\016\n\005f_126\030\303\001 \001(\005\022\016\n\005f_127\030\304\001 \001(\003\022\016\n\005f_12"
    "8\030\305\001 \001(\t\022\016\n\005f_129\030\306\001 \001(\t\022\016\n\005f_130\030\307\001 \001(\003"
    "\022h\n\005f_131\030\310\001 \001(\0162X.fleetbench.proto.Mess"
    "age8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M"
    "83.M88.M90.M91.M92.M93.E54\022\016\n\005f_132\030\312\001 \001"
    "(\003\022\016\n\005f_133\030\313\001 \001(\003\022\016\n\005f_134\030\315\001 \001(\002\022h\n\005f_"
    "135\030\320\001 \001(\0162X.fleetbench.proto.Message8.M"
    "1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88"
    ".M90.M91.M92.M93.E55\022\016\n\005f_136\030\322\001 \001(\t\022\016\n\005"
    "f_137\030\323\001 \001(\003\022\016\n\005f_138\030\324\001 \001(\005\022\016\n\005f_139\030\325\001"
    " \001(\003\022\016\n\005f_140\030\326\001 \001(\004\022\016\n\005f_141\030\327\001 \001(\003\022\016\n\005"
    "f_142\030\332\001 \001(\003\022\016\n\005f_143\030\333\001 \001(\010\022\016\n\005f_144\030\335\001"
    " \001(\005\022\016\n\005f_145\030\341\001 \001(\002\022\016\n\005f_146\030\342\001 \001(\010\022\016\n\005"
    "f_147\030\343\001 \001(\001\022\016\n\005f_148\030\345\001 \001(\003\022\016\n\005f_149\030\346\001"
    " \001(\005\022\016\n\005f_150\030\347\001 \001(\t\022\016\n\005f_151\030\352\001 \001(\005\022\016\n\005"
    "f_152\030\353\001 \001(\010\022\016\n\005f_153\030\354\001 \001(\t\022\016\n\005f_154\030\355\001"
    " \001(\007\022\016\n\005f_155\030\356\001 \001(\001\022\016\n\005f_156\030\357\001 \001(\003\022\016\n\005"
    "f_157\030\360\001 \001(\014\022h\n\005f_158\030\361\001 \001(\0162X.fleetbenc"
    "h.proto.Message8.M1.M4.M15.M23.M40.M48.M"
    "73.M75.M81.M83.M88.M90.M91.M92.M93.E56\022\016"
    "\n\005f_159\030\364\001 \001(\003\022\016\n\005f_160\030\366\001 \001(\005\022\016\n\005f_161\030"
    "\367\001 \001(\010\022\016\n\005f_162\030\370\001 \001(\t\022\016\n\005f_163\030\373\001 \001(\r\022\016"
    "\n\005f_164\030\374\001 \001(\t\022\016\n\005f_165\030\376\001 \001(\003\022\016\n\005f_166\030"
    "\377\001 \001(\003\022\016\n\005f_167\030\201\002 \001(\003\022\016\n\005f_168\030\203\002 \001(\002\022\016"
    "\n\005f_169\030\204\002 \001(\002\022h\n\005f_170\030\205\002 \001(\0162X.fleetbe"
    "nch.proto.Message8.M1.M4.M15.M23.M40.M48"
    ".M73.M75.M81.M83.M88.M90.M91.M92.M93.E57"
    "\022\016\n\005f_171\030\206\002 \001(\003\022h\n\005f_172\030\207\002 \001(\0162X.fleet"
    "bench.proto.Message8.M1.M4.M15.M23.M40.M"
    "48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E"
    "58\022\016\n\005f_173\030\210\002 \001(\003\022\016\n\005f_174\030\211\002 \003(\t\022\016\n\005f_"
    "175\030\212\002 \001(\r\022\016\n\005f_176\030\214\002 \001(\003\022\016\n\005f_177\030\215\002 \001"
    "(\005\022\016\n\005f_178\030\216\002 \001(\005\022\016\n\005f_179\030\217\002 \001(\002\022\016\n\005f_"
    "180\030\220\002 \001(\t\022\016\n\005f_181\030\221\002 \001(\t\022\016\n\005f_182\030\223\002 \001"
    "(\005\022\016\n\005f_183\030\224\002 \001(\003\022\016\n\005f_184\030\225\002 \001(\005\022\016\n\005f_"
    "185\030\227\002 \001(\003\022\016\n\005f_186\030\231\002 \001(\010\022\016\n\005f_187\030\232\002 \001"
    "(\005\022\016\n\005f_188\030\233\002 \001(\003\022\016\n\005f_189\030\235\002 \001(\007\022h\n\005f_"
    "190\030\236\002 \001(\0162X.fleetbench.proto.Message8.M"
    "1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88"
    ".M90.M91.M92.M93.E59\022\016\n\005f_191\030\241\002 \001(\003\022h\n\005"
    "f_289\030\242\002 \001(\0132X.fleetbench.proto.Message8"
    ".M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M"
    "88.M90.M91.M92.M93.M94\032\363\003\n\003M94\022\013\n\003f_0\030\001 "
    "\001(\r\022\013\n\003f_1\030\002 \001(\002\022\013\n\003f_2\030\004 \001(\004\022\013\n\003f_3\030\005 \001"
    "(\003\022\013\n\003f_4\030\006 \001(\010\022i\n\003f_6\030\010 \001(\0132\\.fleetbenc"
    "h.proto.Message8.M1.M4.M15.M23.M40.M48.M"
    "73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M"
    "95\032\277\002\n\003M95\022\013\n\003f_0\030\002 \001(\t\022\013\n\003f_1\030\003 \001(\003\022m\n\003"
    "f_3\030\004 \001(\0132`.fleetbench.proto.Message8.M1"
    ".M4.M15.M23.M40.M48.M73.M75.M81.M83.M88."
    "M90.M91.M92.M93.M94.M95.M96\022m\n\003f_4\030\005 \003(\013"
    "2`.fleetbench.proto.Message8.M1.M4.M15.M"
    "23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M"
    "92.M93.M94.M95.M97\032\022\n\003M96\022\013\n\003f_0\030\001 \001(\003\032,"
    "\n\003M97\022\013\n\003f_0\030\002 \001(\t\022\013\n\003f_1\030\004 \001(\005\022\013\n\003f_2\030\006"
    " \001(\t\"o\n\003E35\022\023\n\017E35_UNSPECIFIED\020\000\022\017\n\013E35_"
    "CONST_1\020W\022\017\n\013E35_CONST_2\020P\022\017\n\013E35_CONST_"
    "3\020\035\022\017\n\013E35_CONST_4\020%\022\017\n\013E35_CONST_5\020\027\"o\n"
    "\003E36\022\023\n\017E36_UNSPECIFIED\020\000\022\017\n\013E36_CONST_1"
    "\020N\022\017\n\013E36_CONST_2\020D\022\017\n\013E36_CONST_3\020\014\022\017\n\013"
    "E36_CONST_4\020_\022\017\n\013E36_CONST_5\020$\"o\n\003E37\022\023\n"
    "\017E37_UNSPECIFIED\020\000\022\017\n\013E37_CONST_1\020s\022\017\n\013E"
    "37_CONST_2\020l\022\017\n\013E37_CONST_3\0205\022\017\n\013E37_CON"
    "ST_4\0206\022\017\n\013E37_CONST_5\020O\"o\n\003E38\022\023\n\017E38_UN"
    "SPECIFIED\020\000\022\017\n\013E38_CONST_1\020v\022\017\n\013E38_CONS"
    "T_2\020z\022\017\n\013E38_CONST_3\020\002\022\017\n\013E38_CONST_4\020c\022"
    "\017\n\013E38_CONST_5\020r\"o\n\003E39\022\023\n\017E39_UNSPECIFI"
    "ED\020\000\022\017\n\013E39_CONST_1\020V\022\017\n\013E39_CONST_2\0207\022\017"
    "\n\013E39_CONST_3\020\017\022\017\n\013E39_CONST_4\020Y\022\017\n\013E39_"
    "CONST_5\020\025\"o\n\003E40\022\023\n\017E40_UNSPECIFIED\020\000\022\017\n"
    "\013E40_CONST_1\020;\022\017\n\013E40_CONST_2\020J\022\017\n\013E40_C"
    "ONST_3\020\036\022\017\n\013E40_CONST_4\0205\022\017\n\013E40_CONST_5"
    "\020-\"o\n\003E41\022\023\n\017E41_UNSPECIFIED\020\000\022\017\n\013E41_CO"
    "NST_1\020\017\022\017\n\013E41_CONST_2\020\r\022\017\n\013E41_CONST_3\020"
    "[\022\017\n\013E41_CONST_4\020=\022\017\n\013E41_CONST_5\020\021\"o\n\003E"
    "42\022\023\n\017E42_UNSPECIFIED\020\000\022\017\n\013E42_CONST_1\020r"
    "\022\017\n\013E42_CONST_2\020\004\022\017\n\013E42_CONST_3\020h\022\017\n\013E4"
    "2_CONST_4\020\022\022\017\n\013E42_CONST_5\020\032\"o\n\003E43\022\023\n\017E"
    "43_UNSPECIFIED\020\000\022\017\n\013E43_CONST_1\020%\022\017\n\013E43"
    "_CONST_2\020K\022\017\n\013E43_CONST_3\020*\022\017\n\013E43_CONST"
    "_4\020-\022\017\n\013E43_CONST_5\020\024\"o\n\003E44\022\023\n\017E44_UNSP"
    "ECIFIED\020\000\022\017\n\013E44_CONST_1\0209\022\017\n\013E44_CONST_"
    "2\020A\022\017\n\013E44_CONST_3\020|\022\017\n\013E44_CONST_4\020e\022\017\n"
    "\013E44_CONST_5\020g\"o\n\003E45\022\023\n\017E45_UNSPECIFIED"
    "\020\000\022\017\n\013E45_CONST_1\020\014\022\017\n\013E45_CONST_2\020|\022\017\n\013"
    "E45_CONST_3\020y\022\017\n\013E45_CONST_4\020\"\022\017\n\013E45_CO"
    "NST_5\020{\"o\n\003E46\022\023\n\017E46_UNSPECIFIED\020\000\022\017\n\013E"
    "46_CONST_1\020\035\022\017\n\013E46_CONST_2\020\t\022\017\n\013E46_CON"
    "ST_3\020\021\022\017\n\013E46_CONST_4\020\014\022\017\n\013E46_CONST_5\020Q"
    "\"o\n\003E47\022\023\n\017E47_UNSPECIFIED\020\000\022\017\n\013E47_CONS"
    "T_1\020}\022\017\n\013E47_CONST_2\020k\022\017\n\013E47_CONST_3\020(\022"
    "\017\n\013E47_CONST_4\020H\022\017\n\013E47_CONST_5\020n\"o\n\003E48"
    "\022\023\n\017E48_UNSPECIFIED\020\000\022\017\n\013E48_CONST_1\020_\022\017"
    "\n\013E48_CONST_2\020h\022\017\n\013E48_CONST_3\020\n\022\017\n\013E48_"
    "CONST_4\0208\022\017\n\013E48_CONST_5\020J\"o\n\003E49\022\023\n\017E49"
    "_UNSPECIFIED\020\000\022\017\n\013E49_CONST_1\020a\022\017\n\013E49_C"
    "ONST_2\020I\022\017\n\013E49_CONST_3\020r\022\017\n\013E49_CONST_4"
    "\020d\022\017\n\013E49_CONST_5\020B\"o\n\003E50\022\023\n\017E50_UNSPEC"
    "IFIED\020\000\022\017\n\013E50_CONST_1\020l\022\017\n\013E50_CONST_2\020"
    "\"\022\017\n\013E50_CONST_3\020.\022\017\n\013E50_CONST_4\020\033\022\017\n\013E"
    "50_CONST_5\020\020\"o\n\003E51\022\023\n\017E51_UNSPECIFIED\020\000"
    "\022\017\n\013E51_CONST_1\020\016\022\017\n\013E51_CONST_2\020V\022\017\n\013E5"
    "1_CONST_3\020o\022\017\n\013E51_CONST_4\020y\022\017\n\013E51_CONS"
    "T_5\020C\"o\n\003E52\022\023\n\017E52_UNSPECIFIED\020\000\022\017\n\013E52"
    "_CONST_1\020i\022\017\n\013E52_CONST_2\020a\022\017\n\013E52_CONST"
    "_3\020l\022\017\n\013E52_CONST_4\020\026\022\017\n\013E52_CONST_5\020\021\"o"
    "\n\003E53\022\023\n\017E53_UNSPECIFIED\020\000\022\017\n\013E53_CONST_"
    "1\020L\022\017\n\013E53_CONST_2\020\016\022\017\n\013E53_CONST_3\020R\022\017\n"
    "\013E53_CONST_4\020N\022\017\n\013E53_CONST_5\020\004\"o\n\003E54\022\023"
    "\n\017E54_UNSPECIFIED\020\000\022\017\n\013E54_CONST_1\020~\022\017\n\013"
    "E54_CONST_2\020\025\022\017\n\013E54_CONST_3\020S\022\017\n\013E54_CO"
    "NST_4\020q\022\017\n\013E54_CONST_5\020v\"o\n\003E55\022\023\n\017E55_U"
    "NSPECIFIED\020\000\022\017\n\013E55_CONST_1\020@\022\017\n\013E55_CON"
    "ST_2\020;\022\017\n\013E55_CONST_3\020e\022\017\n\013E55_CONST_4\020h"
    "\022\017\n\013E55_CONST_5\020Z\"o\n\003E56\022\023\n\017E56_UNSPECIF"
    "IED\020\000\022\017\n\013E56_CONST_1\020l\022\017\n\013E56_CONST_2\020E\022"
    "\017\n\013E56_CONST_3\020C\022\017\n\013E56_CONST_4\020<\022\017\n\013E56"
    "_CONST_5\020(\"o\n\003E57\022\023\n\017E57_UNSPECIFIED\020\000\022\017"
    "\n\013E57_CONST_1\020\005\022\017\n\013E57_CONST_2\020F\022\017\n\013E57_"
    "CONST_3\020:\022\017\n\013E57_CONST_4\020T\022\017\n\013E57_CONST_"
    "5\020N\"o\n\003E58\022\023\n\017E58_UNSPECIFIED\020\000\022\017\n\013E58_C"
    "ONST_1\020k\022\017\n\013E58_CONST_2\020,\022\017\n\013E58_CONST_3"
    "\020f\022\017\n\013E58_CONST_4\0200\022\017\n\013E58_CONST_5\020\013\"o\n\003"
    "E59\022\023\n\017E59_UNSPECIFIED\020\000\022\017\n\013E59_CONST_1\020"
    "M\022\017\n\013E59_CONST_2\020\003\022\017\n\013E59_CONST_3\020y\022\017\n\013E"
    "59_CONST_4\020(\022\017\n\013E59_CONST_5\020j\032\022\n\003M84\022\013\n\003"
    "f_0\030\001 \001(\003\032\206\001\n\003M86\022\013\n\003f_0\030\001 \001(\003\022Q\n\003f_1\030\002 "
    "\001(\0132D.fleetbench.proto.Message8.M1.M4.M1"
    "5.M23.M40.M48.M73.M75.M81.M86.M87\032\037\n\003M87"
    "\022\013\n\003f_0\030\001 \001(\006\022\013\n\003f_1\030\003 \001(\r\"o\n\003E30\022\023\n\017E30"
    "_UNSPECIFIED\020\000\022\017\n\013E30_CONST_1\020z\022\017\n\013E30_C"
    "ONST_2\020.\022\017\n\013E30_CONST_3\020/\022\017\n\013E30_CONST_4"
    "\0203\022\017\n\013E30_CONST_5\0201\032\326\006\n\003M82\022\013\n\003f_0\030\001 \001(\003"
    "\022\013\n\003f_1\030\002 \001(\t\022\013\n\003f_2\030\004 \001(\006\022\013\n\003f_3\030\007 \001(\010\022"
    "\013\n\003f_4\030\t \001(\003\022M\n\003f_5\030\n \001(\0162@.fleetbench.p"
    "roto.Message8.M1.M4.M15.M23.M40.M48.M73."
    "M75.M82.E31\022\013\n\003f_6\030\013 \001(\003\022M\n\003f_7\030\014 \001(\0162@."
    "fleetbench.proto.Message8.M1.M4.M15.M23."
    "M40.M48.M73.M75.M82.E32\022M\n\003f_8\030\r \001(\0162@.f"
    "leetbench.proto.Message8.M1.M4.M15.M23.M"
    "40.M48.M73.M75.M82.E33\022\013\n\003f_9\030\017 \001(\t\022\014\n\004f"
    "_10\030\021 \001(\010\022\014\n\004f_11\030\022 \001(\t\022\014\n\004f_12\030\023 \001(\003\022\014\n"
    "\004f_13\030\024 \001(\002\022\014\n\004f_14\030\027 \001(\005\022\014\n\004f_15\030\031 \001(\014\022"
    "\014\n\004f_16\030\033 \001(\t\022\014\n\004f_17\030\035 \001(\003\022\014\n\004f_18\030\036 \001("
    "\003\022\014\n\004f_19\030\037 \001(\003\022\014\n\004f_20\030  \001(\010\022\014\n\004f_21\030! "
    "\001(\005\022\014\n\004f_22\030\" \001(\t\"o\n\003E31\022\023\n\017E31_UNSPECIF"
    "IED\020\000\022\017\n\013E31_CONST_1\020~\022\017\n\013E31_CONST_2\020R\022"
    "\017\n\013E31_CONST_3\020o\022\017\n\013E31_CONST_4\0209\022\017\n\013E31"
    "_CONST_5\020\004\"o\n\003E32\022\023\n\017E32_UNSPECIFIED\020\000\022\017"
    "\n\013E32_CONST_1\020P\022\017\n\013E32_CONST_2\020\002\022\017\n\013E32_"
    "CONST_3\020e\022\017\n\013E32_CONST_4\020d\022\017\n\013E32_CONST_"
    "5\020 \"o\n\003E33\022\023\n\017E33_UNSPECIFIED\020\000\022\017\n\013E33_C"
    "ONST_1\020H\022\017\n\013E33_CONST_2\020d\022\017\n\013E33_CONST_3"
    "\020k\022\017\n\013E33_CONST_4\0206\022\017\n\013E33_CONST_5\020V\032\205\030\n"
    "\003M79\022\013\n\003f_0\030\001 \001(\010\022I\n\003f_1\030\003 \001(\0162<.fleetbe"
    "nch.proto.Message8.M1.M4.M15.M23.M40.M48"
    ".M73.M79.E21\022\013\n\003f_2\030\004 \001(\003\022\013\n\003f_3\030\005 \001(\002\022\013"
    "\n\003f_4\030\007 \001(\003\022\013\n\003f_5\030\010 \001(\005\022M\n\003f_6\030\t \003(\0162<."
    "fleetbench.proto.Message8.M1.M4.M15.M23."
    "M40.M48.M73.M79.E22B\002\020\001\022\013\n\003f_7\030\n \001(\002\022\013\n\003"
    "f_8\030\013 \001(\004\022\013\n\003f_9\030\r \001(\005\022\014\n\004f_10\030\017 \001(\007\022\014\n\004"
    "f_11\030\020 \001(\t\022J\n\004f_12\030\021 \001(\0162<.fleetbench.pr"
    "oto.Message8.M1.M4.M15.M23.M40.M48.M73.M"
    "79.E23\022\014\n\004f_13\030\023 \001(\007\022\014\n\004f_14\030\024 \001(\014\022\014\n\004f_"
    "15\030\025 \001(\010\022\014\n\004f_16\030\027 \001(\003\022\014\n\004f_17\030\031 \001(\t\022\014\n\004"
    "f_18\030\033 \001(\t\022\020\n\004f_19\030\036 \003(\005B\002\020\001\022\014\n\004f_20\030\037 \001"
    "(\005\022\014\n\004f_21\030! \001(\005\022\014\n\004f_22\030\" \001(\007\022\014\n\004f_23\030#"
    " \001(\005\022\014\n\004f_24\030$ \001(\t\022\014\n\004f_25\030\' \001(\003\022\014\n\004f_26"
    "\030) \001(\r\022\014\n\004f_27\030* \001(\003\022J\n\004f_28\030, \001(\0162<.fle"
    "etbench.proto.Message8.M1.M4.M15.M23.M40"
    ".M48.M73.M79.E24\022\014\n\004f_29\030. \001(\005\022\014\n\004f_30\030/"
    " \001(\005\022\014\n\004f_31\0301 \001(\014\022J\n\004f_32\0303 \001(\0162<.fleet"
    "bench.proto.Message8.M1.M4.M15.M23.M40.M"
    "48.M73.M79.E25\022\014\n\004f_33\0305 \001(\005\022\014\n\004f_34\0307 \001"
    "(\t\022\014\n\004f_35\0308 \001(\002\022\014\n\004f_36\0309 \001(\003\022\014\n\004f_37\030<"
    " \001(\010\022\014\n\004f_38\030> \001(\005\022\014\n\004f_39\030\? \001(\002\022\014\n\004f_40"
    "\030@ \001(\003\022\014\n\004f_41\030A \001(\003\022\014\n\004f_42\030B \001(\003\022\014\n\004f_"
    "43\030D \001(\t\022\014\n\004f_44\030E \001(\t\022\014\n\004f_45\030G \001(\004\022\014\n\004"
    "f_46\030J \001(\014\022J\n\004f_47\030K \001(\0162<.fleetbench.pr"
    "oto.Message8.M1.M4.M15.M23.M40.M48.M73.M"
    "79.E26\022\014\n\004f_48\030L \001(\005\022\014\n\004f_49\030N \001(\005\022\014\n\004f_"
    "50\030P \001(\001\022\014\n\004f_51\030Q \001(\r\022\014\n\004f_52\030S \001(\t\022\014\n\004"
    "f_53\030T \001(\010\022J\n\004f_54\030U \001(\0162<.fleetbench.pr"
    "oto.Message8.M1.M4.M15.M23.M40.M48.M73.M"
    "79.E27\022\014\n\004f_55\030V \001(\005\022\020\n\004f_56\030W \003(\022B\002\020\001\022\014"
    "\n\004f_57\030Y \001(\010\022\014\n\004f_58\030Z \001(\001\022\014\n\004f_59\030\\ \001(\005"
    "\022\014\n\004f_60\030] \001(\003\022\014\n\004f_61\030^ \001(\014\022J\n\004f_62\030_ \001"
    "(\0162<.fleetbench.proto.Message8.M1.M4.M15"
    ".M23.M40.M48.M73.M79.E28\022\014\n\004f_63\030a \001(\003\022\014"
    "\n\004f_64\030b \001(\007\022\014\n\004f_65\030c \001(\010\022\014\n\004f_66\030e \001(\010"
    "\022\014\n\004f_67\030f \001(\002\022\014\n\004f_68\030h \001(\003\022\014\n\004f_69\030i \001"
    "(\005\022\014\n\004f_70\030k \001(\007\022\014\n\004f_71\030m \001(\002\022\020\n\004f_72\030o"
    " \003(\005B\002\020\001\022\014\n\004f_73\030p \003(\t\022J\n\004f_74\030q \001(\0162<.f"
    "leetbench.proto.Message8.M1.M4.M15.M23.M"
    "40.M48.M73.M79.E29\022\014\n\004f_75\030r \001(\t\022\014\n\004f_76"
    "\030s \001(\006\022\014\n\004f_77\030t \001(\t\022\014\n\004f_78\030u \001(\t\022K\n\005f_"
    "117\030v \001(\0132<.fleetbench.proto.Message8.M1"
    ".M4.M15.M23.M40.M48.M73.M79.M80\032\261\002\n\003M80\022"
    "\013\n\003f_0\030\003 \001(\002\022M\n\003f_3\030\004 \003(\0132@.fleetbench.p"
    "roto.Message8.M1.M4.M15.M23.M40.M48.M73."
    "M79.M80.M85\032\315\001\n\003M85\022U\n\003f_0\030\001 \003(\0162D.fleet"
    "bench.proto.Message8.M1.M4.M15.M23.M40.M"
    "48.M73.M79.M80.M85.E34B\002\020\001\"o\n\003E34\022\023\n\017E34"
    "_UNSPECIFIED\020\000\022\017\n\013E34_CONST_1\020Z\022\017\n\013E34_C"
    "ONST_2\020\024\022\017\n\013E34_CONST_3\020\003\022\017\n\013E34_CONST_4"
    "\020o\022\017\n\013E34_CONST_5\020U\"o\n\003E21\022\023\n\017E21_UNSPEC"
    "IFIED\020\000\022\017\n\013E21_CONST_1\020Z\022\017\n\013E21_CONST_2\020"
    "(\022\017\n\013E21_CONST_3\020S\022\017\n\013E21_CONST_4\020v\022\017\n\013E"
    "21_CONST_5\020u\"o\n\003E22\022\023\n\017E22_UNSPECIFIED\020\000"
    "\022\017\n\013E22_CONST_1\020c\022\017\n\013E22_CONST_2\020f\022\017\n\013E2"
    "2_CONST_3\020I\022\017\n\013E22_CONST_4\020X\022\017\n\013E22_CONS"
    "T_5\020a\"o\n\003E23\022\023\n\017E23_UNSPECIFIED\020\000\022\017\n\013E23"
    "_CONST_1\020>\022\017\n\013E23_CONST_2\020_\022\017\n\013E23_CONST"
    "_3\020@\022\017\n\013E23_CONST_4\0200\022\017\n\013E23_CONST_5\020C\"o"
    "\n\003E24\022\023\n\017E24_UNSPECIFIED\020\000\022\017\n\013E24_CONST_"
    "1\020>\022\017\n\013E24_CONST_2\020\034\022\017\n\013E24_CONST_3\020B\022\017\n"
    "\013E24_CONST_4\020\031\022\017\n\013E24_CONST_5\020i\"o\n\003E25\022\023"
    "\n\017E25_UNSPECIFIED\020\000\022\017\n\013E25_CONST_1\020\007\022\017\n\013"
    "E25_CONST_2\020y\022\017\n\013E25_CONST_3\020W\022\017\n\013E25_CO"
    "NST_4\020~\022\017\n\013E25_CONST_5\020-\"o\n\003E26\022\023\n\017E26_U"
    "NSPECIFIED\020\000\022\017\n\013E26_CONST_1\020<\022\017\n\013E26_CON"
    "ST_2\020d\022\017\n\013E26_CONST_3\020r\022\017\n\013E26_CONST_4\0209"
    "\022\017\n\013E26_CONST_5\020|\"o\n\003E27\022\023\n\017E27_UNSPECIF"
    "IED\020\000\022\017\n\013E27_CONST_1\0203\022\017\n\013E27_CONST_2\020\007\022"
    "\017\n\013E27_CONST_3\020q\022\017\n\013E27_CONST_4\020w\022\017\n\013E27"
    "_CONST_5\020v\"o\n\003E28\022\023\n\017E28_UNSPECIFIED\020\000\022\017"
    "\n\013E28_CONST_1\020G\022\017\n\013E28_CONST_2\020\024\022\017\n\013E28_"
    "CONST_3\020S\022\017\n\013E28_CONST_4\020c\022\017\n\013E28_CONST_"
    "5\020\007\"o\n\003E29\022\023\n\017E29_UNSPECIFIED\020\000\022\017\n\013E29_C"
    "ONST_1\020E\022\017\n\013E29_CONST_2\020\035\022\017\n\013E29_CONST_3"
    "\0205\022\017\n\013E29_CONST_4\020B\022\017\n\013E29_CONST_5\020\036\"h\n\002"
    "E9\022\022\n\016E9_UNSPECIFIED\020\000\022\016\n\nE9_CONST_1\020)\022\016"
    "\n\nE9_CONST_2\020X\022\016\n\nE9_CONST_3\020d\022\016\n\nE9_CON"
    "ST_4\020P\022\016\n\nE9_CONST_5\020h\032\022\n\003M25\022\013\n\003f_0\030\003 \001"
    "(\003\032\022\n\003M28\022\013\n\003f_0\030\001 \001(\t\032\021\n\002M9\022\013\n\003f_0\030\001 \001("
    "\t\032\242\013\n\003M11\022\013\n\003f_0\030\001 \001(\014\022\013\n\003f_1\030\003 \001(\002\022\013\n\003f"
    "_2\030\006 \001(\t\0222\n\003f_6\030\010 \001(\0132%.fleetbench.proto"
    ".Message8.M1.M11.M14\032\277\n\n\003M14\022\013\n\003f_0\030\001 \001("
    "\003\022\017\n\003f_1\030\002 \003(\005B\002\020\001\022\013\n\003f_2\030\004 \001(\t\022\013\n\003f_3\030\006"
    " \001(\010\022\013\n\003f_4\030\010 \001(\003\022\013\n\003f_5\030\n \001(\003\022\013\n\003f_6\030\r "
    "\001(\t\022\013\n\003f_7\030\016 \001(\t\0225\n\003f_8\030\021 \001(\0162(.fleetben"
    "ch.proto.Message8.M1.M11.M14.E4\022\017\n\003f_9\030\024"
    " \003(\rB\002\020\001\022\014\n\004f_10\030\025 \001(\t\022\014\n\004f_11\030\030 \001(\002\022\014\n\004"
    "f_12\030\033 \001(\010\022\014\n\004f_13\030\034 \001(\t\022\014\n\004f_14\030\035 \001(\005\0226"
    "\n\004f_15\030\036 \001(\0162(.fleetbench.proto.Message8"
    ".M1.M11.M14.E5\022\014\n\004f_16\030\037 \001(\t\0227\n\004f_31\030! \001"
    "(\0132).fleetbench.proto.Message8.M1.M11.M1"
    "4.M18\0227\n\004f_33\030\" \003(\0132).fleetbench.proto.M"
    "essage8.M1.M11.M14.M19\0227\n\004f_34\030$ \001(\0132).f"
    "leetbench.proto.Message8.M1.M11.M14.M27\032"
    "o\n\003M18\022\013\n\003f_0\030\001 \001(\010\022:\n\003f_1\030\003 \001(\0132-.fleet"
    "bench.proto.Message8.M1.M11.M14.M18.M42\032"
    "\037\n\003M42\022\013\n\003f_0\030\001 \001(\t\022\013\n\003f_1\030\002 \001(\014\032b\n\003M19\022"
    "\013\n\003f_0\030\003 \001(\t\022:\n\003f_3\030\004 \003(\0132-.fleetbench.p"
    "roto.Message8.M1.M11.M14.M19.M37\032\022\n\003M37\022"
    "\013\n\003f_0\030\002 \001(\t\032\243\003\n\003M27\022\013\n\003f_0\030\002 \001(\006\022:\n\003f_2"
    "\030\003 \001(\0132-.fleetbench.proto.Message8.M1.M1"
    "1.M14.M27.M32\022:\n\003f_3\030\004 \001(\0132-.fleetbench."
    "proto.Message8.M1.M11.M14.M27.M39\032\256\001\n\003M3"
    "2\022=\n\003f_0\030\001 \001(\01620.fleetbench.proto.Messag"
    "e8.M1.M11.M14.M27.M32.E8\"h\n\002E8\022\022\n\016E8_UNS"
    "PECIFIED\020\000\022\016\n\nE8_CONST_1\020\027\022\016\n\nE8_CONST_2"
    "\020\035\022\016\n\nE8_CONST_3\020#\022\016\n\nE8_CONST_4\020V\022\016\n\nE8"
    "_CONST_5\020n\032f\n\003M39\022\013\n\003f_0\030\001 \001(\004\022>\n\003f_1\030\002 "
    "\003(\01321.fleetbench.proto.Message8.M1.M11.M"
    "14.M27.M39.M58\032\022\n\003M58\022\013\n\003f_0\030\001 \001(\002\"h\n\002E4"
    "\022\022\n\016E4_UNSPECIFIED\020\000\022\016\n\nE4_CONST_1\020n\022\016\n\n"
    "E4_CONST_2\0206\022\016\n\nE4_CONST_3\020{\022\016\n\nE4_CONST"
    "_4\020\024\022\016\n\nE4_CONST_5\020\023\"h\n\002E5\022\022\n\016E5_UNSPECI"
    "FIED\020\000\022\016\n\nE5_CONST_1\020P\022\016\n\nE5_CONST_2\020z\022\016"
    "\n\nE5_CONST_3\020\n\022\016\n\nE5_CONST_4\020\001\022\016\n\nE5_CON"
    "ST_5\020e\032\3352\n\002M2\022\013\n\003f_0\030\001 \001(\014\022\017\n\003f_1\030\002 \003(\003B"
    "\002\020\001\022\013\n\003f_2\030\003 \001(\003\022-\n\003f_3\030\005 \001(\0132 .fleetben"
    "ch.proto.Message8.M2.M3\022-\n\003f_5\030\006 \003(\0132 .f"
    "leetbench.proto.Message8.M2.M5\022-\n\003f_6\030\007 "
    "\001(\0132 .fleetbench.proto.Message8.M2.M6\022-\n"
    "\003f_7\030\010 \001(\0132 .fleetbench.proto.Message8.M"
    "2.M7\022-\n\003f_8\030\t \001(\0132 .fleetbench.proto.Mes"
    "sage8.M2.M8\022.\n\003f_9\030\n \001(\0132!.fleetbench.pr"
    "oto.Message8.M2.M10\032M\n\002M3\022\013\n\003f_0\030\001 \001(\010\022\017"
    "\n\003f_1\030\002 \003(\002B\002\020\001\022\017\n\003f_2\030\004 \003(\005B\002\020\001\022\013\n\003f_3\030"
    "\005 \001(\t\022\013\n\003f_4\030\006 \001(\004\032\263\r\n\002M5\022\013\n\003f_0\030\001 \001(\010\0221"
    "\n\003f_1\030\002 \001(\0132$.fleetbench.proto.Message8."
    "M2.M5.M13\032\354\014\n\003M13\022\013\n\003f_0\030\001 \001(\005\0225\n\003f_1\030\002 "
    "\003(\0132(.fleetbench.proto.Message8.M2.M5.M1"
    "3.M17\0225\n\003f_2\030\004 \003(\0132(.fleetbench.proto.Me"
    "ssage8.M2.M5.M13.M26\032\307\007\n\003M17\022\013\n\003f_0\030\002 \001("
    "\004\0229\n\003f_2\030\003 \001(\0132,.fleetbench.proto.Messag"
    "e8.M2.M5.M13.M17.M29\032\367\006\n\003M29\022\013\n\003f_0\030\001 \001("
    "\003\022\013\n\003f_1\030\002 \001(\003\022=\n\003f_2\030\003 \001(\01320.fleetbench"
    ".proto.Message8.M2.M5.M13.M17.M29.M50\022=\n"
    "\003f_3\030\005 \001(\01320.fleetbench.proto.Message8.M"
    "2.M5.M13.M17.M29.M61\032\233\004\n\003M50\022E\n\003f_0\030\002 \003("
    "\01624.fleetbench.proto.Message8.M2.M5.M13."
    "M17.M29.M50.E13B\002\020\001\022A\n\003f_2\030\005 \003(\01324.fleet"
    "bench.proto.Message8.M2.M5.M13.M17.M29.M"
    "50.M72\032\230\002\n\003M72\022E\n\003f_0\030\002 \001(\01628.fleetbench"
    ".proto.Message8.M2.M5.M13.M17.M29.M50.M7"
    "2.E20\022E\n\003f_2\030\003 \001(\01328.fleetbench.proto.Me"
    "ssage8.M2.M5.M13.M17.M29.M50.M72.M77\032\022\n\003"
    "M77\022\013\n\003f_0\030\001 \001(\002\"o\n\003E20\022\023\n\017E20_UNSPECIFI"
    "ED\020\000\022\017\n\013E20_CONST_1\020f\022\017\n\013E20_CONST_2\020Z\022\017"
    "\n\013E20_CONST_3\020\004\022\017\n\013E20_CONST_4\020w\022\017\n\013E20_"
    "CONST_5\020g\"o\n\003E13\022\023\n\017E13_UNSPECIFIED\020\000\022\017\n"
    "\013E13_CONST_1\020-\022\017\n\013E13_CONST_2\020l\022\017\n\013E13_C"
    "ONST_3\020(\022\017\n\013E13_CONST_4\020\027\022\017\n\013E13_CONST_5"
    "\020,\032\271\001\n\003M61\022A\n\003f_0\030\002 \001(\01624.fleetbench.pro"
    "to.Message8.M2.M5.M13.M17.M29.M61.E17\"o\n"
    "\003E17\022\023\n\017E17_UNSPECIFIED\020\000\022\017\n\013E17_CONST_1"
    "\020(\022\017\n\013E17_CONST_2\020s\022\017\n\013E17_CONST_3\020h\022\017\n\013"
    "E17_CONST_4\020<\022\017\n\013E17_CONST_5\020u\032\237\004\n\003M26\022\013"
    "\n\003f_0\030\001 \001(\005\022\013\n\003f_1\030\002 \001(\003\022\013\n\003f_2\030\003 \001(\005\022\013\n"
    "\003f_3\030\007 \001(\004\022\013\n\003f_4\030\010 \001(\003\022\013\n\003f_5\030\n \001(\005\022\013\n\003"
    "f_6\030\014 \001(\003\022\013\n\003f_7\030\r \001(\002\022\013\n\003f_8\030\021 \001(\003\022\013\n\003f"
    "_9\030\023 \001(\r\022\014\n\004f_10\030\024 \001(\t\022\020\n\004f_11\030\025 \003(\002B\002\020\001"
    "\022:\n\004f_21\030\026 \003(\0132,.fleetbench.proto.Messag"
    "e8.M2.M5.M13.M26.M36\022:\n\004f_22\030\027 \001(\0132,.fle"
    "etbench.proto.Message8.M2.M5.M13.M26.M47"
    "\032\022\n\003M36\022\013\n\003f_0\030\001 \001(\003\032\351\001\n\003M47\022\013\n\003f_0\030\001 \001("
    "\010\022\013\n\003f_1\030\003 \001(\002\022\013\n\003f_2\030\005 \001(\007\022=\n\003f_3\030\007 \001(\016"
    "20.fleetbench.proto.Message8.M2.M5.M13.M"
    "26.M47.E12\022\013\n\003f_4\030\t \001(\005\"o\n\003E12\022\023\n\017E12_UN"
    "SPECIFIED\020\000\022\017\n\013E12_CONST_1\020!\022\017\n\013E12_CONS"
    "T_2\020t\022\017\n\013E12_CONST_3\020\t\022\017\n\013E12_CONST_4\020I\022"
    "\017\n\013E12_CONST_5\020\n\032\273\036\n\002M6\022\013\n\003f_0\030\002 \001(\r\0221\n\003"
    "f_2\030\005 \003(\0132$.fleetbench.proto.Message8.M2"
    ".M6.M12\032\364\035\n\003M12\022\013\n\003f_0\030\001 \001(\010\022\013\n\003f_1\030\002 \001("
    "\005\0228\n\003f_2\030\003 \003(\0162\'.fleetbench.proto.Messag"
    "e8.M2.M6.M12.E3B\002\020\001\0225\n\003f_3\030\004 \001(\0132(.fleet"
    "bench.proto.Message8.M2.M6.M12.M21\0225\n\003f_"
    "4\030\005 \001(\0132(.fleetbench.proto.Message8.M2.M"
    "6.M12.M22\0225\n\003f_5\030\010 \001(\0132(.fleetbench.prot"
    "o.Message8.M2.M6.M12.M24\032\243\003\n\003M21\0228\n\003f_0\030"
    "\003 \001(\0162+.fleetbench.proto.Message8.M2.M6."
    "M12.M21.E6\0229\n\003f_3\030\004 \001(\0132,.fleetbench.pro"
    "to.Message8.M2.M6.M12.M21.M34\032\274\001\n\003M34\022\013\n"
    "\003f_0\030\001 \001(\010\022=\n\003f_1\030\002 \003(\01320.fleetbench.pro"
    "to.Message8.M2.M6.M12.M21.M34.M55\032i\n\003M55"
    "\022\013\n\003f_0\030\002 \001(\010\022A\n\003f_2\030\004 \001(\01324.fleetbench."
    "proto.Message8.M2.M6.M12.M21.M34.M55.M71"
    "\032\022\n\003M71\022\013\n\003f_0\030\001 \001(\010\"h\n\002E6\022\022\n\016E6_UNSPECI"
    "FIED\020\000\022\016\n\nE6_CONST_1\0201\022\016\n\nE6_CONST_2\020\013\022\016"
    "\n\nE6_CONST_3\0205\022\016\n\nE6_CONST_4\020\\\022\016\n\nE6_CON"
    "ST_5\020\006\032\214\002\n\003M22\022\013\n\003f_0\030\001 \001(\t\0229\n\003f_1\030\003 \001(\013"
    "2,.fleetbench.proto.Message8.M2.M6.M12.M"
    "22.M41\032\274\001\n\003M41\022\013\n\003f_0\030\003 \001(\002\022=\n\003f_3\030\005 \001(\013"
    "20.fleetbench.proto.Message8.M2.M6.M12.M"
    "22.M41.M59\032i\n\003M59\022\013\n\003f_0\030\002 \001(\005\022A\n\003f_2\030\003 "
    "\001(\01324.fleetbench.proto.Message8.M2.M6.M1"
    "2.M22.M41.M59.M70\032\022\n\003M70\022\013\n\003f_0\030\003 \001(\010\032\324\025"
    "\n\003M24\0228\n\003f_0\030\002 \001(\0162+.fleetbench.proto.Me"
    "ssage8.M2.M6.M12.M24.E7\022\013\n\003f_1\030\004 \001(\010\022\013\n\003"
    "f_2\030\006 \001(\t\022\013\n\003f_3\030\007 \001(\t\022\013\n\003f_4\030\n \001(\t\022\013\n\003f"
    "_5\030\014 \001(\003\022\017\n\003f_6\030\016 \003(\003B\002\020\001\022:\n\004f_14\030\017 \001(\0132"
    ",.fleetbench.proto.Message8.M2.M6.M12.M2"
    "4.M35\022:\n\004f_15\030\020 \001(\0132,.fleetbench.proto.M"
    "essage8.M2.M6.M12.M24.M43\032\251\017\n\003M35\022\013\n\003f_0"
    "\030\001 \001(\t\022=\n\003f_1\030\003 \003(\01320.fleetbench.proto.M"
    "essage8.M2.M6.M12.M24.M35.M52\022=\n\003f_3\030\005 \001"
    "(\01320.fleetbench.proto.Message8.M2.M6.M12"
    ".M24.M35.M54\022=\n\003f_5\030\007 \003(\01320.fleetbench.p"
    "roto.Message8.M2.M6.M12.M24.M35.M62\022=\n\003f"
    "_7\030\010 \003(\01320.fleetbench.proto.Message8.M2."
    "M6.M12.M24.M35.M63\032\237\002\n\003M52\022\013\n\003f_0\030\001 \001(\002\022"
    "A\n\003f_1\030\003 \001(\01324.fleetbench.proto.Message8"
    ".M2.M6.M12.M24.M35.M52.M64\022A\n\003f_3\030\004 \001(\0132"
    "4.fleetbench.proto.Message8.M2.M6.M12.M2"
    "4.M35.M52.M67\032q\n\003M64\022\013\n\003f_0\030\001 \001(\014\022E\n\003f_1"
    "\030\002 \001(\01328.fleetbench.proto.Message8.M2.M6"
    ".M12.M24.M35.M52.M64.M78\032\026\n\003M78\022\017\n\003f_0\030\001"
    " \003(\002B\002\020\001\032\022\n\003M67\022\013\n\003f_0\030\003 \001(\005\032\357\004\n\003M54\022\013\n\003"
    "f_0\030\001 \001(\010\022\013\n\003f_1\030\002 \001(\010\022\013\n\003f_2\030\003 \001(\t\022\013\n\003f"
    "_3\030\004 \001(\t\022A\n\003f_4\030\006 \001(\01624.fleetbench.proto"
    ".Message8.M2.M6.M12.M24.M35.M54.E14\022\013\n\003f"
    "_5\030\010 \001(\003\022\013\n\003f_6\030\t \001(\005\022A\n\003f_7\030\014 \001(\01624.fle"
    "etbench.proto.Message8.M2.M6.M12.M24.M35"
    ".M54.E15\022A\n\003f_8\030\r \001(\01624.fleetbench.proto"
    ".Message8.M2.M6.M12.M24.M35.M54.E16\"o\n\003E"
    "14\022\023\n\017E14_UNSPECIFIED\020\000\022\017\n\013E14_CONST_1\020j"
    "\022\017\n\013E14_CONST_2\020\035\022\017\n\013E14_CONST_3\020\037\022\017\n\013E1"
    "4_CONST_4\020\025\022\017\n\013E14_CONST_5\020<\"o\n\003E15\022\023\n\017E"
    "15_UNSPECIFIED\020\000\022\017\n\013E15_CONST_1\020\006\022\017\n\013E15"
    "_CONST_2\020T\022\017\n\013E15_CONST_3\020x\022\017\n\013E15_CONST"
    "_4\020X\022\017\n\013E15_CONST_5\020@\"o\n\003E16\022\023\n\017E16_UNSP"
    "ECIFIED\020\000\022\017\n\013E16_CONST_1\020\007\022\017\n\013E16_CONST_"
    "2\020R\022\017\n\013E16_CONST_3\020\?\022\017\n\013E16_CONST_4\020|\022\017\n"
    "\013E16_CONST_5\020u\032\233\003\n\003M62\022A\n\003f_0\030\001 \001(\01624.fl"
    "eetbench.proto.Message8.M2.M6.M12.M24.M3"
    "5.M62.E18\022A\n\003f_1\030\002 \001(\01324.fleetbench.prot"
    "o.Message8.M2.M6.M12.M24.M35.M62.M65\022A\n\003"
    "f_2\030\004 \001(\01324.fleetbench.proto.Message8.M2"
    ".M6.M12.M24.M35.M62.M66\032,\n\003M65\022\013\n\003f_0\030\001 "
    "\001(\t\022\013\n\003f_1\030\002 \001(\003\022\013\n\003f_2\030\003 \001(\005\032,\n\003M66\022\013\n\003"
    "f_0\030\003 \001(\005\022\013\n\003f_1\030\005 \001(\t\022\013\n\003f_2\030\006 \001(\010\"o\n\003E"
    "18\022\023\n\017E18_UNSPECIFIED\020\000\022\017\n\013E18_CONST_1\020X"
    "\022\017\n\013E18_CONST_2\020=\022\017\n\013E18_CONST_3\020\035\022\017\n\013E1"
    "8_CONST_4\0203\022\017\n\013E18_CONST_5\0209\032\346\002\n\003M63\022\013\n\003"
    "f_0\030\001 \001(\005\022\013\n\003f_1\030\002 \001(\003\022\013\n\003f_2\030\003 \001(\t\022\013\n\003f"
    "_3\030\005 \001(\t\022\013\n\003f_4\030\006 \001(\005\022\013\n\003f_5\030\007 \001(\007\022\013\n\003f_"
    "6\030\010 \001(\t\022\013\n\003f_7\030\t \001(\t\022\013\n\003f_8\030\013 \001(\001\022\013\n\003f_9"
    "\030\r \001(\002\022B\n\004f_10\030\016 \001(\01624.fleetbench.proto."
    "Message8.M2.M6.M12.M24.M35.M63.E19\022\014\n\004f_"
    "11\030\017 \001(\t\022\014\n\004f_12\030\020 \001(\005\022\014\n\004f_13\030\022 \001(\010\"o\n\003"
    "E19\022\023\n\017E19_UNSPECIFIED\020\000\022\017\n\013E19_CONST_1\020"
    "F\022\017\n\013E19_CONST_2\020\r\022\017\n\013E19_CONST_3\0205\022\017\n\013E"
    "19_CONST_4\020r\022\017\n\013E19_CONST_5\020\"\032\262\003\n\003M43\022=\n"
    "\003f_0\030\002 \001(\01620.fleetbench.proto.Message8.M"
    "2.M6.M12.M24.M43.E10\022=\n\003f_2\030\003 \001(\01320.flee"
    "tbench.proto.Message8.M2.M6.M12.M24.M43."
    "M49\022=\n\003f_3\030\005 \001(\01320.fleetbench.proto.Mess"
    "age8.M2.M6.M12.M24.M43.M51\032i\n\003M49\022\013\n\003f_0"
    "\030\002 \001(\003\022A\n\003f_2\030\003 \001(\01324.fleetbench.proto.M"
    "essage8.M2.M6.M12.M24.M43.M49.M68\032\022\n\003M68"
    "\022\013\n\003f_0\030\002 \001(\t\032\022\n\003M51\022\013\n\003f_0\030\002 \001(\014\"o\n\003E10"
    "\022\023\n\017E10_UNSPECIFIED\020\000\022\017\n\013E10_CONST_1\020q\022\017"
    "\n\013E10_CONST_2\020B\022\017\n\013E10_CONST_3\020\017\022\017\n\013E10_"
    "CONST_4\020\014\022\017\n\013E10_CONST_5\020\030\"h\n\002E7\022\022\n\016E7_U"
    "NSPECIFIED\020\000\022\016\n\nE7_CONST_1\020\021\022\016\n\nE7_CONST"
    "_2\020}\022\016\n\nE7_CONST_3\020$\022\016\n\nE7_CONST_4\020*\022\016\n\n"
    "E7_CONST_5\020\020\"h\n\002E3\022\022\n\016E3_UNSPECIFIED\020\000\022\016"
    "\n\nE3_CONST_1\020O\022\016\n\nE3_CONST_2\020y\022\016\n\nE3_CON"
    "ST_3\020\017\022\016\n\nE3_CONST_4\020\030\022\016\n\nE3_CONST_5\0209\032\021"
    "\n\002M7\022\013\n\003f_0\030\002 \001(\003\032+\n\002M8\022\013\n\003f_0\030\001 \001(\t\022\013\n\003"
    "f_1\030\003 \001(\003\022\013\n\003f_2\030\005 \001(\004\032\215\003\n\003M10\022\013\n\003f_0\030\001 "
    "\001(\003\0221\n\003f_1\030\002 \001(\0162$.fleetbench.proto.Mess"
    "age8.M2.M10.E1\022\013\n\003f_2\030\004 \001(\003\0221\n\003f_3\030\006 \001(\016"
    "2$.fleetbench.proto.Message8.M2.M10.E2\022\013"
    "\n\003f_4\030\010 \001(\004\022\013\n\003f_5\030\n \001(\t\022\013\n\003f_6\030\014 \001(\001\022\013\n"
    "\003f_7\030\r \001(\003\"h\n\002E1\022\022\n\016E1_UNSPECIFIED\020\000\022\016\n\n"
    "E1_CONST_1\020a\022\016\n\nE1_CONST_2\020/\022\016\n\nE1_CONST"
    "_3\020;\022\016\n\nE1_CONST_4\020k\022\016\n\nE1_CONST_5\020 \"h\n\002"
    "E2\022\022\n\016E2_UNSPECIFIED\020\000\022\016\n\nE2_CONST_1\020\"\022\016"
    "\n\nE2_CONST_2\020!\022\016\n\nE2_CONST_3\020\002\022\016\n\nE2_CON"
    "ST_4\020>\022\016\n\nE2_CONST_5\020\034"
};
static ::absl::once_flag descriptor_table_protos_2fMessage8_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_protos_2fMessage8_2eproto = {
    false,
    false,
    25062,
    descriptor_table_protodef_protos_2fMessage8_2eproto,
    "protos/Message8.proto",
    &descriptor_table_protos_2fMessage8_2eproto_once,
    nullptr,
    0,
    98,
    schemas,
    file_default_instances,
    TableStruct_protos_2fMessage8_2eproto::offsets,
    file_level_enum_descriptors_protos_2fMessage8_2eproto,
    file_level_service_descriptors_protos_2fMessage8_2eproto,
};
namespace fleetbench {
namespace proto {
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M20_M46_E11_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M20_M46_E11_internal_data_[] = {
    65536u, 96u, 33280u, 1024u, 8650752u, };
bool Message8_M1_M4_M15_M20_M46_E11_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M20_M46_E11_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M20_M46_E11 Message8_M1_M4_M15_M20_M46::E11_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M20_M46_E11 Message8_M1_M4_M15_M20_M46::E11_CONST_1;
constexpr Message8_M1_M4_M15_M20_M46_E11 Message8_M1_M4_M15_M20_M46::E11_CONST_2;
constexpr Message8_M1_M4_M15_M20_M46_E11 Message8_M1_M4_M15_M20_M46::E11_CONST_3;
constexpr Message8_M1_M4_M15_M20_M46_E11 Message8_M1_M4_M15_M20_M46::E11_CONST_4;
constexpr Message8_M1_M4_M15_M20_M46_E11 Message8_M1_M4_M15_M20_M46::E11_CONST_5;
constexpr Message8_M1_M4_M15_M20_M46_E11 Message8_M1_M4_M15_M20_M46::E11_MIN;
constexpr Message8_M1_M4_M15_M20_M46_E11 Message8_M1_M4_M15_M20_M46::E11_MAX;
constexpr int Message8_M1_M4_M15_M20_M46::E11_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35_internal_data_[] = {
    65536u, 96u, 272629760u, 16u, 4227072u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E35_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E35_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E35_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E35_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E35_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E35_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E35_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E35_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E35_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36_internal_data_[] = {
    65536u, 96u, 2048u, 8u, 1073750024u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E36_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E36_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E36_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E36_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E36_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E36_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E36_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E36_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E36_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37_internal_data_[] = {
    65536u, 128u, 0u, 3145728u, 16384u, 264192u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E37_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E37_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E37_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E37_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E37_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E37_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E37_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E37_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E37_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38_internal_data_[] = {
    65536u, 128u, 2u, 0u, 0u, 35782660u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E38_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E38_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E38_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E38_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E38_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E38_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E38_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E38_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E38_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39_internal_data_[] = {
    65536u, 96u, 1064960u, 4194304u, 18874368u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E39_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E39_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E39_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E39_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E39_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E39_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E39_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E39_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E39_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40_internal_data_[] = {
    65536u, 96u, 536870912u, 68161536u, 512u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E40_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E40_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E40_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E40_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E40_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E40_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E40_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E40_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E40_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41_internal_data_[] = {
    65536u, 96u, 86016u, 268435456u, 67108864u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E41_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E41_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E41_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E41_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E41_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E41_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E41_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E41_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E41_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42_internal_data_[] = {
    65536u, 131104u, 33685512u, 114u, 104u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E42_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E42_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E42_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E42_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E42_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E42_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E42_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E42_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E42_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43_internal_data_[] = {
    65536u, 96u, 524288u, 4624u, 1024u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E43_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E43_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E43_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E43_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E43_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E43_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E43_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E43_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E43_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[10];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44_internal_data_[] = {
    65536u, 128u, 0u, 16777216u, 1u, 134217808u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E44_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E44_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E44_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E44_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E44_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E44_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E44_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E44_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E44_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[11];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45_internal_data_[] = {
    65536u, 128u, 2048u, 2u, 0u, 218103808u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E45_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E45_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E45_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E45_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E45_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E45_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E45_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E45_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E45_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[12];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46_internal_data_[] = {
    65536u, 65568u, 268503296u, 81u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E46_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E46_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E46_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E46_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E46_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E46_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E46_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E46_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E46_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[13];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47_internal_data_[] = {
    65536u, 128u, 0u, 128u, 128u, 268444672u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E47_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E47_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E47_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E47_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E47_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E47_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E47_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E47_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E47_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[14];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48_internal_data_[] = {
    65536u, 128u, 512u, 8388608u, 1073742336u, 128u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E48_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E48_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E48_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E48_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E48_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E48_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E48_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E48_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E48_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[15];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49_internal_data_[] = {
    65536u, 128u, 0u, 0u, 258u, 131081u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E49_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E49_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E49_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E49_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E49_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E49_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E49_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E49_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E49_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[16];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50_internal_data_[] = {
    65536u, 65600u, 67141632u, 8194u, 108u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E50_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E50_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E50_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E50_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E50_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E50_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E50_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E50_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E50_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[17];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51_internal_data_[] = {
    65536u, 128u, 8192u, 0u, 2097156u, 16793600u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E51_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E51_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E51_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E51_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E51_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E51_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E51_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E51_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E51_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[18];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52_internal_data_[] = {
    65536u, 128u, 2162688u, 0u, 0u, 2305u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E52_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E52_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E52_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E52_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E52_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E52_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E52_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E52_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E52_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[19];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53_internal_data_[] = {
    65536u, 96u, 8200u, 0u, 141312u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E53_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E53_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E53_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E53_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E53_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E53_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E53_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E53_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E53_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[20];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54_internal_data_[] = {
    65536u, 128u, 1048576u, 0u, 262144u, 539033600u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E54_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E54_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E54_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E54_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E54_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E54_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E54_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E54_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E54_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[21];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55_internal_data_[] = {
    65536u, 128u, 0u, 2214592512u, 33554432u, 144u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E55_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E55_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E55_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E55_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E55_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E55_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E55_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E55_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E55_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[22];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56_internal_data_[] = {
    65536u, 128u, 0u, 134217856u, 20u, 2048u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E56_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E56_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E56_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E56_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E56_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E56_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E56_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E56_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E56_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[23];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57_internal_data_[] = {
    65536u, 96u, 16u, 33554432u, 532512u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E57_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E57_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E57_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E57_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E57_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E57_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E57_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E57_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E57_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[24];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58_internal_data_[] = {
    65536u, 128u, 1024u, 34816u, 0u, 1056u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E58_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E58_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E58_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E58_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E58_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E58_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E58_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E58_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E58_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[25];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59_internal_data_[] = {
    65536u, 128u, 4u, 128u, 4096u, 16777728u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E59_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E59_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E59_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E59_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E59_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E59_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E59_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E59_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::E59_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[26];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30_internal_data_[] = {
    65536u, 65600u, 0u, 352256u, 122u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::E30_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::E30_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::E30_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::E30_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::E30_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::E30_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::E30_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::E30_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::E30_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[27];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31_internal_data_[] = {
    65536u, 128u, 8u, 16777216u, 131072u, 536887296u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E31_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E31_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E31_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E31_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E31_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E31_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E31_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E31_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E31_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[28];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32_internal_data_[] = {
    65536u, 128u, 2147483650u, 0u, 32768u, 24u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E32_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E32_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E32_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E32_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E32_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E32_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E32_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E32_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E32_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[29];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33_internal_data_[] = {
    65536u, 128u, 0u, 2097152u, 2097280u, 1032u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E33_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E33_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E33_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E33_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E33_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E33_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E33_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33 Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E33_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::E33_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[30];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34_internal_data_[] = {
    65536u, 128u, 524292u, 0u, 34603008u, 16384u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34 Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::E34_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34 Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::E34_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34 Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::E34_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34 Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::E34_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34 Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::E34_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34 Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::E34_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34 Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::E34_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34 Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::E34_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::E34_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[31];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21_internal_data_[] = {
    65536u, 128u, 0u, 128u, 33816576u, 3145728u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E21_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E21_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E21_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E21_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E21_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E21_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E21_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E21_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M79::E21_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[32];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22_internal_data_[] = {
    65536u, 128u, 0u, 0u, 8388864u, 37u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E22_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E22_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E22_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E22_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E22_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E22_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E22_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E22_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M79::E22_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[33];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23_internal_data_[] = {
    65536u, 96u, 0u, 2684387328u, 1073741828u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E23_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E23_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E23_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E23_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E23_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E23_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E23_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E23_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M79::E23_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[34];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24_internal_data_[] = {
    65536u, 128u, 150994944u, 536870912u, 2u, 256u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E24_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E24_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E24_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E24_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E24_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E24_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E24_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E24_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M79::E24_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[35];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25_internal_data_[] = {
    65536u, 128u, 64u, 4096u, 4194304u, 553648128u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E25_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E25_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E25_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E25_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E25_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E25_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E25_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E25_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M79::E25_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[36];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26_internal_data_[] = {
    65536u, 128u, 0u, 150994944u, 0u, 134348808u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E26_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E26_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E26_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E26_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E26_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E26_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E26_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E26_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M79::E26_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[37];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27_internal_data_[] = {
    65536u, 128u, 64u, 262144u, 0u, 6356992u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E27_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E27_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E27_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E27_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E27_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E27_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E27_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E27_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M79::E27_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[38];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28_internal_data_[] = {
    65536u, 128u, 524352u, 0u, 262208u, 4u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E28_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E28_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E28_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E28_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E28_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E28_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E28_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E28_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M79::E28_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[39];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29_internal_data_[] = {
    65536u, 96u, 805306368u, 1048576u, 18u, };
bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E29_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E29_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E29_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E29_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E29_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E29_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E29_MIN;
constexpr Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29 Message8_M1_M4_M15_M23_M40_M48_M73_M79::E29_MAX;
constexpr int Message8_M1_M4_M15_M23_M40_M48_M73_M79::E29_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M4_M15_M23_M40_E9_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[40];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M4_M15_M23_M40_E9_internal_data_[] = {
    65536u, 128u, 0u, 256u, 8421376u, 136u, };
bool Message8_M1_M4_M15_M23_M40_E9_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M4_M15_M23_M40_E9_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M4_M15_M23_M40_E9 Message8_M1_M4_M15_M23_M40::E9_UNSPECIFIED;
constexpr Message8_M1_M4_M15_M23_M40_E9 Message8_M1_M4_M15_M23_M40::E9_CONST_1;
constexpr Message8_M1_M4_M15_M23_M40_E9 Message8_M1_M4_M15_M23_M40::E9_CONST_2;
constexpr Message8_M1_M4_M15_M23_M40_E9 Message8_M1_M4_M15_M23_M40::E9_CONST_3;
constexpr Message8_M1_M4_M15_M23_M40_E9 Message8_M1_M4_M15_M23_M40::E9_CONST_4;
constexpr Message8_M1_M4_M15_M23_M40_E9 Message8_M1_M4_M15_M23_M40::E9_CONST_5;
constexpr Message8_M1_M4_M15_M23_M40_E9 Message8_M1_M4_M15_M23_M40::E9_MIN;
constexpr Message8_M1_M4_M15_M23_M40_E9 Message8_M1_M4_M15_M23_M40::E9_MAX;
constexpr int Message8_M1_M4_M15_M23_M40::E9_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M11_M14_M27_M32_E8_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[41];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M11_M14_M27_M32_E8_internal_data_[] = {
    65536u, 128u, 272629760u, 4u, 2097152u, 8192u, };
bool Message8_M1_M11_M14_M27_M32_E8_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M11_M14_M27_M32_E8_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M11_M14_M27_M32_E8 Message8_M1_M11_M14_M27_M32::E8_UNSPECIFIED;
constexpr Message8_M1_M11_M14_M27_M32_E8 Message8_M1_M11_M14_M27_M32::E8_CONST_1;
constexpr Message8_M1_M11_M14_M27_M32_E8 Message8_M1_M11_M14_M27_M32::E8_CONST_2;
constexpr Message8_M1_M11_M14_M27_M32_E8 Message8_M1_M11_M14_M27_M32::E8_CONST_3;
constexpr Message8_M1_M11_M14_M27_M32_E8 Message8_M1_M11_M14_M27_M32::E8_CONST_4;
constexpr Message8_M1_M11_M14_M27_M32_E8 Message8_M1_M11_M14_M27_M32::E8_CONST_5;
constexpr Message8_M1_M11_M14_M27_M32_E8 Message8_M1_M11_M14_M27_M32::E8_MIN;
constexpr Message8_M1_M11_M14_M27_M32_E8 Message8_M1_M11_M14_M27_M32::E8_MAX;
constexpr int Message8_M1_M11_M14_M27_M32::E8_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M11_M14_E4_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[42];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M11_M14_E4_internal_data_[] = {
    65536u, 128u, 786432u, 2097152u, 0u, 67117056u, };
bool Message8_M1_M11_M14_E4_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M11_M14_E4_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M11_M14_E4 Message8_M1_M11_M14::E4_UNSPECIFIED;
constexpr Message8_M1_M11_M14_E4 Message8_M1_M11_M14::E4_CONST_1;
constexpr Message8_M1_M11_M14_E4 Message8_M1_M11_M14::E4_CONST_2;
constexpr Message8_M1_M11_M14_E4 Message8_M1_M11_M14::E4_CONST_3;
constexpr Message8_M1_M11_M14_E4 Message8_M1_M11_M14::E4_CONST_4;
constexpr Message8_M1_M11_M14_E4 Message8_M1_M11_M14::E4_CONST_5;
constexpr Message8_M1_M11_M14_E4 Message8_M1_M11_M14::E4_MIN;
constexpr Message8_M1_M11_M14_E4 Message8_M1_M11_M14::E4_MAX;
constexpr int Message8_M1_M11_M14::E4_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M1_M11_M14_E5_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[43];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M1_M11_M14_E5_internal_data_[] = {
    131072u, 128u, 256u, 0u, 16384u, 16777224u, };
bool Message8_M1_M11_M14_E5_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M1_M11_M14_E5_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M1_M11_M14_E5 Message8_M1_M11_M14::E5_UNSPECIFIED;
constexpr Message8_M1_M11_M14_E5 Message8_M1_M11_M14::E5_CONST_1;
constexpr Message8_M1_M11_M14_E5 Message8_M1_M11_M14::E5_CONST_2;
constexpr Message8_M1_M11_M14_E5 Message8_M1_M11_M14::E5_CONST_3;
constexpr Message8_M1_M11_M14_E5 Message8_M1_M11_M14::E5_CONST_4;
constexpr Message8_M1_M11_M14_E5 Message8_M1_M11_M14::E5_CONST_5;
constexpr Message8_M1_M11_M14_E5 Message8_M1_M11_M14::E5_MIN;
constexpr Message8_M1_M11_M14_E5 Message8_M1_M11_M14::E5_MAX;
constexpr int Message8_M1_M11_M14::E5_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M5_M13_M17_M29_M50_M72_E20_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[44];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M5_M13_M17_M29_M50_M72_E20_internal_data_[] = {
    65536u, 128u, 8u, 0u, 33554432u, 4194400u, };
bool Message8_M2_M5_M13_M17_M29_M50_M72_E20_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M5_M13_M17_M29_M50_M72_E20_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M5_M13_M17_M29_M50_M72_E20 Message8_M2_M5_M13_M17_M29_M50_M72::E20_UNSPECIFIED;
constexpr Message8_M2_M5_M13_M17_M29_M50_M72_E20 Message8_M2_M5_M13_M17_M29_M50_M72::E20_CONST_1;
constexpr Message8_M2_M5_M13_M17_M29_M50_M72_E20 Message8_M2_M5_M13_M17_M29_M50_M72::E20_CONST_2;
constexpr Message8_M2_M5_M13_M17_M29_M50_M72_E20 Message8_M2_M5_M13_M17_M29_M50_M72::E20_CONST_3;
constexpr Message8_M2_M5_M13_M17_M29_M50_M72_E20 Message8_M2_M5_M13_M17_M29_M50_M72::E20_CONST_4;
constexpr Message8_M2_M5_M13_M17_M29_M50_M72_E20 Message8_M2_M5_M13_M17_M29_M50_M72::E20_CONST_5;
constexpr Message8_M2_M5_M13_M17_M29_M50_M72_E20 Message8_M2_M5_M13_M17_M29_M50_M72::E20_MIN;
constexpr Message8_M2_M5_M13_M17_M29_M50_M72_E20 Message8_M2_M5_M13_M17_M29_M50_M72::E20_MAX;
constexpr int Message8_M2_M5_M13_M17_M29_M50_M72::E20_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M5_M13_M17_M29_M50_E13_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[45];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M5_M13_M17_M29_M50_E13_internal_data_[] = {
    65536u, 65600u, 4194304u, 6272u, 108u, };
bool Message8_M2_M5_M13_M17_M29_M50_E13_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M5_M13_M17_M29_M50_E13_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M5_M13_M17_M29_M50_E13 Message8_M2_M5_M13_M17_M29_M50::E13_UNSPECIFIED;
constexpr Message8_M2_M5_M13_M17_M29_M50_E13 Message8_M2_M5_M13_M17_M29_M50::E13_CONST_1;
constexpr Message8_M2_M5_M13_M17_M29_M50_E13 Message8_M2_M5_M13_M17_M29_M50::E13_CONST_2;
constexpr Message8_M2_M5_M13_M17_M29_M50_E13 Message8_M2_M5_M13_M17_M29_M50::E13_CONST_3;
constexpr Message8_M2_M5_M13_M17_M29_M50_E13 Message8_M2_M5_M13_M17_M29_M50::E13_CONST_4;
constexpr Message8_M2_M5_M13_M17_M29_M50_E13 Message8_M2_M5_M13_M17_M29_M50::E13_CONST_5;
constexpr Message8_M2_M5_M13_M17_M29_M50_E13 Message8_M2_M5_M13_M17_M29_M50::E13_MIN;
constexpr Message8_M2_M5_M13_M17_M29_M50_E13 Message8_M2_M5_M13_M17_M29_M50::E13_MAX;
constexpr int Message8_M2_M5_M13_M17_M29_M50::E13_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M5_M13_M17_M29_M61_E17_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[46];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M5_M13_M17_M29_M61_E17_internal_data_[] = {
    65536u, 128u, 0u, 134217856u, 0u, 1310848u, };
bool Message8_M2_M5_M13_M17_M29_M61_E17_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M5_M13_M17_M29_M61_E17_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M5_M13_M17_M29_M61_E17 Message8_M2_M5_M13_M17_M29_M61::E17_UNSPECIFIED;
constexpr Message8_M2_M5_M13_M17_M29_M61_E17 Message8_M2_M5_M13_M17_M29_M61::E17_CONST_1;
constexpr Message8_M2_M5_M13_M17_M29_M61_E17 Message8_M2_M5_M13_M17_M29_M61::E17_CONST_2;
constexpr Message8_M2_M5_M13_M17_M29_M61_E17 Message8_M2_M5_M13_M17_M29_M61::E17_CONST_3;
constexpr Message8_M2_M5_M13_M17_M29_M61_E17 Message8_M2_M5_M13_M17_M29_M61::E17_CONST_4;
constexpr Message8_M2_M5_M13_M17_M29_M61_E17 Message8_M2_M5_M13_M17_M29_M61::E17_CONST_5;
constexpr Message8_M2_M5_M13_M17_M29_M61_E17 Message8_M2_M5_M13_M17_M29_M61::E17_MIN;
constexpr Message8_M2_M5_M13_M17_M29_M61_E17 Message8_M2_M5_M13_M17_M29_M61::E17_MAX;
constexpr int Message8_M2_M5_M13_M17_M29_M61::E17_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M5_M13_M26_M47_E12_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[47];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M5_M13_M26_M47_E12_internal_data_[] = {
    65536u, 128u, 768u, 1u, 256u, 524288u, };
bool Message8_M2_M5_M13_M26_M47_E12_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M5_M13_M26_M47_E12_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M5_M13_M26_M47_E12 Message8_M2_M5_M13_M26_M47::E12_UNSPECIFIED;
constexpr Message8_M2_M5_M13_M26_M47_E12 Message8_M2_M5_M13_M26_M47::E12_CONST_1;
constexpr Message8_M2_M5_M13_M26_M47_E12 Message8_M2_M5_M13_M26_M47::E12_CONST_2;
constexpr Message8_M2_M5_M13_M26_M47_E12 Message8_M2_M5_M13_M26_M47::E12_CONST_3;
constexpr Message8_M2_M5_M13_M26_M47_E12 Message8_M2_M5_M13_M26_M47::E12_CONST_4;
constexpr Message8_M2_M5_M13_M26_M47_E12 Message8_M2_M5_M13_M26_M47::E12_CONST_5;
constexpr Message8_M2_M5_M13_M26_M47_E12 Message8_M2_M5_M13_M26_M47::E12_MIN;
constexpr Message8_M2_M5_M13_M26_M47_E12 Message8_M2_M5_M13_M26_M47::E12_MAX;
constexpr int Message8_M2_M5_M13_M26_M47::E12_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M6_M12_M21_E6_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[48];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M6_M12_M21_E6_internal_data_[] = {
    65536u, 96u, 1056u, 1114112u, 134217728u, };
bool Message8_M2_M6_M12_M21_E6_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M6_M12_M21_E6_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M6_M12_M21_E6 Message8_M2_M6_M12_M21::E6_UNSPECIFIED;
constexpr Message8_M2_M6_M12_M21_E6 Message8_M2_M6_M12_M21::E6_CONST_1;
constexpr Message8_M2_M6_M12_M21_E6 Message8_M2_M6_M12_M21::E6_CONST_2;
constexpr Message8_M2_M6_M12_M21_E6 Message8_M2_M6_M12_M21::E6_CONST_3;
constexpr Message8_M2_M6_M12_M21_E6 Message8_M2_M6_M12_M21::E6_CONST_4;
constexpr Message8_M2_M6_M12_M21_E6 Message8_M2_M6_M12_M21::E6_CONST_5;
constexpr Message8_M2_M6_M12_M21_E6 Message8_M2_M6_M12_M21::E6_MIN;
constexpr Message8_M2_M6_M12_M21_E6 Message8_M2_M6_M12_M21::E6_MAX;
constexpr int Message8_M2_M6_M12_M21::E6_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M6_M12_M24_M35_M54_E14_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[49];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M6_M12_M24_M35_M54_E14_internal_data_[] = {
    65536u, 65600u, 1343225856u, 134217728u, 106u, };
bool Message8_M2_M6_M12_M24_M35_M54_E14_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M6_M12_M24_M35_M54_E14_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M6_M12_M24_M35_M54_E14 Message8_M2_M6_M12_M24_M35_M54::E14_UNSPECIFIED;
constexpr Message8_M2_M6_M12_M24_M35_M54_E14 Message8_M2_M6_M12_M24_M35_M54::E14_CONST_1;
constexpr Message8_M2_M6_M12_M24_M35_M54_E14 Message8_M2_M6_M12_M24_M35_M54::E14_CONST_2;
constexpr Message8_M2_M6_M12_M24_M35_M54_E14 Message8_M2_M6_M12_M24_M35_M54::E14_CONST_3;
constexpr Message8_M2_M6_M12_M24_M35_M54_E14 Message8_M2_M6_M12_M24_M35_M54::E14_CONST_4;
constexpr Message8_M2_M6_M12_M24_M35_M54_E14 Message8_M2_M6_M12_M24_M35_M54::E14_CONST_5;
constexpr Message8_M2_M6_M12_M24_M35_M54_E14 Message8_M2_M6_M12_M24_M35_M54::E14_MIN;
constexpr Message8_M2_M6_M12_M24_M35_M54_E14 Message8_M2_M6_M12_M24_M35_M54::E14_MAX;
constexpr int Message8_M2_M6_M12_M24_M35_M54::E14_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M6_M12_M24_M35_M54_E15_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[50];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M6_M12_M24_M35_M54_E15_internal_data_[] = {
    65536u, 128u, 32u, 2147483648u, 8912896u, 8388608u, };
bool Message8_M2_M6_M12_M24_M35_M54_E15_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M6_M12_M24_M35_M54_E15_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M6_M12_M24_M35_M54_E15 Message8_M2_M6_M12_M24_M35_M54::E15_UNSPECIFIED;
constexpr Message8_M2_M6_M12_M24_M35_M54_E15 Message8_M2_M6_M12_M24_M35_M54::E15_CONST_1;
constexpr Message8_M2_M6_M12_M24_M35_M54_E15 Message8_M2_M6_M12_M24_M35_M54::E15_CONST_2;
constexpr Message8_M2_M6_M12_M24_M35_M54_E15 Message8_M2_M6_M12_M24_M35_M54::E15_CONST_3;
constexpr Message8_M2_M6_M12_M24_M35_M54_E15 Message8_M2_M6_M12_M24_M35_M54::E15_CONST_4;
constexpr Message8_M2_M6_M12_M24_M35_M54_E15 Message8_M2_M6_M12_M24_M35_M54::E15_CONST_5;
constexpr Message8_M2_M6_M12_M24_M35_M54_E15 Message8_M2_M6_M12_M24_M35_M54::E15_MIN;
constexpr Message8_M2_M6_M12_M24_M35_M54_E15 Message8_M2_M6_M12_M24_M35_M54::E15_MAX;
constexpr int Message8_M2_M6_M12_M24_M35_M54::E15_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M6_M12_M24_M35_M54_E16_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[51];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M6_M12_M24_M35_M54_E16_internal_data_[] = {
    65536u, 128u, 64u, 1073741824u, 131072u, 135266304u, };
bool Message8_M2_M6_M12_M24_M35_M54_E16_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M6_M12_M24_M35_M54_E16_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M6_M12_M24_M35_M54_E16 Message8_M2_M6_M12_M24_M35_M54::E16_UNSPECIFIED;
constexpr Message8_M2_M6_M12_M24_M35_M54_E16 Message8_M2_M6_M12_M24_M35_M54::E16_CONST_1;
constexpr Message8_M2_M6_M12_M24_M35_M54_E16 Message8_M2_M6_M12_M24_M35_M54::E16_CONST_2;
constexpr Message8_M2_M6_M12_M24_M35_M54_E16 Message8_M2_M6_M12_M24_M35_M54::E16_CONST_3;
constexpr Message8_M2_M6_M12_M24_M35_M54_E16 Message8_M2_M6_M12_M24_M35_M54::E16_CONST_4;
constexpr Message8_M2_M6_M12_M24_M35_M54_E16 Message8_M2_M6_M12_M24_M35_M54::E16_CONST_5;
constexpr Message8_M2_M6_M12_M24_M35_M54_E16 Message8_M2_M6_M12_M24_M35_M54::E16_MIN;
constexpr Message8_M2_M6_M12_M24_M35_M54_E16 Message8_M2_M6_M12_M24_M35_M54::E16_MAX;
constexpr int Message8_M2_M6_M12_M24_M35_M54::E16_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M6_M12_M24_M35_M62_E18_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[52];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M6_M12_M24_M35_M62_E18_internal_data_[] = {
    65536u, 96u, 268435456u, 285474816u, 8388608u, };
bool Message8_M2_M6_M12_M24_M35_M62_E18_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M6_M12_M24_M35_M62_E18_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M6_M12_M24_M35_M62_E18 Message8_M2_M6_M12_M24_M35_M62::E18_UNSPECIFIED;
constexpr Message8_M2_M6_M12_M24_M35_M62_E18 Message8_M2_M6_M12_M24_M35_M62::E18_CONST_1;
constexpr Message8_M2_M6_M12_M24_M35_M62_E18 Message8_M2_M6_M12_M24_M35_M62::E18_CONST_2;
constexpr Message8_M2_M6_M12_M24_M35_M62_E18 Message8_M2_M6_M12_M24_M35_M62::E18_CONST_3;
constexpr Message8_M2_M6_M12_M24_M35_M62_E18 Message8_M2_M6_M12_M24_M35_M62::E18_CONST_4;
constexpr Message8_M2_M6_M12_M24_M35_M62_E18 Message8_M2_M6_M12_M24_M35_M62::E18_CONST_5;
constexpr Message8_M2_M6_M12_M24_M35_M62_E18 Message8_M2_M6_M12_M24_M35_M62::E18_MIN;
constexpr Message8_M2_M6_M12_M24_M35_M62_E18 Message8_M2_M6_M12_M24_M35_M62::E18_MAX;
constexpr int Message8_M2_M6_M12_M24_M35_M62::E18_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M6_M12_M24_M35_M63_E19_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[53];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M6_M12_M24_M35_M63_E19_internal_data_[] = {
    65536u, 128u, 4096u, 1048578u, 32u, 131072u, };
bool Message8_M2_M6_M12_M24_M35_M63_E19_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M6_M12_M24_M35_M63_E19_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M6_M12_M24_M35_M63_E19 Message8_M2_M6_M12_M24_M35_M63::E19_UNSPECIFIED;
constexpr Message8_M2_M6_M12_M24_M35_M63_E19 Message8_M2_M6_M12_M24_M35_M63::E19_CONST_1;
constexpr Message8_M2_M6_M12_M24_M35_M63_E19 Message8_M2_M6_M12_M24_M35_M63::E19_CONST_2;
constexpr Message8_M2_M6_M12_M24_M35_M63_E19 Message8_M2_M6_M12_M24_M35_M63::E19_CONST_3;
constexpr Message8_M2_M6_M12_M24_M35_M63_E19 Message8_M2_M6_M12_M24_M35_M63::E19_CONST_4;
constexpr Message8_M2_M6_M12_M24_M35_M63_E19 Message8_M2_M6_M12_M24_M35_M63::E19_CONST_5;
constexpr Message8_M2_M6_M12_M24_M35_M63_E19 Message8_M2_M6_M12_M24_M35_M63::E19_MIN;
constexpr Message8_M2_M6_M12_M24_M35_M63_E19 Message8_M2_M6_M12_M24_M35_M63::E19_MAX;
constexpr int Message8_M2_M6_M12_M24_M35_M63::E19_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M6_M12_M24_M43_E10_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[54];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M6_M12_M24_M43_E10_internal_data_[] = {
    65536u, 131104u, 8407040u, 113u, 66u, };
bool Message8_M2_M6_M12_M24_M43_E10_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M6_M12_M24_M43_E10_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M6_M12_M24_M43_E10 Message8_M2_M6_M12_M24_M43::E10_UNSPECIFIED;
constexpr Message8_M2_M6_M12_M24_M43_E10 Message8_M2_M6_M12_M24_M43::E10_CONST_1;
constexpr Message8_M2_M6_M12_M24_M43_E10 Message8_M2_M6_M12_M24_M43::E10_CONST_2;
constexpr Message8_M2_M6_M12_M24_M43_E10 Message8_M2_M6_M12_M24_M43::E10_CONST_3;
constexpr Message8_M2_M6_M12_M24_M43_E10 Message8_M2_M6_M12_M24_M43::E10_CONST_4;
constexpr Message8_M2_M6_M12_M24_M43_E10 Message8_M2_M6_M12_M24_M43::E10_CONST_5;
constexpr Message8_M2_M6_M12_M24_M43_E10 Message8_M2_M6_M12_M24_M43::E10_MIN;
constexpr Message8_M2_M6_M12_M24_M43_E10 Message8_M2_M6_M12_M24_M43::E10_MAX;
constexpr int Message8_M2_M6_M12_M24_M43::E10_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M6_M12_M24_E7_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[55];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M6_M12_M24_E7_internal_data_[] = {
    65536u, 65600u, 98304u, 520u, 125u, };
bool Message8_M2_M6_M12_M24_E7_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M6_M12_M24_E7_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M6_M12_M24_E7 Message8_M2_M6_M12_M24::E7_UNSPECIFIED;
constexpr Message8_M2_M6_M12_M24_E7 Message8_M2_M6_M12_M24::E7_CONST_1;
constexpr Message8_M2_M6_M12_M24_E7 Message8_M2_M6_M12_M24::E7_CONST_2;
constexpr Message8_M2_M6_M12_M24_E7 Message8_M2_M6_M12_M24::E7_CONST_3;
constexpr Message8_M2_M6_M12_M24_E7 Message8_M2_M6_M12_M24::E7_CONST_4;
constexpr Message8_M2_M6_M12_M24_E7 Message8_M2_M6_M12_M24::E7_CONST_5;
constexpr Message8_M2_M6_M12_M24_E7 Message8_M2_M6_M12_M24::E7_MIN;
constexpr Message8_M2_M6_M12_M24_E7 Message8_M2_M6_M12_M24::E7_MAX;
constexpr int Message8_M2_M6_M12_M24::E7_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M6_M12_E3_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[56];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M6_M12_E3_internal_data_[] = {
    65536u, 128u, 8404992u, 16777216u, 16384u, 16777216u, };
bool Message8_M2_M6_M12_E3_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M6_M12_E3_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M6_M12_E3 Message8_M2_M6_M12::E3_UNSPECIFIED;
constexpr Message8_M2_M6_M12_E3 Message8_M2_M6_M12::E3_CONST_1;
constexpr Message8_M2_M6_M12_E3 Message8_M2_M6_M12::E3_CONST_2;
constexpr Message8_M2_M6_M12_E3 Message8_M2_M6_M12::E3_CONST_3;
constexpr Message8_M2_M6_M12_E3 Message8_M2_M6_M12::E3_CONST_4;
constexpr Message8_M2_M6_M12_E3 Message8_M2_M6_M12::E3_CONST_5;
constexpr Message8_M2_M6_M12_E3 Message8_M2_M6_M12::E3_MIN;
constexpr Message8_M2_M6_M12_E3 Message8_M2_M6_M12::E3_MAX;
constexpr int Message8_M2_M6_M12::E3_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M10_E1_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[57];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M10_E1_internal_data_[] = {
    65536u, 128u, 2147483648u, 67125248u, 0u, 1025u, };
bool Message8_M2_M10_E1_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, Message8_M2_M10_E1_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M10_E1 Message8_M2_M10::E1_UNSPECIFIED;
constexpr Message8_M2_M10_E1 Message8_M2_M10::E1_CONST_1;
constexpr Message8_M2_M10_E1 Message8_M2_M10::E1_CONST_2;
constexpr Message8_M2_M10_E1 Message8_M2_M10::E1_CONST_3;
constexpr Message8_M2_M10_E1 Message8_M2_M10::E1_CONST_4;
constexpr Message8_M2_M10_E1 Message8_M2_M10::E1_CONST_5;
constexpr Message8_M2_M10_E1 Message8_M2_M10::E1_MIN;
constexpr Message8_M2_M10_E1 Message8_M2_M10::E1_MAX;
constexpr int Message8_M2_M10::E1_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Message8_M2_M10_E2_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protos_2fMessage8_2eproto);
  return file_level_enum_descriptors_protos_2fMessage8_2eproto[58];
}
PROTOBUF_CONSTINIT const uint32_t Message8_M2_M10_E2_internal_data_[] = {
    65536u, 64u, 134217730u, 536870915u, };
bool Message8_M2_M10_E2_IsValid(int value) {
  return 0 <= value && value <= 62 && ((4611686044465627141u >> value) & 1) != 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Message8_M2_M10_E2 Message8_M2_M10::E2_UNSPECIFIED;
constexpr Message8_M2_M10_E2 Message8_M2_M10::E2_CONST_1;
constexpr Message8_M2_M10_E2 Message8_M2_M10::E2_CONST_2;
constexpr Message8_M2_M10_E2 Message8_M2_M10::E2_CONST_3;
constexpr Message8_M2_M10_E2 Message8_M2_M10::E2_CONST_4;
constexpr Message8_M2_M10_E2 Message8_M2_M10::E2_CONST_5;
constexpr Message8_M2_M10_E2 Message8_M2_M10::E2_MIN;
constexpr Message8_M2_M10_E2 Message8_M2_M10::E2_MAX;
constexpr int Message8_M2_M10::E2_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Message8_M1_M4_M15_M16_M33_M53_M69_M76::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M16_M33_M53_M69_M76>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69_M76, _impl_._has_bits_);
};

Message8_M1_M4_M15_M16_M33_M53_M69_M76::Message8_M1_M4_M15_M16_M33_M53_M69_M76(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33_M53_M69_M76::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M1_M4_M15_M16_M33_M53_M69_M76::Message8_M1_M4_M15_M16_M33_M53_M69_M76(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M16_M33_M53_M69_M76& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M16_M33_M53_M69_M76* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33_M53_M69_M76::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M1_M4_M15_M16_M33_M53_M69_M76::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M4_M15_M16_M33_M53_M69_M76::~Message8_M1_M4_M15_M16_M33_M53_M69_M76() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M16_M33_M53_M69_M76::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M16_M33_M53_M69_M76::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69_M76, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M16_M33_M53_M69_M76::MergeImpl,
          &Message8_M1_M4_M15_M16_M33_M53_M69_M76::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 67, 2> Message8_M1_M4_M15_M16_M33_M53_M69_M76::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69_M76, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M16_M33_M53_M69_M76_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69_M76>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string f_0 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69_M76, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69_M76, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M16_M33_M53_M69_M76::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M16_M33_M53_M69_M76::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M16_M33_M53_M69_M76::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76.f_0");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76)
  return target;
}

::size_t Message8_M1_M4_M15_M16_M33_M53_M69_M76::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M16_M33_M53_M69_M76::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M16_M33_M53_M69_M76*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M16_M33_M53_M69_M76&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M16_M33_M53_M69_M76::CopyFrom(const Message8_M1_M4_M15_M16_M33_M53_M69_M76& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M16_M33_M53_M69_M76::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M16_M33_M53_M69_M76::InternalSwap(Message8_M1_M4_M15_M16_M33_M53_M69_M76* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M16_M33_M53_M69_M76::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M16_M33_M53_M69::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M16_M33_M53_M69>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69, _impl_._has_bits_);
};

Message8_M1_M4_M15_M16_M33_M53_M69::Message8_M1_M4_M15_M16_M33_M53_M69(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33_M53_M69::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M1_M4_M15_M16_M33_M53_M69::Message8_M1_M4_M15_M16_M33_M53_M69(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M16_M33_M53_M69& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M16_M33_M53_M69* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69_M76>(
                              arena, *from._impl_.f_2_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33_M53_M69::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M1_M4_M15_M16_M33_M53_M69::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_2_ = {};
}
Message8_M1_M4_M15_M16_M33_M53_M69::~Message8_M1_M4_M15_M16_M33_M53_M69() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M16_M33_M53_M69::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  delete _impl_.f_2_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M16_M33_M53_M69::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M16_M33_M53_M69::MergeImpl,
          &Message8_M1_M4_M15_M16_M33_M53_M69::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 63, 2> Message8_M1_M4_M15_M16_M33_M53_M69::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M16_M33_M53_M69_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string f_0 = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76 f_2 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M69, _impl_.f_2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69_M76>()},
  }}, {{
    "\63\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M16_M33_M53_M69::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_2_ != nullptr);
      _impl_.f_2_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M16_M33_M53_M69::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M16_M33_M53_M69::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.f_0");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76 f_2 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69)
  return target;
}

::size_t Message8_M1_M4_M15_M16_M33_M53_M69::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string f_0 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_0());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69.M76 f_2 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M16_M33_M53_M69::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M16_M33_M53_M69*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M16_M33_M53_M69&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69_M76>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M16_M33_M53_M69::CopyFrom(const Message8_M1_M4_M15_M16_M33_M53_M69& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M16_M33_M53_M69::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M16_M33_M53_M69::InternalSwap(Message8_M1_M4_M15_M16_M33_M53_M69* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  swap(_impl_.f_2_, other->_impl_.f_2_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M16_M33_M53_M69::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M16_M33_M53_M74::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M16_M33_M53_M74>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M74, _impl_._has_bits_);
};

Message8_M1_M4_M15_M16_M33_M53_M74::Message8_M1_M4_M15_M16_M33_M53_M74(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33_M53_M74::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_(arena, from.f_1_) {}

Message8_M1_M4_M15_M16_M33_M53_M74::Message8_M1_M4_M15_M16_M33_M53_M74(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M16_M33_M53_M74& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M16_M33_M53_M74* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33_M53_M74::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_(arena) {}

inline void Message8_M1_M4_M15_M16_M33_M53_M74::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M1_M4_M15_M16_M33_M53_M74::~Message8_M1_M4_M15_M16_M33_M53_M74() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M16_M33_M53_M74::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_1_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M16_M33_M53_M74::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M74, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M16_M33_M53_M74::MergeImpl,
          &Message8_M1_M4_M15_M16_M33_M53_M74::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Message8_M1_M4_M15_M16_M33_M53_M74::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M74, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M16_M33_M53_M74_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M74>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes f_1 = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M74, _impl_.f_1_)}},
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M16_M33_M53_M74, _impl_.f_0_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M74, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M74, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bytes f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53_M74, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M16_M33_M53_M74::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_1_.ClearNonDefaultToEmpty();
  }
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M16_M33_M53_M74::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M16_M33_M53_M74::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // optional bytes f_1 = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_1();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74)
  return target;
}

::size_t Message8_M1_M4_M15_M16_M33_M53_M74::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes f_1 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_1());
    }

    // optional int64 f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M16_M33_M53_M74::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M16_M33_M53_M74*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M16_M33_M53_M74&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_1(from._internal_f_1());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M16_M33_M53_M74::CopyFrom(const Message8_M1_M4_M15_M16_M33_M53_M74& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M16_M33_M53_M74::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M16_M33_M53_M74::InternalSwap(Message8_M1_M4_M15_M16_M33_M53_M74* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_1_, &other->_impl_.f_1_, arena);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M16_M33_M53_M74::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M16_M33_M53::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M16_M33_M53>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53, _impl_._has_bits_);
};

Message8_M1_M4_M15_M16_M33_M53::Message8_M1_M4_M15_M16_M33_M53(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33_M53::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_4_{visibility, arena, from.f_4_} {}

Message8_M1_M4_M15_M16_M33_M53::Message8_M1_M4_M15_M16_M33_M53(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M16_M33_M53& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M16_M33_M53* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33_M53::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_4_{visibility, arena} {}

inline void Message8_M1_M4_M15_M16_M33_M53::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M16_M33_M53::~Message8_M1_M4_M15_M16_M33_M53() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M16_M33_M53::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M16_M33_M53::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M16_M33_M53::MergeImpl,
          &Message8_M1_M4_M15_M16_M33_M53::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 2, 0, 2> Message8_M1_M4_M15_M16_M33_M53::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53, _impl_._has_bits_),
    0, // no _extensions_
    5, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967270,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M16_M33_M53_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69 f_1 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53, _impl_.f_1_)}},
    // optional float f_0 = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69 f_1 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74 f_4 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53, _impl_.f_4_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M74>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M16_M33_M53::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_4_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_1_ != nullptr);
    _impl_.f_1_->Clear();
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M16_M33_M53::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M16_M33_M53::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69 f_1 = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74 f_4 = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_4_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_4().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53)
  return target;
}

::size_t Message8_M1_M4_M15_M16_M33_M53::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M74 f_4 = 5;
  total_size += 1UL * this->_internal_f_4_size();
  for (const auto& msg : this->_internal_f_4()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53.M69 f_1 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional float f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M16_M33_M53::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M16_M33_M53*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M16_M33_M53&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_4()->MergeFrom(
      from._internal_f_4());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53_M69>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M16_M33_M53::CopyFrom(const Message8_M1_M4_M15_M16_M33_M53& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M16_M33_M53::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M16_M33_M53::InternalSwap(Message8_M1_M4_M15_M16_M33_M53* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_4_.InternalSwap(&other->_impl_.f_4_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M16_M33_M53::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M53, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M16_M33_M53::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M16_M33_M60::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M16_M33_M60>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M60, _impl_._has_bits_);
};

Message8_M1_M4_M15_M16_M33_M60::Message8_M1_M4_M15_M16_M33_M60(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33_M60::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M1_M4_M15_M16_M33_M60::Message8_M1_M4_M15_M16_M33_M60(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M16_M33_M60& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M16_M33_M60* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33_M60::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M1_M4_M15_M16_M33_M60::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M4_M15_M16_M33_M60::~Message8_M1_M4_M15_M16_M33_M60() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M16_M33_M60::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M16_M33_M60::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M60, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M16_M33_M60::MergeImpl,
          &Message8_M1_M4_M15_M16_M33_M60::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M1_M4_M15_M16_M33_M60::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M60, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M16_M33_M60_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M60>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes f_0 = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M60, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33_M60, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M16_M33_M60::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M16_M33_M60::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M16_M33_M60::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60)
  return target;
}

::size_t Message8_M1_M4_M15_M16_M33_M60::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes f_0 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M16_M33_M60::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M16_M33_M60*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M16_M33_M60&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M16_M33_M60::CopyFrom(const Message8_M1_M4_M15_M16_M33_M60& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M16_M33_M60::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M16_M33_M60::InternalSwap(Message8_M1_M4_M15_M16_M33_M60* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M16_M33_M60::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M16_M33::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M16_M33>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33, _impl_._has_bits_);
};

Message8_M1_M4_M15_M16_M33::Message8_M1_M4_M15_M16_M33(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_2_{visibility, arena, from.f_2_} {}

Message8_M1_M4_M15_M16_M33::Message8_M1_M4_M15_M16_M33(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M16_M33& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M16_M33* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_3_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M60>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M33::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_2_{visibility, arena} {}

inline void Message8_M1_M4_M15_M16_M33::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_3_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_3_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M16_M33::~Message8_M1_M4_M15_M16_M33() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M16.M33)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M16_M33::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_3_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M16_M33::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M16_M33::MergeImpl,
          &Message8_M1_M4_M15_M16_M33::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Message8_M1_M4_M15_M16_M33::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967281,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M16_M33_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60 f_3 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional float f_0 = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33, _impl_.f_0_)}},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53 f_2 = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33, _impl_.f_2_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33, _impl_.f_3_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M53>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M60>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M16_M33::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_2_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_3_ != nullptr);
    _impl_.f_3_->Clear();
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M16_M33::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M16_M33::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float f_0 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_f_0(), target);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53 f_2 = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_2_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_2().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60 f_3 = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M16.M33)
  return target;
}

::size_t Message8_M1_M4_M15_M16_M33::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M53 f_2 = 3;
  total_size += 1UL * this->_internal_f_2_size();
  for (const auto& msg : this->_internal_f_2()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33.M60 f_3 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional float f_0 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M16_M33::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M16_M33*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M16_M33&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_2()->MergeFrom(
      from._internal_f_2());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M16_M33_M60>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M16_M33::CopyFrom(const Message8_M1_M4_M15_M16_M33& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M33)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M16_M33::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M16_M33::InternalSwap(Message8_M1_M4_M15_M16_M33* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_2_.InternalSwap(&other->_impl_.f_2_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M16_M33::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M33, _impl_.f_3_)>(
          reinterpret_cast<char*>(&_impl_.f_3_),
          reinterpret_cast<char*>(&other->_impl_.f_3_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M16_M33::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M16_M44::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M16_M44>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M44, _impl_._has_bits_);
};

Message8_M1_M4_M15_M16_M44::Message8_M1_M4_M15_M16_M44(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M44)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M44::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M1_M4_M15_M16_M44::Message8_M1_M4_M15_M16_M44(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M16_M44& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M16_M44* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M16.M44)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16_M44::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M1_M4_M15_M16_M44::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M4_M15_M16_M44::~Message8_M1_M4_M15_M16_M44() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M16.M44)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M16_M44::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M16_M44::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M44, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M16_M44::MergeImpl,
          &Message8_M1_M4_M15_M16_M44::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M1_M4_M15_M16_M44::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M44, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M16_M44_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M44>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes f_0 = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M44, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16_M44, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M16_M44::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M16.M44)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M16_M44::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M16_M44::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M16.M44)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M16.M44)
  return target;
}

::size_t Message8_M1_M4_M15_M16_M44::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M16.M44)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M16_M44::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M16_M44*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M16_M44&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M44)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M16_M44::CopyFrom(const Message8_M1_M4_M15_M16_M44& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M16.M44)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M16_M44::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M16_M44::InternalSwap(Message8_M1_M4_M15_M16_M44* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M16_M44::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M16::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M16>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16, _impl_._has_bits_);
};

Message8_M1_M4_M15_M16::Message8_M1_M4_M15_M16(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M16)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M4_M15_M16::Message8_M1_M4_M15_M16(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M16& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M16* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M16_M33>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_4_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M16_M44>(
                              arena, *from._impl_.f_4_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M16)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M16::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M16::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M16::~Message8_M1_M4_M15_M16() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M16)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M16::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  delete _impl_.f_4_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M16::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M16::MergeImpl,
          &Message8_M1_M4_M15_M16::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Message8_M1_M4_M15_M16::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967254,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M16_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33 f_1 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16, _impl_.f_1_)}},
    // optional float f_0 = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M44 f_4 = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16, _impl_.f_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16, _impl_.f_0_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33 f_1 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M44 f_4 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16, _impl_.f_4_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M33>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16_M44>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M16::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M16)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.f_1_ != nullptr);
      _impl_.f_1_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_4_ != nullptr);
      _impl_.f_4_->Clear();
    }
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M16::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M16::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M16)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float f_0 = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33 f_1 = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M44 f_4 = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.f_4_, _impl_.f_4_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M16)
  return target;
}

::size_t Message8_M1_M4_M15_M16::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M16)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M33 f_1 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M16.M44 f_4 = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_4_);
    }

    // optional float f_0 = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M16::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M16*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M16&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M16)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M16_M33>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_4_ != nullptr);
      if (_this->_impl_.f_4_ == nullptr) {
        _this->_impl_.f_4_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M16_M44>(arena, *from._impl_.f_4_);
      } else {
        _this->_impl_.f_4_->MergeFrom(*from._impl_.f_4_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M16::CopyFrom(const Message8_M1_M4_M15_M16& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M16)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M16::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M16::InternalSwap(Message8_M1_M4_M15_M16* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M16::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M16, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M16::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M20_M45_M57::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M20_M45_M57>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45_M57, _impl_._has_bits_);
};

Message8_M1_M4_M15_M20_M45_M57::Message8_M1_M4_M15_M20_M45_M57(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M20_M45_M57::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M1_M4_M15_M20_M45_M57::Message8_M1_M4_M15_M20_M45_M57(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M20_M45_M57& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M20_M45_M57* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M20_M45_M57::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M1_M4_M15_M20_M45_M57::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M4_M15_M20_M45_M57::~Message8_M1_M4_M15_M20_M45_M57() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M20_M45_M57::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M20_M45_M57::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45_M57, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M20_M45_M57::MergeImpl,
          &Message8_M1_M4_M15_M20_M45_M57::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 59, 2> Message8_M1_M4_M15_M20_M45_M57::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45_M57, _impl_._has_bits_),
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967287,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M20_M45_M57_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M20_M45_M57>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string f_0 = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45_M57, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45_M57, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M20_M45_M57::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M20_M45_M57::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M20_M45_M57::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57.f_0");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57)
  return target;
}

::size_t Message8_M1_M4_M15_M20_M45_M57::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string f_0 = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M20_M45_M57::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M20_M45_M57*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M20_M45_M57&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M20_M45_M57::CopyFrom(const Message8_M1_M4_M15_M20_M45_M57& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M20_M45_M57::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M20_M45_M57::InternalSwap(Message8_M1_M4_M15_M20_M45_M57* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M20_M45_M57::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M20_M45::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M20_M45>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45, _impl_._has_bits_);
};

Message8_M1_M4_M15_M20_M45::Message8_M1_M4_M15_M20_M45(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M20.M45)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M20_M45::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M4_M15_M20_M45::Message8_M1_M4_M15_M20_M45(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M20_M45& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M20_M45* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M20_M45_M57>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M20.M45)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M20_M45::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M20_M45::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M20_M45::~Message8_M1_M4_M15_M20_M45() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M20.M45)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M20_M45::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M20_M45::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M20_M45::MergeImpl,
          &Message8_M1_M4_M15_M20_M45::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M1_M4_M15_M20_M45::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M20_M45_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M20_M45>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57 f_1 = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45, _impl_.f_1_)}},
    // optional bool f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M1_M4_M15_M20_M45, _impl_.f_0_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M20_M45_M57>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M20_M45::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M20.M45)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_1_ != nullptr);
    _impl_.f_1_->Clear();
  }
  _impl_.f_0_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M20_M45::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M20_M45::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M20.M45)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57 f_1 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M20.M45)
  return target;
}

::size_t Message8_M1_M4_M15_M20_M45::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M20.M45)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M45.M57 f_1 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional bool f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M20_M45::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M20_M45*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M20_M45&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M20.M45)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M20_M45_M57>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M20_M45::CopyFrom(const Message8_M1_M4_M15_M20_M45& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M20.M45)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M20_M45::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M20_M45::InternalSwap(Message8_M1_M4_M15_M20_M45* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M20_M45::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M45, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M20_M45::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M20_M46_M56::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M20_M46_M56>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46_M56, _impl_._has_bits_);
};

Message8_M1_M4_M15_M20_M46_M56::Message8_M1_M4_M15_M20_M46_M56(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M20_M46_M56::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M1_M4_M15_M20_M46_M56::Message8_M1_M4_M15_M20_M46_M56(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M20_M46_M56& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M20_M46_M56* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M20_M46_M56::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M1_M4_M15_M20_M46_M56::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M4_M15_M20_M46_M56::~Message8_M1_M4_M15_M20_M46_M56() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M20_M46_M56::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M20_M46_M56::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46_M56, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M20_M46_M56::MergeImpl,
          &Message8_M1_M4_M15_M20_M46_M56::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M1_M4_M15_M20_M46_M56::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46_M56, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M20_M46_M56_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M20_M46_M56>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes f_0 = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46_M56, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46_M56, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M20_M46_M56::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M20_M46_M56::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M20_M46_M56::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56)
  return target;
}

::size_t Message8_M1_M4_M15_M20_M46_M56::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M20_M46_M56::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M20_M46_M56*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M20_M46_M56&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M20_M46_M56::CopyFrom(const Message8_M1_M4_M15_M20_M46_M56& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M20_M46_M56::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M20_M46_M56::InternalSwap(Message8_M1_M4_M15_M20_M46_M56* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M20_M46_M56::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M20_M46::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M20_M46>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_._has_bits_);
};

Message8_M1_M4_M15_M20_M46::Message8_M1_M4_M15_M20_M46(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M20.M46)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M20_M46::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_{visibility, arena, from.f_0_} {}

Message8_M1_M4_M15_M20_M46::Message8_M1_M4_M15_M20_M46(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M20_M46& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M20_M46* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_5_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M20_M46_M56>(
                              arena, *from._impl_.f_5_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_1_),
           offsetof(Impl_, f_4_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_4_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M20.M46)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M20_M46::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_{visibility, arena} {}

inline void Message8_M1_M4_M15_M20_M46::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_5_),
           0,
           offsetof(Impl_, f_4_) -
               offsetof(Impl_, f_5_) +
               sizeof(Impl_::f_4_));
}
Message8_M1_M4_M15_M20_M46::~Message8_M1_M4_M15_M20_M46() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M20.M46)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M20_M46::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_5_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M20_M46::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M20_M46::MergeImpl,
          &Message8_M1_M4_M15_M20_M46::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 0, 2> Message8_M1_M4_M15_M20_M46::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M20_M46_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M20_M46>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated bytes f_0 = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46.E11 f_1 = 2;
    {::_pbi::TcParser::FastEvS1,
     {16, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_1_)}},
    // optional float f_2 = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_2_)}},
    // optional int64 f_3 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M20_M46, _impl_.f_3_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_3_)}},
    // optional float f_4 = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_4_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56 f_5 = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_5_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_0_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46.E11 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_1_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional float f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int64 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_3_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional float f_4 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_4_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56 f_5 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_5_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M20_M46_M56>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M20_M46_E11_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M20_M46::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M20.M46)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_5_ != nullptr);
    _impl_.f_5_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.f_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_4_) -
        reinterpret_cast<char*>(&_impl_.f_1_)) + sizeof(_impl_.f_4_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M20_M46::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M20_M46::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M20.M46)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes f_0 = 1;
  for (int i = 0, n = this->_internal_f_0_size(); i < n; ++i) {
    const auto& s = this->_internal_f_0().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46.E11 f_1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_f_1(), target);
  }

  // optional float f_2 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_f_2(), target);
  }

  // optional int64 f_3 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_f_3(), target);
  }

  // optional float f_4 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_f_4(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56 f_5 = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.f_5_, _impl_.f_5_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M20.M46)
  return target;
}

::size_t Message8_M1_M4_M15_M20_M46::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M20.M46)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated bytes f_0 = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_f_0().size());
  for (int i = 0, n = _internal_f_0().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_f_0().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46.M56 f_5 = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_5_);
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46.E11 f_1 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_1());
    }

    // optional float f_2 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional int64 f_3 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_3());
    }

    // optional float f_4 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M20_M46::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M20_M46*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M20_M46&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M20.M46)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_0()->MergeFrom(from._internal_f_0());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_5_ != nullptr);
      if (_this->_impl_.f_5_ == nullptr) {
        _this->_impl_.f_5_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M20_M46_M56>(arena, *from._impl_.f_5_);
      } else {
        _this->_impl_.f_5_->MergeFrom(*from._impl_.f_5_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M20_M46::CopyFrom(const Message8_M1_M4_M15_M20_M46& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M20.M46)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M20_M46::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M20_M46::InternalSwap(Message8_M1_M4_M15_M20_M46* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_0_.InternalSwap(&other->_impl_.f_0_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_4_)
      + sizeof(Message8_M1_M4_M15_M20_M46::_impl_.f_4_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20_M46, _impl_.f_5_)>(
          reinterpret_cast<char*>(&_impl_.f_5_),
          reinterpret_cast<char*>(&other->_impl_.f_5_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M20_M46::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M20::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M20>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20, _impl_._has_bits_);
};

Message8_M1_M4_M15_M20::Message8_M1_M4_M15_M20(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M20)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M20::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_{visibility, arena, from.f_1_} {}

Message8_M1_M4_M15_M20::Message8_M1_M4_M15_M20(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M20& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M20* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M20_M46>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M20)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M20::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_{visibility, arena} {}

inline void Message8_M1_M4_M15_M20::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M20::~Message8_M1_M4_M15_M20() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M20)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M20::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_2_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M20::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M20::MergeImpl,
          &Message8_M1_M4_M15_M20::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Message8_M1_M4_M15_M20::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967284,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M20_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M20>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46 f_2 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20, _impl_.f_2_)}},
    // optional fixed64 f_0 = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20, _impl_.f_0_)}},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M20.M45 f_1 = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M20.M45 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20, _impl_.f_1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46 f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M20_M45>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M20_M46>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M20::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M20)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_1_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_2_ != nullptr);
    _impl_.f_2_->Clear();
  }
  _impl_.f_0_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M20::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M20::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M20)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_f_0(), target);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M20.M45 f_1 = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_1_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_1().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46 f_2 = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M20)
  return target;
}

::size_t Message8_M1_M4_M15_M20::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M20)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M20.M45 f_1 = 2;
  total_size += 1UL * this->_internal_f_1_size();
  for (const auto& msg : this->_internal_f_1()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20.M46 f_2 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional fixed64 f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 9;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M20::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M20*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M20&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M20)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_1()->MergeFrom(
      from._internal_f_1());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M20_M46>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M20::CopyFrom(const Message8_M1_M4_M15_M20& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M20)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M20::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M20::InternalSwap(Message8_M1_M4_M15_M20* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_1_.InternalSwap(&other->_impl_.f_1_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M20::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M20, _impl_.f_2_)>(
          reinterpret_cast<char*>(&_impl_.f_2_),
          reinterpret_cast<char*>(&other->_impl_.f_2_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M20::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M30::_Internal {
 public:
};

Message8_M1_M4_M15_M23_M30::Message8_M1_M4_M15_M23_M30(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M30)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M30::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : f_0_{visibility, arena, from.f_0_},
        _f_0_cached_byte_size_{0},
        _cached_size_{0} {}

Message8_M1_M4_M15_M23_M30::Message8_M1_M4_M15_M23_M30(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M30& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M30* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M30)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M30::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : f_0_{visibility, arena},
        _f_0_cached_byte_size_{0},
        _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M30::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M4_M15_M23_M30::~Message8_M1_M4_M15_M23_M30() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M30)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M30::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M30::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M30, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M30::MergeImpl,
          &Message8_M1_M4_M15_M23_M30::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M1_M4_M15_M23_M30::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M23_M30_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M30>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int64 f_0 = 1 [packed = true];
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M30, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 f_0 = 1 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M30, _impl_.f_0_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M30::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M30)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M30::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M30::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M30)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int64 f_0 = 1 [packed = true];
  {
    int byte_size = _impl_._f_0_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_f_0(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M30)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M30::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M30)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated int64 f_0 = 1 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_f_0())
    ;
    _impl_._f_0_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M30::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M30*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M30&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M30)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_0()->MergeFrom(from._internal_f_0());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M30::CopyFrom(const Message8_M1_M4_M15_M23_M30& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M30)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M30::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M30::InternalSwap(Message8_M1_M4_M15_M23_M30* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.f_0_.InternalSwap(&other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M30::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M31::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M31>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M31, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M31::Message8_M1_M4_M15_M23_M31(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M31)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M31::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M1_M4_M15_M23_M31::Message8_M1_M4_M15_M23_M31(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M31& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M31* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M31)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M31::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M1_M4_M15_M23_M31::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M4_M15_M23_M31::~Message8_M1_M4_M15_M23_M31() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M31)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M31::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M31::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M31, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M31::MergeImpl,
          &Message8_M1_M4_M15_M23_M31::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 55, 2> Message8_M1_M4_M15_M23_M31::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M31, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M23_M31_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M31>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string f_0 = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M31, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M31, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M4.M15.M23.M31"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M31::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M31)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M31::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M31::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M31)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M31.f_0");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M31)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M31::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M31)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string f_0 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M31::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M31*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M31&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M31)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M31::CopyFrom(const Message8_M1_M4_M15_M23_M31& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M31)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M31::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M31::InternalSwap(Message8_M1_M4_M15_M23_M31* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M31::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M38::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M38>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M38, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M38::Message8_M1_M4_M15_M23_M38(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M38)
}
Message8_M1_M4_M15_M23_M38::Message8_M1_M4_M15_M23_M38(
    ::google::protobuf::Arena* arena, const Message8_M1_M4_M15_M23_M38& from)
    : Message8_M1_M4_M15_M23_M38(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M38::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M38::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M1_M4_M15_M23_M38::~Message8_M1_M4_M15_M23_M38() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M38)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M38::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M38::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M38, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M38::MergeImpl,
          &Message8_M1_M4_M15_M23_M38::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M1_M4_M15_M23_M38::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M38, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M23_M38_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M38>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 f_0 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1_M4_M15_M23_M38, _impl_.f_0_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M38, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M38, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M38::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M38)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M38::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M38::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M38)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M38)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M38::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M38)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 f_0 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M38::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M38*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M38&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M38)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M38::CopyFrom(const Message8_M1_M4_M15_M23_M38& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M38)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M38::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M38::InternalSwap(Message8_M1_M4_M15_M23_M38* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M38::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 83, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string f_0 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\107\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89.f_0");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96)
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96(
    ::google::protobuf::Arena* arena, const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96& from)
    : Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96, _impl_.f_0_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_),
        f_2_(arena, from.f_2_) {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.f_1_ = from._impl_.f_1_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena),
        f_2_(arena) {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_1_ = {};
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.f_2_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 110, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967253,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 f_1 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_.f_1_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_0 = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 f_1 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_.f_1_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string f_2 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97, _impl_.f_2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\137\3\0\3\0\0\0\0"
    "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97"
    "f_0"
    "f_2"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_2_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.f_1_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97.f_0");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 f_1 = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_f_1(), target);
  }

  // optional string f_2 = 6;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_2();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97.f_2");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string f_0 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_0());
    }

    // optional string f_2 = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_2());
    }

    // optional int32 f_1 = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_1());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_2(from._internal_f_2());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_2_, &other->_impl_.f_2_, arena);
        swap(_impl_.f_1_, other->_impl_.f_1_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_4_{visibility, arena, from.f_4_},
        f_0_(arena, from.f_0_) {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_3_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  _impl_.f_1_ = from._impl_.f_1_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_4_{visibility, arena},
        f_0_(arena) {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_3_),
           0,
           offsetof(Impl_, f_1_) -
               offsetof(Impl_, f_3_) +
               sizeof(Impl_::f_1_));
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  delete _impl_.f_3_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 103, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967265,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96 f_3 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_3_)}},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97 f_4 = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_4_)}},
    // optional string f_0 = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_0_)}},
    // optional int64 f_1 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_1_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_1_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_3_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97 f_4 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_4_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M97>()},
  }}, {{
    "\133\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_4_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_3_ != nullptr);
      _impl_.f_3_->Clear();
    }
  }
  _impl_.f_1_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.f_0");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int64 f_1 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_f_1(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96 f_3 = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97 f_4 = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_4_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_4().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M97 f_4 = 5;
  total_size += 1UL * this->_internal_f_4_size();
  for (const auto& msg : this->_internal_f_4()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string f_0 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_0());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95.M96 f_3 = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional int64 f_1 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_1());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_4()->MergeFrom(
      from._internal_f_4());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95_M96>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_4_.InternalSwap(&other->_impl_.f_4_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_1_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::_impl_.f_1_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95, _impl_.f_3_)>(
          reinterpret_cast<char*>(&_impl_.f_3_),
          reinterpret_cast<char*>(&other->_impl_.f_3_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_6_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95>(
                              arena, *from._impl_.f_6_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_4_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_4_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_6_),
           0,
           offsetof(Impl_, f_4_) -
               offsetof(Impl_, f_6_) +
               sizeof(Impl_::f_4_));
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_6_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967108,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95 f_6 = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_6_)}},
    // optional uint32 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_0_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_0_)}},
    // optional float f_1 = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 f_2 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_2_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_2_)}},
    // optional int64 f_3 = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_3_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_3_)}},
    // optional bool f_4 = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_4_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_1_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint64 f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_2_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int64 f_3 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_3_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bool f_4 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_4_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95 f_6 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_6_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_6_ != nullptr);
    _impl_.f_6_->Clear();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_4_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_4_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_f_0(), target);
  }

  // optional float f_1 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_f_1(), target);
  }

  // optional uint64 f_2 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_f_2(), target);
  }

  // optional int64 f_3 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_f_3(), target);
  }

  // optional bool f_4 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_f_4(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95 f_6 = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.f_6_, _impl_.f_6_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94.M95 f_6 = 8;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_6_);
    }

    // optional uint32 f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_f_0());
    }

    // optional float f_1 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional uint64 f_2 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_2());
    }

    // optional int64 f_3 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_3());
    }

    // optional bool f_4 = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_6_ != nullptr);
      if (_this->_impl_.f_6_ == nullptr) {
        _this->_impl_.f_6_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94_M95>(arena, *from._impl_.f_6_);
      } else {
        _this->_impl_.f_6_->MergeFrom(*from._impl_.f_6_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_4_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::_impl_.f_4_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94, _impl_.f_6_)>(
          reinterpret_cast<char*>(&_impl_.f_6_),
          reinterpret_cast<char*>(&other->_impl_.f_6_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_49_{visibility, arena, from.f_49_},
        _f_49_cached_byte_size_{0},
        f_76_{visibility, arena, from.f_76_},
        _f_76_cached_byte_size_{0},
        f_82_{visibility, arena, from.f_82_},
        f_114_{visibility, arena, from.f_114_},
        f_174_{visibility, arena, from.f_174_},
        f_12_(arena, from.f_12_),
        f_16_(arena, from.f_16_),
        f_19_(arena, from.f_19_),
        f_23_(arena, from.f_23_),
        f_24_(arena, from.f_24_),
        f_29_(arena, from.f_29_),
        f_32_(arena, from.f_32_),
        f_40_(arena, from.f_40_),
        f_46_(arena, from.f_46_),
        f_53_(arena, from.f_53_),
        f_57_(arena, from.f_57_),
        f_58_(arena, from.f_58_),
        f_60_(arena, from.f_60_),
        f_61_(arena, from.f_61_),
        f_74_(arena, from.f_74_),
        f_84_(arena, from.f_84_),
        f_87_(arena, from.f_87_),
        f_95_(arena, from.f_95_),
        f_96_(arena, from.f_96_),
        f_103_(arena, from.f_103_),
        f_104_(arena, from.f_104_),
        f_106_(arena, from.f_106_),
        f_108_(arena, from.f_108_),
        f_113_(arena, from.f_113_),
        f_115_(arena, from.f_115_),
        f_120_(arena, from.f_120_),
        f_123_(arena, from.f_123_),
        f_128_(arena, from.f_128_),
        f_129_(arena, from.f_129_),
        f_136_(arena, from.f_136_),
        f_150_(arena, from.f_150_),
        f_153_(arena, from.f_153_),
        f_157_(arena, from.f_157_),
        f_162_(arena, from.f_162_),
        f_164_(arena, from.f_164_),
        f_180_(arena, from.f_180_),
        f_181_(arena, from.f_181_) {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[1];
  _impl_.f_289_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94>(
                              arena, *from._impl_.f_289_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_1_),
           offsetof(Impl_, f_190_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_190_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_49_{visibility, arena},
        _f_49_cached_byte_size_{0},
        f_76_{visibility, arena},
        _f_76_cached_byte_size_{0},
        f_82_{visibility, arena},
        f_114_{visibility, arena},
        f_174_{visibility, arena},
        f_12_(arena),
        f_16_(arena),
        f_19_(arena),
        f_23_(arena),
        f_24_(arena),
        f_29_(arena),
        f_32_(arena),
        f_40_(arena),
        f_46_(arena),
        f_53_(arena),
        f_57_(arena),
        f_58_(arena),
        f_60_(arena),
        f_61_(arena),
        f_74_(arena),
        f_84_(arena),
        f_87_(arena),
        f_95_(arena),
        f_96_(arena),
        f_103_(arena),
        f_104_(arena),
        f_106_(arena),
        f_108_(arena),
        f_113_(arena),
        f_115_(arena),
        f_120_(arena),
        f_123_(arena),
        f_128_(arena),
        f_129_(arena),
        f_136_(arena),
        f_150_(arena),
        f_153_(arena),
        f_157_(arena),
        f_162_(arena),
        f_164_(arena),
        f_180_(arena),
        f_181_(arena) {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_289_),
           0,
           offsetof(Impl_, f_190_) -
               offsetof(Impl_, f_289_) +
               sizeof(Impl_::f_190_));
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_12_.Destroy();
  _impl_.f_16_.Destroy();
  _impl_.f_19_.Destroy();
  _impl_.f_23_.Destroy();
  _impl_.f_24_.Destroy();
  _impl_.f_29_.Destroy();
  _impl_.f_32_.Destroy();
  _impl_.f_40_.Destroy();
  _impl_.f_46_.Destroy();
  _impl_.f_53_.Destroy();
  _impl_.f_57_.Destroy();
  _impl_.f_58_.Destroy();
  _impl_.f_60_.Destroy();
  _impl_.f_61_.Destroy();
  _impl_.f_74_.Destroy();
  _impl_.f_84_.Destroy();
  _impl_.f_87_.Destroy();
  _impl_.f_95_.Destroy();
  _impl_.f_96_.Destroy();
  _impl_.f_103_.Destroy();
  _impl_.f_104_.Destroy();
  _impl_.f_106_.Destroy();
  _impl_.f_108_.Destroy();
  _impl_.f_113_.Destroy();
  _impl_.f_115_.Destroy();
  _impl_.f_120_.Destroy();
  _impl_.f_123_.Destroy();
  _impl_.f_128_.Destroy();
  _impl_.f_129_.Destroy();
  _impl_.f_136_.Destroy();
  _impl_.f_150_.Destroy();
  _impl_.f_153_.Destroy();
  _impl_.f_157_.Destroy();
  _impl_.f_162_.Destroy();
  _impl_.f_164_.Destroy();
  _impl_.f_180_.Destroy();
  _impl_.f_181_.Destroy();
  delete _impl_.f_289_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 193, 26, 437, 39> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_._has_bits_),
    0, // no _extensions_
    290, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    616896785,  // skipmap
    offsetof(decltype(_table_), field_entries),
    193,  // num_field_entries
    26,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string f_61 = 96;
    {::_pbi::TcParser::FastSS2,
     {1666, 13, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_61_)}},
    // optional string f_29 = 49;
    {::_pbi::TcParser::FastSS2,
     {906, 5, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_29_)}},
    // optional string f_95 = 146;
    {::_pbi::TcParser::FastSS2,
     {2450, 17, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_95_)}},
    // optional string f_53 = 83;
    {::_pbi::TcParser::FastSS2,
     {1434, 9, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_53_)}},
    // optional string f_12 = 20;
    {::_pbi::TcParser::FastSS2,
     {418, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_12_)}},
    // optional string f_32 = 53;
    {::_pbi::TcParser::FastSS2,
     {938, 6, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_32_)}},
    // optional string f_87 = 134;
    {::_pbi::TcParser::FastSS2,
     {2226, 16, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_87_)}},
    // optional string f_23 = 39;
    {::_pbi::TcParser::FastSS2,
     {698, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_23_)}},
    // optional string f_24 = 40;
    {::_pbi::TcParser::FastSS2,
     {706, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_24_)}},
    // optional string f_46 = 73;
    {::_pbi::TcParser::FastSS2,
     {1226, 8, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_46_)}},
    // optional string f_16 = 26;
    {::_pbi::TcParser::FastSS2,
     {466, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_16_)}},
    // optional string f_58 = 91;
    {::_pbi::TcParser::FastSS2,
     {1498, 11, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_58_)}},
    // optional string f_153 = 236;
    {::_pbi::TcParser::FastSS2,
     {3810, 31, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_153_)}},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E45 f_49 = 77 [packed = true];
    {::_pbi::TcParser::FastEvP2,
     {1258, 63, 11, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_49_)}},
    // optional string f_104 = 158;
    {::_pbi::TcParser::FastSS2,
     {2546, 20, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_104_)}},
    // optional string f_19 = 31;
    {::_pbi::TcParser::FastSS2,
     {506, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_19_)}},
  }}, {{
    33, 0, 17,
    43294, 21, 39428, 29, 33410, 40, 10849, 52, 6738, 62, 10272, 72,
    5717, 85, 33872, 94, 37526, 106, 36241, 115, 26880, 124, 59777, 136,
    392, 145, 37654, 158, 1026, 167, 51362, 181, 65532, 191,
    65535, 65535
  }}, {{
    // optional bool f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_0_), _Internal::kHasBitsOffset + 78, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint64 f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_1_), _Internal::kHasBitsOffset + 38, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_2_), _Internal::kHasBitsOffset + 40, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional double f_3 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_3_), _Internal::kHasBitsOffset + 39, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional fixed64 f_4 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_4_), _Internal::kHasBitsOffset + 42, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional int32 f_5 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_5_), _Internal::kHasBitsOffset + 41, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_6 = 10;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_6_), _Internal::kHasBitsOffset + 43, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E35 f_7 = 11;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_7_), _Internal::kHasBitsOffset + 44, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional fixed64 f_8 = 14;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_8_), _Internal::kHasBitsOffset + 46, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint64 f_9 = 15;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_9_), _Internal::kHasBitsOffset + 47, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 f_10 = 16;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_10_), _Internal::kHasBitsOffset + 45, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E36 f_11 = 18;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_11_), _Internal::kHasBitsOffset + 48, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional string f_12 = 20;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_12_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float f_13 = 21;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_13_), _Internal::kHasBitsOffset + 49, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E37 f_14 = 22;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_14_), _Internal::kHasBitsOffset + 51, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_15 = 25;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_15_), _Internal::kHasBitsOffset + 50, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_16 = 26;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_16_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E38 f_17 = 28;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_17_), _Internal::kHasBitsOffset + 52, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E39 f_18 = 29;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_18_), _Internal::kHasBitsOffset + 53, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional string f_19 = 31;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_19_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 f_20 = 32;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_20_), _Internal::kHasBitsOffset + 54, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint64 f_21 = 33;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_21_), _Internal::kHasBitsOffset + 55, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 f_22 = 38;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_22_), _Internal::kHasBitsOffset + 56, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string f_23 = 39;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_23_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_24 = 40;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_24_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E40 f_25 = 42;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_25_), _Internal::kHasBitsOffset + 57, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional float f_26 = 43;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_26_), _Internal::kHasBitsOffset + 58, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float f_27 = 45;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_27_), _Internal::kHasBitsOffset + 59, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float f_28 = 47;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_28_), _Internal::kHasBitsOffset + 60, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string f_29 = 49;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_29_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E41 f_30 = 50;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_30_), _Internal::kHasBitsOffset + 61, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_31 = 52;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_31_), _Internal::kHasBitsOffset + 62, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_32 = 53;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_32_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float f_33 = 54;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_33_), _Internal::kHasBitsOffset + 64, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint64 f_34 = 55;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_34_), _Internal::kHasBitsOffset + 63, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional float f_35 = 56;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_35_), _Internal::kHasBitsOffset + 65, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float f_36 = 57;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_36_), _Internal::kHasBitsOffset + 66, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E42 f_37 = 59;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_37_), _Internal::kHasBitsOffset + 67, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 f_38 = 62;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_38_), _Internal::kHasBitsOffset + 69, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_39 = 63;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_39_), _Internal::kHasBitsOffset + 68, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bytes f_40 = 65;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_40_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 f_41 = 67;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_41_), _Internal::kHasBitsOffset + 70, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E43 f_42 = 68;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_42_), _Internal::kHasBitsOffset + 71, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E44 f_43 = 69;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_43_), _Internal::kHasBitsOffset + 72, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional sfixed32 f_44 = 70;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_44_), _Internal::kHasBitsOffset + 73, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSFixed32)},
    // optional int32 f_45 = 71;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_45_), _Internal::kHasBitsOffset + 74, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string f_46 = 73;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_46_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool f_47 = 75;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_47_), _Internal::kHasBitsOffset + 79, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional fixed32 f_48 = 76;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_48_), _Internal::kHasBitsOffset + 77, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E45 f_49 = 77 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_49_), -1, 11,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnum)},
    // optional int64 f_50 = 78;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_50_), _Internal::kHasBitsOffset + 75, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional double f_51 = 79;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_51_), _Internal::kHasBitsOffset + 76, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional int64 f_52 = 82;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_52_), _Internal::kHasBitsOffset + 82, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_53 = 83;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_53_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 f_54 = 84;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_54_), _Internal::kHasBitsOffset + 84, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_55 = 85;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_55_), _Internal::kHasBitsOffset + 83, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E46 f_56 = 88;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_56_), _Internal::kHasBitsOffset + 85, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional string f_57 = 89;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_57_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_58 = 91;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_58_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 f_59 = 93;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_59_), _Internal::kHasBitsOffset + 86, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bytes f_60 = 95;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_60_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string f_61 = 96;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_61_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool f_62 = 97;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_62_), _Internal::kHasBitsOffset + 80, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int64 f_63 = 99;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_63_), _Internal::kHasBitsOffset + 87, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E47 f_64 = 100;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_64_), _Internal::kHasBitsOffset + 88, 13,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E48 f_65 = 102;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_65_), _Internal::kHasBitsOffset + 89, 14,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional fixed32 f_66 = 104;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_66_), _Internal::kHasBitsOffset + 92, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional int64 f_67 = 105;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_67_), _Internal::kHasBitsOffset + 90, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint64 f_68 = 107;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_68_), _Internal::kHasBitsOffset + 91, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional fixed32 f_69 = 110;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_69_), _Internal::kHasBitsOffset + 93, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional int64 f_70 = 111;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_70_), _Internal::kHasBitsOffset + 94, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_71 = 112;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_71_), _Internal::kHasBitsOffset + 95, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional fixed32 f_72 = 113;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_72_), _Internal::kHasBitsOffset + 96, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional float f_73 = 114;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_73_), _Internal::kHasBitsOffset + 98, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string f_74 = 115;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_74_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_75 = 116;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_75_), _Internal::kHasBitsOffset + 97, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated int32 f_76 = 117 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_76_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // optional int64 f_77 = 119;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_77_), _Internal::kHasBitsOffset + 100, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_78 = 120;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_78_), _Internal::kHasBitsOffset + 101, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_79 = 121;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_79_), _Internal::kHasBitsOffset + 102, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_80 = 122;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_80_), _Internal::kHasBitsOffset + 99, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E49 f_81 = 123;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_81_), _Internal::kHasBitsOffset + 104, 15,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // repeated float f_82 = 125 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_82_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // optional int64 f_83 = 127;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_83_), _Internal::kHasBitsOffset + 103, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_84 = 128;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_84_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 f_85 = 130;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_85_), _Internal::kHasBitsOffset + 106, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E50 f_86 = 132;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_86_), _Internal::kHasBitsOffset + 105, 16,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional string f_87 = 134;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_87_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 f_88 = 136;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_88_), _Internal::kHasBitsOffset + 108, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_89 = 137;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_89_), _Internal::kHasBitsOffset + 107, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E51 f_90 = 140;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_90_), _Internal::kHasBitsOffset + 109, 17,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 f_91 = 142;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_91_), _Internal::kHasBitsOffset + 111, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_92 = 143;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_92_), _Internal::kHasBitsOffset + 110, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_93 = 144;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_93_), _Internal::kHasBitsOffset + 112, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float f_94 = 145;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_94_), _Internal::kHasBitsOffset + 113, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string f_95 = 146;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_95_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_96 = 147;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_96_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_97 = 148;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_97_), _Internal::kHasBitsOffset + 115, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_98 = 150;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_98_), _Internal::kHasBitsOffset + 114, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 f_99 = 152;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_99_), _Internal::kHasBitsOffset + 116, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool f_100 = 153;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_100_), _Internal::kHasBitsOffset + 81, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E52 f_101 = 154;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_101_), _Internal::kHasBitsOffset + 117, 18,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional float f_102 = 156;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_102_), _Internal::kHasBitsOffset + 118, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string f_103 = 157;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_103_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_104 = 158;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_104_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 f_105 = 159;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_105_), _Internal::kHasBitsOffset + 119, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string f_106 = 161;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_106_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional double f_107 = 164;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_107_), _Internal::kHasBitsOffset + 120, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional string f_108 = 166;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_108_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 f_109 = 167;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_109_), _Internal::kHasBitsOffset + 121, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 f_110 = 169;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_110_), _Internal::kHasBitsOffset + 122, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional fixed32 f_111 = 171;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_111_), _Internal::kHasBitsOffset + 124, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional int64 f_112 = 172;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_112_), _Internal::kHasBitsOffset + 123, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_113 = 174;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_113_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated bytes f_114 = 175;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_114_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // optional string f_115 = 178;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_115_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E53 f_116 = 179;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_116_), _Internal::kHasBitsOffset + 125, 19,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_117 = 180;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_117_), _Internal::kHasBitsOffset + 126, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_118 = 182;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_118_), _Internal::kHasBitsOffset + 128, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_119 = 183;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_119_), _Internal::kHasBitsOffset + 127, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bytes f_120 = 186;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_120_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int64 f_121 = 189;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_121_), _Internal::kHasBitsOffset + 130, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_122 = 190;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_122_), _Internal::kHasBitsOffset + 131, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_123 = 191;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_123_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float f_124 = 193;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_124_), _Internal::kHasBitsOffset + 129, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional sint32 f_125 = 194;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_125_), _Internal::kHasBitsOffset + 132, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kSInt32)},
    // optional int32 f_126 = 195;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_126_), _Internal::kHasBitsOffset + 133, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_127 = 196;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_127_), _Internal::kHasBitsOffset + 134, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_128 = 197;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_128_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_129 = 198;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_129_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_130 = 199;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_130_), _Internal::kHasBitsOffset + 135, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E54 f_131 = 200;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_131_), _Internal::kHasBitsOffset + 137, 20,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_132 = 202;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_132_), _Internal::kHasBitsOffset + 136, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_133 = 203;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_133_), _Internal::kHasBitsOffset + 139, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional float f_134 = 205;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_134_), _Internal::kHasBitsOffset + 138, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E55 f_135 = 208;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_135_), _Internal::kHasBitsOffset + 140, 21,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional string f_136 = 210;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_136_), _Internal::kHasBitsOffset + 29, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_137 = 211;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_137_), _Internal::kHasBitsOffset + 142, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_138 = 212;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_138_), _Internal::kHasBitsOffset + 141, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_139 = 213;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_139_), _Internal::kHasBitsOffset + 143, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint64 f_140 = 214;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_140_), _Internal::kHasBitsOffset + 144, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int64 f_141 = 215;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_141_), _Internal::kHasBitsOffset + 145, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_142 = 218;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_142_), _Internal::kHasBitsOffset + 146, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bool f_143 = 219;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_143_), _Internal::kHasBitsOffset + 152, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 f_144 = 221;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_144_), _Internal::kHasBitsOffset + 147, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float f_145 = 225;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_145_), _Internal::kHasBitsOffset + 148, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional bool f_146 = 226;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_146_), _Internal::kHasBitsOffset + 153, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional double f_147 = 227;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_147_), _Internal::kHasBitsOffset + 149, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional int64 f_148 = 229;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_148_), _Internal::kHasBitsOffset + 150, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_149 = 230;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_149_), _Internal::kHasBitsOffset + 151, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string f_150 = 231;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_150_), _Internal::kHasBitsOffset + 30, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 f_151 = 234;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_151_), _Internal::kHasBitsOffset + 156, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool f_152 = 235;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_152_), _Internal::kHasBitsOffset + 154, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string f_153 = 236;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_153_), _Internal::kHasBitsOffset + 31, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional fixed32 f_154 = 237;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_154_), _Internal::kHasBitsOffset + 157, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional double f_155 = 238;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_155_), _Internal::kHasBitsOffset + 158, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional int64 f_156 = 239;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_156_), _Internal::kHasBitsOffset + 159, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bytes f_157 = 240;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_157_), _Internal::kHasBitsOffset + 32, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E56 f_158 = 241;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_158_), _Internal::kHasBitsOffset + 160, 22,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_159 = 244;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_159_), _Internal::kHasBitsOffset + 162, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_160 = 246;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_160_), _Internal::kHasBitsOffset + 161, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool f_161 = 247;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_161_), _Internal::kHasBitsOffset + 155, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string f_162 = 248;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_162_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 f_163 = 251;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_163_), _Internal::kHasBitsOffset + 165, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string f_164 = 252;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_164_), _Internal::kHasBitsOffset + 34, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_165 = 254;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_165_), _Internal::kHasBitsOffset + 163, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_166 = 255;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_166_), _Internal::kHasBitsOffset + 164, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_167 = 257;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_167_), _Internal::kHasBitsOffset + 167, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional float f_168 = 259;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_168_), _Internal::kHasBitsOffset + 166, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float f_169 = 260;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_169_), _Internal::kHasBitsOffset + 168, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E57 f_170 = 261;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_170_), _Internal::kHasBitsOffset + 169, 23,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_171 = 262;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_171_), _Internal::kHasBitsOffset + 170, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E58 f_172 = 263;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_172_), _Internal::kHasBitsOffset + 172, 24,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_173 = 264;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_173_), _Internal::kHasBitsOffset + 171, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated string f_174 = 265;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_174_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional uint32 f_175 = 266;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_175_), _Internal::kHasBitsOffset + 173, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int64 f_176 = 268;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_176_), _Internal::kHasBitsOffset + 174, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_177 = 269;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_177_), _Internal::kHasBitsOffset + 175, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 f_178 = 270;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_178_), _Internal::kHasBitsOffset + 176, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float f_179 = 271;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_179_), _Internal::kHasBitsOffset + 177, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string f_180 = 272;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_180_), _Internal::kHasBitsOffset + 35, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_181 = 273;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_181_), _Internal::kHasBitsOffset + 36, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 f_182 = 275;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_182_), _Internal::kHasBitsOffset + 178, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_183 = 276;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_183_), _Internal::kHasBitsOffset + 179, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_184 = 277;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_184_), _Internal::kHasBitsOffset + 181, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_185 = 279;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_185_), _Internal::kHasBitsOffset + 180, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bool f_186 = 281;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_186_), _Internal::kHasBitsOffset + 182, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 f_187 = 282;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_187_), _Internal::kHasBitsOffset + 184, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_188 = 283;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_188_), _Internal::kHasBitsOffset + 183, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional fixed32 f_189 = 285;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_189_), _Internal::kHasBitsOffset + 185, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E59 f_190 = 286;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_190_), _Internal::kHasBitsOffset + 187, 25,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_191 = 289;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_191_), _Internal::kHasBitsOffset + 186, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94 f_289 = 290;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_289_), _Internal::kHasBitsOffset + 37, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E35_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E36_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E37_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E38_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E39_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E40_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E41_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E42_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E43_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E44_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E45_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E46_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E47_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E48_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E49_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E50_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E51_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E52_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E53_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E54_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E55_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E56_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E57_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E58_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_E59_internal_data_},
  }}, {{
    "\123\0\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0\4\0\0\4\0\0\0\4\4\0\0\0\0\4\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0\0\0\0\4\0\0\0\4\4\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\0\0\4\0\0\4\0\0\0\0\0\0\0\4\4\0\0\0\0\0\0\5\5\0\5\0\5\0\0\0\0\5\0\5\0\0\0\0\0\0\0\5\0\0\0\0\5\5\0\0\0\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\5\0\0\5\0\0\0\0\0\0\0\0\5\0\5\0\0\0\0\0\0\0\0\0\5\0\0\0\0\0\5\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93"
    "f_12"
    "f_16"
    "f_19"
    "f_23"
    "f_24"
    "f_29"
    "f_32"
    "f_46"
    "f_53"
    "f_57"
    "f_58"
    "f_61"
    "f_74"
    "f_84"
    "f_87"
    "f_95"
    "f_96"
    "f_103"
    "f_104"
    "f_106"
    "f_108"
    "f_113"
    "f_115"
    "f_123"
    "f_128"
    "f_129"
    "f_136"
    "f_150"
    "f_153"
    "f_162"
    "f_164"
    "f_174"
    "f_180"
    "f_181"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_49_.Clear();
  _impl_.f_76_.Clear();
  _impl_.f_82_.Clear();
  _impl_.f_114_.Clear();
  _impl_.f_174_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_12_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_16_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.f_19_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.f_23_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.f_24_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.f_29_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.f_32_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.f_40_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _impl_.f_46_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000200u) {
      _impl_.f_53_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000400u) {
      _impl_.f_57_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000800u) {
      _impl_.f_58_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00001000u) {
      _impl_.f_60_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00002000u) {
      _impl_.f_61_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00004000u) {
      _impl_.f_74_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00008000u) {
      _impl_.f_84_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _impl_.f_87_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00020000u) {
      _impl_.f_95_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00040000u) {
      _impl_.f_96_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00080000u) {
      _impl_.f_103_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00100000u) {
      _impl_.f_104_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00200000u) {
      _impl_.f_106_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00400000u) {
      _impl_.f_108_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00800000u) {
      _impl_.f_113_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _impl_.f_115_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x02000000u) {
      _impl_.f_120_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x04000000u) {
      _impl_.f_123_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x08000000u) {
      _impl_.f_128_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x10000000u) {
      _impl_.f_129_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x20000000u) {
      _impl_.f_136_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x40000000u) {
      _impl_.f_150_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x80000000u) {
      _impl_.f_153_.ClearNonDefaultToEmpty();
    }
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_157_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_162_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.f_164_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.f_180_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.f_181_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.f_289_ != nullptr);
      _impl_.f_289_->Clear();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&_impl_.f_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_3_) -
        reinterpret_cast<char*>(&_impl_.f_1_)) + sizeof(_impl_.f_3_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.f_2_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_9_) -
        reinterpret_cast<char*>(&_impl_.f_2_)) + sizeof(_impl_.f_9_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.f_11_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_21_) -
        reinterpret_cast<char*>(&_impl_.f_11_)) + sizeof(_impl_.f_21_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.f_22_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_34_) -
        reinterpret_cast<char*>(&_impl_.f_22_)) + sizeof(_impl_.f_34_));
  }
  cached_has_bits = _impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.f_33_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_42_) -
        reinterpret_cast<char*>(&_impl_.f_33_)) + sizeof(_impl_.f_42_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.f_43_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_47_) -
        reinterpret_cast<char*>(&_impl_.f_43_)) + sizeof(_impl_.f_47_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.f_62_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_63_) -
        reinterpret_cast<char*>(&_impl_.f_62_)) + sizeof(_impl_.f_63_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.f_64_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_71_) -
        reinterpret_cast<char*>(&_impl_.f_64_)) + sizeof(_impl_.f_71_));
  }
  cached_has_bits = _impl_._has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.f_72_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_83_) -
        reinterpret_cast<char*>(&_impl_.f_72_)) + sizeof(_impl_.f_83_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.f_81_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_91_) -
        reinterpret_cast<char*>(&_impl_.f_81_)) + sizeof(_impl_.f_91_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.f_93_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_105_) -
        reinterpret_cast<char*>(&_impl_.f_93_)) + sizeof(_impl_.f_105_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.f_107_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_119_) -
        reinterpret_cast<char*>(&_impl_.f_107_)) + sizeof(_impl_.f_119_));
  }
  cached_has_bits = _impl_._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.f_118_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_130_) -
        reinterpret_cast<char*>(&_impl_.f_118_)) + sizeof(_impl_.f_130_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.f_132_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_139_) -
        reinterpret_cast<char*>(&_impl_.f_132_)) + sizeof(_impl_.f_139_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.f_140_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_149_) -
        reinterpret_cast<char*>(&_impl_.f_140_)) + sizeof(_impl_.f_149_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.f_143_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_156_) -
        reinterpret_cast<char*>(&_impl_.f_143_)) + sizeof(_impl_.f_156_));
  }
  cached_has_bits = _impl_._has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.f_158_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_167_) -
        reinterpret_cast<char*>(&_impl_.f_158_)) + sizeof(_impl_.f_167_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.f_169_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_177_) -
        reinterpret_cast<char*>(&_impl_.f_169_)) + sizeof(_impl_.f_177_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.f_178_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_188_) -
        reinterpret_cast<char*>(&_impl_.f_178_)) + sizeof(_impl_.f_188_));
  }
  if (cached_has_bits & 0x0f000000u) {
    ::memset(&_impl_.f_187_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_190_) -
        reinterpret_cast<char*>(&_impl_.f_187_)) + sizeof(_impl_.f_190_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool f_0 = 2;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_f_0(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional uint64 f_1 = 3;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_f_1(), target);
  }

  // optional int32 f_2 = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_f_2(), target);
  }

  // optional double f_3 = 6;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_f_3(), target);
  }

  // optional fixed64 f_4 = 7;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        7, this->_internal_f_4(), target);
  }

  // optional int32 f_5 = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_f_5(), target);
  }

  // optional int64 f_6 = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<10>(
            stream, this->_internal_f_6(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E35 f_7 = 11;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        11, this->_internal_f_7(), target);
  }

  // optional fixed64 f_8 = 14;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        14, this->_internal_f_8(), target);
  }

  // optional uint64 f_9 = 15;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        15, this->_internal_f_9(), target);
  }

  // optional int32 f_10 = 16;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        16, this->_internal_f_10(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E36 f_11 = 18;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        18, this->_internal_f_11(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_12 = 20;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_12();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_12");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional float f_13 = 21;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        21, this->_internal_f_13(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E37 f_14 = 22;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        22, this->_internal_f_14(), target);
  }

  // optional int64 f_15 = 25;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        25, this->_internal_f_15(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_16 = 26;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_16();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_16");
    target = stream->WriteStringMaybeAliased(26, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E38 f_17 = 28;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        28, this->_internal_f_17(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E39 f_18 = 29;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        29, this->_internal_f_18(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_19 = 31;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_f_19();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_19");
    target = stream->WriteStringMaybeAliased(31, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional int32 f_20 = 32;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        32, this->_internal_f_20(), target);
  }

  // optional uint64 f_21 = 33;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        33, this->_internal_f_21(), target);
  }

  // optional int32 f_22 = 38;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        38, this->_internal_f_22(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_23 = 39;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_f_23();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_23");
    target = stream->WriteStringMaybeAliased(39, _s, target);
  }

  // optional string f_24 = 40;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_f_24();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_24");
    target = stream->WriteStringMaybeAliased(40, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E40 f_25 = 42;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        42, this->_internal_f_25(), target);
  }

  // optional float f_26 = 43;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        43, this->_internal_f_26(), target);
  }

  // optional float f_27 = 45;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        45, this->_internal_f_27(), target);
  }

  // optional float f_28 = 47;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        47, this->_internal_f_28(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_29 = 49;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_f_29();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_29");
    target = stream->WriteStringMaybeAliased(49, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E41 f_30 = 50;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        50, this->_internal_f_30(), target);
  }

  // optional int64 f_31 = 52;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        52, this->_internal_f_31(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_32 = 53;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_f_32();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_32");
    target = stream->WriteStringMaybeAliased(53, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional float f_33 = 54;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        54, this->_internal_f_33(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional uint64 f_34 = 55;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        55, this->_internal_f_34(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional float f_35 = 56;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        56, this->_internal_f_35(), target);
  }

  // optional float f_36 = 57;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        57, this->_internal_f_36(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E42 f_37 = 59;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        59, this->_internal_f_37(), target);
  }

  // optional int32 f_38 = 62;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        62, this->_internal_f_38(), target);
  }

  // optional int64 f_39 = 63;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        63, this->_internal_f_39(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_40 = 65;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_f_40();
    target = stream->WriteBytesMaybeAliased(65, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional uint32 f_41 = 67;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        67, this->_internal_f_41(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E43 f_42 = 68;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        68, this->_internal_f_42(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E44 f_43 = 69;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        69, this->_internal_f_43(), target);
  }

  // optional sfixed32 f_44 = 70;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSFixed32ToArray(
        70, this->_internal_f_44(), target);
  }

  // optional int32 f_45 = 71;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        71, this->_internal_f_45(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_46 = 73;
  if (cached_has_bits & 0x00000100u) {
    const std::string& _s = this->_internal_f_46();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_46");
    target = stream->WriteStringMaybeAliased(73, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool f_47 = 75;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        75, this->_internal_f_47(), target);
  }

  // optional fixed32 f_48 = 76;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        76, this->_internal_f_48(), target);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E45 f_49 = 77 [packed = true];
  {
    std::size_t byte_size = _impl_._f_49_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(77, _internal_f_49(),
                                       byte_size, target);
    }
  }

  // optional int64 f_50 = 78;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        78, this->_internal_f_50(), target);
  }

  // optional double f_51 = 79;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        79, this->_internal_f_51(), target);
  }

  // optional int64 f_52 = 82;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        82, this->_internal_f_52(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_53 = 83;
  if (cached_has_bits & 0x00000200u) {
    const std::string& _s = this->_internal_f_53();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_53");
    target = stream->WriteStringMaybeAliased(83, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional int32 f_54 = 84;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        84, this->_internal_f_54(), target);
  }

  // optional int64 f_55 = 85;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        85, this->_internal_f_55(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E46 f_56 = 88;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        88, this->_internal_f_56(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_57 = 89;
  if (cached_has_bits & 0x00000400u) {
    const std::string& _s = this->_internal_f_57();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_57");
    target = stream->WriteStringMaybeAliased(89, _s, target);
  }

  // optional string f_58 = 91;
  if (cached_has_bits & 0x00000800u) {
    const std::string& _s = this->_internal_f_58();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_58");
    target = stream->WriteStringMaybeAliased(91, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional uint64 f_59 = 93;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        93, this->_internal_f_59(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_60 = 95;
  if (cached_has_bits & 0x00001000u) {
    const std::string& _s = this->_internal_f_60();
    target = stream->WriteBytesMaybeAliased(95, _s, target);
  }

  // optional string f_61 = 96;
  if (cached_has_bits & 0x00002000u) {
    const std::string& _s = this->_internal_f_61();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_61");
    target = stream->WriteStringMaybeAliased(96, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool f_62 = 97;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        97, this->_internal_f_62(), target);
  }

  // optional int64 f_63 = 99;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        99, this->_internal_f_63(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E47 f_64 = 100;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        100, this->_internal_f_64(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E48 f_65 = 102;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        102, this->_internal_f_65(), target);
  }

  // optional fixed32 f_66 = 104;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        104, this->_internal_f_66(), target);
  }

  // optional int64 f_67 = 105;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        105, this->_internal_f_67(), target);
  }

  // optional uint64 f_68 = 107;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        107, this->_internal_f_68(), target);
  }

  // optional fixed32 f_69 = 110;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        110, this->_internal_f_69(), target);
  }

  // optional int64 f_70 = 111;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        111, this->_internal_f_70(), target);
  }

  // optional int32 f_71 = 112;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        112, this->_internal_f_71(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional fixed32 f_72 = 113;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        113, this->_internal_f_72(), target);
  }

  // optional float f_73 = 114;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        114, this->_internal_f_73(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_74 = 115;
  if (cached_has_bits & 0x00004000u) {
    const std::string& _s = this->_internal_f_74();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_74");
    target = stream->WriteStringMaybeAliased(115, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional int64 f_75 = 116;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        116, this->_internal_f_75(), target);
  }

  // repeated int32 f_76 = 117 [packed = true];
  {
    int byte_size = _impl_._f_76_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          117, _internal_f_76(), byte_size, target);
    }
  }

  // optional int64 f_77 = 119;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        119, this->_internal_f_77(), target);
  }

  // optional int64 f_78 = 120;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        120, this->_internal_f_78(), target);
  }

  // optional int64 f_79 = 121;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        121, this->_internal_f_79(), target);
  }

  // optional int32 f_80 = 122;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        122, this->_internal_f_80(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E49 f_81 = 123;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        123, this->_internal_f_81(), target);
  }

  // repeated float f_82 = 125 [packed = true];
  if (this->_internal_f_82_size() > 0) {
    target = stream->WriteFixedPacked(125, _internal_f_82(), target);
  }

  // optional int64 f_83 = 127;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        127, this->_internal_f_83(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_84 = 128;
  if (cached_has_bits & 0x00008000u) {
    const std::string& _s = this->_internal_f_84();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_84");
    target = stream->WriteStringMaybeAliased(128, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional uint64 f_85 = 130;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        130, this->_internal_f_85(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E50 f_86 = 132;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        132, this->_internal_f_86(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_87 = 134;
  if (cached_has_bits & 0x00010000u) {
    const std::string& _s = this->_internal_f_87();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_87");
    target = stream->WriteStringMaybeAliased(134, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional int32 f_88 = 136;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        136, this->_internal_f_88(), target);
  }

  // optional int64 f_89 = 137;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        137, this->_internal_f_89(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E51 f_90 = 140;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        140, this->_internal_f_90(), target);
  }

  // optional int32 f_91 = 142;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        142, this->_internal_f_91(), target);
  }

  // optional int64 f_92 = 143;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        143, this->_internal_f_92(), target);
  }

  // optional int32 f_93 = 144;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        144, this->_internal_f_93(), target);
  }

  // optional float f_94 = 145;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        145, this->_internal_f_94(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_95 = 146;
  if (cached_has_bits & 0x00020000u) {
    const std::string& _s = this->_internal_f_95();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_95");
    target = stream->WriteStringMaybeAliased(146, _s, target);
  }

  // optional string f_96 = 147;
  if (cached_has_bits & 0x00040000u) {
    const std::string& _s = this->_internal_f_96();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_96");
    target = stream->WriteStringMaybeAliased(147, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional int64 f_97 = 148;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        148, this->_internal_f_97(), target);
  }

  // optional int32 f_98 = 150;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        150, this->_internal_f_98(), target);
  }

  // optional int32 f_99 = 152;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        152, this->_internal_f_99(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional bool f_100 = 153;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        153, this->_internal_f_100(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E52 f_101 = 154;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        154, this->_internal_f_101(), target);
  }

  // optional float f_102 = 156;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        156, this->_internal_f_102(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_103 = 157;
  if (cached_has_bits & 0x00080000u) {
    const std::string& _s = this->_internal_f_103();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_103");
    target = stream->WriteStringMaybeAliased(157, _s, target);
  }

  // optional string f_104 = 158;
  if (cached_has_bits & 0x00100000u) {
    const std::string& _s = this->_internal_f_104();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_104");
    target = stream->WriteStringMaybeAliased(158, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional int32 f_105 = 159;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        159, this->_internal_f_105(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_106 = 161;
  if (cached_has_bits & 0x00200000u) {
    const std::string& _s = this->_internal_f_106();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_106");
    target = stream->WriteStringMaybeAliased(161, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional double f_107 = 164;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        164, this->_internal_f_107(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_108 = 166;
  if (cached_has_bits & 0x00400000u) {
    const std::string& _s = this->_internal_f_108();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_108");
    target = stream->WriteStringMaybeAliased(166, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional uint64 f_109 = 167;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        167, this->_internal_f_109(), target);
  }

  // optional uint64 f_110 = 169;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        169, this->_internal_f_110(), target);
  }

  // optional fixed32 f_111 = 171;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        171, this->_internal_f_111(), target);
  }

  // optional int64 f_112 = 172;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        172, this->_internal_f_112(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_113 = 174;
  if (cached_has_bits & 0x00800000u) {
    const std::string& _s = this->_internal_f_113();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_113");
    target = stream->WriteStringMaybeAliased(174, _s, target);
  }

  // repeated bytes f_114 = 175;
  for (int i = 0, n = this->_internal_f_114_size(); i < n; ++i) {
    const auto& s = this->_internal_f_114().Get(i);
    target = stream->WriteBytes(175, s, target);
  }

  // optional string f_115 = 178;
  if (cached_has_bits & 0x01000000u) {
    const std::string& _s = this->_internal_f_115();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_115");
    target = stream->WriteStringMaybeAliased(178, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E53 f_116 = 179;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        179, this->_internal_f_116(), target);
  }

  // optional int64 f_117 = 180;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        180, this->_internal_f_117(), target);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional int32 f_118 = 182;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        182, this->_internal_f_118(), target);
  }

  cached_has_bits = _impl_._has_bits_[3];
  // optional int64 f_119 = 183;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        183, this->_internal_f_119(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_120 = 186;
  if (cached_has_bits & 0x02000000u) {
    const std::string& _s = this->_internal_f_120();
    target = stream->WriteBytesMaybeAliased(186, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional int64 f_121 = 189;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        189, this->_internal_f_121(), target);
  }

  // optional int64 f_122 = 190;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        190, this->_internal_f_122(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_123 = 191;
  if (cached_has_bits & 0x04000000u) {
    const std::string& _s = this->_internal_f_123();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_123");
    target = stream->WriteStringMaybeAliased(191, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional float f_124 = 193;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        193, this->_internal_f_124(), target);
  }

  // optional sint32 f_125 = 194;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(
        194, this->_internal_f_125(), target);
  }

  // optional int32 f_126 = 195;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        195, this->_internal_f_126(), target);
  }

  // optional int64 f_127 = 196;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        196, this->_internal_f_127(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_128 = 197;
  if (cached_has_bits & 0x08000000u) {
    const std::string& _s = this->_internal_f_128();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_128");
    target = stream->WriteStringMaybeAliased(197, _s, target);
  }

  // optional string f_129 = 198;
  if (cached_has_bits & 0x10000000u) {
    const std::string& _s = this->_internal_f_129();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_129");
    target = stream->WriteStringMaybeAliased(198, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional int64 f_130 = 199;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        199, this->_internal_f_130(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E54 f_131 = 200;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        200, this->_internal_f_131(), target);
  }

  // optional int64 f_132 = 202;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        202, this->_internal_f_132(), target);
  }

  // optional int64 f_133 = 203;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        203, this->_internal_f_133(), target);
  }

  // optional float f_134 = 205;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        205, this->_internal_f_134(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E55 f_135 = 208;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        208, this->_internal_f_135(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_136 = 210;
  if (cached_has_bits & 0x20000000u) {
    const std::string& _s = this->_internal_f_136();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_136");
    target = stream->WriteStringMaybeAliased(210, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional int64 f_137 = 211;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        211, this->_internal_f_137(), target);
  }

  // optional int32 f_138 = 212;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        212, this->_internal_f_138(), target);
  }

  // optional int64 f_139 = 213;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        213, this->_internal_f_139(), target);
  }

  // optional uint64 f_140 = 214;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        214, this->_internal_f_140(), target);
  }

  // optional int64 f_141 = 215;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        215, this->_internal_f_141(), target);
  }

  // optional int64 f_142 = 218;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        218, this->_internal_f_142(), target);
  }

  // optional bool f_143 = 219;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        219, this->_internal_f_143(), target);
  }

  // optional int32 f_144 = 221;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        221, this->_internal_f_144(), target);
  }

  // optional float f_145 = 225;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        225, this->_internal_f_145(), target);
  }

  // optional bool f_146 = 226;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        226, this->_internal_f_146(), target);
  }

  // optional double f_147 = 227;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        227, this->_internal_f_147(), target);
  }

  // optional int64 f_148 = 229;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        229, this->_internal_f_148(), target);
  }

  // optional int32 f_149 = 230;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        230, this->_internal_f_149(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_150 = 231;
  if (cached_has_bits & 0x40000000u) {
    const std::string& _s = this->_internal_f_150();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_150");
    target = stream->WriteStringMaybeAliased(231, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional int32 f_151 = 234;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        234, this->_internal_f_151(), target);
  }

  // optional bool f_152 = 235;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        235, this->_internal_f_152(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_153 = 236;
  if (cached_has_bits & 0x80000000u) {
    const std::string& _s = this->_internal_f_153();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_153");
    target = stream->WriteStringMaybeAliased(236, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional fixed32 f_154 = 237;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        237, this->_internal_f_154(), target);
  }

  // optional double f_155 = 238;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        238, this->_internal_f_155(), target);
  }

  // optional int64 f_156 = 239;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        239, this->_internal_f_156(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bytes f_157 = 240;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_157();
    target = stream->WriteBytesMaybeAliased(240, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E56 f_158 = 241;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        241, this->_internal_f_158(), target);
  }

  // optional int64 f_159 = 244;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        244, this->_internal_f_159(), target);
  }

  // optional int32 f_160 = 246;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        246, this->_internal_f_160(), target);
  }

  cached_has_bits = _impl_._has_bits_[4];
  // optional bool f_161 = 247;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        247, this->_internal_f_161(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional string f_162 = 248;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_162();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_162");
    target = stream->WriteStringMaybeAliased(248, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional uint32 f_163 = 251;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        251, this->_internal_f_163(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional string f_164 = 252;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_f_164();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_164");
    target = stream->WriteStringMaybeAliased(252, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional int64 f_165 = 254;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        254, this->_internal_f_165(), target);
  }

  // optional int64 f_166 = 255;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        255, this->_internal_f_166(), target);
  }

  // optional int64 f_167 = 257;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        257, this->_internal_f_167(), target);
  }

  // optional float f_168 = 259;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        259, this->_internal_f_168(), target);
  }

  // optional float f_169 = 260;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        260, this->_internal_f_169(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E57 f_170 = 261;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        261, this->_internal_f_170(), target);
  }

  // optional int64 f_171 = 262;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        262, this->_internal_f_171(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E58 f_172 = 263;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        263, this->_internal_f_172(), target);
  }

  // optional int64 f_173 = 264;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        264, this->_internal_f_173(), target);
  }

  // repeated string f_174 = 265;
  for (int i = 0, n = this->_internal_f_174_size(); i < n; ++i) {
    const auto& s = this->_internal_f_174().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_174");
    target = stream->WriteString(265, s, target);
  }

  // optional uint32 f_175 = 266;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        266, this->_internal_f_175(), target);
  }

  // optional int64 f_176 = 268;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        268, this->_internal_f_176(), target);
  }

  // optional int32 f_177 = 269;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        269, this->_internal_f_177(), target);
  }

  // optional int32 f_178 = 270;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        270, this->_internal_f_178(), target);
  }

  // optional float f_179 = 271;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        271, this->_internal_f_179(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional string f_180 = 272;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_f_180();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_180");
    target = stream->WriteStringMaybeAliased(272, _s, target);
  }

  // optional string f_181 = 273;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_f_181();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.f_181");
    target = stream->WriteStringMaybeAliased(273, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[5];
  // optional int32 f_182 = 275;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        275, this->_internal_f_182(), target);
  }

  // optional int64 f_183 = 276;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        276, this->_internal_f_183(), target);
  }

  // optional int32 f_184 = 277;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        277, this->_internal_f_184(), target);
  }

  // optional int64 f_185 = 279;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        279, this->_internal_f_185(), target);
  }

  // optional bool f_186 = 281;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        281, this->_internal_f_186(), target);
  }

  // optional int32 f_187 = 282;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        282, this->_internal_f_187(), target);
  }

  // optional int64 f_188 = 283;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        283, this->_internal_f_188(), target);
  }

  // optional fixed32 f_189 = 285;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        285, this->_internal_f_189(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E59 f_190 = 286;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        286, this->_internal_f_190(), target);
  }

  // optional int64 f_191 = 289;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        289, this->_internal_f_191(), target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94 f_289 = 290;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        290, *_impl_.f_289_, _impl_.f_289_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E45 f_49 = 77 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_f_49_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_f_49().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 2;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._f_49_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated int32 f_76 = 117 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_f_76())
    ;
    _impl_._f_76_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float f_82 = 125 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_f_82_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated bytes f_114 = 175;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_f_114().size());
  for (int i = 0, n = _internal_f_114().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_f_114().Get(i));
  }
  // repeated string f_174 = 265;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_f_174().size());
  for (int i = 0, n = _internal_f_174().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_f_174().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string f_12 = 20;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_12());
    }

    // optional string f_16 = 26;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_16());
    }

    // optional string f_19 = 31;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_19());
    }

    // optional string f_23 = 39;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_23());
    }

    // optional string f_24 = 40;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_24());
    }

    // optional string f_29 = 49;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_29());
    }

    // optional string f_32 = 53;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_32());
    }

    // optional bytes f_40 = 65;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_40());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional string f_46 = 73;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_46());
    }

    // optional string f_53 = 83;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_53());
    }

    // optional string f_57 = 89;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_57());
    }

    // optional string f_58 = 91;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_58());
    }

    // optional bytes f_60 = 95;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_60());
    }

    // optional string f_61 = 96;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_61());
    }

    // optional string f_74 = 115;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_74());
    }

    // optional string f_84 = 128;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_84());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional string f_87 = 134;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_87());
    }

    // optional string f_95 = 146;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_95());
    }

    // optional string f_96 = 147;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_96());
    }

    // optional string f_103 = 157;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_103());
    }

    // optional string f_104 = 158;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_104());
    }

    // optional string f_106 = 161;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_106());
    }

    // optional string f_108 = 166;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_108());
    }

    // optional string f_113 = 174;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_113());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional string f_115 = 178;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_115());
    }

    // optional bytes f_120 = 186;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_120());
    }

    // optional string f_123 = 191;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_123());
    }

    // optional string f_128 = 197;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_128());
    }

    // optional string f_129 = 198;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_129());
    }

    // optional string f_136 = 210;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_136());
    }

    // optional string f_150 = 231;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_150());
    }

    // optional string f_153 = 236;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_153());
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes f_157 = 240;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_157());
    }

    // optional string f_162 = 248;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_162());
    }

    // optional string f_164 = 252;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_164());
    }

    // optional string f_180 = 272;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_180());
    }

    // optional string f_181 = 273;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_181());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.M94 f_289 = 290;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_289_);
    }

    // optional uint64 f_1 = 3;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_1());
    }

    // optional double f_3 = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += 9;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 f_2 = 4;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_2());
    }

    // optional int32 f_5 = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_5());
    }

    // optional fixed64 f_4 = 7;
    if (cached_has_bits & 0x00000400u) {
      total_size += 9;
    }

    // optional int64 f_6 = 10;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_6());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E35 f_7 = 11;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_7());
    }

    // optional int32 f_10 = 16;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_10());
    }

    // optional fixed64 f_8 = 14;
    if (cached_has_bits & 0x00004000u) {
      total_size += 9;
    }

    // optional uint64 f_9 = 15;
    if (cached_has_bits & 0x00008000u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_9());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E36 f_11 = 18;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_11());
    }

    // optional float f_13 = 21;
    if (cached_has_bits & 0x00020000u) {
      total_size += 6;
    }

    // optional int64 f_15 = 25;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_15());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E37 f_14 = 22;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_14());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E38 f_17 = 28;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_17());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E39 f_18 = 29;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_18());
    }

    // optional int32 f_20 = 32;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_20());
    }

    // optional uint64 f_21 = 33;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_f_21());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional int32 f_22 = 38;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_22());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E40 f_25 = 42;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_25());
    }

    // optional float f_26 = 43;
    if (cached_has_bits & 0x04000000u) {
      total_size += 6;
    }

    // optional float f_27 = 45;
    if (cached_has_bits & 0x08000000u) {
      total_size += 6;
    }

    // optional float f_28 = 47;
    if (cached_has_bits & 0x10000000u) {
      total_size += 6;
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E41 f_30 = 50;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_30());
    }

    // optional int64 f_31 = 52;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_31());
    }

    // optional uint64 f_34 = 55;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_f_34());
    }

  }
  cached_has_bits = _impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    // optional float f_33 = 54;
    if (cached_has_bits & 0x00000001u) {
      total_size += 6;
    }

    // optional float f_35 = 56;
    if (cached_has_bits & 0x00000002u) {
      total_size += 6;
    }

    // optional float f_36 = 57;
    if (cached_has_bits & 0x00000004u) {
      total_size += 6;
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E42 f_37 = 59;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_37());
    }

    // optional int64 f_39 = 63;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_39());
    }

    // optional int32 f_38 = 62;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_38());
    }

    // optional uint32 f_41 = 67;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_f_41());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E43 f_42 = 68;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_42());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E44 f_43 = 69;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_43());
    }

    // optional sfixed32 f_44 = 70;
    if (cached_has_bits & 0x00000200u) {
      total_size += 6;
    }

    // optional int32 f_45 = 71;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_45());
    }

    // optional int64 f_50 = 78;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_50());
    }

    // optional double f_51 = 79;
    if (cached_has_bits & 0x00001000u) {
      total_size += 10;
    }

    // optional fixed32 f_48 = 76;
    if (cached_has_bits & 0x00002000u) {
      total_size += 6;
    }

    // optional bool f_0 = 2;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2;
    }

    // optional bool f_47 = 75;
    if (cached_has_bits & 0x00008000u) {
      total_size += 3;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool f_62 = 97;
    if (cached_has_bits & 0x00010000u) {
      total_size += 3;
    }

    // optional bool f_100 = 153;
    if (cached_has_bits & 0x00020000u) {
      total_size += 3;
    }

    // optional int64 f_52 = 82;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_52());
    }

    // optional int64 f_55 = 85;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_55());
    }

    // optional int32 f_54 = 84;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_54());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E46 f_56 = 88;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_56());
    }

    // optional uint64 f_59 = 93;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_f_59());
    }

    // optional int64 f_63 = 99;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_63());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E47 f_64 = 100;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_64());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E48 f_65 = 102;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_65());
    }

    // optional int64 f_67 = 105;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_67());
    }

    // optional uint64 f_68 = 107;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_f_68());
    }

    // optional fixed32 f_66 = 104;
    if (cached_has_bits & 0x10000000u) {
      total_size += 6;
    }

    // optional fixed32 f_69 = 110;
    if (cached_has_bits & 0x20000000u) {
      total_size += 6;
    }

    // optional int64 f_70 = 111;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_70());
    }

    // optional int32 f_71 = 112;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_71());
    }

  }
  cached_has_bits = _impl_._has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    // optional fixed32 f_72 = 113;
    if (cached_has_bits & 0x00000001u) {
      total_size += 6;
    }

    // optional int64 f_75 = 116;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_75());
    }

    // optional float f_73 = 114;
    if (cached_has_bits & 0x00000004u) {
      total_size += 6;
    }

    // optional int32 f_80 = 122;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_80());
    }

    // optional int64 f_77 = 119;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_77());
    }

    // optional int64 f_78 = 120;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_78());
    }

    // optional int64 f_79 = 121;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_79());
    }

    // optional int64 f_83 = 127;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_83());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E49 f_81 = 123;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_81());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E50 f_86 = 132;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_86());
    }

    // optional uint64 f_85 = 130;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_f_85());
    }

    // optional int64 f_89 = 137;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_89());
    }

    // optional int32 f_88 = 136;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_88());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E51 f_90 = 140;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_90());
    }

    // optional int64 f_92 = 143;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_92());
    }

    // optional int32 f_91 = 142;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_91());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional int32 f_93 = 144;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_93());
    }

    // optional float f_94 = 145;
    if (cached_has_bits & 0x00020000u) {
      total_size += 6;
    }

    // optional int32 f_98 = 150;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_98());
    }

    // optional int64 f_97 = 148;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_97());
    }

    // optional int32 f_99 = 152;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_99());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E52 f_101 = 154;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_101());
    }

    // optional float f_102 = 156;
    if (cached_has_bits & 0x00400000u) {
      total_size += 6;
    }

    // optional int32 f_105 = 159;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_105());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional double f_107 = 164;
    if (cached_has_bits & 0x01000000u) {
      total_size += 10;
    }

    // optional uint64 f_109 = 167;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_f_109());
    }

    // optional uint64 f_110 = 169;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_f_110());
    }

    // optional int64 f_112 = 172;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_112());
    }

    // optional fixed32 f_111 = 171;
    if (cached_has_bits & 0x10000000u) {
      total_size += 6;
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E53 f_116 = 179;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_116());
    }

    // optional int64 f_117 = 180;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_117());
    }

    // optional int64 f_119 = 183;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_119());
    }

  }
  cached_has_bits = _impl_._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 f_118 = 182;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_118());
    }

    // optional float f_124 = 193;
    if (cached_has_bits & 0x00000002u) {
      total_size += 6;
    }

    // optional int64 f_121 = 189;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_121());
    }

    // optional int64 f_122 = 190;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_122());
    }

    // optional sint32 f_125 = 194;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::SInt32Size(
                                      this->_internal_f_125());
    }

    // optional int32 f_126 = 195;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_126());
    }

    // optional int64 f_127 = 196;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_127());
    }

    // optional int64 f_130 = 199;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_130());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int64 f_132 = 202;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_132());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E54 f_131 = 200;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_131());
    }

    // optional float f_134 = 205;
    if (cached_has_bits & 0x00000400u) {
      total_size += 6;
    }

    // optional int64 f_133 = 203;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_133());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E55 f_135 = 208;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_135());
    }

    // optional int32 f_138 = 212;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_138());
    }

    // optional int64 f_137 = 211;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_137());
    }

    // optional int64 f_139 = 213;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_139());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional uint64 f_140 = 214;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_f_140());
    }

    // optional int64 f_141 = 215;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_141());
    }

    // optional int64 f_142 = 218;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_142());
    }

    // optional int32 f_144 = 221;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_144());
    }

    // optional float f_145 = 225;
    if (cached_has_bits & 0x00100000u) {
      total_size += 6;
    }

    // optional double f_147 = 227;
    if (cached_has_bits & 0x00200000u) {
      total_size += 10;
    }

    // optional int64 f_148 = 229;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_148());
    }

    // optional int32 f_149 = 230;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_149());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool f_143 = 219;
    if (cached_has_bits & 0x01000000u) {
      total_size += 3;
    }

    // optional bool f_146 = 226;
    if (cached_has_bits & 0x02000000u) {
      total_size += 3;
    }

    // optional bool f_152 = 235;
    if (cached_has_bits & 0x04000000u) {
      total_size += 3;
    }

    // optional bool f_161 = 247;
    if (cached_has_bits & 0x08000000u) {
      total_size += 3;
    }

    // optional int32 f_151 = 234;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_151());
    }

    // optional fixed32 f_154 = 237;
    if (cached_has_bits & 0x20000000u) {
      total_size += 6;
    }

    // optional double f_155 = 238;
    if (cached_has_bits & 0x40000000u) {
      total_size += 10;
    }

    // optional int64 f_156 = 239;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_156());
    }

  }
  cached_has_bits = _impl_._has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E56 f_158 = 241;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_158());
    }

    // optional int32 f_160 = 246;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_160());
    }

    // optional int64 f_159 = 244;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_159());
    }

    // optional int64 f_165 = 254;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_165());
    }

    // optional int64 f_166 = 255;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_166());
    }

    // optional uint32 f_163 = 251;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_f_163());
    }

    // optional float f_168 = 259;
    if (cached_has_bits & 0x00000040u) {
      total_size += 6;
    }

    // optional int64 f_167 = 257;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_167());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional float f_169 = 260;
    if (cached_has_bits & 0x00000100u) {
      total_size += 6;
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E57 f_170 = 261;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_170());
    }

    // optional int64 f_171 = 262;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_171());
    }

    // optional int64 f_173 = 264;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_173());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E58 f_172 = 263;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_172());
    }

    // optional uint32 f_175 = 266;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_f_175());
    }

    // optional int64 f_176 = 268;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_176());
    }

    // optional int32 f_177 = 269;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_177());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional int32 f_178 = 270;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_178());
    }

    // optional float f_179 = 271;
    if (cached_has_bits & 0x00020000u) {
      total_size += 6;
    }

    // optional int32 f_182 = 275;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_182());
    }

    // optional int64 f_183 = 276;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_183());
    }

    // optional int64 f_185 = 279;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_185());
    }

    // optional int32 f_184 = 277;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_184());
    }

    // optional bool f_186 = 281;
    if (cached_has_bits & 0x00400000u) {
      total_size += 3;
    }

    // optional int64 f_188 = 283;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_188());
    }

  }
  if (cached_has_bits & 0x0f000000u) {
    // optional int32 f_187 = 282;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_187());
    }

    // optional fixed32 f_189 = 285;
    if (cached_has_bits & 0x02000000u) {
      total_size += 6;
    }

    // optional int64 f_191 = 289;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_191());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93.E59 f_190 = 286;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_190());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_49()->MergeFrom(from._internal_f_49());
  _this->_internal_mutable_f_76()->MergeFrom(from._internal_f_76());
  _this->_internal_mutable_f_82()->MergeFrom(from._internal_f_82());
  _this->_internal_mutable_f_114()->MergeFrom(from._internal_f_114());
  _this->_internal_mutable_f_174()->MergeFrom(from._internal_f_174());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_12(from._internal_f_12());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_16(from._internal_f_16());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_f_19(from._internal_f_19());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_f_23(from._internal_f_23());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_f_24(from._internal_f_24());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_f_29(from._internal_f_29());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_f_32(from._internal_f_32());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_f_40(from._internal_f_40());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_set_f_46(from._internal_f_46());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_set_f_53(from._internal_f_53());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_set_f_57(from._internal_f_57());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_set_f_58(from._internal_f_58());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_set_f_60(from._internal_f_60());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_set_f_61(from._internal_f_61());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_set_f_74(from._internal_f_74());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_set_f_84(from._internal_f_84());
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_set_f_87(from._internal_f_87());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_set_f_95(from._internal_f_95());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_set_f_96(from._internal_f_96());
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_internal_set_f_103(from._internal_f_103());
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_internal_set_f_104(from._internal_f_104());
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_internal_set_f_106(from._internal_f_106());
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_internal_set_f_108(from._internal_f_108());
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_internal_set_f_113(from._internal_f_113());
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_internal_set_f_115(from._internal_f_115());
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_internal_set_f_120(from._internal_f_120());
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_internal_set_f_123(from._internal_f_123());
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_internal_set_f_128(from._internal_f_128());
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_internal_set_f_129(from._internal_f_129());
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_internal_set_f_136(from._internal_f_136());
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_internal_set_f_150(from._internal_f_150());
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_internal_set_f_153(from._internal_f_153());
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_157(from._internal_f_157());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_162(from._internal_f_162());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_f_164(from._internal_f_164());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_f_180(from._internal_f_180());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_f_181(from._internal_f_181());
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.f_289_ != nullptr);
      if (_this->_impl_.f_289_ == nullptr) {
        _this->_impl_.f_289_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93_M94>(arena, *from._impl_.f_289_);
      } else {
        _this->_impl_.f_289_->MergeFrom(*from._impl_.f_289_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_5_ = from._impl_.f_5_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_6_ = from._impl_.f_6_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.f_7_ = from._impl_.f_7_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.f_10_ = from._impl_.f_10_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.f_8_ = from._impl_.f_8_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.f_9_ = from._impl_.f_9_;
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.f_11_ = from._impl_.f_11_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.f_13_ = from._impl_.f_13_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.f_15_ = from._impl_.f_15_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.f_14_ = from._impl_.f_14_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.f_17_ = from._impl_.f_17_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.f_18_ = from._impl_.f_18_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.f_20_ = from._impl_.f_20_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.f_21_ = from._impl_.f_21_;
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.f_22_ = from._impl_.f_22_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.f_25_ = from._impl_.f_25_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.f_26_ = from._impl_.f_26_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.f_27_ = from._impl_.f_27_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.f_28_ = from._impl_.f_28_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.f_30_ = from._impl_.f_30_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.f_31_ = from._impl_.f_31_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.f_34_ = from._impl_.f_34_;
    }
  }
  cached_has_bits = from._impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.f_33_ = from._impl_.f_33_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_35_ = from._impl_.f_35_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_36_ = from._impl_.f_36_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_37_ = from._impl_.f_37_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_39_ = from._impl_.f_39_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_38_ = from._impl_.f_38_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_41_ = from._impl_.f_41_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_42_ = from._impl_.f_42_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_43_ = from._impl_.f_43_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_44_ = from._impl_.f_44_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_45_ = from._impl_.f_45_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_50_ = from._impl_.f_50_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.f_51_ = from._impl_.f_51_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.f_48_ = from._impl_.f_48_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.f_47_ = from._impl_.f_47_;
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.f_62_ = from._impl_.f_62_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.f_100_ = from._impl_.f_100_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.f_52_ = from._impl_.f_52_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.f_55_ = from._impl_.f_55_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.f_54_ = from._impl_.f_54_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.f_56_ = from._impl_.f_56_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.f_59_ = from._impl_.f_59_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.f_63_ = from._impl_.f_63_;
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.f_64_ = from._impl_.f_64_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.f_65_ = from._impl_.f_65_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.f_67_ = from._impl_.f_67_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.f_68_ = from._impl_.f_68_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.f_66_ = from._impl_.f_66_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.f_69_ = from._impl_.f_69_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.f_70_ = from._impl_.f_70_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.f_71_ = from._impl_.f_71_;
    }
  }
  cached_has_bits = from._impl_._has_bits_[3];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.f_72_ = from._impl_.f_72_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_75_ = from._impl_.f_75_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_73_ = from._impl_.f_73_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_80_ = from._impl_.f_80_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_77_ = from._impl_.f_77_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_78_ = from._impl_.f_78_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_79_ = from._impl_.f_79_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_83_ = from._impl_.f_83_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_81_ = from._impl_.f_81_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_86_ = from._impl_.f_86_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_85_ = from._impl_.f_85_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_89_ = from._impl_.f_89_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.f_88_ = from._impl_.f_88_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.f_90_ = from._impl_.f_90_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.f_92_ = from._impl_.f_92_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.f_91_ = from._impl_.f_91_;
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.f_93_ = from._impl_.f_93_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.f_94_ = from._impl_.f_94_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.f_98_ = from._impl_.f_98_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.f_97_ = from._impl_.f_97_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.f_99_ = from._impl_.f_99_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.f_101_ = from._impl_.f_101_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.f_102_ = from._impl_.f_102_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.f_105_ = from._impl_.f_105_;
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.f_107_ = from._impl_.f_107_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.f_109_ = from._impl_.f_109_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.f_110_ = from._impl_.f_110_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.f_112_ = from._impl_.f_112_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.f_111_ = from._impl_.f_111_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.f_116_ = from._impl_.f_116_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.f_117_ = from._impl_.f_117_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.f_119_ = from._impl_.f_119_;
    }
  }
  cached_has_bits = from._impl_._has_bits_[4];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.f_118_ = from._impl_.f_118_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_124_ = from._impl_.f_124_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_121_ = from._impl_.f_121_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_122_ = from._impl_.f_122_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_125_ = from._impl_.f_125_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_126_ = from._impl_.f_126_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_127_ = from._impl_.f_127_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_130_ = from._impl_.f_130_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_132_ = from._impl_.f_132_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_131_ = from._impl_.f_131_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_134_ = from._impl_.f_134_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_133_ = from._impl_.f_133_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.f_135_ = from._impl_.f_135_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.f_138_ = from._impl_.f_138_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.f_137_ = from._impl_.f_137_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.f_139_ = from._impl_.f_139_;
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.f_140_ = from._impl_.f_140_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.f_141_ = from._impl_.f_141_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.f_142_ = from._impl_.f_142_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.f_144_ = from._impl_.f_144_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.f_145_ = from._impl_.f_145_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.f_147_ = from._impl_.f_147_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.f_148_ = from._impl_.f_148_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.f_149_ = from._impl_.f_149_;
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.f_143_ = from._impl_.f_143_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.f_146_ = from._impl_.f_146_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.f_152_ = from._impl_.f_152_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.f_161_ = from._impl_.f_161_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.f_151_ = from._impl_.f_151_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.f_154_ = from._impl_.f_154_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.f_155_ = from._impl_.f_155_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.f_156_ = from._impl_.f_156_;
    }
  }
  cached_has_bits = from._impl_._has_bits_[5];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.f_158_ = from._impl_.f_158_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_160_ = from._impl_.f_160_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_159_ = from._impl_.f_159_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_165_ = from._impl_.f_165_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_166_ = from._impl_.f_166_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_163_ = from._impl_.f_163_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_168_ = from._impl_.f_168_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_167_ = from._impl_.f_167_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_169_ = from._impl_.f_169_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_170_ = from._impl_.f_170_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_171_ = from._impl_.f_171_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_173_ = from._impl_.f_173_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.f_172_ = from._impl_.f_172_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.f_175_ = from._impl_.f_175_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.f_176_ = from._impl_.f_176_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.f_177_ = from._impl_.f_177_;
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.f_178_ = from._impl_.f_178_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.f_179_ = from._impl_.f_179_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.f_182_ = from._impl_.f_182_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.f_183_ = from._impl_.f_183_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.f_185_ = from._impl_.f_185_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.f_184_ = from._impl_.f_184_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.f_186_ = from._impl_.f_186_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.f_188_ = from._impl_.f_188_;
    }
  }
  if (cached_has_bits & 0x0f000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.f_187_ = from._impl_.f_187_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.f_189_ = from._impl_.f_189_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.f_191_ = from._impl_.f_191_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.f_190_ = from._impl_.f_190_;
    }
  }
  _this->_impl_._has_bits_.Or(from._impl_._has_bits_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  swap(_impl_._has_bits_[2], other->_impl_._has_bits_[2]);
  swap(_impl_._has_bits_[3], other->_impl_._has_bits_[3]);
  swap(_impl_._has_bits_[4], other->_impl_._has_bits_[4]);
  swap(_impl_._has_bits_[5], other->_impl_._has_bits_[5]);
  _impl_.f_49_.InternalSwap(&other->_impl_.f_49_);
  _impl_.f_76_.InternalSwap(&other->_impl_.f_76_);
  _impl_.f_82_.InternalSwap(&other->_impl_.f_82_);
  _impl_.f_114_.InternalSwap(&other->_impl_.f_114_);
  _impl_.f_174_.InternalSwap(&other->_impl_.f_174_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_12_, &other->_impl_.f_12_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_16_, &other->_impl_.f_16_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_19_, &other->_impl_.f_19_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_23_, &other->_impl_.f_23_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_24_, &other->_impl_.f_24_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_29_, &other->_impl_.f_29_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_32_, &other->_impl_.f_32_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_40_, &other->_impl_.f_40_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_46_, &other->_impl_.f_46_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_53_, &other->_impl_.f_53_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_57_, &other->_impl_.f_57_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_58_, &other->_impl_.f_58_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_60_, &other->_impl_.f_60_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_61_, &other->_impl_.f_61_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_74_, &other->_impl_.f_74_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_84_, &other->_impl_.f_84_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_87_, &other->_impl_.f_87_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_95_, &other->_impl_.f_95_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_96_, &other->_impl_.f_96_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_103_, &other->_impl_.f_103_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_104_, &other->_impl_.f_104_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_106_, &other->_impl_.f_106_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_108_, &other->_impl_.f_108_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_113_, &other->_impl_.f_113_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_115_, &other->_impl_.f_115_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_120_, &other->_impl_.f_120_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_123_, &other->_impl_.f_123_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_128_, &other->_impl_.f_128_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_129_, &other->_impl_.f_129_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_136_, &other->_impl_.f_136_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_150_, &other->_impl_.f_150_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_153_, &other->_impl_.f_153_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_157_, &other->_impl_.f_157_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_162_, &other->_impl_.f_162_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_164_, &other->_impl_.f_164_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_180_, &other->_impl_.f_180_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_181_, &other->_impl_.f_181_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_190_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::_impl_.f_190_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93, _impl_.f_289_)>(
          reinterpret_cast<char*>(&_impl_.f_289_),
          reinterpret_cast<char*>(&other->_impl_.f_289_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967286,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93 f_1 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_.f_1_)}},
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_.f_0_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93 f_1 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_1_ != nullptr);
    _impl_.f_1_->Clear();
  }
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93 f_1 = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92.M93 f_1 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional int64 f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92_M93>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_{visibility, arena, from.f_1_} {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_{visibility, arena} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92 f_1 = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _impl_.f_1_)}},
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _impl_.f_0_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91, _impl_.f_1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91_M92>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_1_.Clear();
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92 f_1 = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_1_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_1().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91.M92 f_1 = 2;
  total_size += 1UL * this->_internal_f_1_size();
  for (const auto& msg : this->_internal_f_1()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional int64 f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_1()->MergeFrom(
      from._internal_f_1());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_1_.InternalSwap(&other->_impl_.f_1_);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_{visibility, arena, from.f_1_} {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_{visibility, arena} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91 f_1 = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90, _impl_.f_1_)}},
    // optional float f_0 = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90, _impl_.f_1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90_M91>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_1_.Clear();
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_f_0(), target);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91 f_1 = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_1_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_1().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90.M91 f_1 = 2;
  total_size += 1UL * this->_internal_f_1_size();
  for (const auto& msg : this->_internal_f_1()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional float f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_1()->MergeFrom(
      from._internal_f_1());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_1_.InternalSwap(&other->_impl_.f_1_);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_4_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90>(
                              arena, *from._impl_.f_4_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_2_;
  delete _impl_.f_4_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967269,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89 f_2 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_2_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90 f_4 = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_4_)}},
    // optional int64 f_0 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_0_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_0_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89 f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90 f_4 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_4_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.f_2_ != nullptr);
      _impl_.f_2_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_4_ != nullptr);
      _impl_.f_4_->Clear();
    }
  }
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89 f_2 = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90 f_4 = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.f_4_, _impl_.f_4_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M89 f_2 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88.M90 f_4 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_4_);
    }

    // optional int64 f_0 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M89>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_4_ != nullptr);
      if (_this->_impl_.f_4_ == nullptr) {
        _this->_impl_.f_4_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88_M90>(arena, *from._impl_.f_4_);
      } else {
        _this->_impl_.f_4_->MergeFrom(*from._impl_.f_4_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88, _impl_.f_2_)>(
          reinterpret_cast<char*>(&_impl_.f_2_),
          reinterpret_cast<char*>(&other->_impl_.f_2_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::_Internal {
 public:
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : f_0_{visibility, arena, from.f_0_},
        _f_0_cached_byte_size_{0},
        f_3_{visibility, arena, from.f_3_},
        _cached_size_{0} {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : f_0_{visibility, arena},
        _f_0_cached_byte_size_{0},
        f_3_{visibility, arena},
        _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967283,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88 f_3 = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83, _impl_.f_3_)}},
    // repeated int64 f_0 = 3 [packed = true];
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 f_0 = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83, _impl_.f_0_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83, _impl_.f_3_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83_M88>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_.Clear();
  _impl_.f_3_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int64 f_0 = 3 [packed = true];
  {
    int byte_size = _impl_._f_0_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_f_0(), byte_size, target);
    }
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88 f_3 = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_3_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_3().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated int64 f_0 = 3 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_f_0())
    ;
    _impl_._f_0_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83.M88 f_3 = 4;
  total_size += 1UL * this->_internal_f_3_size();
  for (const auto& msg : this->_internal_f_3()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_0()->MergeFrom(from._internal_f_0());
  _this->_internal_mutable_f_3()->MergeFrom(
      from._internal_f_3());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.f_0_.InternalSwap(&other->_impl_.f_0_);
  _impl_.f_3_.InternalSwap(&other->_impl_.f_3_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84)
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84(
    ::google::protobuf::Arena* arena, const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84& from)
    : Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84, _impl_.f_0_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87)
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87(
    ::google::protobuf::Arena* arena, const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87& from)
    : Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           0,
           offsetof(Impl_, f_1_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_1_));
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 f_0 = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 f_1 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_.f_1_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_.f_1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional uint32 f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_.f_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_1_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_1_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_f_0(), target);
  }

  // optional uint32 f_1 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_f_1(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 f_0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 9;
    }

    // optional uint32 f_1 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_f_1());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_.f_1_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::_impl_.f_1_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87, _impl_.f_0_)>(
          reinterpret_cast<char*>(&_impl_.f_0_),
          reinterpret_cast<char*>(&other->_impl_.f_0_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87 f_1 = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_.f_1_)}},
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_.f_0_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_1_ != nullptr);
    _impl_.f_1_->Clear();
  }
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87 f_1 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86.M87 f_1 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional int64 f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86_M87>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_4_{visibility, arena, from.f_4_} {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_3_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  _impl_.f_8_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86>(
                              arena, *from._impl_.f_8_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_1_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_1_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_4_{visibility, arena} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_3_),
           0,
           offsetof(Impl_, f_1_) -
               offsetof(Impl_, f_3_) +
               sizeof(Impl_::f_1_));
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_3_;
  delete _impl_.f_8_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_._has_bits_),
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966896,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84 f_4 = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_4_)}},
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_0_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.E30 f_1 = 2;
    {::_pbi::TcParser::FastEvS1,
     {16, 4, 3, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_1_)}},
    // optional int64 f_2 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_2_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_2_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83 f_3 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_0_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.E30 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_1_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_2_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_3_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84 f_4 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_4_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86 f_8 = 9;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_8_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M84>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_E30_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_4_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.f_3_ != nullptr);
      _impl_.f_3_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_8_ != nullptr);
      _impl_.f_8_->Clear();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_1_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_1_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.E30 f_1 = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_f_1(), target);
  }

  // optional int64 f_2 = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_f_2(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83 f_3 = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84 f_4 = 8;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_4_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_4().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86 f_8 = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *_impl_.f_8_, _impl_.f_8_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M84 f_4 = 8;
  total_size += 1UL * this->_internal_f_4_size();
  for (const auto& msg : this->_internal_f_4()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M83 f_3 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.M86 f_8 = 9;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_8_);
    }

    // optional int64 f_0 = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_0());
    }

    // optional int64 f_2 = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_2());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81.E30 f_1 = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_1());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_4()->MergeFrom(
      from._internal_f_4());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M83>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_8_ != nullptr);
      if (_this->_impl_.f_8_ == nullptr) {
        _this->_impl_.f_8_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81_M86>(arena, *from._impl_.f_8_);
      } else {
        _this->_impl_.f_8_->MergeFrom(*from._impl_.f_8_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_4_.InternalSwap(&other->_impl_.f_4_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_1_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::_impl_.f_1_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81, _impl_.f_3_)>(
          reinterpret_cast<char*>(&_impl_.f_3_),
          reinterpret_cast<char*>(&other->_impl_.f_3_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_(arena, from.f_1_),
        f_9_(arena, from.f_9_),
        f_11_(arena, from.f_11_),
        f_15_(arena, from.f_15_),
        f_16_(arena, from.f_16_),
        f_22_(arena, from.f_22_) {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_21_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_21_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_(arena),
        f_9_(arena),
        f_11_(arena),
        f_15_(arena),
        f_16_(arena),
        f_22_(arena) {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           0,
           offsetof(Impl_, f_21_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_21_));
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::~Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_1_.Destroy();
  _impl_.f_9_.Destroy();
  _impl_.f_11_.Destroy();
  _impl_.f_15_.Destroy();
  _impl_.f_16_.Destroy();
  _impl_.f_22_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 23, 3, 102, 7> Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_._has_bits_),
    0, // no _extensions_
    34, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    179347636,  // skipmap
    offsetof(decltype(_table_), field_entries),
    23,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_0_), 6>(),
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_0_)}},
    // optional string f_1 = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 f_2 = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 7, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool f_3 = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_3_), 13>(),
     {56, 13, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_4 = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_4_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_4_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E31 f_5 = 10;
    {::_pbi::TcParser::FastEvS1,
     {80, 10, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_5_)}},
    // optional int64 f_6 = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_6_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_6_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E32 f_7 = 12;
    {::_pbi::TcParser::FastEvS1,
     {96, 11, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_7_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E33 f_8 = 13;
    {::_pbi::TcParser::FastEvS1,
     {104, 12, 2, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_8_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_9 = 15;
    {::_pbi::TcParser::FastSS1,
     {122, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_9_)}},
    // optional bool f_20 = 32;
    {::_pbi::TcParser::FastV8S2,
     {640, 15, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_20_)}},
    // optional bool f_10 = 17;
    {::_pbi::TcParser::FastV8S2,
     {392, 14, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_10_)}},
    // optional string f_11 = 18;
    {::_pbi::TcParser::FastSS2,
     {402, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_11_)}},
    // optional int64 f_12 = 19;
    {::_pbi::TcParser::FastV64S2,
     {408, 16, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_12_)}},
    // optional float f_13 = 20;
    {::_pbi::TcParser::FastF32S2,
     {421, 17, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_13_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 f_14 = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 18, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_14_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bytes f_15 = 25;
    {::_pbi::TcParser::FastBS2,
     {458, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_15_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_16 = 27;
    {::_pbi::TcParser::FastSS2,
     {474, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_16_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_17 = 29;
    {::_pbi::TcParser::FastV64S2,
     {488, 19, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_17_)}},
    // optional int64 f_18 = 30;
    {::_pbi::TcParser::FastV64S2,
     {496, 20, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_18_)}},
    // optional int64 f_19 = 31;
    {::_pbi::TcParser::FastV64S2,
     {504, 21, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_19_)}},
  }}, {{
    33, 0, 1,
    65532, 21,
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_0_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional fixed64 f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_2_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional bool f_3 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_3_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int64 f_4 = 9;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_4_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E31 f_5 = 10;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_5_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_6 = 11;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_6_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E32 f_7 = 12;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_7_), _Internal::kHasBitsOffset + 11, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E33 f_8 = 13;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_8_), _Internal::kHasBitsOffset + 12, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional string f_9 = 15;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_9_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool f_10 = 17;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_10_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string f_11 = 18;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_11_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_12 = 19;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_12_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional float f_13 = 20;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_13_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 f_14 = 23;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_14_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes f_15 = 25;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_15_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string f_16 = 27;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_16_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_17 = 29;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_17_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_18 = 30;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_18_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_19 = 31;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_19_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bool f_20 = 32;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_20_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 f_21 = 33;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_21_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string f_22 = 34;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_22_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E31_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E32_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82_E33_internal_data_},
  }}, {{
    "\73\0\3\0\0\0\0\0\0\0\3\0\4\0\0\0\0\4\0\0\0\0\0\4"
    "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82"
    "f_1"
    "f_9"
    "f_11"
    "f_16"
    "f_22"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_1_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_9_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.f_11_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.f_15_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.f_16_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.f_22_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_2_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_2_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.f_4_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_20_) -
        reinterpret_cast<char*>(&_impl_.f_4_)) + sizeof(_impl_.f_20_));
  }
  if (cached_has_bits & 0x007f0000u) {
    ::memset(&_impl_.f_12_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_21_) -
        reinterpret_cast<char*>(&_impl_.f_12_)) + sizeof(_impl_.f_21_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // optional string f_1 = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_1();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.f_1");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional fixed64 f_2 = 4;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        4, this->_internal_f_2(), target);
  }

  // optional bool f_3 = 7;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_f_3(), target);
  }

  // optional int64 f_4 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<9>(
            stream, this->_internal_f_4(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E31 f_5 = 10;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        10, this->_internal_f_5(), target);
  }

  // optional int64 f_6 = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<11>(
            stream, this->_internal_f_6(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E32 f_7 = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        12, this->_internal_f_7(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E33 f_8 = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        13, this->_internal_f_8(), target);
  }

  // optional string f_9 = 15;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_9();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.f_9");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // optional bool f_10 = 17;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        17, this->_internal_f_10(), target);
  }

  // optional string f_11 = 18;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_f_11();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.f_11");
    target = stream->WriteStringMaybeAliased(18, _s, target);
  }

  // optional int64 f_12 = 19;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        19, this->_internal_f_12(), target);
  }

  // optional float f_13 = 20;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        20, this->_internal_f_13(), target);
  }

  // optional int32 f_14 = 23;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        23, this->_internal_f_14(), target);
  }

  // optional bytes f_15 = 25;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_f_15();
    target = stream->WriteBytesMaybeAliased(25, _s, target);
  }

  // optional string f_16 = 27;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_f_16();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.f_16");
    target = stream->WriteStringMaybeAliased(27, _s, target);
  }

  // optional int64 f_17 = 29;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        29, this->_internal_f_17(), target);
  }

  // optional int64 f_18 = 30;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        30, this->_internal_f_18(), target);
  }

  // optional int64 f_19 = 31;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        31, this->_internal_f_19(), target);
  }

  // optional bool f_20 = 32;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        32, this->_internal_f_20(), target);
  }

  // optional int32 f_21 = 33;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        33, this->_internal_f_21(), target);
  }

  // optional string f_22 = 34;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_f_22();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.f_22");
    target = stream->WriteStringMaybeAliased(34, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string f_1 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_1());
    }

    // optional string f_9 = 15;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_9());
    }

    // optional string f_11 = 18;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_11());
    }

    // optional bytes f_15 = 25;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_15());
    }

    // optional string f_16 = 27;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_16());
    }

    // optional string f_22 = 34;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_22());
    }

    // optional int64 f_0 = 1;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_0());
    }

    // optional fixed64 f_2 = 4;
    if (cached_has_bits & 0x00000080u) {
      total_size += 9;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int64 f_4 = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_4());
    }

    // optional int64 f_6 = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_6());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E31 f_5 = 10;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_5());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E32 f_7 = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_7());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82.E33 f_8 = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_8());
    }

    // optional bool f_3 = 7;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2;
    }

    // optional bool f_10 = 17;
    if (cached_has_bits & 0x00004000u) {
      total_size += 3;
    }

    // optional bool f_20 = 32;
    if (cached_has_bits & 0x00008000u) {
      total_size += 3;
    }

  }
  if (cached_has_bits & 0x007f0000u) {
    // optional int64 f_12 = 19;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_12());
    }

    // optional float f_13 = 20;
    if (cached_has_bits & 0x00020000u) {
      total_size += 6;
    }

    // optional int32 f_14 = 23;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_14());
    }

    // optional int64 f_17 = 29;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_17());
    }

    // optional int64 f_18 = 30;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_18());
    }

    // optional int64 f_19 = 31;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_19());
    }

    // optional int32 f_21 = 33;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_21());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_1(from._internal_f_1());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_9(from._internal_f_9());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_f_11(from._internal_f_11());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_f_15(from._internal_f_15());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_f_16(from._internal_f_16());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_f_22(from._internal_f_22());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_6_ = from._impl_.f_6_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_5_ = from._impl_.f_5_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_7_ = from._impl_.f_7_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.f_8_ = from._impl_.f_8_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.f_10_ = from._impl_.f_10_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.f_20_ = from._impl_.f_20_;
    }
  }
  if (cached_has_bits & 0x007f0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.f_12_ = from._impl_.f_12_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.f_13_ = from._impl_.f_13_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.f_14_ = from._impl_.f_14_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.f_17_ = from._impl_.f_17_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.f_18_ = from._impl_.f_18_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.f_19_ = from._impl_.f_19_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.f_21_ = from._impl_.f_21_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_1_, &other->_impl_.f_1_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_9_, &other->_impl_.f_9_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_11_, &other->_impl_.f_11_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_15_, &other->_impl_.f_15_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_16_, &other->_impl_.f_16_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_22_, &other->_impl_.f_22_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_21_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::_impl_.f_21_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82, _impl_.f_0_)>(
          reinterpret_cast<char*>(&_impl_.f_0_),
          reinterpret_cast<char*>(&other->_impl_.f_0_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M75::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M75>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M75::Message8_M1_M4_M15_M23_M40_M48_M73_M75(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M4_M15_M23_M40_M48_M73_M75::Message8_M1_M4_M15_M23_M40_M48_M73_M75(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M75& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M75* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_3_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M75::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M23_M40_M48_M73_M75::~Message8_M1_M4_M15_M23_M40_M48_M73_M75() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M75::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  delete _impl_.f_3_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M75::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M75::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M75::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967274,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M75_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_.f_0_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81 f_1 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_.f_1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_.f_0_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81 f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82 f_3 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_.f_3_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M75::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.f_1_ != nullptr);
      _impl_.f_1_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_3_ != nullptr);
      _impl_.f_3_->Clear();
    }
  }
  _impl_.f_0_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M75::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M75::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81 f_1 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82 f_3 = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M75::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M81 f_1 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75.M82 f_3 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional bool f_0 = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M75::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M75*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M75&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M81>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75_M82>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M75& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M75::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M75::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M75* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73_M75::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M75, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M75::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::_Internal {
 public:
};

Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : f_0_{visibility, arena, from.f_0_},
        _f_0_cached_byte_size_{0},
        _cached_size_{0} {}

Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : f_0_{visibility, arena},
        _f_0_cached_byte_size_{0},
        _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::~Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85.E34 f_0 = 1 [packed = true];
    {::_pbi::TcParser::FastEvP1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85.E34 f_0 = 1 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85, _impl_.f_0_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85_E34_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85.E34 f_0 = 1 [packed = true];
  {
    std::size_t byte_size = _impl_._f_0_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1, _internal_f_0(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85.E34 f_0 = 1 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_f_0_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_f_0().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._f_0_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_0()->MergeFrom(from._internal_f_0());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.f_0_.InternalSwap(&other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_3_{visibility, arena, from.f_3_} {}

Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_3_{visibility, arena} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::~Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967283,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85 f_3 = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80, _impl_.f_3_)}},
    // optional float f_0 = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float f_0 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80, _impl_.f_3_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80_M85>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_3_.Clear();
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float f_0 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_f_0(), target);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85 f_3 = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_3_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_3().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80.M85 f_3 = 4;
  total_size += 1UL * this->_internal_f_3_size();
  for (const auto& msg : this->_internal_f_3()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional float f_0 = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_3()->MergeFrom(
      from._internal_f_3());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_3_.InternalSwap(&other->_impl_.f_3_);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73_M79::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73_M79>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73_M79::Message8_M1_M4_M15_M23_M40_M48_M73_M79(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M79::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_6_{visibility, arena, from.f_6_},
        _f_6_cached_byte_size_{0},
        f_19_{visibility, arena, from.f_19_},
        _f_19_cached_byte_size_{0},
        f_56_{visibility, arena, from.f_56_},
        _f_56_cached_byte_size_{0},
        f_72_{visibility, arena, from.f_72_},
        _f_72_cached_byte_size_{0},
        f_73_{visibility, arena, from.f_73_},
        f_11_(arena, from.f_11_),
        f_14_(arena, from.f_14_),
        f_17_(arena, from.f_17_),
        f_18_(arena, from.f_18_),
        f_24_(arena, from.f_24_),
        f_31_(arena, from.f_31_),
        f_34_(arena, from.f_34_),
        f_43_(arena, from.f_43_),
        f_44_(arena, from.f_44_),
        f_46_(arena, from.f_46_),
        f_52_(arena, from.f_52_),
        f_61_(arena, from.f_61_),
        f_75_(arena, from.f_75_),
        f_77_(arena, from.f_77_),
        f_78_(arena, from.f_78_) {}

Message8_M1_M4_M15_M23_M40_M48_M73_M79::Message8_M1_M4_M15_M23_M40_M48_M73_M79(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73_M79& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73_M79* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_117_ = (cached_has_bits & 0x00008000u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80>(
                              arena, *from._impl_.f_117_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_2_),
           offsetof(Impl_, f_74_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_74_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73_M79::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_6_{visibility, arena},
        _f_6_cached_byte_size_{0},
        f_19_{visibility, arena},
        _f_19_cached_byte_size_{0},
        f_56_{visibility, arena},
        _f_56_cached_byte_size_{0},
        f_72_{visibility, arena},
        _f_72_cached_byte_size_{0},
        f_73_{visibility, arena},
        f_11_(arena),
        f_14_(arena),
        f_17_(arena),
        f_18_(arena),
        f_24_(arena),
        f_31_(arena),
        f_34_(arena),
        f_43_(arena),
        f_44_(arena),
        f_46_(arena),
        f_52_(arena),
        f_61_(arena),
        f_75_(arena),
        f_77_(arena),
        f_78_(arena) {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73_M79::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_117_),
           0,
           offsetof(Impl_, f_74_) -
               offsetof(Impl_, f_117_) +
               sizeof(Impl_::f_74_));
}
Message8_M1_M4_M15_M23_M40_M48_M73_M79::~Message8_M1_M4_M15_M23_M40_M48_M73_M79() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73_M79::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_11_.Destroy();
  _impl_.f_14_.Destroy();
  _impl_.f_17_.Destroy();
  _impl_.f_18_.Destroy();
  _impl_.f_24_.Destroy();
  _impl_.f_31_.Destroy();
  _impl_.f_34_.Destroy();
  _impl_.f_43_.Destroy();
  _impl_.f_44_.Destroy();
  _impl_.f_46_.Destroy();
  _impl_.f_52_.Destroy();
  _impl_.f_61_.Destroy();
  _impl_.f_75_.Destroy();
  _impl_.f_77_.Destroy();
  _impl_.f_78_.Destroy();
  delete _impl_.f_117_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73_M79::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73_M79::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73_M79::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 80, 10, 192, 17> Message8_M1_M4_M15_M23_M40_M48_M73_M79::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_._has_bits_),
    0, // no _extensions_
    118, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    2594318370,  // skipmap
    offsetof(decltype(_table_), field_entries),
    80,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_M79_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E21 f_1 = 3;
    {::_pbi::TcParser::FastEvS1,
     {24, 17, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_1_)}},
    // optional int64 f_2 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_2_), 16>(),
     {32, 16, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_2_)}},
    // optional float f_3 = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 18, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_4 = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_4_), 19>(),
     {56, 19, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_4_)}},
    // optional int32 f_5 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_5_), 20>(),
     {64, 20, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_5_)}},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E22 f_6 = 9 [packed = true];
    {::_pbi::TcParser::FastEvP1,
     {74, 63, 2, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_6_)}},
    // optional float f_7 = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 21, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_7_)}},
    // optional uint64 f_8 = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_8_), 22>(),
     {88, 22, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_8_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 f_9 = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_9_), 23>(),
     {104, 23, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_9_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed32 f_10 = 15;
    {::_pbi::TcParser::FastF32S1,
     {125, 24, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_10_)}},
    // optional string f_11 = 16;
    {::_pbi::TcParser::FastSS2,
     {386, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_11_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E23 f_12 = 17;
    {::_pbi::TcParser::FastEvS2,
     {392, 25, 3, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_12_)}},
    // optional fixed32 f_22 = 34;
    {::_pbi::TcParser::FastF32S2,
     {661, 30, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_22_)}},
    // optional fixed32 f_13 = 19;
    {::_pbi::TcParser::FastF32S2,
     {413, 26, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_13_)}},
    // optional bytes f_14 = 20;
    {::_pbi::TcParser::FastBS2,
     {418, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_14_)}},
    // optional string f_44 = 69;
    {::_pbi::TcParser::FastSS2,
     {1194, 8, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_44_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80 f_117 = 118;
    {::_pbi::TcParser::FastMtS2,
     {1970, 15, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_117_)}},
    // optional int64 f_16 = 23;
    {::_pbi::TcParser::FastV64S2,
     {440, 27, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_16_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_17 = 25;
    {::_pbi::TcParser::FastSS2,
     {458, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_17_)}},
    // optional bytes f_46 = 74;
    {::_pbi::TcParser::FastBS2,
     {1234, 9, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_46_)}},
    // optional string f_18 = 27;
    {::_pbi::TcParser::FastSS2,
     {474, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_18_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int32 f_19 = 30 [packed = true];
    {::_pbi::TcParser::FastV32P2,
     {498, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_19_)}},
    // optional int32 f_20 = 31;
    {::_pbi::TcParser::FastV32S2,
     {504, 28, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_20_)}},
  }}, {{
    33, 0, 6,
    38064, 21, 5674, 31, 20900, 41, 33922, 51, 10824, 63, 65472, 74,
    65535, 65535
  }}, {{
    // optional bool f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_0_), _Internal::kHasBitsOffset + 34, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E21 f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_1_), _Internal::kHasBitsOffset + 17, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_2_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional float f_3 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_3_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int64 f_4 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_4_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_5 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_5_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E22 f_6 = 9 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_6_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnum)},
    // optional float f_7 = 10;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_7_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint64 f_8 = 11;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_8_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 f_9 = 13;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_9_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional fixed32 f_10 = 15;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_10_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional string f_11 = 16;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_11_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E23 f_12 = 17;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_12_), _Internal::kHasBitsOffset + 25, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional fixed32 f_13 = 19;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_13_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional bytes f_14 = 20;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_14_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional bool f_15 = 21;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_15_), _Internal::kHasBitsOffset + 35, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int64 f_16 = 23;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_16_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_17 = 25;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_17_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_18 = 27;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_18_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated int32 f_19 = 30 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_19_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // optional int32 f_20 = 31;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_20_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 f_21 = 33;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_21_), _Internal::kHasBitsOffset + 29, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional fixed32 f_22 = 34;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_22_), _Internal::kHasBitsOffset + 30, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional int32 f_23 = 35;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_23_), _Internal::kHasBitsOffset + 31, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string f_24 = 36;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_24_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_25 = 39;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_25_), _Internal::kHasBitsOffset + 32, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint32 f_26 = 41;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_26_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int64 f_27 = 42;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_27_), _Internal::kHasBitsOffset + 38, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E24 f_28 = 44;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_28_), _Internal::kHasBitsOffset + 39, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 f_29 = 46;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_29_), _Internal::kHasBitsOffset + 40, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 f_30 = 47;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_30_), _Internal::kHasBitsOffset + 41, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes f_31 = 49;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_31_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E25 f_32 = 51;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_32_), _Internal::kHasBitsOffset + 42, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 f_33 = 53;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_33_), _Internal::kHasBitsOffset + 43, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string f_34 = 55;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_34_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float f_35 = 56;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_35_), _Internal::kHasBitsOffset + 44, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int64 f_36 = 57;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_36_), _Internal::kHasBitsOffset + 45, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bool f_37 = 60;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_37_), _Internal::kHasBitsOffset + 36, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 f_38 = 62;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_38_), _Internal::kHasBitsOffset + 46, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float f_39 = 63;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_39_), _Internal::kHasBitsOffset + 47, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int64 f_40 = 64;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_40_), _Internal::kHasBitsOffset + 48, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_41 = 65;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_41_), _Internal::kHasBitsOffset + 49, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_42 = 66;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_42_), _Internal::kHasBitsOffset + 50, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_43 = 68;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_43_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_44 = 69;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_44_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 f_45 = 71;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_45_), _Internal::kHasBitsOffset + 51, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bytes f_46 = 74;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_46_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E26 f_47 = 75;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_47_), _Internal::kHasBitsOffset + 52, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 f_48 = 76;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_48_), _Internal::kHasBitsOffset + 53, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 f_49 = 78;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_49_), _Internal::kHasBitsOffset + 54, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional double f_50 = 80;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_50_), _Internal::kHasBitsOffset + 56, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional uint32 f_51 = 81;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_51_), _Internal::kHasBitsOffset + 55, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string f_52 = 83;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_52_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool f_53 = 84;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_53_), _Internal::kHasBitsOffset + 37, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E27 f_54 = 85;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_54_), _Internal::kHasBitsOffset + 57, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 f_55 = 86;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_55_), _Internal::kHasBitsOffset + 58, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated sint64 f_56 = 87 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_56_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedSInt64)},
    // optional bool f_57 = 89;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_57_), _Internal::kHasBitsOffset + 63, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional double f_58 = 90;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_58_), _Internal::kHasBitsOffset + 59, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional int32 f_59 = 92;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_59_), _Internal::kHasBitsOffset + 61, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_60 = 93;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_60_), _Internal::kHasBitsOffset + 60, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bytes f_61 = 94;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_61_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E28 f_62 = 95;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_62_), _Internal::kHasBitsOffset + 62, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_63 = 97;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_63_), _Internal::kHasBitsOffset + 67, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional fixed32 f_64 = 98;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_64_), _Internal::kHasBitsOffset + 66, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional bool f_65 = 99;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_65_), _Internal::kHasBitsOffset + 64, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool f_66 = 101;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_66_), _Internal::kHasBitsOffset + 65, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional float f_67 = 102;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_67_), _Internal::kHasBitsOffset + 68, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int64 f_68 = 104;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_68_), _Internal::kHasBitsOffset + 70, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_69 = 105;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_69_), _Internal::kHasBitsOffset + 69, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional fixed32 f_70 = 107;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_70_), _Internal::kHasBitsOffset + 71, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional float f_71 = 109;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_71_), _Internal::kHasBitsOffset + 72, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated int32 f_72 = 111 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_72_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated string f_73 = 112;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_73_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E29 f_74 = 113;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_74_), _Internal::kHasBitsOffset + 74, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional string f_75 = 114;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_75_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional fixed64 f_76 = 115;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_76_), _Internal::kHasBitsOffset + 73, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional string f_77 = 116;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_77_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_78 = 117;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_78_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80 f_117 = 118;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_117_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E21_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E22_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E23_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E24_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E25_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E26_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E27_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E28_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_E29_internal_data_},
  }}, {{
    "\67\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0\0\0\4\4\0\0\0\0\0\4\0\0\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\0\4\4\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4\0\4\0\4\4\0\0\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79"
    "f_11"
    "f_17"
    "f_18"
    "f_24"
    "f_34"
    "f_43"
    "f_44"
    "f_52"
    "f_73"
    "f_75"
    "f_77"
    "f_78"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73_M79::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_6_.Clear();
  _impl_.f_19_.Clear();
  _impl_.f_56_.Clear();
  _impl_.f_72_.Clear();
  _impl_.f_73_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_11_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_14_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.f_17_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.f_18_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.f_24_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.f_31_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.f_34_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.f_43_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _impl_.f_44_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000200u) {
      _impl_.f_46_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000400u) {
      _impl_.f_52_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000800u) {
      _impl_.f_61_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00001000u) {
      _impl_.f_75_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00002000u) {
      _impl_.f_77_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00004000u) {
      _impl_.f_78_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(_impl_.f_117_ != nullptr);
      _impl_.f_117_->Clear();
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.f_2_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_9_) -
        reinterpret_cast<char*>(&_impl_.f_2_)) + sizeof(_impl_.f_9_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.f_10_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_23_) -
        reinterpret_cast<char*>(&_impl_.f_10_)) + sizeof(_impl_.f_23_));
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.f_25_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_28_) -
        reinterpret_cast<char*>(&_impl_.f_25_)) + sizeof(_impl_.f_28_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.f_29_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_39_) -
        reinterpret_cast<char*>(&_impl_.f_29_)) + sizeof(_impl_.f_39_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.f_40_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_51_) -
        reinterpret_cast<char*>(&_impl_.f_40_)) + sizeof(_impl_.f_51_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.f_50_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_57_) -
        reinterpret_cast<char*>(&_impl_.f_50_)) + sizeof(_impl_.f_57_));
  }
  cached_has_bits = _impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.f_65_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_70_) -
        reinterpret_cast<char*>(&_impl_.f_65_)) + sizeof(_impl_.f_70_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&_impl_.f_71_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_74_) -
        reinterpret_cast<char*>(&_impl_.f_71_)) + sizeof(_impl_.f_74_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73_M79::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73_M79::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool f_0 = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_f_0(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E21 f_1 = 3;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_f_1(), target);
  }

  // optional int64 f_2 = 4;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_f_2(), target);
  }

  // optional float f_3 = 5;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_f_3(), target);
  }

  // optional int64 f_4 = 7;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_f_4(), target);
  }

  // optional int32 f_5 = 8;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_f_5(), target);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E22 f_6 = 9 [packed = true];
  {
    std::size_t byte_size = _impl_._f_6_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(9, _internal_f_6(),
                                       byte_size, target);
    }
  }

  // optional float f_7 = 10;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        10, this->_internal_f_7(), target);
  }

  // optional uint64 f_8 = 11;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        11, this->_internal_f_8(), target);
  }

  // optional int32 f_9 = 13;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_f_9(), target);
  }

  // optional fixed32 f_10 = 15;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        15, this->_internal_f_10(), target);
  }

  // optional string f_11 = 16;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_11();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_11");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E23 f_12 = 17;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        17, this->_internal_f_12(), target);
  }

  // optional fixed32 f_13 = 19;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        19, this->_internal_f_13(), target);
  }

  // optional bytes f_14 = 20;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_14();
    target = stream->WriteBytesMaybeAliased(20, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool f_15 = 21;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        21, this->_internal_f_15(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_16 = 23;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        23, this->_internal_f_16(), target);
  }

  // optional string f_17 = 25;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_f_17();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_17");
    target = stream->WriteStringMaybeAliased(25, _s, target);
  }

  // optional string f_18 = 27;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_f_18();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_18");
    target = stream->WriteStringMaybeAliased(27, _s, target);
  }

  // repeated int32 f_19 = 30 [packed = true];
  {
    int byte_size = _impl_._f_19_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          30, _internal_f_19(), byte_size, target);
    }
  }

  // optional int32 f_20 = 31;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        31, this->_internal_f_20(), target);
  }

  // optional int32 f_21 = 33;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        33, this->_internal_f_21(), target);
  }

  // optional fixed32 f_22 = 34;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        34, this->_internal_f_22(), target);
  }

  // optional int32 f_23 = 35;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        35, this->_internal_f_23(), target);
  }

  // optional string f_24 = 36;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_f_24();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_24");
    target = stream->WriteStringMaybeAliased(36, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional int64 f_25 = 39;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        39, this->_internal_f_25(), target);
  }

  // optional uint32 f_26 = 41;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        41, this->_internal_f_26(), target);
  }

  // optional int64 f_27 = 42;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        42, this->_internal_f_27(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E24 f_28 = 44;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        44, this->_internal_f_28(), target);
  }

  // optional int32 f_29 = 46;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        46, this->_internal_f_29(), target);
  }

  // optional int32 f_30 = 47;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        47, this->_internal_f_30(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_31 = 49;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_f_31();
    target = stream->WriteBytesMaybeAliased(49, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E25 f_32 = 51;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        51, this->_internal_f_32(), target);
  }

  // optional int32 f_33 = 53;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        53, this->_internal_f_33(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_34 = 55;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_f_34();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_34");
    target = stream->WriteStringMaybeAliased(55, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional float f_35 = 56;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        56, this->_internal_f_35(), target);
  }

  // optional int64 f_36 = 57;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        57, this->_internal_f_36(), target);
  }

  // optional bool f_37 = 60;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        60, this->_internal_f_37(), target);
  }

  // optional int32 f_38 = 62;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        62, this->_internal_f_38(), target);
  }

  // optional float f_39 = 63;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        63, this->_internal_f_39(), target);
  }

  // optional int64 f_40 = 64;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        64, this->_internal_f_40(), target);
  }

  // optional int64 f_41 = 65;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        65, this->_internal_f_41(), target);
  }

  // optional int64 f_42 = 66;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        66, this->_internal_f_42(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_43 = 68;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_f_43();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_43");
    target = stream->WriteStringMaybeAliased(68, _s, target);
  }

  // optional string f_44 = 69;
  if (cached_has_bits & 0x00000100u) {
    const std::string& _s = this->_internal_f_44();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_44");
    target = stream->WriteStringMaybeAliased(69, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional uint64 f_45 = 71;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        71, this->_internal_f_45(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_46 = 74;
  if (cached_has_bits & 0x00000200u) {
    const std::string& _s = this->_internal_f_46();
    target = stream->WriteBytesMaybeAliased(74, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E26 f_47 = 75;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        75, this->_internal_f_47(), target);
  }

  // optional int32 f_48 = 76;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        76, this->_internal_f_48(), target);
  }

  // optional int32 f_49 = 78;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        78, this->_internal_f_49(), target);
  }

  // optional double f_50 = 80;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        80, this->_internal_f_50(), target);
  }

  // optional uint32 f_51 = 81;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        81, this->_internal_f_51(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_52 = 83;
  if (cached_has_bits & 0x00000400u) {
    const std::string& _s = this->_internal_f_52();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_52");
    target = stream->WriteStringMaybeAliased(83, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool f_53 = 84;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        84, this->_internal_f_53(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E27 f_54 = 85;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        85, this->_internal_f_54(), target);
  }

  // optional int32 f_55 = 86;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        86, this->_internal_f_55(), target);
  }

  // repeated sint64 f_56 = 87 [packed = true];
  {
    int byte_size = _impl_._f_56_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteSInt64Packed(
          87, _internal_f_56(), byte_size, target);
    }
  }

  // optional bool f_57 = 89;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        89, this->_internal_f_57(), target);
  }

  // optional double f_58 = 90;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        90, this->_internal_f_58(), target);
  }

  // optional int32 f_59 = 92;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        92, this->_internal_f_59(), target);
  }

  // optional int64 f_60 = 93;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        93, this->_internal_f_60(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_61 = 94;
  if (cached_has_bits & 0x00000800u) {
    const std::string& _s = this->_internal_f_61();
    target = stream->WriteBytesMaybeAliased(94, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E28 f_62 = 95;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        95, this->_internal_f_62(), target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional int64 f_63 = 97;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        97, this->_internal_f_63(), target);
  }

  // optional fixed32 f_64 = 98;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        98, this->_internal_f_64(), target);
  }

  // optional bool f_65 = 99;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        99, this->_internal_f_65(), target);
  }

  // optional bool f_66 = 101;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        101, this->_internal_f_66(), target);
  }

  // optional float f_67 = 102;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        102, this->_internal_f_67(), target);
  }

  // optional int64 f_68 = 104;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        104, this->_internal_f_68(), target);
  }

  // optional int32 f_69 = 105;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        105, this->_internal_f_69(), target);
  }

  // optional fixed32 f_70 = 107;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        107, this->_internal_f_70(), target);
  }

  // optional float f_71 = 109;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        109, this->_internal_f_71(), target);
  }

  // repeated int32 f_72 = 111 [packed = true];
  {
    int byte_size = _impl_._f_72_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          111, _internal_f_72(), byte_size, target);
    }
  }

  // repeated string f_73 = 112;
  for (int i = 0, n = this->_internal_f_73_size(); i < n; ++i) {
    const auto& s = this->_internal_f_73().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_73");
    target = stream->WriteString(112, s, target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E29 f_74 = 113;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        113, this->_internal_f_74(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_75 = 114;
  if (cached_has_bits & 0x00001000u) {
    const std::string& _s = this->_internal_f_75();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_75");
    target = stream->WriteStringMaybeAliased(114, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[2];
  // optional fixed64 f_76 = 115;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        115, this->_internal_f_76(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_77 = 116;
  if (cached_has_bits & 0x00002000u) {
    const std::string& _s = this->_internal_f_77();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_77");
    target = stream->WriteStringMaybeAliased(116, _s, target);
  }

  // optional string f_78 = 117;
  if (cached_has_bits & 0x00004000u) {
    const std::string& _s = this->_internal_f_78();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.f_78");
    target = stream->WriteStringMaybeAliased(117, _s, target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80 f_117 = 118;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        118, *_impl_.f_117_, _impl_.f_117_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73_M79::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E22 f_6 = 9 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_f_6_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_f_6().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._f_6_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated int32 f_19 = 30 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_f_19())
    ;
    _impl_._f_19_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated sint64 f_56 = 87 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::SInt64Size(
        this->_internal_f_56())
    ;
    _impl_._f_56_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 f_72 = 111 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_f_72())
    ;
    _impl_._f_72_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated string f_73 = 112;
  total_size += 2 * ::google::protobuf::internal::FromIntSize(_internal_f_73().size());
  for (int i = 0, n = _internal_f_73().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_f_73().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string f_11 = 16;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_11());
    }

    // optional bytes f_14 = 20;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_14());
    }

    // optional string f_17 = 25;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_17());
    }

    // optional string f_18 = 27;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_18());
    }

    // optional string f_24 = 36;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_24());
    }

    // optional bytes f_31 = 49;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_31());
    }

    // optional string f_34 = 55;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_34());
    }

    // optional string f_43 = 68;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_43());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional string f_44 = 69;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_44());
    }

    // optional bytes f_46 = 74;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_46());
    }

    // optional string f_52 = 83;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_52());
    }

    // optional bytes f_61 = 94;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_61());
    }

    // optional string f_75 = 114;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_75());
    }

    // optional string f_77 = 116;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_77());
    }

    // optional string f_78 = 117;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_78());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.M80 f_117 = 118;
    if (cached_has_bits & 0x00008000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_117_);
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional int64 f_2 = 4;
    if (cached_has_bits & 0x00010000u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_2());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E21 f_1 = 3;
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_1());
    }

    // optional float f_3 = 5;
    if (cached_has_bits & 0x00040000u) {
      total_size += 5;
    }

    // optional int64 f_4 = 7;
    if (cached_has_bits & 0x00080000u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_4());
    }

    // optional int32 f_5 = 8;
    if (cached_has_bits & 0x00100000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_5());
    }

    // optional float f_7 = 10;
    if (cached_has_bits & 0x00200000u) {
      total_size += 5;
    }

    // optional uint64 f_8 = 11;
    if (cached_has_bits & 0x00400000u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_8());
    }

    // optional int32 f_9 = 13;
    if (cached_has_bits & 0x00800000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_9());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional fixed32 f_10 = 15;
    if (cached_has_bits & 0x01000000u) {
      total_size += 5;
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E23 f_12 = 17;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_12());
    }

    // optional fixed32 f_13 = 19;
    if (cached_has_bits & 0x04000000u) {
      total_size += 6;
    }

    // optional int64 f_16 = 23;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_16());
    }

    // optional int32 f_20 = 31;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_20());
    }

    // optional int32 f_21 = 33;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_21());
    }

    // optional fixed32 f_22 = 34;
    if (cached_has_bits & 0x40000000u) {
      total_size += 6;
    }

    // optional int32 f_23 = 35;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_23());
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional int64 f_25 = 39;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_25());
    }

    // optional uint32 f_26 = 41;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_f_26());
    }

    // optional bool f_0 = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional bool f_15 = 21;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3;
    }

    // optional bool f_37 = 60;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3;
    }

    // optional bool f_53 = 84;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3;
    }

    // optional int64 f_27 = 42;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_27());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E24 f_28 = 44;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_28());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 f_29 = 46;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_29());
    }

    // optional int32 f_30 = 47;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_30());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E25 f_32 = 51;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_32());
    }

    // optional int32 f_33 = 53;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_33());
    }

    // optional float f_35 = 56;
    if (cached_has_bits & 0x00001000u) {
      total_size += 6;
    }

    // optional int64 f_36 = 57;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_36());
    }

    // optional int32 f_38 = 62;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_38());
    }

    // optional float f_39 = 63;
    if (cached_has_bits & 0x00008000u) {
      total_size += 6;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional int64 f_40 = 64;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_40());
    }

    // optional int64 f_41 = 65;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_41());
    }

    // optional int64 f_42 = 66;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_42());
    }

    // optional uint64 f_45 = 71;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_f_45());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E26 f_47 = 75;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_47());
    }

    // optional int32 f_48 = 76;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_48());
    }

    // optional int32 f_49 = 78;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_49());
    }

    // optional uint32 f_51 = 81;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_f_51());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional double f_50 = 80;
    if (cached_has_bits & 0x01000000u) {
      total_size += 10;
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E27 f_54 = 85;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_54());
    }

    // optional int32 f_55 = 86;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_55());
    }

    // optional double f_58 = 90;
    if (cached_has_bits & 0x08000000u) {
      total_size += 10;
    }

    // optional int64 f_60 = 93;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_60());
    }

    // optional int32 f_59 = 92;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_59());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E28 f_62 = 95;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_62());
    }

    // optional bool f_57 = 89;
    if (cached_has_bits & 0x80000000u) {
      total_size += 3;
    }

  }
  cached_has_bits = _impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool f_65 = 99;
    if (cached_has_bits & 0x00000001u) {
      total_size += 3;
    }

    // optional bool f_66 = 101;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3;
    }

    // optional fixed32 f_64 = 98;
    if (cached_has_bits & 0x00000004u) {
      total_size += 6;
    }

    // optional int64 f_63 = 97;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_63());
    }

    // optional float f_67 = 102;
    if (cached_has_bits & 0x00000010u) {
      total_size += 6;
    }

    // optional int32 f_69 = 105;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_69());
    }

    // optional int64 f_68 = 104;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_68());
    }

    // optional fixed32 f_70 = 107;
    if (cached_has_bits & 0x00000080u) {
      total_size += 6;
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional float f_71 = 109;
    if (cached_has_bits & 0x00000100u) {
      total_size += 6;
    }

    // optional fixed64 f_76 = 115;
    if (cached_has_bits & 0x00000200u) {
      total_size += 10;
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79.E29 f_74 = 113;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_74());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73_M79::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73_M79*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73_M79&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_6()->MergeFrom(from._internal_f_6());
  _this->_internal_mutable_f_19()->MergeFrom(from._internal_f_19());
  _this->_internal_mutable_f_56()->MergeFrom(from._internal_f_56());
  _this->_internal_mutable_f_72()->MergeFrom(from._internal_f_72());
  _this->_internal_mutable_f_73()->MergeFrom(from._internal_f_73());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_11(from._internal_f_11());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_14(from._internal_f_14());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_f_17(from._internal_f_17());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_f_18(from._internal_f_18());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_f_24(from._internal_f_24());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_f_31(from._internal_f_31());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_f_34(from._internal_f_34());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_f_43(from._internal_f_43());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_set_f_44(from._internal_f_44());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_set_f_46(from._internal_f_46());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_set_f_52(from._internal_f_52());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_set_f_61(from._internal_f_61());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_set_f_75(from._internal_f_75());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_set_f_77(from._internal_f_77());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_set_f_78(from._internal_f_78());
    }
    if (cached_has_bits & 0x00008000u) {
      ABSL_DCHECK(from._impl_.f_117_ != nullptr);
      if (_this->_impl_.f_117_ == nullptr) {
        _this->_impl_.f_117_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79_M80>(arena, *from._impl_.f_117_);
      } else {
        _this->_impl_.f_117_->MergeFrom(*from._impl_.f_117_);
      }
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.f_5_ = from._impl_.f_5_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.f_7_ = from._impl_.f_7_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.f_8_ = from._impl_.f_8_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.f_9_ = from._impl_.f_9_;
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.f_10_ = from._impl_.f_10_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.f_12_ = from._impl_.f_12_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.f_13_ = from._impl_.f_13_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.f_16_ = from._impl_.f_16_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.f_20_ = from._impl_.f_20_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.f_21_ = from._impl_.f_21_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.f_22_ = from._impl_.f_22_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.f_23_ = from._impl_.f_23_;
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.f_25_ = from._impl_.f_25_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_26_ = from._impl_.f_26_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_15_ = from._impl_.f_15_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_37_ = from._impl_.f_37_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_53_ = from._impl_.f_53_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_27_ = from._impl_.f_27_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_28_ = from._impl_.f_28_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_29_ = from._impl_.f_29_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_30_ = from._impl_.f_30_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_32_ = from._impl_.f_32_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_33_ = from._impl_.f_33_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.f_35_ = from._impl_.f_35_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.f_36_ = from._impl_.f_36_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.f_38_ = from._impl_.f_38_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.f_39_ = from._impl_.f_39_;
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.f_40_ = from._impl_.f_40_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.f_41_ = from._impl_.f_41_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.f_42_ = from._impl_.f_42_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.f_45_ = from._impl_.f_45_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.f_47_ = from._impl_.f_47_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.f_48_ = from._impl_.f_48_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.f_49_ = from._impl_.f_49_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.f_51_ = from._impl_.f_51_;
    }
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.f_50_ = from._impl_.f_50_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.f_54_ = from._impl_.f_54_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.f_55_ = from._impl_.f_55_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.f_58_ = from._impl_.f_58_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.f_60_ = from._impl_.f_60_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.f_59_ = from._impl_.f_59_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.f_62_ = from._impl_.f_62_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.f_57_ = from._impl_.f_57_;
    }
  }
  cached_has_bits = from._impl_._has_bits_[2];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.f_65_ = from._impl_.f_65_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_66_ = from._impl_.f_66_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_64_ = from._impl_.f_64_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_63_ = from._impl_.f_63_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_67_ = from._impl_.f_67_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_69_ = from._impl_.f_69_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_68_ = from._impl_.f_68_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_70_ = from._impl_.f_70_;
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_71_ = from._impl_.f_71_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_76_ = from._impl_.f_76_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_74_ = from._impl_.f_74_;
    }
  }
  _this->_impl_._has_bits_.Or(from._impl_._has_bits_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M79::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73_M79& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73_M79::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73_M79::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73_M79* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  swap(_impl_._has_bits_[2], other->_impl_._has_bits_[2]);
  _impl_.f_6_.InternalSwap(&other->_impl_.f_6_);
  _impl_.f_19_.InternalSwap(&other->_impl_.f_19_);
  _impl_.f_56_.InternalSwap(&other->_impl_.f_56_);
  _impl_.f_72_.InternalSwap(&other->_impl_.f_72_);
  _impl_.f_73_.InternalSwap(&other->_impl_.f_73_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_11_, &other->_impl_.f_11_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_14_, &other->_impl_.f_14_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_17_, &other->_impl_.f_17_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_18_, &other->_impl_.f_18_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_24_, &other->_impl_.f_24_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_31_, &other->_impl_.f_31_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_34_, &other->_impl_.f_34_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_43_, &other->_impl_.f_43_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_44_, &other->_impl_.f_44_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_46_, &other->_impl_.f_46_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_52_, &other->_impl_.f_52_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_61_, &other->_impl_.f_61_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_75_, &other->_impl_.f_75_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_77_, &other->_impl_.f_77_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_78_, &other->_impl_.f_78_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_74_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73_M79::_impl_.f_74_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73_M79, _impl_.f_117_)>(
          reinterpret_cast<char*>(&_impl_.f_117_),
          reinterpret_cast<char*>(&other->_impl_.f_117_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73_M79::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48_M73::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48_M73>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48_M73::Message8_M1_M4_M15_M23_M40_M48_M73(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_3_{visibility, arena, from.f_3_} {}

Message8_M1_M4_M15_M23_M40_M48_M73::Message8_M1_M4_M15_M23_M40_M48_M73(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48_M73& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48_M73* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_4_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79>(
                              arena, *from._impl_.f_4_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48_M73::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_3_{visibility, arena} {}

inline void Message8_M1_M4_M15_M23_M40_M48_M73::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_4_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_4_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M23_M40_M48_M73::~Message8_M1_M4_M15_M23_M40_M48_M73() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48_M73::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_4_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48_M73::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48_M73::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48_M73::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Message8_M1_M4_M15_M23_M40_M48_M73::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967251,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_M73_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75 f_3 = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79 f_4 = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_4_)}},
    // optional int64 f_0 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_0_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_3_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79 f_4 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_4_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M75>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48_M73::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_3_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_4_ != nullptr);
    _impl_.f_4_->Clear();
  }
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48_M73::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48_M73::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_f_0(), target);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75 f_3 = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_3_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_3().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79 f_4 = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.f_4_, _impl_.f_4_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48_M73::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M75 f_3 = 4;
  total_size += 1UL * this->_internal_f_3_size();
  for (const auto& msg : this->_internal_f_3()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73.M79 f_4 = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_4_);
    }

    // optional int64 f_0 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48_M73::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48_M73*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48_M73&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_3()->MergeFrom(
      from._internal_f_3());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_4_ != nullptr);
      if (_this->_impl_.f_4_ == nullptr) {
        _this->_impl_.f_4_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73_M79>(arena, *from._impl_.f_4_);
      } else {
        _this->_impl_.f_4_->MergeFrom(*from._impl_.f_4_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48_M73::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48_M73& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48_M73::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48_M73::InternalSwap(Message8_M1_M4_M15_M23_M40_M48_M73* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_3_.InternalSwap(&other->_impl_.f_3_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48_M73::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48_M73, _impl_.f_4_)>(
          reinterpret_cast<char*>(&_impl_.f_4_),
          reinterpret_cast<char*>(&other->_impl_.f_4_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48_M73::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40_M48::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40_M48>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40_M48::Message8_M1_M4_M15_M23_M40_M48(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M4_M15_M23_M40_M48::Message8_M1_M4_M15_M23_M40_M48(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40_M48& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40_M48* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40_M48::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40_M48::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M23_M40_M48::~Message8_M1_M4_M15_M23_M40_M48() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40_M48::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40_M48::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40_M48::MergeImpl,
          &Message8_M1_M4_M15_M23_M40_M48::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M1_M4_M15_M23_M40_M48::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_M48_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73 f_1 = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48, _impl_.f_1_)}},
    // optional int32 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1_M4_M15_M23_M40_M48, _impl_.f_0_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40_M48::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_1_ != nullptr);
    _impl_.f_1_->Clear();
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40_M48::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40_M48::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73 f_1 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40_M48::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48.M73 f_1 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional int32 f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40_M48::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40_M48*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40_M48&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48_M73>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40_M48::CopyFrom(const Message8_M1_M4_M15_M23_M40_M48& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40_M48::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40_M48::InternalSwap(Message8_M1_M4_M15_M23_M40_M48* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M23_M40_M48::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40_M48, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40_M48::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23_M40::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23_M40>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23_M40::Message8_M1_M4_M15_M23_M40(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M4_M15_M23_M40::Message8_M1_M4_M15_M23_M40(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23_M40& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23_M40* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23_M40::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23_M40::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M23_M40::~Message8_M1_M4_M15_M23_M40() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23.M40)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23_M40::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_2_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23_M40::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23_M40::MergeImpl,
          &Message8_M1_M4_M15_M23_M40::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Message8_M1_M4_M15_M23_M40::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_M40_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.E9 f_0 = 2;
    {::_pbi::TcParser::FastEvS1,
     {16, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48 f_2 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.E9 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M4_M15_M23_M40_E9_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23_M40::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_2_ != nullptr);
    _impl_.f_2_->Clear();
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23_M40::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23_M40::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.E9 f_0 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48 f_2 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23.M40)
  return target;
}

::size_t Message8_M1_M4_M15_M23_M40::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.M48 f_2 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40.E9 f_0 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23_M40::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23_M40*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23_M40&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40_M48>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23_M40::CopyFrom(const Message8_M1_M4_M15_M23_M40& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23.M40)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23_M40::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23_M40::InternalSwap(Message8_M1_M4_M15_M23_M40* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M23_M40::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23_M40, _impl_.f_2_)>(
          reinterpret_cast<char*>(&_impl_.f_2_),
          reinterpret_cast<char*>(&other->_impl_.f_2_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23_M40::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M23::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M23>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_._has_bits_);
};

Message8_M1_M4_M15_M23::Message8_M1_M4_M15_M23(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M23)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M4_M15_M23::Message8_M1_M4_M15_M23(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M23& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M23* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M30>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_2_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M31>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_5_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M38>(
                              arena, *from._impl_.f_5_)
                        : nullptr;
  _impl_.f_7_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40>(
                              arena, *from._impl_.f_7_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M23)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M23::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M23::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4_M15_M23::~Message8_M1_M4_M15_M23() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M23)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M23::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  delete _impl_.f_2_;
  delete _impl_.f_5_;
  delete _impl_.f_7_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M23::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M23::MergeImpl,
          &Message8_M1_M4_M15_M23::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 0, 2> Message8_M1_M4_M15_M23::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967084,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_M23_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40 f_7 = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_7_)}},
    // optional uint64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M23, _impl_.f_0_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M30 f_1 = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M31 f_2 = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M38 f_5 = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_5_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_0_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M30 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M31 f_2 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_2_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M38 f_5 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_5_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40 f_7 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_7_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M30>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M31>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M38>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23_M40>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M23::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M23)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.f_1_ != nullptr);
      _impl_.f_1_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_2_ != nullptr);
      _impl_.f_2_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.f_5_ != nullptr);
      _impl_.f_5_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.f_7_ != nullptr);
      _impl_.f_7_->Clear();
    }
  }
  _impl_.f_0_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M23::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M23::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M23)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 f_0 = 1;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M30 f_1 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M31 f_2 = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M38 f_5 = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.f_5_, _impl_.f_5_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40 f_7 = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.f_7_, _impl_.f_7_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M23)
  return target;
}

::size_t Message8_M1_M4_M15_M23::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M23)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M30 f_1 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M31 f_2 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M38 f_5 = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_5_);
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23.M40 f_7 = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_7_);
    }

    // optional uint64 f_0 = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M23::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M23*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M23&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M23)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M30>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M31>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.f_5_ != nullptr);
      if (_this->_impl_.f_5_ == nullptr) {
        _this->_impl_.f_5_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M38>(arena, *from._impl_.f_5_);
      } else {
        _this->_impl_.f_5_->MergeFrom(*from._impl_.f_5_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.f_7_ != nullptr);
      if (_this->_impl_.f_7_ == nullptr) {
        _this->_impl_.f_7_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23_M40>(arena, *from._impl_.f_7_);
      } else {
        _this->_impl_.f_7_->MergeFrom(*from._impl_.f_7_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M23::CopyFrom(const Message8_M1_M4_M15_M23& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M23)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M23::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M23::InternalSwap(Message8_M1_M4_M15_M23* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_0_)
      + sizeof(Message8_M1_M4_M15_M23::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M23, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M1_M4_M15_M23::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M25::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M25>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M25, _impl_._has_bits_);
};

Message8_M1_M4_M15_M25::Message8_M1_M4_M15_M25(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M25)
}
Message8_M1_M4_M15_M25::Message8_M1_M4_M15_M25(
    ::google::protobuf::Arena* arena, const Message8_M1_M4_M15_M25& from)
    : Message8_M1_M4_M15_M25(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M25::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4_M15_M25::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M1_M4_M15_M25::~Message8_M1_M4_M15_M25() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M25)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M25::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M25::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M25, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M25::MergeImpl,
          &Message8_M1_M4_M15_M25::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M1_M4_M15_M25::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M25, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967291,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M25_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M25>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 f_0 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15_M25, _impl_.f_0_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M25, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M25, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M25::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M25)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M25::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M25::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M25)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M25)
  return target;
}

::size_t Message8_M1_M4_M15_M25::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M25)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 f_0 = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M25::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M25*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M25&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M25)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M25::CopyFrom(const Message8_M1_M4_M15_M25& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M25)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M25::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M25::InternalSwap(Message8_M1_M4_M15_M25* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M25::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15_M28::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15_M28>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M28, _impl_._has_bits_);
};

Message8_M1_M4_M15_M28::Message8_M1_M4_M15_M28(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15.M28)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M28::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M1_M4_M15_M28::Message8_M1_M4_M15_M28(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15_M28& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15_M28* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15.M28)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15_M28::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M1_M4_M15_M28::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M4_M15_M28::~Message8_M1_M4_M15_M28() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15.M28)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15_M28::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15_M28::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M28, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15_M28::MergeImpl,
          &Message8_M1_M4_M15_M28::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> Message8_M1_M4_M15_M28::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M28, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M4_M15_M28_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M28>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string f_0 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M28, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15_M28, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M4.M15.M28"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15_M28::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15.M28)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15_M28::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15_M28::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15.M28)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.M28.f_0");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15.M28)
  return target;
}

::size_t Message8_M1_M4_M15_M28::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15.M28)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15_M28::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15_M28*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15_M28&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15.M28)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15_M28::CopyFrom(const Message8_M1_M4_M15_M28& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15.M28)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15_M28::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15_M28::InternalSwap(Message8_M1_M4_M15_M28* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M1_M4_M15_M28::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4_M15::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4_M15>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_._has_bits_);
};

Message8_M1_M4_M15::Message8_M1_M4_M15(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4.M15)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_8_{visibility, arena, from.f_8_},
        f_18_{visibility, arena, from.f_18_},
        f_21_{visibility, arena, from.f_21_},
        f_22_{visibility, arena, from.f_22_},
        f_4_(arena, from.f_4_),
        f_10_(arena, from.f_10_) {}

Message8_M1_M4_M15::Message8_M1_M4_M15(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4_M15& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4_M15* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_19_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M20>(
                              arena, *from._impl_.f_19_)
                        : nullptr;
  _impl_.f_20_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23>(
                              arena, *from._impl_.f_20_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_12_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_12_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4.M15)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4_M15::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_8_{visibility, arena},
        f_18_{visibility, arena},
        f_21_{visibility, arena},
        f_22_{visibility, arena},
        f_4_(arena),
        f_10_(arena) {}

inline void Message8_M1_M4_M15::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_19_),
           0,
           offsetof(Impl_, f_12_) -
               offsetof(Impl_, f_19_) +
               sizeof(Impl_::f_12_));
}
Message8_M1_M4_M15::~Message8_M1_M4_M15() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4.M15)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4_M15::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_4_.Destroy();
  _impl_.f_10_.Destroy();
  delete _impl_.f_19_;
  delete _impl_.f_20_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4_M15::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4_M15::MergeImpl,
          &Message8_M1_M4_M15::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 5, 67, 2> Message8_M1_M4_M15::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_._has_bits_),
    0, // no _extensions_
    24, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4282390689,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_M15_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 f_0 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1_M4_M15, _impl_.f_0_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_0_)}},
    // optional float f_1 = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 5, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_1_)}},
    // optional float f_2 = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 6, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_2_)}},
    // optional float f_3 = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 7, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_4 = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_5 = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M4_M15, _impl_.f_5_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_5_)}},
    // optional bool f_6 = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M1_M4_M15, _impl_.f_6_), 10>(),
     {80, 10, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_6_)}},
    // optional float f_7 = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 9, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_7_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated fixed32 f_8 = 14 [packed = true];
    {::_pbi::TcParser::FastF32P1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_8_)}},
    // optional bool f_9 = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M1_M4_M15, _impl_.f_9_), 11>(),
     {120, 11, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_9_)}},
    // optional string f_10 = 16;
    {::_pbi::TcParser::FastSS2,
     {386, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_10_)}},
    // optional fixed64 f_11 = 17;
    {::_pbi::TcParser::FastF64S2,
     {393, 12, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_11_)}},
    // optional float f_12 = 18;
    {::_pbi::TcParser::FastF32S2,
     {405, 13, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_12_)}},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M16 f_18 = 19;
    {::_pbi::TcParser::FastMtR2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_18_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20 f_19 = 20;
    {::_pbi::TcParser::FastMtS2,
     {418, 2, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_19_)}},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23 f_20 = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 3, 2, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_20_)}},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M25 f_21 = 22;
    {::_pbi::TcParser::FastMtR2,
     {434, 63, 3, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_21_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M28 f_22 = 24;
    {::_pbi::TcParser::FastMtR2,
     {450, 63, 4, PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_22_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_0_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_1_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_2_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float f_3 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_3_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string f_4 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_4_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_5 = 9;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_5_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bool f_6 = 10;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_6_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional float f_7 = 11;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_7_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated fixed32 f_8 = 14 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_8_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFixed32)},
    // optional bool f_9 = 15;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_9_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string f_10 = 16;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_10_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional fixed64 f_11 = 17;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_11_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional float f_12 = 18;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_12_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M16 f_18 = 19;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_18_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M20 f_19 = 20;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_19_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M4.M15.M23 f_20 = 21;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_20_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M25 f_21 = 22;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_21_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .fleetbench.proto.Message8.M1.M4.M15.M28 f_22 = 24;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_22_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M16>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M20>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M23>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M25>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15_M28>()},
  }}, {{
    "\43\0\0\0\0\3\0\0\0\0\0\4\0\0\0\0\0\0\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M4.M15"
    "f_4"
    "f_10"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4_M15::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4.M15)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_8_.Clear();
  _impl_.f_18_.Clear();
  _impl_.f_21_.Clear();
  _impl_.f_22_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_4_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_10_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.f_19_ != nullptr);
      _impl_.f_19_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.f_20_ != nullptr);
      _impl_.f_20_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_3_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_3_));
  }
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&_impl_.f_5_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_12_) -
        reinterpret_cast<char*>(&_impl_.f_5_)) + sizeof(_impl_.f_12_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4_M15::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4_M15::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4.M15)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 f_0 = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_f_0(), target);
  }

  // optional float f_1 = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_f_1(), target);
  }

  // optional float f_2 = 4;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_f_2(), target);
  }

  // optional float f_3 = 5;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_f_3(), target);
  }

  // optional string f_4 = 7;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_4();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.f_4");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional int64 f_5 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<9>(
            stream, this->_internal_f_5(), target);
  }

  // optional bool f_6 = 10;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        10, this->_internal_f_6(), target);
  }

  // optional float f_7 = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        11, this->_internal_f_7(), target);
  }

  // repeated fixed32 f_8 = 14 [packed = true];
  if (this->_internal_f_8_size() > 0) {
    target = stream->WriteFixedPacked(14, _internal_f_8(), target);
  }

  // optional bool f_9 = 15;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        15, this->_internal_f_9(), target);
  }

  // optional string f_10 = 16;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_10();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M4.M15.f_10");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // optional fixed64 f_11 = 17;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        17, this->_internal_f_11(), target);
  }

  // optional float f_12 = 18;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        18, this->_internal_f_12(), target);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M16 f_18 = 19;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_18_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_18().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            19, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M20 f_19 = 20;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        20, *_impl_.f_19_, _impl_.f_19_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15.M23 f_20 = 21;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, *_impl_.f_20_, _impl_.f_20_->GetCachedSize(), target, stream);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M25 f_21 = 22;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_21_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_21().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            22, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .fleetbench.proto.Message8.M1.M4.M15.M28 f_22 = 24;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_22_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_22().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            24, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4.M15)
  return target;
}

::size_t Message8_M1_M4_M15::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4.M15)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated fixed32 f_8 = 14 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_f_8_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M16 f_18 = 19;
  total_size += 2UL * this->_internal_f_18_size();
  for (const auto& msg : this->_internal_f_18()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M25 f_21 = 22;
  total_size += 2UL * this->_internal_f_21_size();
  for (const auto& msg : this->_internal_f_21()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .fleetbench.proto.Message8.M1.M4.M15.M28 f_22 = 24;
  total_size += 2UL * this->_internal_f_22_size();
  for (const auto& msg : this->_internal_f_22()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string f_4 = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_4());
    }

    // optional string f_10 = 16;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_10());
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M20 f_19 = 20;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_19_);
    }

    // optional .fleetbench.proto.Message8.M1.M4.M15.M23 f_20 = 21;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_20_);
    }

    // optional int32 f_0 = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_0());
    }

    // optional float f_1 = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

    // optional float f_2 = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 5;
    }

    // optional float f_3 = 5;
    if (cached_has_bits & 0x00000080u) {
      total_size += 5;
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional int64 f_5 = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_5());
    }

    // optional float f_7 = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += 5;
    }

    // optional bool f_6 = 10;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2;
    }

    // optional bool f_9 = 15;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2;
    }

    // optional fixed64 f_11 = 17;
    if (cached_has_bits & 0x00001000u) {
      total_size += 10;
    }

    // optional float f_12 = 18;
    if (cached_has_bits & 0x00002000u) {
      total_size += 6;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4_M15::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4_M15*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4_M15&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4.M15)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_8()->MergeFrom(from._internal_f_8());
  _this->_internal_mutable_f_18()->MergeFrom(
      from._internal_f_18());
  _this->_internal_mutable_f_21()->MergeFrom(
      from._internal_f_21());
  _this->_internal_mutable_f_22()->MergeFrom(
      from._internal_f_22());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_4(from._internal_f_4());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_10(from._internal_f_10());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.f_19_ != nullptr);
      if (_this->_impl_.f_19_ == nullptr) {
        _this->_impl_.f_19_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M20>(arena, *from._impl_.f_19_);
      } else {
        _this->_impl_.f_19_->MergeFrom(*from._impl_.f_19_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.f_20_ != nullptr);
      if (_this->_impl_.f_20_ == nullptr) {
        _this->_impl_.f_20_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15_M23>(arena, *from._impl_.f_20_);
      } else {
        _this->_impl_.f_20_->MergeFrom(*from._impl_.f_20_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_5_ = from._impl_.f_5_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_7_ = from._impl_.f_7_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_6_ = from._impl_.f_6_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_9_ = from._impl_.f_9_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.f_11_ = from._impl_.f_11_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.f_12_ = from._impl_.f_12_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4_M15::CopyFrom(const Message8_M1_M4_M15& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4.M15)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4_M15::IsInitialized() const {
  return true;
}

void Message8_M1_M4_M15::InternalSwap(Message8_M1_M4_M15* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_8_.InternalSwap(&other->_impl_.f_8_);
  _impl_.f_18_.InternalSwap(&other->_impl_.f_18_);
  _impl_.f_21_.InternalSwap(&other->_impl_.f_21_);
  _impl_.f_22_.InternalSwap(&other->_impl_.f_22_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_4_, &other->_impl_.f_4_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_10_, &other->_impl_.f_10_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_12_)
      + sizeof(Message8_M1_M4_M15::_impl_.f_12_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4_M15, _impl_.f_19_)>(
          reinterpret_cast<char*>(&_impl_.f_19_),
          reinterpret_cast<char*>(&other->_impl_.f_19_));
}

::google::protobuf::Metadata Message8_M1_M4_M15::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M4::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M4>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M4, _impl_._has_bits_);
};

Message8_M1_M4::Message8_M1_M4(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M4)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M4::Message8_M1_M4(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M4& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M4* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M4)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M4::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M4::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M4::~Message8_M1_M4() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M4)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M4::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M4::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M4, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M4::MergeImpl,
          &Message8_M1_M4::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M1_M4::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M4, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M4_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M4.M15 f_1 = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4, _impl_.f_1_)}},
    // optional int32 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1_M4, _impl_.f_0_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M4, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .fleetbench.proto.Message8.M1.M4.M15 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M4, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4_M15>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M4::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M4)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_1_ != nullptr);
    _impl_.f_1_->Clear();
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M4::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M4::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M4)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M4.M15 f_1 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M4)
  return target;
}

::size_t Message8_M1_M4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M4)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M1.M4.M15 f_1 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional int32 f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M4::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M4*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M4&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M4)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M4_M15>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M4::CopyFrom(const Message8_M1_M4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M4::IsInitialized() const {
  return true;
}

void Message8_M1_M4::InternalSwap(Message8_M1_M4* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M4, _impl_.f_0_)
      + sizeof(Message8_M1_M4::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M4, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M1_M4::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M9::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M9>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M9, _impl_._has_bits_);
};

Message8_M1_M9::Message8_M1_M9(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M9)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M9::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M1_M9::Message8_M1_M9(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M9& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M9* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M9)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M9::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M1_M9::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M9::~Message8_M1_M9() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M9)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M9::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M9::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M9, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M9::MergeImpl,
          &Message8_M1_M9::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 43, 2> Message8_M1_M9::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M9, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M9_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M9>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string f_0 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M9, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M9, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M9"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M9::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M9)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M9::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M9::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M9)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M9.f_0");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M9)
  return target;
}

::size_t Message8_M1_M9::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M9)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M9::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M9*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M9&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M9)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M9::CopyFrom(const Message8_M1_M9& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M9)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M9::IsInitialized() const {
  return true;
}

void Message8_M1_M9::InternalSwap(Message8_M1_M9* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M1_M9::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M11_M14_M18_M42::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M11_M14_M18_M42>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18_M42, _impl_._has_bits_);
};

Message8_M1_M11_M14_M18_M42::Message8_M1_M11_M14_M18_M42(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M11.M14.M18.M42)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M18_M42::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_),
        f_1_(arena, from.f_1_) {}

Message8_M1_M11_M14_M18_M42::Message8_M1_M11_M14_M18_M42(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M11_M14_M18_M42& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M11_M14_M18_M42* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M11.M14.M18.M42)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M18_M42::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena),
        f_1_(arena) {}

inline void Message8_M1_M11_M14_M18_M42::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M11_M14_M18_M42::~Message8_M1_M11_M14_M18_M42() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M11.M14.M18.M42)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M11_M14_M18_M42::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.f_1_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M11_M14_M18_M42::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18_M42, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M11_M14_M18_M42::MergeImpl,
          &Message8_M1_M11_M14_M18_M42::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2> Message8_M1_M11_M14_M18_M42::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18_M42, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M11_M14_M18_M42_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M18_M42>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes f_1 = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18_M42, _impl_.f_1_)}},
    // optional string f_0 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18_M42, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18_M42, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18_M42, _impl_.f_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M11.M14.M18.M42"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M11_M14_M18_M42::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M11.M14.M18.M42)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_1_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M11_M14_M18_M42::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M11_M14_M18_M42::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M11.M14.M18.M42)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M11.M14.M18.M42.f_0");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional bytes f_1 = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_1();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M11.M14.M18.M42)
  return target;
}

::size_t Message8_M1_M11_M14_M18_M42::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M11.M14.M18.M42)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string f_0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_0());
    }

    // optional bytes f_1 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_1());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M11_M14_M18_M42::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M11_M14_M18_M42*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M11_M14_M18_M42&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M11.M14.M18.M42)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_1(from._internal_f_1());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M11_M14_M18_M42::CopyFrom(const Message8_M1_M11_M14_M18_M42& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M11.M14.M18.M42)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M11_M14_M18_M42::IsInitialized() const {
  return true;
}

void Message8_M1_M11_M14_M18_M42::InternalSwap(Message8_M1_M11_M14_M18_M42* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_1_, &other->_impl_.f_1_, arena);
}

::google::protobuf::Metadata Message8_M1_M11_M14_M18_M42::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M11_M14_M18::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M11_M14_M18>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18, _impl_._has_bits_);
};

Message8_M1_M11_M14_M18::Message8_M1_M11_M14_M18(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M11.M14.M18)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M18::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M11_M14_M18::Message8_M1_M11_M14_M18(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M11_M14_M18& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M11_M14_M18* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14_M18_M42>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M11.M14.M18)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M18::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M11_M14_M18::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M11_M14_M18::~Message8_M1_M11_M14_M18() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M11.M14.M18)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M11_M14_M18::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M11_M14_M18::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M11_M14_M18::MergeImpl,
          &Message8_M1_M11_M14_M18::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 0, 2> Message8_M1_M11_M14_M18::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M11_M14_M18_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M18>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M1_M11_M14_M18, _impl_.f_0_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M1.M11.M14.M18.M42 f_1 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18, _impl_.f_1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .fleetbench.proto.Message8.M1.M11.M14.M18.M42 f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M18_M42>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M11_M14_M18::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M11.M14.M18)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_1_ != nullptr);
    _impl_.f_1_->Clear();
  }
  _impl_.f_0_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M11_M14_M18::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M11_M14_M18::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M11.M14.M18)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M11.M14.M18.M42 f_1 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M11.M14.M18)
  return target;
}

::size_t Message8_M1_M11_M14_M18::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M11.M14.M18)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M1.M11.M14.M18.M42 f_1 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional bool f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M11_M14_M18::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M11_M14_M18*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M11_M14_M18&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M11.M14.M18)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14_M18_M42>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M11_M14_M18::CopyFrom(const Message8_M1_M11_M14_M18& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M11.M14.M18)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M11_M14_M18::IsInitialized() const {
  return true;
}

void Message8_M1_M11_M14_M18::InternalSwap(Message8_M1_M11_M14_M18* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18, _impl_.f_0_)
      + sizeof(Message8_M1_M11_M14_M18::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M18, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M1_M11_M14_M18::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M11_M14_M19_M37::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M11_M14_M19_M37>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19_M37, _impl_._has_bits_);
};

Message8_M1_M11_M14_M19_M37::Message8_M1_M11_M14_M19_M37(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M11.M14.M19.M37)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M19_M37::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M1_M11_M14_M19_M37::Message8_M1_M11_M14_M19_M37(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M11_M14_M19_M37& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M11_M14_M19_M37* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M11.M14.M19.M37)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M19_M37::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M1_M11_M14_M19_M37::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M11_M14_M19_M37::~Message8_M1_M11_M14_M19_M37() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M11.M14.M19.M37)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M11_M14_M19_M37::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M11_M14_M19_M37::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19_M37, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M11_M14_M19_M37::MergeImpl,
          &Message8_M1_M11_M14_M19_M37::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2> Message8_M1_M11_M14_M19_M37::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19_M37, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M11_M14_M19_M37_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M19_M37>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string f_0 = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19_M37, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19_M37, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M11.M14.M19.M37"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M11_M14_M19_M37::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M11.M14.M19.M37)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M11_M14_M19_M37::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M11_M14_M19_M37::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M11.M14.M19.M37)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M11.M14.M19.M37.f_0");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M11.M14.M19.M37)
  return target;
}

::size_t Message8_M1_M11_M14_M19_M37::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M11.M14.M19.M37)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string f_0 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M11_M14_M19_M37::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M11_M14_M19_M37*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M11_M14_M19_M37&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M11.M14.M19.M37)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M11_M14_M19_M37::CopyFrom(const Message8_M1_M11_M14_M19_M37& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M11.M14.M19.M37)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M11_M14_M19_M37::IsInitialized() const {
  return true;
}

void Message8_M1_M11_M14_M19_M37::InternalSwap(Message8_M1_M11_M14_M19_M37* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M1_M11_M14_M19_M37::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M11_M14_M19::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M11_M14_M19>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19, _impl_._has_bits_);
};

Message8_M1_M11_M14_M19::Message8_M1_M11_M14_M19(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M11.M14.M19)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M19::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_3_{visibility, arena, from.f_3_},
        f_0_(arena, from.f_0_) {}

Message8_M1_M11_M14_M19::Message8_M1_M11_M14_M19(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M11_M14_M19& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M11_M14_M19* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M11.M14.M19)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M19::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_3_{visibility, arena},
        f_0_(arena) {}

inline void Message8_M1_M11_M14_M19::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M1_M11_M14_M19::~Message8_M1_M11_M14_M19() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M11.M14.M19)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M11_M14_M19::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M11_M14_M19::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M11_M14_M19::MergeImpl,
          &Message8_M1_M11_M14_M19::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 52, 2> Message8_M1_M11_M14_M19::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967283,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M11_M14_M19_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M19>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M1.M11.M14.M19.M37 f_3 = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19, _impl_.f_3_)}},
    // optional string f_0 = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .fleetbench.proto.Message8.M1.M11.M14.M19.M37 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M19, _impl_.f_3_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M19_M37>()},
  }}, {{
    "\50\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M11.M14.M19"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M11_M14_M19::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M11.M14.M19)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_3_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M11_M14_M19::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M11_M14_M19::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M11.M14.M19)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M11.M14.M19.f_0");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated .fleetbench.proto.Message8.M1.M11.M14.M19.M37 f_3 = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_3_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_3().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M11.M14.M19)
  return target;
}

::size_t Message8_M1_M11_M14_M19::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M11.M14.M19)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M11.M14.M19.M37 f_3 = 4;
  total_size += 1UL * this->_internal_f_3_size();
  for (const auto& msg : this->_internal_f_3()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional string f_0 = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M11_M14_M19::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M11_M14_M19*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M11_M14_M19&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M11.M14.M19)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_3()->MergeFrom(
      from._internal_f_3());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M11_M14_M19::CopyFrom(const Message8_M1_M11_M14_M19& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M11.M14.M19)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M11_M14_M19::IsInitialized() const {
  return true;
}

void Message8_M1_M11_M14_M19::InternalSwap(Message8_M1_M11_M14_M19* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_3_.InternalSwap(&other->_impl_.f_3_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M1_M11_M14_M19::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M11_M14_M27_M32::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M11_M14_M27_M32>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M32, _impl_._has_bits_);
};

Message8_M1_M11_M14_M27_M32::Message8_M1_M11_M14_M27_M32(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M11.M14.M27.M32)
}
Message8_M1_M11_M14_M27_M32::Message8_M1_M11_M14_M27_M32(
    ::google::protobuf::Arena* arena, const Message8_M1_M11_M14_M27_M32& from)
    : Message8_M1_M11_M14_M27_M32(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M27_M32::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M11_M14_M27_M32::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M1_M11_M14_M27_M32::~Message8_M1_M11_M14_M27_M32() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M11.M14.M27.M32)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M11_M14_M27_M32::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M11_M14_M27_M32::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M32, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M11_M14_M27_M32::MergeImpl,
          &Message8_M1_M11_M14_M27_M32::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Message8_M1_M11_M14_M27_M32::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M32, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M11_M14_M27_M32_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M27_M32>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M32.E8 f_0 = 1;
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M32, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M32.E8 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M32, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M11_M14_M27_M32_E8_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M11_M14_M27_M32::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M11.M14.M27.M32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M11_M14_M27_M32::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M11_M14_M27_M32::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M11.M14.M27.M32)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M32.E8 f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M11.M14.M27.M32)
  return target;
}

::size_t Message8_M1_M11_M14_M27_M32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M11.M14.M27.M32)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M32.E8 f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M11_M14_M27_M32::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M11_M14_M27_M32*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M11_M14_M27_M32&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M11.M14.M27.M32)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M11_M14_M27_M32::CopyFrom(const Message8_M1_M11_M14_M27_M32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M11.M14.M27.M32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M11_M14_M27_M32::IsInitialized() const {
  return true;
}

void Message8_M1_M11_M14_M27_M32::InternalSwap(Message8_M1_M11_M14_M27_M32* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M11_M14_M27_M32::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M11_M14_M27_M39_M58::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M11_M14_M27_M39_M58>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39_M58, _impl_._has_bits_);
};

Message8_M1_M11_M14_M27_M39_M58::Message8_M1_M11_M14_M27_M39_M58(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58)
}
Message8_M1_M11_M14_M27_M39_M58::Message8_M1_M11_M14_M27_M39_M58(
    ::google::protobuf::Arena* arena, const Message8_M1_M11_M14_M27_M39_M58& from)
    : Message8_M1_M11_M14_M27_M39_M58(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M27_M39_M58::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M11_M14_M27_M39_M58::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M1_M11_M14_M27_M39_M58::~Message8_M1_M11_M14_M27_M39_M58() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M11_M14_M27_M39_M58::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M11_M14_M27_M39_M58::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39_M58, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M11_M14_M27_M39_M58::MergeImpl,
          &Message8_M1_M11_M14_M27_M39_M58::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M1_M11_M14_M27_M39_M58::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39_M58, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M1_M11_M14_M27_M39_M58_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M27_M39_M58>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional float f_0 = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39_M58, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39_M58, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M11_M14_M27_M39_M58::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M11_M14_M27_M39_M58::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M11_M14_M27_M39_M58::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58)
  return target;
}

::size_t Message8_M1_M11_M14_M27_M39_M58::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional float f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M11_M14_M27_M39_M58::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M11_M14_M27_M39_M58*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M11_M14_M27_M39_M58&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M11_M14_M27_M39_M58::CopyFrom(const Message8_M1_M11_M14_M27_M39_M58& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M11_M14_M27_M39_M58::IsInitialized() const {
  return true;
}

void Message8_M1_M11_M14_M27_M39_M58::InternalSwap(Message8_M1_M11_M14_M27_M39_M58* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M11_M14_M27_M39_M58::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M11_M14_M27_M39::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M11_M14_M27_M39>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39, _impl_._has_bits_);
};

Message8_M1_M11_M14_M27_M39::Message8_M1_M11_M14_M27_M39(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M11.M14.M27.M39)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M27_M39::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_{visibility, arena, from.f_1_} {}

Message8_M1_M11_M14_M27_M39::Message8_M1_M11_M14_M27_M39(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M11_M14_M27_M39& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M11_M14_M27_M39* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M11.M14.M27.M39)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M27_M39::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_{visibility, arena} {}

inline void Message8_M1_M11_M14_M27_M39::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M1_M11_M14_M27_M39::~Message8_M1_M11_M14_M27_M39() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M11.M14.M27.M39)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M11_M14_M27_M39::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M11_M14_M27_M39::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M11_M14_M27_M39::MergeImpl,
          &Message8_M1_M11_M14_M27_M39::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M1_M11_M14_M27_M39::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M11_M14_M27_M39_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M27_M39>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58 f_1 = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39, _impl_.f_1_)}},
    // optional uint64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M11_M14_M27_M39, _impl_.f_0_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // repeated .fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27_M39, _impl_.f_1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M27_M39_M58>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M11_M14_M27_M39::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M11.M14.M27.M39)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_1_.Clear();
  _impl_.f_0_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M11_M14_M27_M39::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M11_M14_M27_M39::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M11.M14.M27.M39)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_f_0(), target);
  }

  // repeated .fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58 f_1 = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_1_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_1().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M11.M14.M27.M39)
  return target;
}

::size_t Message8_M1_M11_M14_M27_M39::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M11.M14.M27.M39)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M11.M14.M27.M39.M58 f_1 = 2;
  total_size += 1UL * this->_internal_f_1_size();
  for (const auto& msg : this->_internal_f_1()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional uint64 f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M11_M14_M27_M39::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M11_M14_M27_M39*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M11_M14_M27_M39&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M11.M14.M27.M39)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_1()->MergeFrom(
      from._internal_f_1());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M11_M14_M27_M39::CopyFrom(const Message8_M1_M11_M14_M27_M39& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M11.M14.M27.M39)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M11_M14_M27_M39::IsInitialized() const {
  return true;
}

void Message8_M1_M11_M14_M27_M39::InternalSwap(Message8_M1_M11_M14_M27_M39* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_1_.InternalSwap(&other->_impl_.f_1_);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M1_M11_M14_M27_M39::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M11_M14_M27::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M11_M14_M27>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27, _impl_._has_bits_);
};

Message8_M1_M11_M14_M27::Message8_M1_M11_M14_M27(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M11.M14.M27)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M27::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M1_M11_M14_M27::Message8_M1_M11_M14_M27(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M11_M14_M27& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M11_M14_M27* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14_M27_M32>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_3_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14_M27_M39>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M11.M14.M27)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14_M27::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M1_M11_M14_M27::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_0_));
}
Message8_M1_M11_M14_M27::~Message8_M1_M11_M14_M27() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M11.M14.M27)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M11_M14_M27::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_2_;
  delete _impl_.f_3_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M11_M14_M27::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M11_M14_M27::MergeImpl,
          &Message8_M1_M11_M14_M27::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Message8_M1_M11_M14_M27::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967281,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M11_M14_M27_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M27>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M39 f_3 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 f_0 = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M32 f_2 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27, _impl_.f_0_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M32 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M39 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27, _impl_.f_3_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M27_M32>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M27_M39>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M11_M14_M27::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M11.M14.M27)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.f_2_ != nullptr);
      _impl_.f_2_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_3_ != nullptr);
      _impl_.f_3_->Clear();
    }
  }
  _impl_.f_0_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M11_M14_M27::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M11_M14_M27::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M11.M14.M27)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 f_0 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        2, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M32 f_2 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M39 f_3 = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M11.M14.M27)
  return target;
}

::size_t Message8_M1_M11_M14_M27::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M11.M14.M27)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M32 f_2 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional .fleetbench.proto.Message8.M1.M11.M14.M27.M39 f_3 = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional fixed64 f_0 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M11_M14_M27::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M11_M14_M27*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M11_M14_M27&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M11.M14.M27)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14_M27_M32>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14_M27_M39>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M11_M14_M27::CopyFrom(const Message8_M1_M11_M14_M27& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M11.M14.M27)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M11_M14_M27::IsInitialized() const {
  return true;
}

void Message8_M1_M11_M14_M27::InternalSwap(Message8_M1_M11_M14_M27* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27, _impl_.f_0_)
      + sizeof(Message8_M1_M11_M14_M27::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14_M27, _impl_.f_2_)>(
          reinterpret_cast<char*>(&_impl_.f_2_),
          reinterpret_cast<char*>(&other->_impl_.f_2_));
}

::google::protobuf::Metadata Message8_M1_M11_M14_M27::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M11_M14::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M11_M14>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_._has_bits_);
};

Message8_M1_M11_M14::Message8_M1_M11_M14(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M11.M14)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_{visibility, arena, from.f_1_},
        _f_1_cached_byte_size_{0},
        f_9_{visibility, arena, from.f_9_},
        _f_9_cached_byte_size_{0},
        f_33_{visibility, arena, from.f_33_},
        f_2_(arena, from.f_2_),
        f_6_(arena, from.f_6_),
        f_7_(arena, from.f_7_),
        f_10_(arena, from.f_10_),
        f_13_(arena, from.f_13_),
        f_16_(arena, from.f_16_) {}

Message8_M1_M11_M14::Message8_M1_M11_M14(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M11_M14& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M11_M14* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_31_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14_M18>(
                              arena, *from._impl_.f_31_)
                        : nullptr;
  _impl_.f_34_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14_M27>(
                              arena, *from._impl_.f_34_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_15_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_15_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M11.M14)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11_M14::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_{visibility, arena},
        _f_1_cached_byte_size_{0},
        f_9_{visibility, arena},
        _f_9_cached_byte_size_{0},
        f_33_{visibility, arena},
        f_2_(arena),
        f_6_(arena),
        f_7_(arena),
        f_10_(arena),
        f_13_(arena),
        f_16_(arena) {}

inline void Message8_M1_M11_M14::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_31_),
           0,
           offsetof(Impl_, f_15_) -
               offsetof(Impl_, f_31_) +
               sizeof(Impl_::f_15_));
}
Message8_M1_M11_M14::~Message8_M1_M11_M14() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M11.M14)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M11_M14::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_2_.Destroy();
  _impl_.f_6_.Destroy();
  _impl_.f_7_.Destroy();
  _impl_.f_10_.Destroy();
  _impl_.f_13_.Destroy();
  _impl_.f_16_.Destroy();
  delete _impl_.f_31_;
  delete _impl_.f_34_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M11_M14::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M11_M14::MergeImpl,
          &Message8_M1_M11_M14::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 5, 82, 7> Message8_M1_M11_M14::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_._has_bits_),
    0, // no _extensions_
    36, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    2204552532,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M11_M14_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M11_M14, _impl_.f_0_), 8>(),
     {8, 8, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_0_)}},
    // repeated int32 f_1 = 2 [packed = true];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_2 = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool f_3 = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M1_M11_M14, _impl_.f_3_), 11>(),
     {48, 11, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_4 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M11_M14, _impl_.f_4_), 9>(),
     {64, 9, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_5 = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1_M11_M14, _impl_.f_5_), 10>(),
     {80, 10, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_5_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_6 = 13;
    {::_pbi::TcParser::FastSS1,
     {106, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_6_)}},
    // optional string f_7 = 14;
    {::_pbi::TcParser::FastSS1,
     {114, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_7_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M1.M11.M14.E4 f_8 = 17;
    {::_pbi::TcParser::FastEvS2,
     {392, 13, 3, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_8_)}},
    // repeated .fleetbench.proto.Message8.M1.M11.M14.M19 f_33 = 34;
    {::_pbi::TcParser::FastMtR2,
     {658, 63, 1, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_33_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated uint32 f_9 = 20 [packed = true];
    {::_pbi::TcParser::FastV32P2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_9_)}},
    // optional string f_10 = 21;
    {::_pbi::TcParser::FastSS2,
     {426, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_10_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional float f_11 = 24;
    {::_pbi::TcParser::FastF32S2,
     {453, 14, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_11_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool f_12 = 27;
    {::_pbi::TcParser::FastV8S2,
     {472, 12, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_12_)}},
    // optional string f_13 = 28;
    {::_pbi::TcParser::FastSS2,
     {482, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_13_)}},
    // optional int32 f_14 = 29;
    {::_pbi::TcParser::FastV32S2,
     {488, 15, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_14_)}},
    // optional .fleetbench.proto.Message8.M1.M11.M14.E5 f_15 = 30;
    {::_pbi::TcParser::FastEvS2,
     {496, 16, 4, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_15_)}},
    // optional string f_16 = 31;
    {::_pbi::TcParser::FastSS2,
     {506, 5, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_16_)}},
  }}, {{
    33, 0, 1,
    65524, 17,
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_0_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated int32 f_1 = 2 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // optional string f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool f_3 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_3_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int64 f_4 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_4_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_5 = 10;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_5_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_6 = 13;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_6_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_7 = 14;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_7_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M11.M14.E4 f_8 = 17;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_8_), _Internal::kHasBitsOffset + 13, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // repeated uint32 f_9 = 20 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_9_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // optional string f_10 = 21;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_10_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional float f_11 = 24;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_11_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional bool f_12 = 27;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_12_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string f_13 = 28;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_13_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 f_14 = 29;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_14_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .fleetbench.proto.Message8.M1.M11.M14.E5 f_15 = 30;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_15_), _Internal::kHasBitsOffset + 16, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional string f_16 = 31;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_16_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M11.M14.M18 f_31 = 33;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_31_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .fleetbench.proto.Message8.M1.M11.M14.M19 f_33 = 34;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_33_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M11.M14.M27 f_34 = 36;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_34_), _Internal::kHasBitsOffset + 7, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M18>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M19>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14_M27>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M11_M14_E4_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M1_M11_M14_E5_internal_data_},
  }}, {{
    "\44\0\0\3\0\0\0\3\3\0\0\4\0\0\4\0\0\4\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1.M11.M14"
    "f_2"
    "f_6"
    "f_7"
    "f_10"
    "f_13"
    "f_16"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M11_M14::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M11.M14)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_1_.Clear();
  _impl_.f_9_.Clear();
  _impl_.f_33_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_2_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_6_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.f_7_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.f_10_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.f_13_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.f_16_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.f_31_ != nullptr);
      _impl_.f_31_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.f_34_ != nullptr);
      _impl_.f_34_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_14_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_14_));
  }
  _impl_.f_15_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M11_M14::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M11_M14::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M11.M14)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // repeated int32 f_1 = 2 [packed = true];
  {
    int byte_size = _impl_._f_1_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_f_1(), byte_size, target);
    }
  }

  // optional string f_2 = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_2();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M11.M14.f_2");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional bool f_3 = 6;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_f_3(), target);
  }

  // optional int64 f_4 = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_f_4(), target);
  }

  // optional int64 f_5 = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<10>(
            stream, this->_internal_f_5(), target);
  }

  // optional string f_6 = 13;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_6();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M11.M14.f_6");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // optional string f_7 = 14;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_f_7();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M11.M14.f_7");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // optional .fleetbench.proto.Message8.M1.M11.M14.E4 f_8 = 17;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        17, this->_internal_f_8(), target);
  }

  // repeated uint32 f_9 = 20 [packed = true];
  {
    int byte_size = _impl_._f_9_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          20, _internal_f_9(), byte_size, target);
    }
  }

  // optional string f_10 = 21;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_f_10();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M11.M14.f_10");
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  // optional float f_11 = 24;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        24, this->_internal_f_11(), target);
  }

  // optional bool f_12 = 27;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        27, this->_internal_f_12(), target);
  }

  // optional string f_13 = 28;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_f_13();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M11.M14.f_13");
    target = stream->WriteStringMaybeAliased(28, _s, target);
  }

  // optional int32 f_14 = 29;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        29, this->_internal_f_14(), target);
  }

  // optional .fleetbench.proto.Message8.M1.M11.M14.E5 f_15 = 30;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        30, this->_internal_f_15(), target);
  }

  // optional string f_16 = 31;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_f_16();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M11.M14.f_16");
    target = stream->WriteStringMaybeAliased(31, _s, target);
  }

  // optional .fleetbench.proto.Message8.M1.M11.M14.M18 f_31 = 33;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        33, *_impl_.f_31_, _impl_.f_31_->GetCachedSize(), target, stream);
  }

  // repeated .fleetbench.proto.Message8.M1.M11.M14.M19 f_33 = 34;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_33_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_33().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            34, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M11.M14.M27 f_34 = 36;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        36, *_impl_.f_34_, _impl_.f_34_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M11.M14)
  return target;
}

::size_t Message8_M1_M11_M14::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M11.M14)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated int32 f_1 = 2 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_f_1())
    ;
    _impl_._f_1_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint32 f_9 = 20 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_f_9())
    ;
    _impl_._f_9_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .fleetbench.proto.Message8.M1.M11.M14.M19 f_33 = 34;
  total_size += 2UL * this->_internal_f_33_size();
  for (const auto& msg : this->_internal_f_33()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string f_2 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_2());
    }

    // optional string f_6 = 13;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_6());
    }

    // optional string f_7 = 14;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_7());
    }

    // optional string f_10 = 21;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_10());
    }

    // optional string f_13 = 28;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_13());
    }

    // optional string f_16 = 31;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_16());
    }

    // optional .fleetbench.proto.Message8.M1.M11.M14.M18 f_31 = 33;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_31_);
    }

    // optional .fleetbench.proto.Message8.M1.M11.M14.M27 f_34 = 36;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_34_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int64 f_0 = 1;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_0());
    }

    // optional int64 f_4 = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_4());
    }

    // optional int64 f_5 = 10;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_5());
    }

    // optional bool f_3 = 6;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2;
    }

    // optional bool f_12 = 27;
    if (cached_has_bits & 0x00001000u) {
      total_size += 3;
    }

    // optional .fleetbench.proto.Message8.M1.M11.M14.E4 f_8 = 17;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_8());
    }

    // optional float f_11 = 24;
    if (cached_has_bits & 0x00004000u) {
      total_size += 6;
    }

    // optional int32 f_14 = 29;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_14());
    }

  }
  // optional .fleetbench.proto.Message8.M1.M11.M14.E5 f_15 = 30;
  if (cached_has_bits & 0x00010000u) {
    total_size += 2 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_f_15());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M11_M14::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M11_M14*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M11_M14&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M11.M14)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_1()->MergeFrom(from._internal_f_1());
  _this->_internal_mutable_f_9()->MergeFrom(from._internal_f_9());
  _this->_internal_mutable_f_33()->MergeFrom(
      from._internal_f_33());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_2(from._internal_f_2());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_6(from._internal_f_6());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_f_7(from._internal_f_7());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_f_10(from._internal_f_10());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_f_13(from._internal_f_13());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_f_16(from._internal_f_16());
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.f_31_ != nullptr);
      if (_this->_impl_.f_31_ == nullptr) {
        _this->_impl_.f_31_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14_M18>(arena, *from._impl_.f_31_);
      } else {
        _this->_impl_.f_31_->MergeFrom(*from._impl_.f_31_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.f_34_ != nullptr);
      if (_this->_impl_.f_34_ == nullptr) {
        _this->_impl_.f_34_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14_M27>(arena, *from._impl_.f_34_);
      } else {
        _this->_impl_.f_34_->MergeFrom(*from._impl_.f_34_);
      }
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_5_ = from._impl_.f_5_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.f_12_ = from._impl_.f_12_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.f_8_ = from._impl_.f_8_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.f_11_ = from._impl_.f_11_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.f_14_ = from._impl_.f_14_;
    }
  }
  if (cached_has_bits & 0x00010000u) {
    _this->_impl_.f_15_ = from._impl_.f_15_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M11_M14::CopyFrom(const Message8_M1_M11_M14& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M11.M14)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M11_M14::IsInitialized() const {
  return true;
}

void Message8_M1_M11_M14::InternalSwap(Message8_M1_M11_M14* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_1_.InternalSwap(&other->_impl_.f_1_);
  _impl_.f_9_.InternalSwap(&other->_impl_.f_9_);
  _impl_.f_33_.InternalSwap(&other->_impl_.f_33_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_2_, &other->_impl_.f_2_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_6_, &other->_impl_.f_6_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_7_, &other->_impl_.f_7_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_10_, &other->_impl_.f_10_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_13_, &other->_impl_.f_13_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_16_, &other->_impl_.f_16_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_15_)
      + sizeof(Message8_M1_M11_M14::_impl_.f_15_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M11_M14, _impl_.f_31_)>(
          reinterpret_cast<char*>(&_impl_.f_31_),
          reinterpret_cast<char*>(&other->_impl_.f_31_));
}

::google::protobuf::Metadata Message8_M1_M11_M14::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1_M11::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1_M11>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_._has_bits_);
};

Message8_M1_M11::Message8_M1_M11(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1.M11)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_),
        f_2_(arena, from.f_2_) {}

Message8_M1_M11::Message8_M1_M11(
    ::google::protobuf::Arena* arena,
    const Message8_M1_M11& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1_M11* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_6_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14>(
                              arena, *from._impl_.f_6_)
                        : nullptr;
  _impl_.f_1_ = from._impl_.f_1_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1.M11)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1_M11::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena),
        f_2_(arena) {}

inline void Message8_M1_M11::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_6_),
           0,
           offsetof(Impl_, f_1_) -
               offsetof(Impl_, f_6_) +
               sizeof(Impl_::f_1_));
}
Message8_M1_M11::~Message8_M1_M11() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1.M11)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1_M11::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.f_2_.Destroy();
  delete _impl_.f_6_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1_M11::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_._cached_size_),
              false,
          },
          &Message8_M1_M11::MergeImpl,
          &Message8_M1_M11::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 44, 2> Message8_M1_M11::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_._has_bits_),
    0, // no _extensions_
    8, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967130,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_M11_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M1.M11.M14 f_6 = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_.f_6_)}},
    // optional bytes f_0 = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_.f_0_)}},
    // optional string f_2 = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_.f_2_)}},
    // optional float f_1 = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_.f_1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional float f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_.f_1_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string f_2 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_.f_2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M1.M11.M14 f_6 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_.f_6_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11_M14>()},
  }}, {{
    "\40\0\0\3\0\0\0\0"
    "fleetbench.proto.Message8.M1.M11"
    "f_2"
  }},
};

PROTOBUF_NOINLINE void Message8_M1_M11::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1.M11)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_2_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.f_6_ != nullptr);
      _impl_.f_6_->Clear();
    }
  }
  _impl_.f_1_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1_M11::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1_M11::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1.M11)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional float f_1 = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_f_1(), target);
  }

  // optional string f_2 = 6;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_2();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.M11.f_2");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional .fleetbench.proto.Message8.M1.M11.M14 f_6 = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.f_6_, _impl_.f_6_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1.M11)
  return target;
}

::size_t Message8_M1_M11::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1.M11)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bytes f_0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_0());
    }

    // optional string f_2 = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_2());
    }

    // optional .fleetbench.proto.Message8.M1.M11.M14 f_6 = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_6_);
    }

    // optional float f_1 = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1_M11::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1_M11*>(&to_msg);
  auto& from = static_cast<const Message8_M1_M11&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1.M11)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_2(from._internal_f_2());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.f_6_ != nullptr);
      if (_this->_impl_.f_6_ == nullptr) {
        _this->_impl_.f_6_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M11_M14>(arena, *from._impl_.f_6_);
      } else {
        _this->_impl_.f_6_->MergeFrom(*from._impl_.f_6_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1_M11::CopyFrom(const Message8_M1_M11& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1.M11)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1_M11::IsInitialized() const {
  return true;
}

void Message8_M1_M11::InternalSwap(Message8_M1_M11* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_2_, &other->_impl_.f_2_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_.f_1_)
      + sizeof(Message8_M1_M11::_impl_.f_1_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1_M11, _impl_.f_6_)>(
          reinterpret_cast<char*>(&_impl_.f_6_),
          reinterpret_cast<char*>(&other->_impl_.f_6_));
}

::google::protobuf::Metadata Message8_M1_M11::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M1::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M1>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_._has_bits_);
};

Message8_M1::Message8_M1(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M1)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_16_{visibility, arena, from.f_16_},
        f_18_{visibility, arena, from.f_18_},
        f_0_(arena, from.f_0_),
        f_2_(arena, from.f_2_),
        f_4_(arena, from.f_4_) {}

Message8_M1::Message8_M1(
    ::google::protobuf::Arena* arena,
    const Message8_M1& from)
    : ::google::protobuf::Message(arena) {
  Message8_M1* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_17_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M9>(
                              arena, *from._impl_.f_17_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_1_),
           offsetof(Impl_, f_12_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_12_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M1)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_16_{visibility, arena},
        f_18_{visibility, arena},
        f_0_(arena),
        f_2_(arena),
        f_4_(arena) {}

inline void Message8_M1::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_17_),
           0,
           offsetof(Impl_, f_12_) -
               offsetof(Impl_, f_17_) +
               sizeof(Impl_::f_12_));
}
Message8_M1::~Message8_M1() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M1)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M1::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.f_2_.Destroy();
  _impl_.f_4_.Destroy();
  delete _impl_.f_17_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M1::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_._cached_size_),
              false,
          },
          &Message8_M1::MergeImpl,
          &Message8_M1::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 16, 3, 59, 2> Message8_M1::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_._has_bits_),
    0, // no _extensions_
    19, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294445076,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M1_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_0 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_0_)}},
    // optional uint64 f_1 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1, _impl_.f_1_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_2 = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed32 f_3 = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_3_)}},
    // optional bytes f_4 = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_4_)}},
    // optional uint64 f_5 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1, _impl_.f_5_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_5_)}},
    // optional int32 f_6 = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1, _impl_.f_6_), 6>(),
     {72, 6, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_6_)}},
    // optional float f_7 = 10;
    {::_pbi::TcParser::FastF32S1,
     {85, 8, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_7_)}},
    // optional int32 f_8 = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1, _impl_.f_8_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_8_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 f_9 = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1, _impl_.f_9_), 10>(),
     {104, 10, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_9_)}},
    // optional uint32 f_10 = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M1, _impl_.f_10_), 11>(),
     {112, 11, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_10_)}},
    // optional int64 f_11 = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M1, _impl_.f_11_), 12>(),
     {120, 12, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_11_)}},
    // optional uint32 f_12 = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 13, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_12_)}},
    // repeated .fleetbench.proto.Message8.M1.M4 f_16 = 17;
    {::_pbi::TcParser::FastMtR2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_16_)}},
    // optional .fleetbench.proto.Message8.M1.M9 f_17 = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 3, 1, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_17_)}},
    // repeated .fleetbench.proto.Message8.M1.M11 f_18 = 19;
    {::_pbi::TcParser::FastMtR2,
     {410, 63, 2, PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_18_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_1_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional fixed32 f_3 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_3_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional bytes f_4 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_4_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint64 f_5 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_5_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 f_6 = 9;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_6_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float f_7 = 10;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_7_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 f_8 = 11;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_8_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 f_9 = 13;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_9_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 f_10 = 14;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_10_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int64 f_11 = 15;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_11_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint32 f_12 = 16;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_12_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .fleetbench.proto.Message8.M1.M4 f_16 = 17;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_16_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M1.M9 f_17 = 18;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_17_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .fleetbench.proto.Message8.M1.M11 f_18 = 19;
    {PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_18_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M4>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M9>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1_M11>()},
  }}, {{
    "\34\3\0\3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M1"
    "f_0"
    "f_2"
  }},
};

PROTOBUF_NOINLINE void Message8_M1::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_16_.Clear();
  _impl_.f_18_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_2_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.f_4_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.f_17_ != nullptr);
      _impl_.f_17_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&_impl_.f_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_5_) -
        reinterpret_cast<char*>(&_impl_.f_1_)) + sizeof(_impl_.f_5_));
  }
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&_impl_.f_7_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_12_) -
        reinterpret_cast<char*>(&_impl_.f_7_)) + sizeof(_impl_.f_12_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M1::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M1::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M1)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.f_0");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional uint64 f_1 = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_f_1(), target);
  }

  // optional string f_2 = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_2();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M1.f_2");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional fixed32 f_3 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        6, this->_internal_f_3(), target);
  }

  // optional bytes f_4 = 7;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_f_4();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  // optional uint64 f_5 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this->_internal_f_5(), target);
  }

  // optional int32 f_6 = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_f_6(), target);
  }

  // optional float f_7 = 10;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        10, this->_internal_f_7(), target);
  }

  // optional int32 f_8 = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_f_8(), target);
  }

  // optional int32 f_9 = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_f_9(), target);
  }

  // optional uint32 f_10 = 14;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        14, this->_internal_f_10(), target);
  }

  // optional int64 f_11 = 15;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<15>(
            stream, this->_internal_f_11(), target);
  }

  // optional uint32 f_12 = 16;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this->_internal_f_12(), target);
  }

  // repeated .fleetbench.proto.Message8.M1.M4 f_16 = 17;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_16_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_16().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            17, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .fleetbench.proto.Message8.M1.M9 f_17 = 18;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        18, *_impl_.f_17_, _impl_.f_17_->GetCachedSize(), target, stream);
  }

  // repeated .fleetbench.proto.Message8.M1.M11 f_18 = 19;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_18_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_18().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            19, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M1)
  return target;
}

::size_t Message8_M1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M1)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1.M4 f_16 = 17;
  total_size += 2UL * this->_internal_f_16_size();
  for (const auto& msg : this->_internal_f_16()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .fleetbench.proto.Message8.M1.M11 f_18 = 19;
  total_size += 2UL * this->_internal_f_18_size();
  for (const auto& msg : this->_internal_f_18()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string f_0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_0());
    }

    // optional string f_2 = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_2());
    }

    // optional bytes f_4 = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_4());
    }

    // optional .fleetbench.proto.Message8.M1.M9 f_17 = 18;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_17_);
    }

    // optional uint64 f_1 = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_1());
    }

    // optional fixed32 f_3 = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

    // optional int32 f_6 = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_6());
    }

    // optional uint64 f_5 = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_5());
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional float f_7 = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 5;
    }

    // optional int32 f_8 = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_8());
    }

    // optional int32 f_9 = 13;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_9());
    }

    // optional uint32 f_10 = 14;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_f_10());
    }

    // optional int64 f_11 = 15;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_11());
    }

    // optional uint32 f_12 = 16;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_f_12());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M1::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M1*>(&to_msg);
  auto& from = static_cast<const Message8_M1&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M1)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_16()->MergeFrom(
      from._internal_f_16());
  _this->_internal_mutable_f_18()->MergeFrom(
      from._internal_f_18());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_2(from._internal_f_2());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_f_4(from._internal_f_4());
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.f_17_ != nullptr);
      if (_this->_impl_.f_17_ == nullptr) {
        _this->_impl_.f_17_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M1_M9>(arena, *from._impl_.f_17_);
      } else {
        _this->_impl_.f_17_->MergeFrom(*from._impl_.f_17_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_6_ = from._impl_.f_6_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_5_ = from._impl_.f_5_;
    }
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_7_ = from._impl_.f_7_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_8_ = from._impl_.f_8_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_9_ = from._impl_.f_9_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_10_ = from._impl_.f_10_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.f_11_ = from._impl_.f_11_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.f_12_ = from._impl_.f_12_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M1::CopyFrom(const Message8_M1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M1::IsInitialized() const {
  return true;
}

void Message8_M1::InternalSwap(Message8_M1* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_16_.InternalSwap(&other->_impl_.f_16_);
  _impl_.f_18_.InternalSwap(&other->_impl_.f_18_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_2_, &other->_impl_.f_2_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_4_, &other->_impl_.f_4_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_12_)
      + sizeof(Message8_M1::_impl_.f_12_)
      - PROTOBUF_FIELD_OFFSET(Message8_M1, _impl_.f_17_)>(
          reinterpret_cast<char*>(&_impl_.f_17_),
          reinterpret_cast<char*>(&other->_impl_.f_17_));
}

::google::protobuf::Metadata Message8_M1::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M3::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M3>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_._has_bits_);
};

Message8_M2_M3::Message8_M2_M3(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M3)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_{visibility, arena, from.f_1_},
        f_2_{visibility, arena, from.f_2_},
        _f_2_cached_byte_size_{0},
        f_3_(arena, from.f_3_) {}

Message8_M2_M3::Message8_M2_M3(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M3& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M3* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_4_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_4_),
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_4_) +
               sizeof(Impl_::f_0_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M3)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_{visibility, arena},
        f_2_{visibility, arena},
        _f_2_cached_byte_size_{0},
        f_3_(arena) {}

inline void Message8_M2_M3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_4_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_4_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M3::~Message8_M2_M3() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M3)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M3::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_3_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M3::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M3::MergeImpl,
          &Message8_M2_M3::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 43, 2> Message8_M2_M3::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967236,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M3_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M3, _impl_.f_0_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_0_)}},
    // repeated float f_1 = 2 [packed = true];
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int32 f_2 = 4 [packed = true];
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_2_)}},
    // optional string f_3 = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_3_)}},
    // optional uint64 f_4 = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M3, _impl_.f_4_), 1>(),
     {48, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_0_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated float f_1 = 2 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated int32 f_2 = 4 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_2_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // optional string f_3 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_3_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 f_4 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_4_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\37\0\0\0\3\0\0\0"
    "fleetbench.proto.Message8.M2.M3"
    "f_3"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M3::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_1_.Clear();
  _impl_.f_2_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_3_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.f_4_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_0_) -
        reinterpret_cast<char*>(&_impl_.f_4_)) + sizeof(_impl_.f_0_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M3::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M3::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_f_0(), target);
  }

  // repeated float f_1 = 2 [packed = true];
  if (this->_internal_f_1_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_f_1(), target);
  }

  // repeated int32 f_2 = 4 [packed = true];
  {
    int byte_size = _impl_._f_2_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          4, _internal_f_2(), byte_size, target);
    }
  }

  // optional string f_3 = 5;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_3();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M3.f_3");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional uint64 f_4 = 6;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_f_4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M3)
  return target;
}

::size_t Message8_M2_M3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated float f_1 = 2 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_f_1_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 f_2 = 4 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_f_2())
    ;
    _impl_._f_2_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string f_3 = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_3());
    }

    // optional uint64 f_4 = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_4());
    }

    // optional bool f_0 = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M3*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_1()->MergeFrom(from._internal_f_1());
  _this->_internal_mutable_f_2()->MergeFrom(from._internal_f_2());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_3(from._internal_f_3());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M3::CopyFrom(const Message8_M2_M3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M3::IsInitialized() const {
  return true;
}

void Message8_M2_M3::InternalSwap(Message8_M2_M3* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_1_.InternalSwap(&other->_impl_.f_1_);
  _impl_.f_2_.InternalSwap(&other->_impl_.f_2_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_3_, &other->_impl_.f_3_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_0_)
      + sizeof(Message8_M2_M3::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M3, _impl_.f_4_)>(
          reinterpret_cast<char*>(&_impl_.f_4_),
          reinterpret_cast<char*>(&other->_impl_.f_4_));
}

::google::protobuf::Metadata Message8_M2_M3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M5_M13_M17_M29_M50_M72_M77::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M5_M13_M17_M29_M50_M72_M77>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72_M77, _impl_._has_bits_);
};

Message8_M2_M5_M13_M17_M29_M50_M72_M77::Message8_M2_M5_M13_M17_M29_M50_M72_M77(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77)
}
Message8_M2_M5_M13_M17_M29_M50_M72_M77::Message8_M2_M5_M13_M17_M29_M50_M72_M77(
    ::google::protobuf::Arena* arena, const Message8_M2_M5_M13_M17_M29_M50_M72_M77& from)
    : Message8_M2_M5_M13_M17_M29_M50_M72_M77(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M17_M29_M50_M72_M77::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M5_M13_M17_M29_M50_M72_M77::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M2_M5_M13_M17_M29_M50_M72_M77::~Message8_M2_M5_M13_M17_M29_M50_M72_M77() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M5_M13_M17_M29_M50_M72_M77::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M5_M13_M17_M29_M50_M72_M77::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72_M77, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M5_M13_M17_M29_M50_M72_M77::MergeImpl,
          &Message8_M2_M5_M13_M17_M29_M50_M72_M77::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M2_M5_M13_M17_M29_M50_M72_M77::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72_M77, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M5_M13_M17_M29_M50_M72_M77_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72_M77>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional float f_0 = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72_M77, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72_M77, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M5_M13_M17_M29_M50_M72_M77::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M5_M13_M17_M29_M50_M72_M77::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M5_M13_M17_M29_M50_M72_M77::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77)
  return target;
}

::size_t Message8_M2_M5_M13_M17_M29_M50_M72_M77::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional float f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M5_M13_M17_M29_M50_M72_M77::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M5_M13_M17_M29_M50_M72_M77*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M5_M13_M17_M29_M50_M72_M77&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M5_M13_M17_M29_M50_M72_M77::CopyFrom(const Message8_M2_M5_M13_M17_M29_M50_M72_M77& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M5_M13_M17_M29_M50_M72_M77::IsInitialized() const {
  return true;
}

void Message8_M2_M5_M13_M17_M29_M50_M72_M77::InternalSwap(Message8_M2_M5_M13_M17_M29_M50_M72_M77* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M2_M5_M13_M17_M29_M50_M72_M77::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M5_M13_M17_M29_M50_M72::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M5_M13_M17_M29_M50_M72>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72, _impl_._has_bits_);
};

Message8_M2_M5_M13_M17_M29_M50_M72::Message8_M2_M5_M13_M17_M29_M50_M72(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M17_M29_M50_M72::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M5_M13_M17_M29_M50_M72::Message8_M2_M5_M13_M17_M29_M50_M72(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M5_M13_M17_M29_M50_M72& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M5_M13_M17_M29_M50_M72* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72_M77>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M17_M29_M50_M72::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M5_M13_M17_M29_M50_M72::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M5_M13_M17_M29_M50_M72::~Message8_M2_M5_M13_M17_M29_M50_M72() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M5_M13_M17_M29_M50_M72::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_2_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M5_M13_M17_M29_M50_M72::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M5_M13_M17_M29_M50_M72::MergeImpl,
          &Message8_M2_M5_M13_M17_M29_M50_M72::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Message8_M2_M5_M13_M17_M29_M50_M72::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M5_M13_M17_M29_M50_M72_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.E20 f_0 = 2;
    {::_pbi::TcParser::FastEvS1,
     {16, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77 f_2 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.E20 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72_M77>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72_E20_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M5_M13_M17_M29_M50_M72::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_2_ != nullptr);
    _impl_.f_2_->Clear();
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M5_M13_M17_M29_M50_M72::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M5_M13_M17_M29_M50_M72::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.E20 f_0 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77 f_2 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72)
  return target;
}

::size_t Message8_M2_M5_M13_M17_M29_M50_M72::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.M77 f_2 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72.E20 f_0 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M5_M13_M17_M29_M50_M72::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M5_M13_M17_M29_M50_M72*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M5_M13_M17_M29_M50_M72&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72_M77>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M5_M13_M17_M29_M50_M72::CopyFrom(const Message8_M2_M5_M13_M17_M29_M50_M72& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M5_M13_M17_M29_M50_M72::IsInitialized() const {
  return true;
}

void Message8_M2_M5_M13_M17_M29_M50_M72::InternalSwap(Message8_M2_M5_M13_M17_M29_M50_M72* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72, _impl_.f_0_)
      + sizeof(Message8_M2_M5_M13_M17_M29_M50_M72::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50_M72, _impl_.f_2_)>(
          reinterpret_cast<char*>(&_impl_.f_2_),
          reinterpret_cast<char*>(&other->_impl_.f_2_));
}

::google::protobuf::Metadata Message8_M2_M5_M13_M17_M29_M50_M72::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M5_M13_M17_M29_M50::_Internal {
 public:
};

Message8_M2_M5_M13_M17_M29_M50::Message8_M2_M5_M13_M17_M29_M50(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M17_M29_M50::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : f_0_{visibility, arena, from.f_0_},
        _f_0_cached_byte_size_{0},
        f_2_{visibility, arena, from.f_2_},
        _cached_size_{0} {}

Message8_M2_M5_M13_M17_M29_M50::Message8_M2_M5_M13_M17_M29_M50(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M5_M13_M17_M29_M50& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M5_M13_M17_M29_M50* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M17_M29_M50::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : f_0_{visibility, arena},
        _f_0_cached_byte_size_{0},
        f_2_{visibility, arena},
        _cached_size_{0} {}

inline void Message8_M2_M5_M13_M17_M29_M50::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M2_M5_M13_M17_M29_M50::~Message8_M2_M5_M13_M17_M29_M50() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M5_M13_M17_M29_M50::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M5_M13_M17_M29_M50::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M5_M13_M17_M29_M50::MergeImpl,
          &Message8_M2_M5_M13_M17_M29_M50::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Message8_M2_M5_M13_M17_M29_M50::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967277,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M5_M13_M17_M29_M50_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.E13 f_0 = 2 [packed = true];
    {::_pbi::TcParser::FastEvP1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50, _impl_.f_0_)}},
    // repeated .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72 f_2 = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.E13 f_0 = 2 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50, _impl_.f_0_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnum)},
    // repeated .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72 f_2 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M50, _impl_.f_2_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_M72>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50_E13_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M5_M13_M17_M29_M50::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_.Clear();
  _impl_.f_2_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M5_M13_M17_M29_M50::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M5_M13_M17_M29_M50::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.E13 f_0 = 2 [packed = true];
  {
    std::size_t byte_size = _impl_._f_0_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(2, _internal_f_0(),
                                       byte_size, target);
    }
  }

  // repeated .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72 f_2 = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_2_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_2().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50)
  return target;
}

::size_t Message8_M2_M5_M13_M17_M29_M50::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.E13 f_0 = 2 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_f_0_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_f_0().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._f_0_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50.M72 f_2 = 5;
  total_size += 1UL * this->_internal_f_2_size();
  for (const auto& msg : this->_internal_f_2()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M5_M13_M17_M29_M50::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M5_M13_M17_M29_M50*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M5_M13_M17_M29_M50&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_0()->MergeFrom(from._internal_f_0());
  _this->_internal_mutable_f_2()->MergeFrom(
      from._internal_f_2());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M5_M13_M17_M29_M50::CopyFrom(const Message8_M2_M5_M13_M17_M29_M50& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M5_M13_M17_M29_M50::IsInitialized() const {
  return true;
}

void Message8_M2_M5_M13_M17_M29_M50::InternalSwap(Message8_M2_M5_M13_M17_M29_M50* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.f_0_.InternalSwap(&other->_impl_.f_0_);
  _impl_.f_2_.InternalSwap(&other->_impl_.f_2_);
}

::google::protobuf::Metadata Message8_M2_M5_M13_M17_M29_M50::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M5_M13_M17_M29_M61::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M5_M13_M17_M29_M61>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M61, _impl_._has_bits_);
};

Message8_M2_M5_M13_M17_M29_M61::Message8_M2_M5_M13_M17_M29_M61(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61)
}
Message8_M2_M5_M13_M17_M29_M61::Message8_M2_M5_M13_M17_M29_M61(
    ::google::protobuf::Arena* arena, const Message8_M2_M5_M13_M17_M29_M61& from)
    : Message8_M2_M5_M13_M17_M29_M61(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M17_M29_M61::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M5_M13_M17_M29_M61::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M2_M5_M13_M17_M29_M61::~Message8_M2_M5_M13_M17_M29_M61() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M5_M13_M17_M29_M61::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M5_M13_M17_M29_M61::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M61, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M5_M13_M17_M29_M61::MergeImpl,
          &Message8_M2_M5_M13_M17_M29_M61::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Message8_M2_M5_M13_M17_M29_M61::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M61, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M5_M13_M17_M29_M61_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M61>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61.E17 f_0 = 2;
    {::_pbi::TcParser::FastEvS1,
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M61, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61.E17 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29_M61, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M61_E17_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M5_M13_M17_M29_M61::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M5_M13_M17_M29_M61::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M5_M13_M17_M29_M61::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61.E17 f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61)
  return target;
}

::size_t Message8_M2_M5_M13_M17_M29_M61::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61.E17 f_0 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M5_M13_M17_M29_M61::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M5_M13_M17_M29_M61*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M5_M13_M17_M29_M61&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M5_M13_M17_M29_M61::CopyFrom(const Message8_M2_M5_M13_M17_M29_M61& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M5_M13_M17_M29_M61::IsInitialized() const {
  return true;
}

void Message8_M2_M5_M13_M17_M29_M61::InternalSwap(Message8_M2_M5_M13_M17_M29_M61* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M2_M5_M13_M17_M29_M61::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M5_M13_M17_M29::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M5_M13_M17_M29>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_._has_bits_);
};

Message8_M2_M5_M13_M17_M29::Message8_M2_M5_M13_M17_M29(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M17_M29::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M5_M13_M17_M29::Message8_M2_M5_M13_M17_M29(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M5_M13_M17_M29& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M5_M13_M17_M29* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_3_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M61>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_1_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_1_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M17_M29::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M5_M13_M17_M29::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           0,
           offsetof(Impl_, f_1_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_1_));
}
Message8_M2_M5_M13_M17_M29::~Message8_M2_M5_M13_M17_M29() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M5.M13.M17.M29)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M5_M13_M17_M29::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_2_;
  delete _impl_.f_3_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M5_M13_M17_M29::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M5_M13_M17_M29::MergeImpl,
          &Message8_M2_M5_M13_M17_M29::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 2, 0, 2> Message8_M2_M5_M13_M17_M29::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M5_M13_M17_M29_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17_M29>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M5_M13_M17_M29, _impl_.f_0_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_.f_0_)}},
    // optional int64 f_1 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M5_M13_M17_M29, _impl_.f_1_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_.f_1_)}},
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50 f_2 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_.f_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61 f_3 = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_.f_0_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_.f_1_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61 f_3 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_.f_3_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M61>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M5_M13_M17_M29::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.f_2_ != nullptr);
      _impl_.f_2_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_3_ != nullptr);
      _impl_.f_3_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_1_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_1_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M5_M13_M17_M29::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M5_M13_M17_M29::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // optional int64 f_1 = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_f_1(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50 f_2 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61 f_3 = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M5.M13.M17.M29)
  return target;
}

::size_t Message8_M2_M5_M13_M17_M29::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M50 f_2 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29.M61 f_3 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional int64 f_0 = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_0());
    }

    // optional int64 f_1 = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_1());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M5_M13_M17_M29::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M5_M13_M17_M29*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M5_M13_M17_M29&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M50>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13_M17_M29_M61>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M5_M13_M17_M29::CopyFrom(const Message8_M2_M5_M13_M17_M29& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M5.M13.M17.M29)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M5_M13_M17_M29::IsInitialized() const {
  return true;
}

void Message8_M2_M5_M13_M17_M29::InternalSwap(Message8_M2_M5_M13_M17_M29* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_.f_1_)
      + sizeof(Message8_M2_M5_M13_M17_M29::_impl_.f_1_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17_M29, _impl_.f_2_)>(
          reinterpret_cast<char*>(&_impl_.f_2_),
          reinterpret_cast<char*>(&other->_impl_.f_2_));
}

::google::protobuf::Metadata Message8_M2_M5_M13_M17_M29::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M5_M13_M17::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M5_M13_M17>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17, _impl_._has_bits_);
};

Message8_M2_M5_M13_M17::Message8_M2_M5_M13_M17(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M5.M13.M17)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M17::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M5_M13_M17::Message8_M2_M5_M13_M17(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M5_M13_M17& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M5_M13_M17* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13_M17_M29>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M5.M13.M17)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M17::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M5_M13_M17::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M5_M13_M17::~Message8_M2_M5_M13_M17() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M5.M13.M17)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M5_M13_M17::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_2_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M5_M13_M17::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M5_M13_M17::MergeImpl,
          &Message8_M2_M5_M13_M17::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M2_M5_M13_M17::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M5_M13_M17_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 f_0 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M5_M13_M17, _impl_.f_0_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29 f_2 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17_M29>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M5_M13_M17::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M5.M13.M17)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_2_ != nullptr);
    _impl_.f_2_->Clear();
  }
  _impl_.f_0_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M5_M13_M17::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M5_M13_M17::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M5.M13.M17)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 f_0 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29 f_2 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M5.M13.M17)
  return target;
}

::size_t Message8_M2_M5_M13_M17::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M5.M13.M17)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M2.M5.M13.M17.M29 f_2 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional uint64 f_0 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M5_M13_M17::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M5_M13_M17*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M5_M13_M17&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M5.M13.M17)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13_M17_M29>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M5_M13_M17::CopyFrom(const Message8_M2_M5_M13_M17& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M5.M13.M17)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M5_M13_M17::IsInitialized() const {
  return true;
}

void Message8_M2_M5_M13_M17::InternalSwap(Message8_M2_M5_M13_M17* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17, _impl_.f_0_)
      + sizeof(Message8_M2_M5_M13_M17::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M17, _impl_.f_2_)>(
          reinterpret_cast<char*>(&_impl_.f_2_),
          reinterpret_cast<char*>(&other->_impl_.f_2_));
}

::google::protobuf::Metadata Message8_M2_M5_M13_M17::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M5_M13_M26_M36::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M5_M13_M26_M36>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M36, _impl_._has_bits_);
};

Message8_M2_M5_M13_M26_M36::Message8_M2_M5_M13_M26_M36(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M5.M13.M26.M36)
}
Message8_M2_M5_M13_M26_M36::Message8_M2_M5_M13_M26_M36(
    ::google::protobuf::Arena* arena, const Message8_M2_M5_M13_M26_M36& from)
    : Message8_M2_M5_M13_M26_M36(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M26_M36::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M5_M13_M26_M36::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M2_M5_M13_M26_M36::~Message8_M2_M5_M13_M26_M36() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M5.M13.M26.M36)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M5_M13_M26_M36::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M5_M13_M26_M36::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M36, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M5_M13_M26_M36::MergeImpl,
          &Message8_M2_M5_M13_M26_M36::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M2_M5_M13_M26_M36::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M36, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M5_M13_M26_M36_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M26_M36>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M5_M13_M26_M36, _impl_.f_0_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M36, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M36, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M5_M13_M26_M36::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M5.M13.M26.M36)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M5_M13_M26_M36::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M5_M13_M26_M36::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M5.M13.M26.M36)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M5.M13.M26.M36)
  return target;
}

::size_t Message8_M2_M5_M13_M26_M36::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M5.M13.M26.M36)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M5_M13_M26_M36::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M5_M13_M26_M36*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M5_M13_M26_M36&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M5.M13.M26.M36)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M5_M13_M26_M36::CopyFrom(const Message8_M2_M5_M13_M26_M36& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M5.M13.M26.M36)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M5_M13_M26_M36::IsInitialized() const {
  return true;
}

void Message8_M2_M5_M13_M26_M36::InternalSwap(Message8_M2_M5_M13_M26_M36* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M2_M5_M13_M26_M36::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M5_M13_M26_M47::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M5_M13_M26_M47>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_._has_bits_);
};

Message8_M2_M5_M13_M26_M47::Message8_M2_M5_M13_M26_M47(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M5.M13.M26.M47)
}
Message8_M2_M5_M13_M26_M47::Message8_M2_M5_M13_M26_M47(
    ::google::protobuf::Arena* arena, const Message8_M2_M5_M13_M26_M47& from)
    : Message8_M2_M5_M13_M26_M47(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M26_M47::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M5_M13_M26_M47::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           0,
           offsetof(Impl_, f_4_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_4_));
}
Message8_M2_M5_M13_M26_M47::~Message8_M2_M5_M13_M26_M47() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M5.M13.M26.M47)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M5_M13_M26_M47::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M5_M13_M26_M47::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M5_M13_M26_M47::MergeImpl,
          &Message8_M2_M5_M13_M26_M47::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> Message8_M2_M5_M13_M26_M47::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_._has_bits_),
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966954,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M5_M13_M26_M47_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M26_M47>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M5_M13_M26_M47, _impl_.f_0_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional float f_1 = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed32 f_2 = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_.f_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M5.M13.M26.M47.E12 f_3 = 7;
    {::_pbi::TcParser::FastEvS1,
     {56, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_.f_3_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional float f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_.f_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional fixed32 f_2 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_.f_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional .fleetbench.proto.Message8.M2.M5.M13.M26.M47.E12 f_3 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_.f_3_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 f_4 = 9;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_.f_4_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M5_M13_M26_M47_E12_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M5_M13_M26_M47::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M5.M13.M26.M47)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_4_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_4_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M5_M13_M26_M47::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M5_M13_M26_M47::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M5.M13.M26.M47)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_f_0(), target);
  }

  // optional float f_1 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_f_1(), target);
  }

  // optional fixed32 f_2 = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        5, this->_internal_f_2(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M5.M13.M26.M47.E12 f_3 = 7;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        7, this->_internal_f_3(), target);
  }

  // optional int32 f_4 = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_f_4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M5.M13.M26.M47)
  return target;
}

::size_t Message8_M2_M5_M13_M26_M47::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M5.M13.M26.M47)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional bool f_0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional float f_1 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // optional fixed32 f_2 = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional .fleetbench.proto.Message8.M2.M5.M13.M26.M47.E12 f_3 = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_3());
    }

    // optional int32 f_4 = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_4());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M5_M13_M26_M47::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M5_M13_M26_M47*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M5_M13_M26_M47&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M5.M13.M26.M47)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M5_M13_M26_M47::CopyFrom(const Message8_M2_M5_M13_M26_M47& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M5.M13.M26.M47)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M5_M13_M26_M47::IsInitialized() const {
  return true;
}

void Message8_M2_M5_M13_M26_M47::InternalSwap(Message8_M2_M5_M13_M26_M47* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_.f_4_)
      + sizeof(Message8_M2_M5_M13_M26_M47::_impl_.f_4_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26_M47, _impl_.f_0_)>(
          reinterpret_cast<char*>(&_impl_.f_0_),
          reinterpret_cast<char*>(&other->_impl_.f_0_));
}

::google::protobuf::Metadata Message8_M2_M5_M13_M26_M47::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M5_M13_M26::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M5_M13_M26>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_._has_bits_);
};

Message8_M2_M5_M13_M26::Message8_M2_M5_M13_M26(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M5.M13.M26)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M26::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_11_{visibility, arena, from.f_11_},
        f_21_{visibility, arena, from.f_21_},
        f_10_(arena, from.f_10_) {}

Message8_M2_M5_M13_M26::Message8_M2_M5_M13_M26(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M5_M13_M26& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M5_M13_M26* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_22_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13_M26_M47>(
                              arena, *from._impl_.f_22_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_1_),
           offsetof(Impl_, f_9_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_9_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M5.M13.M26)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13_M26::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_11_{visibility, arena},
        f_21_{visibility, arena},
        f_10_(arena) {}

inline void Message8_M2_M5_M13_M26::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_22_),
           0,
           offsetof(Impl_, f_9_) -
               offsetof(Impl_, f_22_) +
               sizeof(Impl_::f_9_));
}
Message8_M2_M5_M13_M26::~Message8_M2_M5_M13_M26() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M5.M13.M26)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M5_M13_M26::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_10_.Destroy();
  delete _impl_.f_22_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M5_M13_M26::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M5_M13_M26::MergeImpl,
          &Message8_M2_M5_M13_M26::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 2, 60, 2> Message8_M2_M5_M13_M26::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_._has_bits_),
    0, // no _extensions_
    23, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4286768440,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M5_M13_M26_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M26>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M5_M13_M26, _impl_.f_0_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_0_)}},
    // optional int64 f_1 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M5_M13_M26, _impl_.f_1_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_1_)}},
    // optional int32 f_2 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M5_M13_M26, _impl_.f_2_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_2_)}},
    // optional string f_10 = 20;
    {::_pbi::TcParser::FastSS2,
     {418, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_10_)}},
    // repeated float f_11 = 21 [packed = true];
    {::_pbi::TcParser::FastF32P2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_11_)}},
    // repeated .fleetbench.proto.Message8.M2.M5.M13.M26.M36 f_21 = 22;
    {::_pbi::TcParser::FastMtR2,
     {434, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_21_)}},
    // optional uint64 f_3 = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M5_M13_M26, _impl_.f_3_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_3_)}},
    // optional int64 f_4 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M5_M13_M26, _impl_.f_4_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 f_5 = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M5_M13_M26, _impl_.f_5_), 7>(),
     {80, 7, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_5_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_6 = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M5_M13_M26, _impl_.f_6_), 9>(),
     {96, 9, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_6_)}},
    // optional float f_7 = 13;
    {::_pbi::TcParser::FastF32S1,
     {109, 8, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_7_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_0_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_1_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_2_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint64 f_3 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_3_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int64 f_4 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_4_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_5 = 10;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_5_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_6 = 12;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_6_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional float f_7 = 13;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_7_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int64 f_8 = 17;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_8_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint32 f_9 = 19;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_9_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string f_10 = 20;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_10_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated float f_11 = 21 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_11_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated .fleetbench.proto.Message8.M2.M5.M13.M26.M36 f_21 = 22;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_21_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M5.M13.M26.M47 f_22 = 23;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_22_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M26_M36>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M26_M47>()},
  }}, {{
    "\47\0\0\0\0\0\0\0\0\0\0\4\0\0\0\0"
    "fleetbench.proto.Message8.M2.M5.M13.M26"
    "f_10"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M5_M13_M26::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M5.M13.M26)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_11_.Clear();
  _impl_.f_21_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_10_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_22_ != nullptr);
      _impl_.f_22_->Clear();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.f_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_5_) -
        reinterpret_cast<char*>(&_impl_.f_1_)) + sizeof(_impl_.f_5_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&_impl_.f_7_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_9_) -
        reinterpret_cast<char*>(&_impl_.f_7_)) + sizeof(_impl_.f_9_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M5_M13_M26::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M5_M13_M26::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M5.M13.M26)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 f_0 = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // optional int64 f_1 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_f_1(), target);
  }

  // optional int32 f_2 = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_f_2(), target);
  }

  // optional uint64 f_3 = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this->_internal_f_3(), target);
  }

  // optional int64 f_4 = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_f_4(), target);
  }

  // optional int32 f_5 = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_f_5(), target);
  }

  // optional int64 f_6 = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<12>(
            stream, this->_internal_f_6(), target);
  }

  // optional float f_7 = 13;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        13, this->_internal_f_7(), target);
  }

  // optional int64 f_8 = 17;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        17, this->_internal_f_8(), target);
  }

  // optional uint32 f_9 = 19;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        19, this->_internal_f_9(), target);
  }

  // optional string f_10 = 20;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_10();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M5.M13.M26.f_10");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  // repeated float f_11 = 21 [packed = true];
  if (this->_internal_f_11_size() > 0) {
    target = stream->WriteFixedPacked(21, _internal_f_11(), target);
  }

  // repeated .fleetbench.proto.Message8.M2.M5.M13.M26.M36 f_21 = 22;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_21_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_21().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            22, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M5.M13.M26.M47 f_22 = 23;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        23, *_impl_.f_22_, _impl_.f_22_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M5.M13.M26)
  return target;
}

::size_t Message8_M2_M5_M13_M26::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M5.M13.M26)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated float f_11 = 21 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_f_11_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .fleetbench.proto.Message8.M2.M5.M13.M26.M36 f_21 = 22;
  total_size += 2UL * this->_internal_f_21_size();
  for (const auto& msg : this->_internal_f_21()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string f_10 = 20;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_10());
    }

    // optional .fleetbench.proto.Message8.M2.M5.M13.M26.M47 f_22 = 23;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_22_);
    }

    // optional int64 f_1 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_1());
    }

    // optional int32 f_0 = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_0());
    }

    // optional int32 f_2 = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_2());
    }

    // optional uint64 f_3 = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_3());
    }

    // optional int64 f_4 = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_4());
    }

    // optional int32 f_5 = 10;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_5());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional float f_7 = 13;
    if (cached_has_bits & 0x00000100u) {
      total_size += 5;
    }

    // optional int64 f_6 = 12;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_6());
    }

    // optional int64 f_8 = 17;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_f_8());
    }

    // optional uint32 f_9 = 19;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_f_9());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M5_M13_M26::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M5_M13_M26*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M5_M13_M26&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M5.M13.M26)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_11()->MergeFrom(from._internal_f_11());
  _this->_internal_mutable_f_21()->MergeFrom(
      from._internal_f_21());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_10(from._internal_f_10());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_22_ != nullptr);
      if (_this->_impl_.f_22_ == nullptr) {
        _this->_impl_.f_22_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13_M26_M47>(arena, *from._impl_.f_22_);
      } else {
        _this->_impl_.f_22_->MergeFrom(*from._impl_.f_22_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_5_ = from._impl_.f_5_;
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_7_ = from._impl_.f_7_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_6_ = from._impl_.f_6_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_8_ = from._impl_.f_8_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_9_ = from._impl_.f_9_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M5_M13_M26::CopyFrom(const Message8_M2_M5_M13_M26& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M5.M13.M26)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M5_M13_M26::IsInitialized() const {
  return true;
}

void Message8_M2_M5_M13_M26::InternalSwap(Message8_M2_M5_M13_M26* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_11_.InternalSwap(&other->_impl_.f_11_);
  _impl_.f_21_.InternalSwap(&other->_impl_.f_21_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_10_, &other->_impl_.f_10_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_9_)
      + sizeof(Message8_M2_M5_M13_M26::_impl_.f_9_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13_M26, _impl_.f_22_)>(
          reinterpret_cast<char*>(&_impl_.f_22_),
          reinterpret_cast<char*>(&other->_impl_.f_22_));
}

::google::protobuf::Metadata Message8_M2_M5_M13_M26::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M5_M13::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M5_M13>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13, _impl_._has_bits_);
};

Message8_M2_M5_M13::Message8_M2_M5_M13(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M5.M13)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_{visibility, arena, from.f_1_},
        f_2_{visibility, arena, from.f_2_} {}

Message8_M2_M5_M13::Message8_M2_M5_M13(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M5_M13& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M5_M13* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M5.M13)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5_M13::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_{visibility, arena},
        f_2_{visibility, arena} {}

inline void Message8_M2_M5_M13::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M2_M5_M13::~Message8_M2_M5_M13() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M5.M13)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M5_M13::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M5_M13::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M5_M13::MergeImpl,
          &Message8_M2_M5_M13::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Message8_M2_M5_M13::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967284,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M5_M13_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M2.M5.M13.M26 f_2 = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13, _impl_.f_2_)}},
    // optional int32 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M5_M13, _impl_.f_0_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13, _impl_.f_0_)}},
    // repeated .fleetbench.proto.Message8.M2.M5.M13.M17 f_1 = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .fleetbench.proto.Message8.M2.M5.M13.M17 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13, _impl_.f_1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .fleetbench.proto.Message8.M2.M5.M13.M26 f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5_M13, _impl_.f_2_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M17>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13_M26>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M5_M13::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M5.M13)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_1_.Clear();
  _impl_.f_2_.Clear();
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M5_M13::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M5_M13::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M5.M13)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // repeated .fleetbench.proto.Message8.M2.M5.M13.M17 f_1 = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_1_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_1().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .fleetbench.proto.Message8.M2.M5.M13.M26 f_2 = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_2_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_2().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M5.M13)
  return target;
}

::size_t Message8_M2_M5_M13::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M5.M13)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M2.M5.M13.M17 f_1 = 2;
  total_size += 1UL * this->_internal_f_1_size();
  for (const auto& msg : this->_internal_f_1()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .fleetbench.proto.Message8.M2.M5.M13.M26 f_2 = 4;
  total_size += 1UL * this->_internal_f_2_size();
  for (const auto& msg : this->_internal_f_2()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional int32 f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M5_M13::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M5_M13*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M5_M13&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M5.M13)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_1()->MergeFrom(
      from._internal_f_1());
  _this->_internal_mutable_f_2()->MergeFrom(
      from._internal_f_2());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M5_M13::CopyFrom(const Message8_M2_M5_M13& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M5.M13)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M5_M13::IsInitialized() const {
  return true;
}

void Message8_M2_M5_M13::InternalSwap(Message8_M2_M5_M13* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_1_.InternalSwap(&other->_impl_.f_1_);
  _impl_.f_2_.InternalSwap(&other->_impl_.f_2_);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M2_M5_M13::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M5::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M5>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M5, _impl_._has_bits_);
};

Message8_M2_M5::Message8_M2_M5(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M5)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M5::Message8_M2_M5(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M5& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M5* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M5)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M5::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M5::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M5::~Message8_M2_M5() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M5)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M5::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M5::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M5, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M5::MergeImpl,
          &Message8_M2_M5::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M2_M5::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M5, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M5_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M2.M5.M13 f_1 = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5, _impl_.f_1_)}},
    // optional bool f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M5, _impl_.f_0_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M5, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .fleetbench.proto.Message8.M2.M5.M13 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M5, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5_M13>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M5::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M5)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_1_ != nullptr);
    _impl_.f_1_->Clear();
  }
  _impl_.f_0_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M5::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M5::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M5)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M5.M13 f_1 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M5)
  return target;
}

::size_t Message8_M2_M5::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M5)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M2.M5.M13 f_1 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional bool f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M5::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M5*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M5&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M5)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M5_M13>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M5::CopyFrom(const Message8_M2_M5& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M5)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M5::IsInitialized() const {
  return true;
}

void Message8_M2_M5::InternalSwap(Message8_M2_M5* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M5, _impl_.f_0_)
      + sizeof(Message8_M2_M5::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M5, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M2_M5::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M21_M34_M55_M71::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M21_M34_M55_M71>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55_M71, _impl_._has_bits_);
};

Message8_M2_M6_M12_M21_M34_M55_M71::Message8_M2_M6_M12_M21_M34_M55_M71(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71)
}
Message8_M2_M6_M12_M21_M34_M55_M71::Message8_M2_M6_M12_M21_M34_M55_M71(
    ::google::protobuf::Arena* arena, const Message8_M2_M6_M12_M21_M34_M55_M71& from)
    : Message8_M2_M6_M12_M21_M34_M55_M71(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M21_M34_M55_M71::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M6_M12_M21_M34_M55_M71::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M2_M6_M12_M21_M34_M55_M71::~Message8_M2_M6_M12_M21_M34_M55_M71() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M21_M34_M55_M71::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M21_M34_M55_M71::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55_M71, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M21_M34_M55_M71::MergeImpl,
          &Message8_M2_M6_M12_M21_M34_M55_M71::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M2_M6_M12_M21_M34_M55_M71::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55_M71, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M6_M12_M21_M34_M55_M71_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55_M71>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M6_M12_M21_M34_M55_M71, _impl_.f_0_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55_M71, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55_M71, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M21_M34_M55_M71::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M21_M34_M55_M71::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M21_M34_M55_M71::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71)
  return target;
}

::size_t Message8_M2_M6_M12_M21_M34_M55_M71::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M21_M34_M55_M71::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M21_M34_M55_M71*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M21_M34_M55_M71&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M21_M34_M55_M71::CopyFrom(const Message8_M2_M6_M12_M21_M34_M55_M71& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M21_M34_M55_M71::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M21_M34_M55_M71::InternalSwap(Message8_M2_M6_M12_M21_M34_M55_M71* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M2_M6_M12_M21_M34_M55_M71::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M21_M34_M55::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M21_M34_M55>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55, _impl_._has_bits_);
};

Message8_M2_M6_M12_M21_M34_M55::Message8_M2_M6_M12_M21_M34_M55(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M21_M34_M55::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M6_M12_M21_M34_M55::Message8_M2_M6_M12_M21_M34_M55(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M21_M34_M55& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M21_M34_M55* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55_M71>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M21_M34_M55::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M6_M12_M21_M34_M55::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M6_M12_M21_M34_M55::~Message8_M2_M6_M12_M21_M34_M55() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M21_M34_M55::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_2_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M21_M34_M55::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M21_M34_M55::MergeImpl,
          &Message8_M2_M6_M12_M21_M34_M55::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 0, 2> Message8_M2_M6_M12_M21_M34_M55::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967285,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M21_M34_M55_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71 f_2 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55, _impl_.f_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool f_0 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M6_M12_M21_M34_M55, _impl_.f_0_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71 f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55_M71>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M21_M34_M55::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_2_ != nullptr);
    _impl_.f_2_->Clear();
  }
  _impl_.f_0_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M21_M34_M55::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M21_M34_M55::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71 f_2 = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55)
  return target;
}

::size_t Message8_M2_M6_M12_M21_M34_M55::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55.M71 f_2 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional bool f_0 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M21_M34_M55::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M21_M34_M55*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M21_M34_M55&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55_M71>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M21_M34_M55::CopyFrom(const Message8_M2_M6_M12_M21_M34_M55& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M21_M34_M55::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M21_M34_M55::InternalSwap(Message8_M2_M6_M12_M21_M34_M55* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55, _impl_.f_0_)
      + sizeof(Message8_M2_M6_M12_M21_M34_M55::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34_M55, _impl_.f_2_)>(
          reinterpret_cast<char*>(&_impl_.f_2_),
          reinterpret_cast<char*>(&other->_impl_.f_2_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M21_M34_M55::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M21_M34::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M21_M34>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34, _impl_._has_bits_);
};

Message8_M2_M6_M12_M21_M34::Message8_M2_M6_M12_M21_M34(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M21.M34)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M21_M34::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_{visibility, arena, from.f_1_} {}

Message8_M2_M6_M12_M21_M34::Message8_M2_M6_M12_M21_M34(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M21_M34& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M21_M34* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M21.M34)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M21_M34::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_{visibility, arena} {}

inline void Message8_M2_M6_M12_M21_M34::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M2_M6_M12_M21_M34::~Message8_M2_M6_M12_M21_M34() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M21.M34)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M21_M34::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M21_M34::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M21_M34::MergeImpl,
          &Message8_M2_M6_M12_M21_M34::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M2_M6_M12_M21_M34::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M21_M34_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M21_M34>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55 f_1 = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34, _impl_.f_1_)}},
    // optional bool f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M6_M12_M21_M34, _impl_.f_0_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21_M34, _impl_.f_1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M21_M34_M55>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M21_M34::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_1_.Clear();
  _impl_.f_0_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M21_M34::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M21_M34::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_f_0(), target);
  }

  // repeated .fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55 f_1 = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_1_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_1().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M21.M34)
  return target;
}

::size_t Message8_M2_M6_M12_M21_M34::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M2.M6.M12.M21.M34.M55 f_1 = 2;
  total_size += 1UL * this->_internal_f_1_size();
  for (const auto& msg : this->_internal_f_1()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional bool f_0 = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M21_M34::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M21_M34*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M21_M34&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_1()->MergeFrom(
      from._internal_f_1());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M21_M34::CopyFrom(const Message8_M2_M6_M12_M21_M34& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M21.M34)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M21_M34::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M21_M34::InternalSwap(Message8_M2_M6_M12_M21_M34* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_1_.InternalSwap(&other->_impl_.f_1_);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M2_M6_M12_M21_M34::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M21::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M21>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21, _impl_._has_bits_);
};

Message8_M2_M6_M12_M21::Message8_M2_M6_M12_M21(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M21)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M21::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M6_M12_M21::Message8_M2_M6_M12_M21(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M21& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M21* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_3_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M21_M34>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M21)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M21::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M6_M12_M21::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_3_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_3_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M6_M12_M21::~Message8_M2_M6_M12_M21() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M21)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M21::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_3_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M21::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M21::MergeImpl,
          &Message8_M2_M6_M12_M21::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Message8_M2_M6_M12_M21::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967283,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M21_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M21>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M2.M6.M12.M21.M34 f_3 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21, _impl_.f_3_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M21.E6 f_0 = 3;
    {::_pbi::TcParser::FastEvS1,
     {24, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .fleetbench.proto.Message8.M2.M6.M12.M21.E6 f_0 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M21.M34 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21, _impl_.f_3_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M21_M34>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M6_M12_M21_E6_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M21::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M21)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_3_ != nullptr);
    _impl_.f_3_->Clear();
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M21::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M21::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M21)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .fleetbench.proto.Message8.M2.M6.M12.M21.E6 f_0 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M21.M34 f_3 = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M21)
  return target;
}

::size_t Message8_M2_M6_M12_M21::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M21)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M2.M6.M12.M21.M34 f_3 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M21.E6 f_0 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M21::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M21*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M21&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M21)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M21_M34>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M21::CopyFrom(const Message8_M2_M6_M12_M21& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M21)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M21::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M21::InternalSwap(Message8_M2_M6_M12_M21* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21, _impl_.f_0_)
      + sizeof(Message8_M2_M6_M12_M21::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M21, _impl_.f_3_)>(
          reinterpret_cast<char*>(&_impl_.f_3_),
          reinterpret_cast<char*>(&other->_impl_.f_3_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M21::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M22_M41_M59_M70::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M22_M41_M59_M70>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59_M70, _impl_._has_bits_);
};

Message8_M2_M6_M12_M22_M41_M59_M70::Message8_M2_M6_M12_M22_M41_M59_M70(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70)
}
Message8_M2_M6_M12_M22_M41_M59_M70::Message8_M2_M6_M12_M22_M41_M59_M70(
    ::google::protobuf::Arena* arena, const Message8_M2_M6_M12_M22_M41_M59_M70& from)
    : Message8_M2_M6_M12_M22_M41_M59_M70(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M22_M41_M59_M70::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M6_M12_M22_M41_M59_M70::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M2_M6_M12_M22_M41_M59_M70::~Message8_M2_M6_M12_M22_M41_M59_M70() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M22_M41_M59_M70::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M22_M41_M59_M70::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59_M70, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M22_M41_M59_M70::MergeImpl,
          &Message8_M2_M6_M12_M22_M41_M59_M70::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M2_M6_M12_M22_M41_M59_M70::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59_M70, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967291,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M6_M12_M22_M41_M59_M70_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59_M70>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool f_0 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M6_M12_M22_M41_M59_M70, _impl_.f_0_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59_M70, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59_M70, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M22_M41_M59_M70::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M22_M41_M59_M70::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M22_M41_M59_M70::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70)
  return target;
}

::size_t Message8_M2_M6_M12_M22_M41_M59_M70::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool f_0 = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M22_M41_M59_M70::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M22_M41_M59_M70*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M22_M41_M59_M70&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M22_M41_M59_M70::CopyFrom(const Message8_M2_M6_M12_M22_M41_M59_M70& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M22_M41_M59_M70::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M22_M41_M59_M70::InternalSwap(Message8_M2_M6_M12_M22_M41_M59_M70* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M2_M6_M12_M22_M41_M59_M70::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M22_M41_M59::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M22_M41_M59>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59, _impl_._has_bits_);
};

Message8_M2_M6_M12_M22_M41_M59::Message8_M2_M6_M12_M22_M41_M59(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M22_M41_M59::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M6_M12_M22_M41_M59::Message8_M2_M6_M12_M22_M41_M59(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M22_M41_M59& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M22_M41_M59* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59_M70>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M22_M41_M59::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M6_M12_M22_M41_M59::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M6_M12_M22_M41_M59::~Message8_M2_M6_M12_M22_M41_M59() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M22_M41_M59::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_2_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M22_M41_M59::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M22_M41_M59::MergeImpl,
          &Message8_M2_M6_M12_M22_M41_M59::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M2_M6_M12_M22_M41_M59::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M22_M41_M59_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 f_0 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M6_M12_M22_M41_M59, _impl_.f_0_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70 f_2 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59_M70>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M22_M41_M59::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_2_ != nullptr);
    _impl_.f_2_->Clear();
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M22_M41_M59::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M22_M41_M59::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 f_0 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70 f_2 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59)
  return target;
}

::size_t Message8_M2_M6_M12_M22_M41_M59::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59.M70 f_2 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional int32 f_0 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M22_M41_M59::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M22_M41_M59*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M22_M41_M59&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59_M70>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M22_M41_M59::CopyFrom(const Message8_M2_M6_M12_M22_M41_M59& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M22_M41_M59::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M22_M41_M59::InternalSwap(Message8_M2_M6_M12_M22_M41_M59* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59, _impl_.f_0_)
      + sizeof(Message8_M2_M6_M12_M22_M41_M59::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41_M59, _impl_.f_2_)>(
          reinterpret_cast<char*>(&_impl_.f_2_),
          reinterpret_cast<char*>(&other->_impl_.f_2_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M22_M41_M59::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M22_M41::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M22_M41>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41, _impl_._has_bits_);
};

Message8_M2_M6_M12_M22_M41::Message8_M2_M6_M12_M22_M41(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M22.M41)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M22_M41::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M6_M12_M22_M41::Message8_M2_M6_M12_M22_M41(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M22_M41& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M22_M41* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_3_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M22.M41)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M22_M41::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M6_M12_M22_M41::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_3_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_3_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M6_M12_M22_M41::~Message8_M2_M6_M12_M22_M41() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M22.M41)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M22_M41::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_3_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M22_M41::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M22_M41::MergeImpl,
          &Message8_M2_M6_M12_M22_M41::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 0, 2> Message8_M2_M6_M12_M22_M41::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967275,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M22_M41_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M22_M41>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59 f_3 = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional float f_0 = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float f_0 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59 f_3 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41, _impl_.f_3_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M22_M41::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_3_ != nullptr);
    _impl_.f_3_->Clear();
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M22_M41::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M22_M41::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float f_0 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59 f_3 = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M22.M41)
  return target;
}

::size_t Message8_M2_M6_M12_M22_M41::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41.M59 f_3 = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional float f_0 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M22_M41::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M22_M41*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M22_M41&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M22_M41_M59>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M22_M41::CopyFrom(const Message8_M2_M6_M12_M22_M41& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M22.M41)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M22_M41::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M22_M41::InternalSwap(Message8_M2_M6_M12_M22_M41* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41, _impl_.f_0_)
      + sizeof(Message8_M2_M6_M12_M22_M41::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22_M41, _impl_.f_3_)>(
          reinterpret_cast<char*>(&_impl_.f_3_),
          reinterpret_cast<char*>(&other->_impl_.f_3_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M22_M41::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M22::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M22>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22, _impl_._has_bits_);
};

Message8_M2_M6_M12_M22::Message8_M2_M6_M12_M22(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M22)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M22::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M2_M6_M12_M22::Message8_M2_M6_M12_M22(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M22& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M22* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M22_M41>(
                              arena, *from._impl_.f_1_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M22)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M22::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M2_M6_M12_M22::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_1_ = {};
}
Message8_M2_M6_M12_M22::~Message8_M2_M6_M12_M22() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M22)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M22::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  delete _impl_.f_1_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M22::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M22::MergeImpl,
          &Message8_M2_M6_M12_M22::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 51, 2> Message8_M2_M6_M12_M22::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M22_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M22>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_0 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41 f_1 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22, _impl_.f_1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41 f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M22, _impl_.f_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M22_M41>()},
  }}, {{
    "\47\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M2.M6.M12.M22"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M22::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M22)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_1_ != nullptr);
      _impl_.f_1_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M22::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M22::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M22)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M22.f_0");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41 f_1 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M22)
  return target;
}

::size_t Message8_M2_M6_M12_M22::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M22)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string f_0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_0());
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M22.M41 f_1 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M22::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M22*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M22&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M22)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M22_M41>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M22::CopyFrom(const Message8_M2_M6_M12_M22& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M22)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M22::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M22::InternalSwap(Message8_M2_M6_M12_M22* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  swap(_impl_.f_1_, other->_impl_.f_1_);
}

::google::protobuf::Metadata Message8_M2_M6_M12_M22::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M35_M52_M64_M78::_Internal {
 public:
};

Message8_M2_M6_M12_M24_M35_M52_M64_M78::Message8_M2_M6_M12_M24_M35_M52_M64_M78(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M52_M64_M78::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : f_0_{visibility, arena, from.f_0_},
        _cached_size_{0} {}

Message8_M2_M6_M12_M24_M35_M52_M64_M78::Message8_M2_M6_M12_M24_M35_M52_M64_M78(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M35_M52_M64_M78& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M35_M52_M64_M78* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M52_M64_M78::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : f_0_{visibility, arena},
        _cached_size_{0} {}

inline void Message8_M2_M6_M12_M24_M35_M52_M64_M78::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M2_M6_M12_M24_M35_M52_M64_M78::~Message8_M2_M6_M12_M24_M35_M52_M64_M78() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M35_M52_M64_M78::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M35_M52_M64_M78::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M64_M78, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M35_M52_M64_M78::MergeImpl,
          &Message8_M2_M6_M12_M24_M35_M52_M64_M78::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M2_M6_M12_M24_M35_M52_M64_M78::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M6_M12_M24_M35_M52_M64_M78_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64_M78>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated float f_0 = 1 [packed = true];
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M64_M78, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float f_0 = 1 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M64_M78, _impl_.f_0_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M35_M52_M64_M78::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M35_M52_M64_M78::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M35_M52_M64_M78::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float f_0 = 1 [packed = true];
  if (this->_internal_f_0_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M35_M52_M64_M78::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated float f_0 = 1 [packed = true];
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_f_0_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M35_M52_M64_M78::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M35_M52_M64_M78*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M35_M52_M64_M78&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_0()->MergeFrom(from._internal_f_0());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M35_M52_M64_M78::CopyFrom(const Message8_M2_M6_M12_M24_M35_M52_M64_M78& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M35_M52_M64_M78::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M35_M52_M64_M78::InternalSwap(Message8_M2_M6_M12_M24_M35_M52_M64_M78* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.f_0_.InternalSwap(&other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M35_M52_M64_M78::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M35_M52_M64::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M35_M52_M64>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M64, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M35_M52_M64::Message8_M2_M6_M12_M24_M35_M52_M64(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M52_M64::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M2_M6_M12_M24_M35_M52_M64::Message8_M2_M6_M12_M24_M35_M52_M64(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M35_M52_M64& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M35_M52_M64* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64_M78>(
                              arena, *from._impl_.f_1_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M52_M64::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M2_M6_M12_M24_M35_M52_M64::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_1_ = {};
}
Message8_M2_M6_M12_M24_M35_M52_M64::~Message8_M2_M6_M12_M24_M35_M52_M64() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M35_M52_M64::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  delete _impl_.f_1_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M35_M52_M64::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M64, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M35_M52_M64::MergeImpl,
          &Message8_M2_M6_M12_M24_M35_M52_M64::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M2_M6_M12_M24_M35_M52_M64::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M64, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M24_M35_M52_M64_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78 f_1 = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M64, _impl_.f_1_)}},
    // optional bytes f_0 = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M64, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M64, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M64, _impl_.f_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64_M78>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M35_M52_M64::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_1_ != nullptr);
      _impl_.f_1_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M35_M52_M64::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M35_M52_M64::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78 f_1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M35_M52_M64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes f_0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_0());
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64.M78 f_1 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M35_M52_M64::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M35_M52_M64*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M35_M52_M64&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64_M78>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M35_M52_M64::CopyFrom(const Message8_M2_M6_M12_M24_M35_M52_M64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M35_M52_M64::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M35_M52_M64::InternalSwap(Message8_M2_M6_M12_M24_M35_M52_M64* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  swap(_impl_.f_1_, other->_impl_.f_1_);
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M35_M52_M64::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M35_M52_M67::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M35_M52_M67>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M67, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M35_M52_M67::Message8_M2_M6_M12_M24_M35_M52_M67(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67)
}
Message8_M2_M6_M12_M24_M35_M52_M67::Message8_M2_M6_M12_M24_M35_M52_M67(
    ::google::protobuf::Arena* arena, const Message8_M2_M6_M12_M24_M35_M52_M67& from)
    : Message8_M2_M6_M12_M24_M35_M52_M67(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M52_M67::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M6_M12_M24_M35_M52_M67::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M2_M6_M12_M24_M35_M52_M67::~Message8_M2_M6_M12_M24_M35_M52_M67() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M35_M52_M67::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M35_M52_M67::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M67, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M35_M52_M67::MergeImpl,
          &Message8_M2_M6_M12_M24_M35_M52_M67::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M2_M6_M12_M24_M35_M52_M67::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M67, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967291,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M6_M12_M24_M35_M52_M67_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M67>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 f_0 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M6_M12_M24_M35_M52_M67, _impl_.f_0_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M67, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 f_0 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52_M67, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M35_M52_M67::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M35_M52_M67::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M35_M52_M67::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 f_0 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M35_M52_M67::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 f_0 = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M35_M52_M67::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M35_M52_M67*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M35_M52_M67&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M35_M52_M67::CopyFrom(const Message8_M2_M6_M12_M24_M35_M52_M67& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M35_M52_M67::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M35_M52_M67::InternalSwap(Message8_M2_M6_M12_M24_M35_M52_M67* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M35_M52_M67::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M35_M52::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M35_M52>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M35_M52::Message8_M2_M6_M12_M24_M35_M52(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M52::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M6_M12_M24_M35_M52::Message8_M2_M6_M12_M24_M35_M52(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M35_M52& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M35_M52* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_3_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M67>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M52::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M6_M12_M24_M35_M52::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M6_M12_M24_M35_M52::~Message8_M2_M6_M12_M24_M35_M52() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M35_M52::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  delete _impl_.f_3_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M35_M52::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M35_M52::MergeImpl,
          &Message8_M2_M6_M12_M24_M35_M52::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> Message8_M2_M6_M12_M24_M35_M52::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967282,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M24_M35_M52_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67 f_3 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52, _impl_.f_3_)}},
    // optional float f_0 = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64 f_1 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52, _impl_.f_1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52, _impl_.f_0_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64 f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52, _impl_.f_3_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M67>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M35_M52::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.f_1_ != nullptr);
      _impl_.f_1_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_3_ != nullptr);
      _impl_.f_3_->Clear();
    }
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M35_M52::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M35_M52::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float f_0 = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64 f_1 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67 f_3 = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M35_M52::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M64 f_1 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52.M67 f_3 = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional float f_0 = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M35_M52::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M35_M52*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M35_M52&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M64>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52_M67>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M35_M52::CopyFrom(const Message8_M2_M6_M12_M24_M35_M52& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M35_M52::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M35_M52::InternalSwap(Message8_M2_M6_M12_M24_M35_M52* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52, _impl_.f_0_)
      + sizeof(Message8_M2_M6_M12_M24_M35_M52::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M52, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M35_M52::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M35_M54::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M35_M54>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M35_M54::Message8_M2_M6_M12_M24_M35_M54(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M54::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_2_(arena, from.f_2_),
        f_3_(arena, from.f_3_) {}

Message8_M2_M6_M12_M24_M35_M54::Message8_M2_M6_M12_M24_M35_M54(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M35_M54& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M35_M54* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_8_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_8_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M54::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_2_(arena),
        f_3_(arena) {}

inline void Message8_M2_M6_M12_M24_M35_M54::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           0,
           offsetof(Impl_, f_8_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_8_));
}
Message8_M2_M6_M12_M24_M35_M54::~Message8_M2_M6_M12_M24_M35_M54() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M35_M54::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_2_.Destroy();
  _impl_.f_3_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M35_M54::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M35_M54::MergeImpl,
          &Message8_M2_M6_M12_M24_M35_M54::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 70, 2> Message8_M2_M6_M12_M24_M35_M54::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294960720,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M24_M35_M54_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_0_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_0_)}},
    // optional bool f_1 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_1_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_1_)}},
    // optional string f_2 = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_2_)}},
    // optional string f_3 = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E14 f_4 = 6;
    {::_pbi::TcParser::FastEvS1,
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_5 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_5_), 5>(),
     {64, 5, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_5_)}},
    // optional int32 f_6 = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_6_), 6>(),
     {72, 6, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_6_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E15 f_7 = 12;
    {::_pbi::TcParser::FastEvS1,
     {96, 7, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_7_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E16 f_8 = 13;
    {::_pbi::TcParser::FastEvS1,
     {104, 8, 2, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_8_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_0_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_1_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_3_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E14 f_4 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_4_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_5 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_5_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_6 = 9;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_6_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E15 f_7 = 12;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_7_), _Internal::kHasBitsOffset + 7, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E16 f_8 = 13;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_8_), _Internal::kHasBitsOffset + 8, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54_E14_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54_E15_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54_E16_internal_data_},
  }}, {{
    "\57\0\0\3\3\0\0\0\0\0\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54"
    "f_2"
    "f_3"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M35_M54::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_2_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_3_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_7_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_7_));
  }
  _impl_.f_8_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M35_M54::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M35_M54::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_f_0(), target);
  }

  // optional bool f_1 = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_f_1(), target);
  }

  // optional string f_2 = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_2();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.f_2");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string f_3 = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_3();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.f_3");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E14 f_4 = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_f_4(), target);
  }

  // optional int64 f_5 = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_f_5(), target);
  }

  // optional int32 f_6 = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_f_6(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E15 f_7 = 12;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        12, this->_internal_f_7(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E16 f_8 = 13;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        13, this->_internal_f_8(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M35_M54::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string f_2 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_2());
    }

    // optional string f_3 = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_3());
    }

    // optional bool f_0 = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional bool f_1 = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E14 f_4 = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_4());
    }

    // optional int64 f_5 = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_5());
    }

    // optional int32 f_6 = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_6());
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E15 f_7 = 12;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_7());
    }

  }
  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54.E16 f_8 = 13;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_f_8());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M35_M54::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M35_M54*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M35_M54&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_2(from._internal_f_2());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_3(from._internal_f_3());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_5_ = from._impl_.f_5_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_6_ = from._impl_.f_6_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_7_ = from._impl_.f_7_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.f_8_ = from._impl_.f_8_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M35_M54::CopyFrom(const Message8_M2_M6_M12_M24_M35_M54& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M35_M54::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M35_M54::InternalSwap(Message8_M2_M6_M12_M24_M35_M54* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_2_, &other->_impl_.f_2_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_3_, &other->_impl_.f_3_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_8_)
      + sizeof(Message8_M2_M6_M12_M24_M35_M54::_impl_.f_8_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M54, _impl_.f_0_)>(
          reinterpret_cast<char*>(&_impl_.f_0_),
          reinterpret_cast<char*>(&other->_impl_.f_0_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M35_M54::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M35_M62_M65::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M35_M62_M65>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M35_M62_M65::Message8_M2_M6_M12_M24_M35_M62_M65(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M62_M65::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M2_M6_M12_M24_M35_M62_M65::Message8_M2_M6_M12_M24_M35_M62_M65(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M35_M62_M65& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M35_M62_M65* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_1_),
           offsetof(Impl_, f_2_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_2_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M62_M65::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M2_M6_M12_M24_M35_M62_M65::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_2_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_2_));
}
Message8_M2_M6_M12_M24_M35_M62_M65::~Message8_M2_M6_M12_M24_M35_M62_M65() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M35_M62_M65::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M35_M62_M65::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M35_M62_M65::MergeImpl,
          &Message8_M2_M6_M12_M24_M35_M62_M65::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2> Message8_M2_M6_M12_M24_M35_M62_M65::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M6_M12_M24_M35_M62_M65_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M65>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_0 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_0_)}},
    // optional int64 f_1 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_1_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_1_)}},
    // optional int32 f_2 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_2_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\63\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M35_M62_M65::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.f_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_2_) -
        reinterpret_cast<char*>(&_impl_.f_1_)) + sizeof(_impl_.f_2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M35_M62_M65::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M35_M62_M65::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65.f_0");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int64 f_1 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_f_1(), target);
  }

  // optional int32 f_2 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_f_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M35_M62_M65::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string f_0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_0());
    }

    // optional int64 f_1 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_1());
    }

    // optional int32 f_2 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_2());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M35_M62_M65::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M35_M62_M65*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M35_M62_M65&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M35_M62_M65::CopyFrom(const Message8_M2_M6_M12_M24_M35_M62_M65& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M35_M62_M65::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M35_M62_M65::InternalSwap(Message8_M2_M6_M12_M24_M35_M62_M65* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_2_)
      + sizeof(Message8_M2_M6_M12_M24_M35_M62_M65::_impl_.f_2_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M65, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M35_M62_M65::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M35_M62_M66::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M35_M62_M66>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M35_M62_M66::Message8_M2_M6_M12_M24_M35_M62_M66(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M62_M66::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_(arena, from.f_1_) {}

Message8_M2_M6_M12_M24_M35_M62_M66::Message8_M2_M6_M12_M24_M35_M62_M66(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M35_M62_M66& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M35_M62_M66* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_2_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_2_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M62_M66::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_(arena) {}

inline void Message8_M2_M6_M12_M24_M35_M62_M66::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           0,
           offsetof(Impl_, f_2_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_2_));
}
Message8_M2_M6_M12_M24_M35_M62_M66::~Message8_M2_M6_M12_M24_M35_M62_M66() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M35_M62_M66::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_1_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M35_M62_M66::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M35_M62_M66::MergeImpl,
          &Message8_M2_M6_M12_M24_M35_M62_M66::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2> Message8_M2_M6_M12_M24_M35_M62_M66::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967243,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M6_M12_M24_M35_M62_M66_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M66>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_1 = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_1_)}},
    // optional bool f_2 = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_2_), 2>(),
     {48, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_2_)}},
    // optional int32 f_0 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_0_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 f_0 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string f_1 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool f_2 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\63\0\3\0\0\0\0\0"
    "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66"
    "f_1"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M35_M62_M66::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_1_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_2_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M35_M62_M66::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M35_M62_M66::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 f_0 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_f_0(), target);
  }

  // optional string f_1 = 5;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_1();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66.f_1");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional bool f_2 = 6;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_f_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M35_M62_M66::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string f_1 = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_1());
    }

    // optional int32 f_0 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_0());
    }

    // optional bool f_2 = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M35_M62_M66::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M35_M62_M66*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M35_M62_M66&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_1(from._internal_f_1());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M35_M62_M66::CopyFrom(const Message8_M2_M6_M12_M24_M35_M62_M66& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M35_M62_M66::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M35_M62_M66::InternalSwap(Message8_M2_M6_M12_M24_M35_M62_M66* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_1_, &other->_impl_.f_1_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_2_)
      + sizeof(Message8_M2_M6_M12_M24_M35_M62_M66::_impl_.f_2_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62_M66, _impl_.f_0_)>(
          reinterpret_cast<char*>(&_impl_.f_0_),
          reinterpret_cast<char*>(&other->_impl_.f_0_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M35_M62_M66::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M35_M62::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M35_M62>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M35_M62::Message8_M2_M6_M12_M24_M35_M62(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M62::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M6_M12_M24_M35_M62::Message8_M2_M6_M12_M24_M35_M62(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M35_M62& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M35_M62* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_1_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M65>(
                              arena, *from._impl_.f_1_)
                        : nullptr;
  _impl_.f_2_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M66>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M62::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M6_M12_M24_M35_M62::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M6_M12_M24_M35_M62::~Message8_M2_M6_M12_M24_M35_M62() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M35_M62::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_1_;
  delete _impl_.f_2_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M35_M62::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M35_M62::MergeImpl,
          &Message8_M2_M6_M12_M24_M35_M62::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Message8_M2_M6_M12_M24_M35_M62::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967284,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M24_M35_M62_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66 f_2 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62, _impl_.f_2_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.E18 f_0 = 1;
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 2, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65 f_1 = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.E18 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62, _impl_.f_0_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62, _impl_.f_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66 f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62, _impl_.f_2_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M65>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M66>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_E18_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M35_M62::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.f_1_ != nullptr);
      _impl_.f_1_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_2_ != nullptr);
      _impl_.f_2_->Clear();
    }
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M35_M62::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M35_M62::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.E18 f_0 = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65 f_1 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.f_1_, _impl_.f_1_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66 f_2 = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M35_M62::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M65 f_1 = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_1_);
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.M66 f_2 = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62.E18 f_0 = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M35_M62::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M35_M62*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M35_M62&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_1_ != nullptr);
      if (_this->_impl_.f_1_ == nullptr) {
        _this->_impl_.f_1_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M65>(arena, *from._impl_.f_1_);
      } else {
        _this->_impl_.f_1_->MergeFrom(*from._impl_.f_1_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62_M66>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M35_M62::CopyFrom(const Message8_M2_M6_M12_M24_M35_M62& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M35_M62::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M35_M62::InternalSwap(Message8_M2_M6_M12_M24_M35_M62* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62, _impl_.f_0_)
      + sizeof(Message8_M2_M6_M12_M24_M35_M62::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M62, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M35_M62::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M35_M63::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M35_M63>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M35_M63::Message8_M2_M6_M12_M24_M35_M63(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M63::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_2_(arena, from.f_2_),
        f_3_(arena, from.f_3_),
        f_6_(arena, from.f_6_),
        f_7_(arena, from.f_7_),
        f_11_(arena, from.f_11_) {}

Message8_M2_M6_M12_M24_M35_M63::Message8_M2_M6_M12_M24_M35_M63(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M35_M63& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M35_M63* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_1_),
           offsetof(Impl_, f_13_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_13_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35_M63::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_2_(arena),
        f_3_(arena),
        f_6_(arena),
        f_7_(arena),
        f_11_(arena) {}

inline void Message8_M2_M6_M12_M24_M35_M63::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_13_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_13_));
}
Message8_M2_M6_M12_M24_M35_M63::~Message8_M2_M6_M12_M24_M35_M63() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M35_M63::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_2_.Destroy();
  _impl_.f_3_.Destroy();
  _impl_.f_6_.Destroy();
  _impl_.f_7_.Destroy();
  _impl_.f_11_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M35_M63::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M35_M63::MergeImpl,
          &Message8_M2_M6_M12_M24_M35_M63::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 1, 80, 2> Message8_M2_M6_M12_M24_M35_M63::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_._has_bits_),
    0, // no _extensions_
    18, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294773256,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M24_M35_M63_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 f_12 = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 12, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_12_)}},
    // optional int32 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_0_), 6>(),
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_0_)}},
    // optional int64 f_1 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_1_), 5>(),
     {16, 5, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_1_)}},
    // optional string f_2 = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_3 = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_3_)}},
    // optional int32 f_4 = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_4_), 7>(),
     {48, 7, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_4_)}},
    // optional fixed32 f_5 = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 8, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_5_)}},
    // optional string f_6 = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_6_)}},
    // optional string f_7 = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_7_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional double f_8 = 11;
    {::_pbi::TcParser::FastF64S1,
     {89, 10, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_8_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional float f_9 = 13;
    {::_pbi::TcParser::FastF32S1,
     {109, 9, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_9_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63.E19 f_10 = 14;
    {::_pbi::TcParser::FastEvS1,
     {112, 11, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_10_)}},
    // optional string f_11 = 15;
    {::_pbi::TcParser::FastSS1,
     {122, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_11_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_0_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_1_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_3 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_3_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 f_4 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_4_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional fixed32 f_5 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_5_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional string f_6 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_6_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_7 = 9;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_7_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional double f_8 = 11;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_8_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional float f_9 = 13;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_9_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63.E19 f_10 = 14;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_10_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional string f_11 = 15;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_11_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 f_12 = 16;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_12_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool f_13 = 18;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_13_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63_E19_internal_data_},
  }}, {{
    "\57\0\0\3\3\0\0\3\3\0\0\0\4\0\0\0"
    "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63"
    "f_2"
    "f_3"
    "f_6"
    "f_7"
    "f_11"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M35_M63::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_2_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_3_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.f_6_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.f_7_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.f_11_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&_impl_.f_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_4_) -
        reinterpret_cast<char*>(&_impl_.f_1_)) + sizeof(_impl_.f_4_));
  }
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&_impl_.f_5_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_13_) -
        reinterpret_cast<char*>(&_impl_.f_5_)) + sizeof(_impl_.f_13_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M35_M63::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M35_M63::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 f_0 = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // optional int64 f_1 = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_f_1(), target);
  }

  // optional string f_2 = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_2();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63.f_2");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string f_3 = 5;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_3();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63.f_3");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional int32 f_4 = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_f_4(), target);
  }

  // optional fixed32 f_5 = 7;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        7, this->_internal_f_5(), target);
  }

  // optional string f_6 = 8;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_f_6();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63.f_6");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string f_7 = 9;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_f_7();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63.f_7");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional double f_8 = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        11, this->_internal_f_8(), target);
  }

  // optional float f_9 = 13;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        13, this->_internal_f_9(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63.E19 f_10 = 14;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        14, this->_internal_f_10(), target);
  }

  // optional string f_11 = 15;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_f_11();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63.f_11");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // optional int32 f_12 = 16;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        16, this->_internal_f_12(), target);
  }

  // optional bool f_13 = 18;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        18, this->_internal_f_13(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M35_M63::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string f_2 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_2());
    }

    // optional string f_3 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_3());
    }

    // optional string f_6 = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_6());
    }

    // optional string f_7 = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_7());
    }

    // optional string f_11 = 15;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_11());
    }

    // optional int64 f_1 = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_1());
    }

    // optional int32 f_0 = 1;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_0());
    }

    // optional int32 f_4 = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_4());
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional fixed32 f_5 = 7;
    if (cached_has_bits & 0x00000100u) {
      total_size += 5;
    }

    // optional float f_9 = 13;
    if (cached_has_bits & 0x00000200u) {
      total_size += 5;
    }

    // optional double f_8 = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 9;
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63.E19 f_10 = 14;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_10());
    }

    // optional int32 f_12 = 16;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_f_12());
    }

    // optional bool f_13 = 18;
    if (cached_has_bits & 0x00002000u) {
      total_size += 3;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M35_M63::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M35_M63*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M35_M63&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_2(from._internal_f_2());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_3(from._internal_f_3());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_f_6(from._internal_f_6());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_f_7(from._internal_f_7());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_f_11(from._internal_f_11());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.f_5_ = from._impl_.f_5_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.f_9_ = from._impl_.f_9_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.f_8_ = from._impl_.f_8_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.f_10_ = from._impl_.f_10_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.f_12_ = from._impl_.f_12_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.f_13_ = from._impl_.f_13_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M35_M63::CopyFrom(const Message8_M2_M6_M12_M24_M35_M63& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M35_M63::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M35_M63::InternalSwap(Message8_M2_M6_M12_M24_M35_M63* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_2_, &other->_impl_.f_2_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_3_, &other->_impl_.f_3_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_6_, &other->_impl_.f_6_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_7_, &other->_impl_.f_7_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_11_, &other->_impl_.f_11_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_13_)
      + sizeof(Message8_M2_M6_M12_M24_M35_M63::_impl_.f_13_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35_M63, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M35_M63::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M35::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M35>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M35::Message8_M2_M6_M12_M24_M35(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_{visibility, arena, from.f_1_},
        f_5_{visibility, arena, from.f_5_},
        f_7_{visibility, arena, from.f_7_},
        f_0_(arena, from.f_0_) {}

Message8_M2_M6_M12_M24_M35::Message8_M2_M6_M12_M24_M35(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M35& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M35* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_3_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54>(
                              arena, *from._impl_.f_3_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M35::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_{visibility, arena},
        f_5_{visibility, arena},
        f_7_{visibility, arena},
        f_0_(arena) {}

inline void Message8_M2_M6_M12_M24_M35::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_3_ = {};
}
Message8_M2_M6_M12_M24_M35::~Message8_M2_M6_M12_M24_M35() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M35)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M35::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  delete _impl_.f_3_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M35::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M35::MergeImpl,
          &Message8_M2_M6_M12_M24_M35::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 55, 2> Message8_M2_M6_M12_M24_M35::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967082,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M24_M35_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63 f_7 = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 3, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_.f_7_)}},
    // optional string f_0 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52 f_1 = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54 f_3 = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62 f_5 = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 2, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_.f_5_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52 f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_.f_1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54 f_3 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_.f_3_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62 f_5 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_.f_5_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63 f_7 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M35, _impl_.f_7_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M52>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M62>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M63>()},
  }}, {{
    "\53\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M2.M6.M12.M24.M35"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M35::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_1_.Clear();
  _impl_.f_5_.Clear();
  _impl_.f_7_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_3_ != nullptr);
      _impl_.f_3_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M35::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M35::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.M35.f_0");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52 f_1 = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_1_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_1().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54 f_3 = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62 f_5 = 7;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_5_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_5().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63 f_7 = 8;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_7_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_7().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M35)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M35::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M52 f_1 = 3;
  total_size += 1UL * this->_internal_f_1_size();
  for (const auto& msg : this->_internal_f_1()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M62 f_5 = 7;
  total_size += 1UL * this->_internal_f_5_size();
  for (const auto& msg : this->_internal_f_5()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M63 f_7 = 8;
  total_size += 1UL * this->_internal_f_7_size();
  for (const auto& msg : this->_internal_f_7()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string f_0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_0());
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35.M54 f_3 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M35::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M35*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M35&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_1()->MergeFrom(
      from._internal_f_1());
  _this->_internal_mutable_f_5()->MergeFrom(
      from._internal_f_5());
  _this->_internal_mutable_f_7()->MergeFrom(
      from._internal_f_7());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35_M54>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M35::CopyFrom(const Message8_M2_M6_M12_M24_M35& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M35)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M35::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M35::InternalSwap(Message8_M2_M6_M12_M24_M35* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_1_.InternalSwap(&other->_impl_.f_1_);
  _impl_.f_5_.InternalSwap(&other->_impl_.f_5_);
  _impl_.f_7_.InternalSwap(&other->_impl_.f_7_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  swap(_impl_.f_3_, other->_impl_.f_3_);
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M35::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M43_M49_M68::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M43_M49_M68>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49_M68, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M43_M49_M68::Message8_M2_M6_M12_M24_M43_M49_M68(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M43_M49_M68::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M2_M6_M12_M24_M43_M49_M68::Message8_M2_M6_M12_M24_M43_M49_M68(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M43_M49_M68& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M43_M49_M68* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M43_M49_M68::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M2_M6_M12_M24_M43_M49_M68::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M2_M6_M12_M24_M43_M49_M68::~Message8_M2_M6_M12_M24_M43_M49_M68() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M43_M49_M68::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M43_M49_M68::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49_M68, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M43_M49_M68::MergeImpl,
          &Message8_M2_M6_M12_M24_M43_M49_M68::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 63, 2> Message8_M2_M6_M12_M24_M43_M49_M68::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49_M68, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M6_M12_M24_M43_M49_M68_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49_M68>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string f_0 = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49_M68, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49_M68, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M43_M49_M68::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M43_M49_M68::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M43_M49_M68::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68.f_0");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M43_M49_M68::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string f_0 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M43_M49_M68::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M43_M49_M68*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M43_M49_M68&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M43_M49_M68::CopyFrom(const Message8_M2_M6_M12_M24_M43_M49_M68& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M43_M49_M68::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M43_M49_M68::InternalSwap(Message8_M2_M6_M12_M24_M43_M49_M68* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M43_M49_M68::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M43_M49::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M43_M49>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M43_M49::Message8_M2_M6_M12_M24_M43_M49(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M43_M49::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M6_M12_M24_M43_M49::Message8_M2_M6_M12_M24_M43_M49(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M43_M49& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M43_M49* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49_M68>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M43_M49::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M6_M12_M24_M43_M49::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M6_M12_M24_M43_M49::~Message8_M2_M6_M12_M24_M43_M49() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M43_M49::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_2_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M43_M49::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M43_M49::MergeImpl,
          &Message8_M2_M6_M12_M24_M43_M49::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M2_M6_M12_M24_M43_M49::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M24_M43_M49_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 f_0 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M6_M12_M24_M43_M49, _impl_.f_0_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68 f_2 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49_M68>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M43_M49::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_2_ != nullptr);
    _impl_.f_2_->Clear();
  }
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M43_M49::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M43_M49::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68 f_2 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M43_M49::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49.M68 f_2 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional int64 f_0 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M43_M49::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M43_M49*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M43_M49&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49_M68>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M43_M49::CopyFrom(const Message8_M2_M6_M12_M24_M43_M49& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M43_M49::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M43_M49::InternalSwap(Message8_M2_M6_M12_M24_M43_M49* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49, _impl_.f_0_)
      + sizeof(Message8_M2_M6_M12_M24_M43_M49::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M49, _impl_.f_2_)>(
          reinterpret_cast<char*>(&_impl_.f_2_),
          reinterpret_cast<char*>(&other->_impl_.f_2_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M43_M49::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M43_M51::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M43_M51>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M51, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M43_M51::Message8_M2_M6_M12_M24_M43_M51(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M43_M51::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M2_M6_M12_M24_M43_M51::Message8_M2_M6_M12_M24_M43_M51(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M43_M51& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M43_M51* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M43_M51::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M2_M6_M12_M24_M43_M51::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message8_M2_M6_M12_M24_M43_M51::~Message8_M2_M6_M12_M24_M43_M51() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M43_M51::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M43_M51::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M51, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M43_M51::MergeImpl,
          &Message8_M2_M6_M12_M24_M43_M51::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M2_M6_M12_M24_M43_M51::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M51, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M6_M12_M24_M43_M51_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M51>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes f_0 = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M51, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43_M51, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M43_M51::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M43_M51::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M43_M51::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M43_M51::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes f_0 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M43_M51::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M43_M51*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M43_M51&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_f_0(from._internal_f_0());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M43_M51::CopyFrom(const Message8_M2_M6_M12_M24_M43_M51& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M43_M51::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M43_M51::InternalSwap(Message8_M2_M6_M12_M24_M43_M51* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M43_M51::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24_M43::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24_M43>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24_M43::Message8_M2_M6_M12_M24_M43(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M43::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Message8_M2_M6_M12_M24_M43::Message8_M2_M6_M12_M24_M43(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24_M43& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24_M43* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_2_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49>(
                              arena, *from._impl_.f_2_)
                        : nullptr;
  _impl_.f_3_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M51>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24_M43::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M6_M12_M24_M43::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_2_),
           0,
           offsetof(Impl_, f_0_) -
               offsetof(Impl_, f_2_) +
               sizeof(Impl_::f_0_));
}
Message8_M2_M6_M12_M24_M43::~Message8_M2_M6_M12_M24_M43() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24.M43)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24_M43::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_2_;
  delete _impl_.f_3_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24_M43::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24_M43::MergeImpl,
          &Message8_M2_M6_M12_M24_M43::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> Message8_M2_M6_M12_M24_M43::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967273,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M24_M43_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M43>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51 f_3 = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43, _impl_.f_3_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.E10 f_0 = 2;
    {::_pbi::TcParser::FastEvS1,
     {16, 2, 2, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49 f_2 = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.E10 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43, _impl_.f_0_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51 f_3 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43, _impl_.f_3_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M51>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M6_M12_M24_M43_E10_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24_M43::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.f_2_ != nullptr);
      _impl_.f_2_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_3_ != nullptr);
      _impl_.f_3_->Clear();
    }
  }
  _impl_.f_0_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24_M43::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24_M43::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.E10 f_0 = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49 f_2 = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.f_2_, _impl_.f_2_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51 f_3 = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24.M43)
  return target;
}

::size_t Message8_M2_M6_M12_M24_M43::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M49 f_2 = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_2_);
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.M51 f_3 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43.E10 f_0 = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_0());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24_M43::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24_M43*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24_M43&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_2_ != nullptr);
      if (_this->_impl_.f_2_ == nullptr) {
        _this->_impl_.f_2_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M49>(arena, *from._impl_.f_2_);
      } else {
        _this->_impl_.f_2_->MergeFrom(*from._impl_.f_2_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M43_M51>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24_M43::CopyFrom(const Message8_M2_M6_M12_M24_M43& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24.M43)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24_M43::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24_M43::InternalSwap(Message8_M2_M6_M12_M24_M43* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43, _impl_.f_0_)
      + sizeof(Message8_M2_M6_M12_M24_M43::_impl_.f_0_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24_M43, _impl_.f_2_)>(
          reinterpret_cast<char*>(&_impl_.f_2_),
          reinterpret_cast<char*>(&other->_impl_.f_2_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24_M43::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12_M24::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12_M24>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_._has_bits_);
};

Message8_M2_M6_M12_M24::Message8_M2_M6_M12_M24(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12.M24)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_6_{visibility, arena, from.f_6_},
        _f_6_cached_byte_size_{0},
        f_2_(arena, from.f_2_),
        f_3_(arena, from.f_3_),
        f_4_(arena, from.f_4_) {}

Message8_M2_M6_M12_M24::Message8_M2_M6_M12_M24(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12_M24& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12_M24* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_14_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35>(
                              arena, *from._impl_.f_14_)
                        : nullptr;
  _impl_.f_15_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M43>(
                              arena, *from._impl_.f_15_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_5_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_5_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12.M24)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12_M24::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_6_{visibility, arena},
        _f_6_cached_byte_size_{0},
        f_2_(arena),
        f_3_(arena),
        f_4_(arena) {}

inline void Message8_M2_M6_M12_M24::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_14_),
           0,
           offsetof(Impl_, f_5_) -
               offsetof(Impl_, f_14_) +
               sizeof(Impl_::f_5_));
}
Message8_M2_M6_M12_M24::~Message8_M2_M6_M12_M24() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12.M24)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12_M24::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_2_.Destroy();
  _impl_.f_3_.Destroy();
  _impl_.f_4_.Destroy();
  delete _impl_.f_14_;
  delete _impl_.f_15_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12_M24::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12_M24::MergeImpl,
          &Message8_M2_M6_M12_M24::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 65, 2> Message8_M2_M6_M12_M24::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_._has_bits_),
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294907285,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_M24_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43 f_15 = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 4, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_15_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.E7 f_0 = 2;
    {::_pbi::TcParser::FastEvS1,
     {16, 5, 2, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool f_1 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M6_M12_M24, _impl_.f_1_), 6>(),
     {32, 6, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_2 = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_2_)}},
    // optional string f_3 = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_4 = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_5 = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M6_M12_M24, _impl_.f_5_), 7>(),
     {96, 7, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_5_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int64 f_6 = 14 [packed = true];
    {::_pbi::TcParser::FastV64P1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_6_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35 f_14 = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_14_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.E7 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_0_), _Internal::kHasBitsOffset + 5, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional bool f_1 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_1_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string f_2 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_2_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_3 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_3_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string f_4 = 10;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_4_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_5 = 12;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_5_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated int64 f_6 = 14 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_6_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35 f_14 = 15;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_14_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43 f_15 = 16;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_15_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M35>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24_M43>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M6_M12_M24_E7_internal_data_},
  }}, {{
    "\47\0\0\3\3\3\0\0\0\0\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M2.M6.M12.M24"
    "f_2"
    "f_3"
    "f_4"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12_M24::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12.M24)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_6_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_2_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.f_3_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.f_4_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.f_14_ != nullptr);
      _impl_.f_14_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.f_15_ != nullptr);
      _impl_.f_15_->Clear();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_5_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_5_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12_M24::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12_M24::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12.M24)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.E7 f_0 = 2;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_f_0(), target);
  }

  // optional bool f_1 = 4;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_f_1(), target);
  }

  // optional string f_2 = 6;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_2();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.f_2");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string f_3 = 7;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_f_3();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.f_3");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string f_4 = 10;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_f_4();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M6.M12.M24.f_4");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional int64 f_5 = 12;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<12>(
            stream, this->_internal_f_5(), target);
  }

  // repeated int64 f_6 = 14 [packed = true];
  {
    int byte_size = _impl_._f_6_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          14, _internal_f_6(), byte_size, target);
    }
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35 f_14 = 15;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        15, *_impl_.f_14_, _impl_.f_14_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43 f_15 = 16;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        16, *_impl_.f_15_, _impl_.f_15_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12.M24)
  return target;
}

::size_t Message8_M2_M6_M12_M24::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12.M24)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated int64 f_6 = 14 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_f_6())
    ;
    _impl_._f_6_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string f_2 = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_2());
    }

    // optional string f_3 = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_3());
    }

    // optional string f_4 = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_4());
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M35 f_14 = 15;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_14_);
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.M43 f_15 = 16;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_15_);
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24.E7 f_0 = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_0());
    }

    // optional bool f_1 = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2;
    }

    // optional int64 f_5 = 12;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_5());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12_M24::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12_M24*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12_M24&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12.M24)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_6()->MergeFrom(from._internal_f_6());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_2(from._internal_f_2());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_f_3(from._internal_f_3());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_f_4(from._internal_f_4());
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.f_14_ != nullptr);
      if (_this->_impl_.f_14_ == nullptr) {
        _this->_impl_.f_14_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M35>(arena, *from._impl_.f_14_);
      } else {
        _this->_impl_.f_14_->MergeFrom(*from._impl_.f_14_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.f_15_ != nullptr);
      if (_this->_impl_.f_15_ == nullptr) {
        _this->_impl_.f_15_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24_M43>(arena, *from._impl_.f_15_);
      } else {
        _this->_impl_.f_15_->MergeFrom(*from._impl_.f_15_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_5_ = from._impl_.f_5_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12_M24::CopyFrom(const Message8_M2_M6_M12_M24& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12.M24)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12_M24::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12_M24::InternalSwap(Message8_M2_M6_M12_M24* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_6_.InternalSwap(&other->_impl_.f_6_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_2_, &other->_impl_.f_2_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_3_, &other->_impl_.f_3_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_4_, &other->_impl_.f_4_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_5_)
      + sizeof(Message8_M2_M6_M12_M24::_impl_.f_5_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12_M24, _impl_.f_14_)>(
          reinterpret_cast<char*>(&_impl_.f_14_),
          reinterpret_cast<char*>(&other->_impl_.f_14_));
}

::google::protobuf::Metadata Message8_M2_M6_M12_M24::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6_M12::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6_M12>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_._has_bits_);
};

Message8_M2_M6_M12::Message8_M2_M6_M12(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6.M12)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_2_{visibility, arena, from.f_2_},
        _f_2_cached_byte_size_{0} {}

Message8_M2_M6_M12::Message8_M2_M6_M12(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6_M12& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6_M12* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_3_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M21>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  _impl_.f_4_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M22>(
                              arena, *from._impl_.f_4_)
                        : nullptr;
  _impl_.f_5_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24>(
                              arena, *from._impl_.f_5_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_1_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_1_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6.M12)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6_M12::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_2_{visibility, arena},
        _f_2_cached_byte_size_{0} {}

inline void Message8_M2_M6_M12::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_3_),
           0,
           offsetof(Impl_, f_1_) -
               offsetof(Impl_, f_3_) +
               sizeof(Impl_::f_1_));
}
Message8_M2_M6_M12::~Message8_M2_M6_M12() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6.M12)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6_M12::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_3_;
  delete _impl_.f_4_;
  delete _impl_.f_5_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6_M12::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6_M12::MergeImpl,
          &Message8_M2_M6_M12::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 0, 2> Message8_M2_M6_M12::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967136,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_M12_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24 f_5 = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 2, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_5_)}},
    // optional bool f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8_M2_M6_M12, _impl_.f_0_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_0_)}},
    // optional int32 f_1 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M6_M12, _impl_.f_1_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_1_)}},
    // repeated .fleetbench.proto.Message8.M2.M6.M12.E3 f_2 = 3 [packed = true];
    {::_pbi::TcParser::FastEvP1,
     {26, 63, 3, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_2_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M21 f_3 = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_3_)}},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M22 f_4 = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_0_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_1_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .fleetbench.proto.Message8.M2.M6.M12.E3 f_2 = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_2_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedEnum)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M21 f_3 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_3_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M22 f_4 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_4_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M6.M12.M24 f_5 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_5_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M21>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M22>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12_M24>()},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M6_M12_E3_internal_data_},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6_M12::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6.M12)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_2_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.f_3_ != nullptr);
      _impl_.f_3_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_4_ != nullptr);
      _impl_.f_4_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.f_5_ != nullptr);
      _impl_.f_5_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_1_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_1_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6_M12::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6_M12::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6.M12)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool f_0 = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_f_0(), target);
  }

  // optional int32 f_1 = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_f_1(), target);
  }

  // repeated .fleetbench.proto.Message8.M2.M6.M12.E3 f_2 = 3 [packed = true];
  {
    std::size_t byte_size = _impl_._f_2_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(3, _internal_f_2(),
                                       byte_size, target);
    }
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M21 f_3 = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M22 f_4 = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.f_4_, _impl_.f_4_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M6.M12.M24 f_5 = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.f_5_, _impl_.f_5_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6.M12)
  return target;
}

::size_t Message8_M2_M6_M12::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6.M12)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M2.M6.M12.E3 f_2 = 3 [packed = true];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_f_2_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_f_2().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._f_2_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .fleetbench.proto.Message8.M2.M6.M12.M21 f_3 = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M22 f_4 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_4_);
    }

    // optional .fleetbench.proto.Message8.M2.M6.M12.M24 f_5 = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_5_);
    }

    // optional bool f_0 = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional int32 f_1 = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_1());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6_M12::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6_M12*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6_M12&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6.M12)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_2()->MergeFrom(from._internal_f_2());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M21>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_4_ != nullptr);
      if (_this->_impl_.f_4_ == nullptr) {
        _this->_impl_.f_4_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M22>(arena, *from._impl_.f_4_);
      } else {
        _this->_impl_.f_4_->MergeFrom(*from._impl_.f_4_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.f_5_ != nullptr);
      if (_this->_impl_.f_5_ == nullptr) {
        _this->_impl_.f_5_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6_M12_M24>(arena, *from._impl_.f_5_);
      } else {
        _this->_impl_.f_5_->MergeFrom(*from._impl_.f_5_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6_M12::CopyFrom(const Message8_M2_M6_M12& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6.M12)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6_M12::IsInitialized() const {
  return true;
}

void Message8_M2_M6_M12::InternalSwap(Message8_M2_M6_M12* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_2_.InternalSwap(&other->_impl_.f_2_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_1_)
      + sizeof(Message8_M2_M6_M12::_impl_.f_1_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M6_M12, _impl_.f_3_)>(
          reinterpret_cast<char*>(&_impl_.f_3_),
          reinterpret_cast<char*>(&other->_impl_.f_3_));
}

::google::protobuf::Metadata Message8_M2_M6_M12::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M6::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M6>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M6, _impl_._has_bits_);
};

Message8_M2_M6::Message8_M2_M6(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M6)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_2_{visibility, arena, from.f_2_} {}

Message8_M2_M6::Message8_M2_M6(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M6& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M6* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.f_0_ = from._impl_.f_0_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M6)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M6::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_2_{visibility, arena} {}

inline void Message8_M2_M6::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M2_M6::~Message8_M2_M6() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M6)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M6::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M6::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M6, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M6::MergeImpl,
          &Message8_M2_M6::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Message8_M2_M6::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M6, _impl_._has_bits_),
    0, // no _extensions_
    5, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967277,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M6_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 f_0 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8_M2_M6, _impl_.f_0_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6, _impl_.f_0_)}},
    // repeated .fleetbench.proto.Message8.M2.M6.M12 f_2 = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M6, _impl_.f_2_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .fleetbench.proto.Message8.M2.M6.M12 f_2 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M6, _impl_.f_2_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6_M12>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M6::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M6)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_2_.Clear();
  _impl_.f_0_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M6::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M6::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M6)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_f_0(), target);
  }

  // repeated .fleetbench.proto.Message8.M2.M6.M12 f_2 = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_2_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_2().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M6)
  return target;
}

::size_t Message8_M2_M6::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M6)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M2.M6.M12 f_2 = 5;
  total_size += 1UL * this->_internal_f_2_size();
  for (const auto& msg : this->_internal_f_2()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional uint32 f_0 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M6::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M6*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M6&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M6)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_2()->MergeFrom(
      from._internal_f_2());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M6::CopyFrom(const Message8_M2_M6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M6::IsInitialized() const {
  return true;
}

void Message8_M2_M6::InternalSwap(Message8_M2_M6* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_2_.InternalSwap(&other->_impl_.f_2_);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M2_M6::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M7::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M7>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M7, _impl_._has_bits_);
};

Message8_M2_M7::Message8_M2_M7(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M7)
}
Message8_M2_M7::Message8_M2_M7(
    ::google::protobuf::Arena* arena, const Message8_M2_M7& from)
    : Message8_M2_M7(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M7::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Message8_M2_M7::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.f_0_ = {};
}
Message8_M2_M7::~Message8_M2_M7() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M7)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M7::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M7::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M7, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M7::MergeImpl,
          &Message8_M2_M7::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Message8_M2_M7::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M7, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M7_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M7>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 f_0 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M7, _impl_.f_0_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M7, _impl_.f_0_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M7, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M7::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M7)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M7::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M7::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M7)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_f_0(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M7)
  return target;
}

::size_t Message8_M2_M7::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M7)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 f_0 = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_f_0());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M7::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M7*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M7&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M7)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.f_0_ = from._impl_.f_0_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M7::CopyFrom(const Message8_M2_M7& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M7::IsInitialized() const {
  return true;
}

void Message8_M2_M7::InternalSwap(Message8_M2_M7* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.f_0_, other->_impl_.f_0_);
}

::google::protobuf::Metadata Message8_M2_M7::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M8::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M8>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M8, _impl_._has_bits_);
};

Message8_M2_M8::Message8_M2_M8(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M8)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M8::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_0_(arena, from.f_0_) {}

Message8_M2_M8::Message8_M2_M8(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M8& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M8* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_1_),
           offsetof(Impl_, f_2_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_2_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M8)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M8::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_0_(arena) {}

inline void Message8_M2_M8::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_1_),
           0,
           offsetof(Impl_, f_2_) -
               offsetof(Impl_, f_1_) +
               sizeof(Impl_::f_2_));
}
Message8_M2_M8::~Message8_M2_M8() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M8)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M8::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M8::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M8, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M8::MergeImpl,
          &Message8_M2_M8::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2> Message8_M2_M8::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M8, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967274,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message8_M2_M8_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M8>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_0 = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M8, _impl_.f_0_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_1 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M8, _impl_.f_1_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M8, _impl_.f_1_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M8, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M8, _impl_.f_1_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint64 f_2 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M8, _impl_.f_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\37\3\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M2.M8"
    "f_0"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M8::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M8)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_0_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.f_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_2_) -
        reinterpret_cast<char*>(&_impl_.f_1_)) + sizeof(_impl_.f_2_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M8::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M8::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M8)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M8.f_0");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int64 f_1 = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_f_1(), target);
  }

  // optional uint64 f_2 = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_f_2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M8)
  return target;
}

::size_t Message8_M2_M8::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M8)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string f_0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_0());
    }

    // optional int64 f_1 = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_1());
    }

    // optional uint64 f_2 = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_2());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M8::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M8*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M8&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M8)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M8::CopyFrom(const Message8_M2_M8& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M8::IsInitialized() const {
  return true;
}

void Message8_M2_M8::InternalSwap(Message8_M2_M8* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M8, _impl_.f_2_)
      + sizeof(Message8_M2_M8::_impl_.f_2_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M8, _impl_.f_1_)>(
          reinterpret_cast<char*>(&_impl_.f_1_),
          reinterpret_cast<char*>(&other->_impl_.f_1_));
}

::google::protobuf::Metadata Message8_M2_M8::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2_M10::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2_M10>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_._has_bits_);
};

Message8_M2_M10::Message8_M2_M10(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2.M10)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M10::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_5_(arena, from.f_5_) {}

Message8_M2_M10::Message8_M2_M10(
    ::google::protobuf::Arena* arena,
    const Message8_M2_M10& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2_M10* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_7_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_7_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2.M10)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2_M10::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_5_(arena) {}

inline void Message8_M2_M10::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           0,
           offsetof(Impl_, f_7_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_7_));
}
Message8_M2_M10::~Message8_M2_M10() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2.M10)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2_M10::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_5_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2_M10::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_._cached_size_),
              false,
          },
          &Message8_M2_M10::MergeImpl,
          &Message8_M2_M10::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 2, 52, 2> Message8_M2_M10::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294960468,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_M10_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M10>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_0 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M10, _impl_.f_0_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_0_)}},
    // optional .fleetbench.proto.Message8.M2.M10.E1 f_1 = 2;
    {::_pbi::TcParser::FastEvS1,
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 f_2 = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M10, _impl_.f_2_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M10.E2 f_3 = 6;
    {::_pbi::TcParser::FastEvS1,
     {48, 4, 1, PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_3_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 f_4 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M10, _impl_.f_4_), 5>(),
     {64, 5, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_4_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string f_5 = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_5_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional double f_6 = 12;
    {::_pbi::TcParser::FastF64S1,
     {97, 6, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_6_)}},
    // optional int64 f_7 = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2_M10, _impl_.f_7_), 7>(),
     {104, 7, 0, PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_7_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M2.M10.E1 f_1 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_1_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 f_2 = 4;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_2_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M2.M10.E2 f_3 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_3_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional uint64 f_4 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_4_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string f_5 = 10;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_5_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional double f_6 = 12;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_6_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional int64 f_7 = 13;
    {PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_7_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M10_E1_internal_data_},
    {::_pbi::FieldAuxEnumData{}, ::fleetbench::proto::Message8_M2_M10_E2_internal_data_},
  }}, {{
    "\40\0\0\0\0\0\3\0\0\0\0\0\0\0\0\0"
    "fleetbench.proto.Message8.M2.M10"
    "f_5"
  }},
};

PROTOBUF_NOINLINE void Message8_M2_M10::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2.M10)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.f_5_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_7_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_7_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2_M10::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2_M10::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2.M10)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 f_0 = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_f_0(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M10.E1 f_1 = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_f_1(), target);
  }

  // optional int64 f_2 = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_f_2(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M10.E2 f_3 = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_f_3(), target);
  }

  // optional uint64 f_4 = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this->_internal_f_4(), target);
  }

  // optional string f_5 = 10;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_5();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "fleetbench.proto.Message8.M2.M10.f_5");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional double f_6 = 12;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        12, this->_internal_f_6(), target);
  }

  // optional int64 f_7 = 13;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<13>(
            stream, this->_internal_f_7(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2.M10)
  return target;
}

::size_t Message8_M2_M10::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2.M10)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string f_5 = 10;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_f_5());
    }

    // optional int64 f_0 = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_0());
    }

    // optional int64 f_2 = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_2());
    }

    // optional .fleetbench.proto.Message8.M2.M10.E1 f_1 = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_1());
    }

    // optional .fleetbench.proto.Message8.M2.M10.E2 f_3 = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_f_3());
    }

    // optional uint64 f_4 = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_4());
    }

    // optional double f_6 = 12;
    if (cached_has_bits & 0x00000040u) {
      total_size += 9;
    }

    // optional int64 f_7 = 13;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_7());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2_M10::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2_M10*>(&to_msg);
  auto& from = static_cast<const Message8_M2_M10&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2.M10)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_5(from._internal_f_5());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_6_ = from._impl_.f_6_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.f_7_ = from._impl_.f_7_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2_M10::CopyFrom(const Message8_M2_M10& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2.M10)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2_M10::IsInitialized() const {
  return true;
}

void Message8_M2_M10::InternalSwap(Message8_M2_M10* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_5_, &other->_impl_.f_5_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_7_)
      + sizeof(Message8_M2_M10::_impl_.f_7_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2_M10, _impl_.f_0_)>(
          reinterpret_cast<char*>(&_impl_.f_0_),
          reinterpret_cast<char*>(&other->_impl_.f_0_));
}

::google::protobuf::Metadata Message8_M2_M10::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8_M2::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8_M2>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_._has_bits_);
};

Message8_M2::Message8_M2(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8.M2)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_1_{visibility, arena, from.f_1_},
        _f_1_cached_byte_size_{0},
        f_5_{visibility, arena, from.f_5_},
        f_0_(arena, from.f_0_) {}

Message8_M2::Message8_M2(
    ::google::protobuf::Arena* arena,
    const Message8_M2& from)
    : ::google::protobuf::Message(arena) {
  Message8_M2* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_3_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M3>(
                              arena, *from._impl_.f_3_)
                        : nullptr;
  _impl_.f_6_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6>(
                              arena, *from._impl_.f_6_)
                        : nullptr;
  _impl_.f_7_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M7>(
                              arena, *from._impl_.f_7_)
                        : nullptr;
  _impl_.f_8_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M8>(
                              arena, *from._impl_.f_8_)
                        : nullptr;
  _impl_.f_9_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M10>(
                              arena, *from._impl_.f_9_)
                        : nullptr;
  _impl_.f_2_ = from._impl_.f_2_;

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8.M2)
}
inline PROTOBUF_NDEBUG_INLINE Message8_M2::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_1_{visibility, arena},
        _f_1_cached_byte_size_{0},
        f_5_{visibility, arena},
        f_0_(arena) {}

inline void Message8_M2::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_3_),
           0,
           offsetof(Impl_, f_2_) -
               offsetof(Impl_, f_3_) +
               sizeof(Impl_::f_2_));
}
Message8_M2::~Message8_M2() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8.M2)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8_M2::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.f_0_.Destroy();
  delete _impl_.f_3_;
  delete _impl_.f_6_;
  delete _impl_.f_7_;
  delete _impl_.f_8_;
  delete _impl_.f_9_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8_M2::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_._cached_size_),
              false,
          },
          &Message8_M2::MergeImpl,
          &Message8_M2::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 6, 0, 2> Message8_M2::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_M2_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bytes f_0 = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_0_)}},
    // repeated int64 f_1 = 2 [packed = true];
    {::_pbi::TcParser::FastV64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_1_)}},
    // optional int64 f_2 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8_M2, _impl_.f_2_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .fleetbench.proto.Message8.M2.M3 f_3 = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_3_)}},
    // repeated .fleetbench.proto.Message8.M2.M5 f_5 = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 1, PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_5_)}},
    // optional .fleetbench.proto.Message8.M2.M6 f_6 = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_6_)}},
    // optional .fleetbench.proto.Message8.M2.M7 f_7 = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_7_)}},
    // optional .fleetbench.proto.Message8.M2.M8 f_8 = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_8_)}},
    // optional .fleetbench.proto.Message8.M2.M10 f_9 = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_9_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes f_0 = 1;
    {PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_0_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated int64 f_1 = 2 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_1_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // optional int64 f_2 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_2_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .fleetbench.proto.Message8.M2.M3 f_3 = 5;
    {PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_3_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .fleetbench.proto.Message8.M2.M5 f_5 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_5_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M6 f_6 = 7;
    {PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_6_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M7 f_7 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_7_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M8 f_8 = 9;
    {PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_8_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2.M10 f_9 = 10;
    {PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_9_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M3>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M5>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M6>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M7>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M8>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2_M10>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8_M2::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8.M2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_1_.Clear();
  _impl_.f_5_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.f_0_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.f_3_ != nullptr);
      _impl_.f_3_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.f_6_ != nullptr);
      _impl_.f_6_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.f_7_ != nullptr);
      _impl_.f_7_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.f_8_ != nullptr);
      _impl_.f_8_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.f_9_ != nullptr);
      _impl_.f_9_->Clear();
    }
  }
  _impl_.f_2_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8_M2::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8_M2::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8.M2)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes f_0 = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_f_0();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // repeated int64 f_1 = 2 [packed = true];
  {
    int byte_size = _impl_._f_1_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_f_1(), byte_size, target);
    }
  }

  // optional int64 f_2 = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_f_2(), target);
  }

  // optional .fleetbench.proto.Message8.M2.M3 f_3 = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.f_3_, _impl_.f_3_->GetCachedSize(), target, stream);
  }

  // repeated .fleetbench.proto.Message8.M2.M5 f_5 = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_5_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_5().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M6 f_6 = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.f_6_, _impl_.f_6_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M7 f_7 = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.f_7_, _impl_.f_7_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M8 f_8 = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *_impl_.f_8_, _impl_.f_8_->GetCachedSize(), target, stream);
  }

  // optional .fleetbench.proto.Message8.M2.M10 f_9 = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *_impl_.f_9_, _impl_.f_9_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8.M2)
  return target;
}

::size_t Message8_M2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8.M2)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated int64 f_1 = 2 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_f_1())
    ;
    _impl_._f_1_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .fleetbench.proto.Message8.M2.M5 f_5 = 6;
  total_size += 1UL * this->_internal_f_5_size();
  for (const auto& msg : this->_internal_f_5()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional bytes f_0 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_f_0());
    }

    // optional .fleetbench.proto.Message8.M2.M3 f_3 = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_3_);
    }

    // optional .fleetbench.proto.Message8.M2.M6 f_6 = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_6_);
    }

    // optional .fleetbench.proto.Message8.M2.M7 f_7 = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_7_);
    }

    // optional .fleetbench.proto.Message8.M2.M8 f_8 = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_8_);
    }

    // optional .fleetbench.proto.Message8.M2.M10 f_9 = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_9_);
    }

    // optional int64 f_2 = 3;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_2());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8_M2::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8_M2*>(&to_msg);
  auto& from = static_cast<const Message8_M2&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8.M2)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_1()->MergeFrom(from._internal_f_1());
  _this->_internal_mutable_f_5()->MergeFrom(
      from._internal_f_5());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_f_0(from._internal_f_0());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.f_3_ != nullptr);
      if (_this->_impl_.f_3_ == nullptr) {
        _this->_impl_.f_3_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M3>(arena, *from._impl_.f_3_);
      } else {
        _this->_impl_.f_3_->MergeFrom(*from._impl_.f_3_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.f_6_ != nullptr);
      if (_this->_impl_.f_6_ == nullptr) {
        _this->_impl_.f_6_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M6>(arena, *from._impl_.f_6_);
      } else {
        _this->_impl_.f_6_->MergeFrom(*from._impl_.f_6_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.f_7_ != nullptr);
      if (_this->_impl_.f_7_ == nullptr) {
        _this->_impl_.f_7_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M7>(arena, *from._impl_.f_7_);
      } else {
        _this->_impl_.f_7_->MergeFrom(*from._impl_.f_7_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.f_8_ != nullptr);
      if (_this->_impl_.f_8_ == nullptr) {
        _this->_impl_.f_8_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M8>(arena, *from._impl_.f_8_);
      } else {
        _this->_impl_.f_8_->MergeFrom(*from._impl_.f_8_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.f_9_ != nullptr);
      if (_this->_impl_.f_9_ == nullptr) {
        _this->_impl_.f_9_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2_M10>(arena, *from._impl_.f_9_);
      } else {
        _this->_impl_.f_9_->MergeFrom(*from._impl_.f_9_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8_M2::CopyFrom(const Message8_M2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8.M2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8_M2::IsInitialized() const {
  return true;
}

void Message8_M2::InternalSwap(Message8_M2* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_1_.InternalSwap(&other->_impl_.f_1_);
  _impl_.f_5_.InternalSwap(&other->_impl_.f_5_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.f_0_, &other->_impl_.f_0_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_2_)
      + sizeof(Message8_M2::_impl_.f_2_)
      - PROTOBUF_FIELD_OFFSET(Message8_M2, _impl_.f_3_)>(
          reinterpret_cast<char*>(&_impl_.f_3_),
          reinterpret_cast<char*>(&other->_impl_.f_3_));
}

::google::protobuf::Metadata Message8_M2::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Message8::_Internal {
 public:
  using HasBits = decltype(std::declval<Message8>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message8, _impl_._has_bits_);
};

Message8::Message8(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fleetbench.proto.Message8)
}
inline PROTOBUF_NDEBUG_INLINE Message8::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        f_10_{visibility, arena, from.f_10_} {}

Message8::Message8(
    ::google::protobuf::Arena* arena,
    const Message8& from)
    : ::google::protobuf::Message(arena) {
  Message8* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.f_11_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2>(
                              arena, *from._impl_.f_11_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_0_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, f_0_),
           offsetof(Impl_, f_5_) -
               offsetof(Impl_, f_0_) +
               sizeof(Impl_::f_5_));

  // @@protoc_insertion_point(copy_constructor:fleetbench.proto.Message8)
}
inline PROTOBUF_NDEBUG_INLINE Message8::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        f_10_{visibility, arena} {}

inline void Message8::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, f_11_),
           0,
           offsetof(Impl_, f_5_) -
               offsetof(Impl_, f_11_) +
               sizeof(Impl_::f_5_));
}
Message8::~Message8() {
  // @@protoc_insertion_point(destructor:fleetbench.proto.Message8)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message8::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.f_11_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Message8::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message8, _impl_._cached_size_),
              false,
          },
          &Message8::MergeImpl,
          &Message8::kDescriptorMethods,
          &descriptor_table_protos_2fMessage8_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 2, 0, 2> Message8::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message8, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message8_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fleetbench::proto::Message8>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 f_0 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8, _impl_.f_0_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_0_)}},
    // optional uint64 f_1 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8, _impl_.f_1_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool f_2 = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Message8, _impl_.f_2_), 3>(),
     {48, 3, 0, PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 f_3 = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message8, _impl_.f_3_), 4>(),
     {64, 4, 0, PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_3_)}},
    // optional double f_4 = 9;
    {::_pbi::TcParser::FastF64S1,
     {73, 5, 0, PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_4_)}},
    // optional int64 f_5 = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Message8, _impl_.f_5_), 6>(),
     {80, 6, 0, PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_5_)}},
    // repeated .fleetbench.proto.Message8.M1 f_10 = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_10_)}},
    // optional .fleetbench.proto.Message8.M2 f_11 = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 0, 1, PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_11_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 f_0 = 2;
    {PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_0_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 f_1 = 3;
    {PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_1_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bool f_2 = 6;
    {PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_2_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 f_3 = 8;
    {PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_3_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional double f_4 = 9;
    {PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_4_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional int64 f_5 = 10;
    {PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_5_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated .fleetbench.proto.Message8.M1 f_10 = 11;
    {PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_10_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .fleetbench.proto.Message8.M2 f_11 = 12;
    {PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_11_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M1>()},
    {::_pbi::TcParser::GetTable<::fleetbench::proto::Message8_M2>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Message8::Clear() {
// @@protoc_insertion_point(message_clear_start:fleetbench.proto.Message8)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.f_10_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.f_11_ != nullptr);
    _impl_.f_11_->Clear();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&_impl_.f_0_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f_5_) -
        reinterpret_cast<char*>(&_impl_.f_0_)) + sizeof(_impl_.f_5_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message8::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Message8::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fleetbench.proto.Message8)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 f_0 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_f_0(), target);
  }

  // optional uint64 f_1 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_f_1(), target);
  }

  // optional bool f_2 = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_f_2(), target);
  }

  // optional int32 f_3 = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_f_3(), target);
  }

  // optional double f_4 = 9;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        9, this->_internal_f_4(), target);
  }

  // optional int64 f_5 = 10;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<10>(
            stream, this->_internal_f_5(), target);
  }

  // repeated .fleetbench.proto.Message8.M1 f_10 = 11;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_f_10_size());
       i < n; i++) {
    const auto& repfield = this->_internal_f_10().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            11, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .fleetbench.proto.Message8.M2 f_11 = 12;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *_impl_.f_11_, _impl_.f_11_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fleetbench.proto.Message8)
  return target;
}

::size_t Message8::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fleetbench.proto.Message8)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .fleetbench.proto.Message8.M1 f_10 = 11;
  total_size += 1UL * this->_internal_f_10_size();
  for (const auto& msg : this->_internal_f_10()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .fleetbench.proto.Message8.M2 f_11 = 12;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.f_11_);
    }

    // optional uint64 f_0 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_0());
    }

    // optional uint64 f_1 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_f_1());
    }

    // optional bool f_2 = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional int32 f_3 = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_f_3());
    }

    // optional double f_4 = 9;
    if (cached_has_bits & 0x00000020u) {
      total_size += 9;
    }

    // optional int64 f_5 = 10;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_f_5());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message8::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message8*>(&to_msg);
  auto& from = static_cast<const Message8&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fleetbench.proto.Message8)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_f_10()->MergeFrom(
      from._internal_f_10());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.f_11_ != nullptr);
      if (_this->_impl_.f_11_ == nullptr) {
        _this->_impl_.f_11_ =
            ::google::protobuf::Message::CopyConstruct<::fleetbench::proto::Message8_M2>(arena, *from._impl_.f_11_);
      } else {
        _this->_impl_.f_11_->MergeFrom(*from._impl_.f_11_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.f_0_ = from._impl_.f_0_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.f_1_ = from._impl_.f_1_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.f_2_ = from._impl_.f_2_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.f_3_ = from._impl_.f_3_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.f_4_ = from._impl_.f_4_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.f_5_ = from._impl_.f_5_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message8::CopyFrom(const Message8& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fleetbench.proto.Message8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message8::IsInitialized() const {
  return true;
}

void Message8::InternalSwap(Message8* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.f_10_.InternalSwap(&other->_impl_.f_10_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_5_)
      + sizeof(Message8::_impl_.f_5_)
      - PROTOBUF_FIELD_OFFSET(Message8, _impl_.f_11_)>(
          reinterpret_cast<char*>(&_impl_.f_11_),
          reinterpret_cast<char*>(&other->_impl_.f_11_));
}

::google::protobuf::Metadata Message8::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace fleetbench
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_protos_2fMessage8_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
