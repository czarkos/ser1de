// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/Message9.proto
// Protobuf C++ Version: 5.27.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_protos_2fMessage9_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_protos_2fMessage9_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_protos_2fMessage9_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_protos_2fMessage9_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_protos_2fMessage9_2eproto;
namespace fleetbench {
namespace proto {
class Message9;
struct Message9DefaultTypeInternal;
extern Message9DefaultTypeInternal _Message9_default_instance_;
class Message9_M1;
struct Message9_M1DefaultTypeInternal;
extern Message9_M1DefaultTypeInternal _Message9_M1_default_instance_;
class Message9_M1_M18;
struct Message9_M1_M18DefaultTypeInternal;
extern Message9_M1_M18DefaultTypeInternal _Message9_M1_M18_default_instance_;
class Message9_M2;
struct Message9_M2DefaultTypeInternal;
extern Message9_M2DefaultTypeInternal _Message9_M2_default_instance_;
class Message9_M3;
struct Message9_M3DefaultTypeInternal;
extern Message9_M3DefaultTypeInternal _Message9_M3_default_instance_;
class Message9_M3_M10;
struct Message9_M3_M10DefaultTypeInternal;
extern Message9_M3_M10DefaultTypeInternal _Message9_M3_M10_default_instance_;
class Message9_M3_M13;
struct Message9_M3_M13DefaultTypeInternal;
extern Message9_M3_M13DefaultTypeInternal _Message9_M3_M13_default_instance_;
class Message9_M3_M13_M24;
struct Message9_M3_M13_M24DefaultTypeInternal;
extern Message9_M3_M13_M24DefaultTypeInternal _Message9_M3_M13_M24_default_instance_;
class Message9_M3_M13_M24_M35;
struct Message9_M3_M13_M24_M35DefaultTypeInternal;
extern Message9_M3_M13_M24_M35DefaultTypeInternal _Message9_M3_M13_M24_M35_default_instance_;
class Message9_M3_M14;
struct Message9_M3_M14DefaultTypeInternal;
extern Message9_M3_M14DefaultTypeInternal _Message9_M3_M14_default_instance_;
class Message9_M3_M14_M27;
struct Message9_M3_M14_M27DefaultTypeInternal;
extern Message9_M3_M14_M27DefaultTypeInternal _Message9_M3_M14_M27_default_instance_;
class Message9_M3_M20;
struct Message9_M3_M20DefaultTypeInternal;
extern Message9_M3_M20DefaultTypeInternal _Message9_M3_M20_default_instance_;
class Message9_M3_M20_M29;
struct Message9_M3_M20_M29DefaultTypeInternal;
extern Message9_M3_M20_M29DefaultTypeInternal _Message9_M3_M20_M29_default_instance_;
class Message9_M3_M21;
struct Message9_M3_M21DefaultTypeInternal;
extern Message9_M3_M21DefaultTypeInternal _Message9_M3_M21_default_instance_;
class Message9_M4;
struct Message9_M4DefaultTypeInternal;
extern Message9_M4DefaultTypeInternal _Message9_M4_default_instance_;
class Message9_M4_M19;
struct Message9_M4_M19DefaultTypeInternal;
extern Message9_M4_M19DefaultTypeInternal _Message9_M4_M19_default_instance_;
class Message9_M4_M19_M28;
struct Message9_M4_M19_M28DefaultTypeInternal;
extern Message9_M4_M19_M28DefaultTypeInternal _Message9_M4_M19_M28_default_instance_;
class Message9_M5;
struct Message9_M5DefaultTypeInternal;
extern Message9_M5DefaultTypeInternal _Message9_M5_default_instance_;
class Message9_M5_M11;
struct Message9_M5_M11DefaultTypeInternal;
extern Message9_M5_M11DefaultTypeInternal _Message9_M5_M11_default_instance_;
class Message9_M5_M11_M23;
struct Message9_M5_M11_M23DefaultTypeInternal;
extern Message9_M5_M11_M23DefaultTypeInternal _Message9_M5_M11_M23_default_instance_;
class Message9_M5_M11_M23_M34;
struct Message9_M5_M11_M23_M34DefaultTypeInternal;
extern Message9_M5_M11_M23_M34DefaultTypeInternal _Message9_M5_M11_M23_M34_default_instance_;
class Message9_M5_M11_M23_M34_M36;
struct Message9_M5_M11_M23_M34_M36DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40;
struct Message9_M5_M11_M23_M34_M36_M40DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M48;
struct Message9_M5_M11_M23_M34_M36_M40_M48DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M48DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M48_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M48_M54;
struct Message9_M5_M11_M23_M34_M36_M40_M48_M54DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M48_M54DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M48_M54_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M49;
struct Message9_M5_M11_M23_M34_M36_M40_M49DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M49DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M49_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51;
struct Message9_M5_M11_M23_M34_M36_M40_M51DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75_default_instance_;
class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66;
struct Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66DefaultTypeInternal _Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66_default_instance_;
class Message9_M5_M11_M23_M34_M37;
struct Message9_M5_M11_M23_M34_M37DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_default_instance_;
class Message9_M5_M11_M23_M34_M37_M38;
struct Message9_M5_M11_M23_M34_M37_M38DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M38DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M38_default_instance_;
class Message9_M5_M11_M23_M34_M37_M38_M46;
struct Message9_M5_M11_M23_M34_M37_M38_M46DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M38_M46DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M38_M46_default_instance_;
class Message9_M5_M11_M23_M34_M37_M38_M46_M52;
struct Message9_M5_M11_M23_M34_M37_M38_M46_M52DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M38_M46_M52DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M38_M46_M52_default_instance_;
class Message9_M5_M11_M23_M34_M37_M38_M46_M56;
struct Message9_M5_M11_M23_M34_M37_M38_M46_M56DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M38_M46_M56DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M38_M46_M56_default_instance_;
class Message9_M5_M11_M23_M34_M37_M38_M47;
struct Message9_M5_M11_M23_M34_M37_M38_M47DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M38_M47DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M38_M47_default_instance_;
class Message9_M5_M11_M23_M34_M37_M39;
struct Message9_M5_M11_M23_M34_M37_M39DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M39DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M39_default_instance_;
class Message9_M5_M11_M23_M34_M37_M39_M45;
struct Message9_M5_M11_M23_M34_M37_M39_M45DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M39_M45DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M39_M45_default_instance_;
class Message9_M5_M11_M23_M34_M37_M39_M50;
struct Message9_M5_M11_M23_M34_M37_M39_M50DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M39_M50DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M39_M50_default_instance_;
class Message9_M5_M11_M23_M34_M37_M41;
struct Message9_M5_M11_M23_M34_M37_M41DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M41DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M41_default_instance_;
class Message9_M5_M11_M23_M34_M37_M41_M42;
struct Message9_M5_M11_M23_M34_M37_M41_M42DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M41_M42DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M41_M42_default_instance_;
class Message9_M5_M11_M23_M34_M37_M41_M43;
struct Message9_M5_M11_M23_M34_M37_M41_M43DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M41_M43DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M41_M43_default_instance_;
class Message9_M5_M11_M23_M34_M37_M41_M44;
struct Message9_M5_M11_M23_M34_M37_M41_M44DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M41_M44DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M41_M44_default_instance_;
class Message9_M5_M11_M23_M34_M37_M41_M44_M53;
struct Message9_M5_M11_M23_M34_M37_M41_M44_M53DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M41_M44_M53DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M41_M44_M53_default_instance_;
class Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60;
struct Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60_default_instance_;
class Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61;
struct Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61_default_instance_;
class Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62;
struct Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62_default_instance_;
class Message9_M5_M11_M23_M34_M37_M41_M44_M55;
struct Message9_M5_M11_M23_M34_M37_M41_M44_M55DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M41_M44_M55DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M41_M44_M55_default_instance_;
class Message9_M5_M11_M23_M34_M37_M41_M44_M57;
struct Message9_M5_M11_M23_M34_M37_M41_M44_M57DefaultTypeInternal;
extern Message9_M5_M11_M23_M34_M37_M41_M44_M57DefaultTypeInternal _Message9_M5_M11_M23_M34_M37_M41_M44_M57_default_instance_;
class Message9_M5_M11_M25;
struct Message9_M5_M11_M25DefaultTypeInternal;
extern Message9_M5_M11_M25DefaultTypeInternal _Message9_M5_M11_M25_default_instance_;
class Message9_M5_M11_M25_M31;
struct Message9_M5_M11_M25_M31DefaultTypeInternal;
extern Message9_M5_M11_M25_M31DefaultTypeInternal _Message9_M5_M11_M25_M31_default_instance_;
class Message9_M5_M11_M30;
struct Message9_M5_M11_M30DefaultTypeInternal;
extern Message9_M5_M11_M30DefaultTypeInternal _Message9_M5_M11_M30_default_instance_;
class Message9_M6;
struct Message9_M6DefaultTypeInternal;
extern Message9_M6DefaultTypeInternal _Message9_M6_default_instance_;
class Message9_M6_M12;
struct Message9_M6_M12DefaultTypeInternal;
extern Message9_M6_M12DefaultTypeInternal _Message9_M6_M12_default_instance_;
class Message9_M6_M15;
struct Message9_M6_M15DefaultTypeInternal;
extern Message9_M6_M15DefaultTypeInternal _Message9_M6_M15_default_instance_;
class Message9_M6_M17;
struct Message9_M6_M17DefaultTypeInternal;
extern Message9_M6_M17DefaultTypeInternal _Message9_M6_M17_default_instance_;
class Message9_M6_M17_M22;
struct Message9_M6_M17_M22DefaultTypeInternal;
extern Message9_M6_M17_M22DefaultTypeInternal _Message9_M6_M17_M22_default_instance_;
class Message9_M7;
struct Message9_M7DefaultTypeInternal;
extern Message9_M7DefaultTypeInternal _Message9_M7_default_instance_;
class Message9_M7_M16;
struct Message9_M7_M16DefaultTypeInternal;
extern Message9_M7_M16DefaultTypeInternal _Message9_M7_M16_default_instance_;
class Message9_M7_M16_M26;
struct Message9_M7_M16_M26DefaultTypeInternal;
extern Message9_M7_M16_M26DefaultTypeInternal _Message9_M7_M16_M26_default_instance_;
class Message9_M7_M16_M26_M32;
struct Message9_M7_M16_M26_M32DefaultTypeInternal;
extern Message9_M7_M16_M26_M32DefaultTypeInternal _Message9_M7_M16_M26_M32_default_instance_;
class Message9_M7_M16_M26_M33;
struct Message9_M7_M16_M26_M33DefaultTypeInternal;
extern Message9_M7_M16_M26_M33DefaultTypeInternal _Message9_M7_M16_M26_M33_default_instance_;
class Message9_M8;
struct Message9_M8DefaultTypeInternal;
extern Message9_M8DefaultTypeInternal _Message9_M8_default_instance_;
class Message9_M9;
struct Message9_M9DefaultTypeInternal;
extern Message9_M9DefaultTypeInternal _Message9_M9_default_instance_;
}  // namespace proto
}  // namespace fleetbench
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace fleetbench {
namespace proto {
enum Message9_M1_M18_E6 : int {
  Message9_M1_M18_E6_E6_UNSPECIFIED = 0,
  Message9_M1_M18_E6_E6_CONST_1 = 69,
  Message9_M1_M18_E6_E6_CONST_2 = 10,
  Message9_M1_M18_E6_E6_CONST_3 = 35,
  Message9_M1_M18_E6_E6_CONST_4 = 91,
  Message9_M1_M18_E6_E6_CONST_5 = 40,
};

bool Message9_M1_M18_E6_IsValid(int value);
extern const uint32_t Message9_M1_M18_E6_internal_data_[];
constexpr Message9_M1_M18_E6 Message9_M1_M18_E6_E6_MIN = static_cast<Message9_M1_M18_E6>(0);
constexpr Message9_M1_M18_E6 Message9_M1_M18_E6_E6_MAX = static_cast<Message9_M1_M18_E6>(91);
constexpr int Message9_M1_M18_E6_E6_ARRAYSIZE = 91 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M1_M18_E6_descriptor();
template <typename T>
const std::string& Message9_M1_M18_E6_Name(T value) {
  static_assert(std::is_same<T, Message9_M1_M18_E6>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E6_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M1_M18_E6_descriptor(), value);
}
inline bool Message9_M1_M18_E6_Parse(absl::string_view name, Message9_M1_M18_E6* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M1_M18_E6>(
      Message9_M1_M18_E6_descriptor(), name, value);
}
enum Message9_M2_E3 : int {
  Message9_M2_E3_E3_UNSPECIFIED = 0,
  Message9_M2_E3_E3_CONST_1 = 96,
  Message9_M2_E3_E3_CONST_2 = 84,
  Message9_M2_E3_E3_CONST_3 = 110,
  Message9_M2_E3_E3_CONST_4 = 124,
  Message9_M2_E3_E3_CONST_5 = 32,
};

bool Message9_M2_E3_IsValid(int value);
extern const uint32_t Message9_M2_E3_internal_data_[];
constexpr Message9_M2_E3 Message9_M2_E3_E3_MIN = static_cast<Message9_M2_E3>(0);
constexpr Message9_M2_E3 Message9_M2_E3_E3_MAX = static_cast<Message9_M2_E3>(124);
constexpr int Message9_M2_E3_E3_ARRAYSIZE = 124 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M2_E3_descriptor();
template <typename T>
const std::string& Message9_M2_E3_Name(T value) {
  static_assert(std::is_same<T, Message9_M2_E3>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E3_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M2_E3_descriptor(), value);
}
inline bool Message9_M2_E3_Parse(absl::string_view name, Message9_M2_E3* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M2_E3>(
      Message9_M2_E3_descriptor(), name, value);
}
enum Message9_M3_M13_M24_M35_E19 : int {
  Message9_M3_M13_M24_M35_E19_E19_UNSPECIFIED = 0,
  Message9_M3_M13_M24_M35_E19_E19_CONST_1 = 73,
  Message9_M3_M13_M24_M35_E19_E19_CONST_2 = 57,
  Message9_M3_M13_M24_M35_E19_E19_CONST_3 = 87,
  Message9_M3_M13_M24_M35_E19_E19_CONST_4 = 81,
  Message9_M3_M13_M24_M35_E19_E19_CONST_5 = 36,
};

bool Message9_M3_M13_M24_M35_E19_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_M35_E19_internal_data_[];
constexpr Message9_M3_M13_M24_M35_E19 Message9_M3_M13_M24_M35_E19_E19_MIN = static_cast<Message9_M3_M13_M24_M35_E19>(0);
constexpr Message9_M3_M13_M24_M35_E19 Message9_M3_M13_M24_M35_E19_E19_MAX = static_cast<Message9_M3_M13_M24_M35_E19>(87);
constexpr int Message9_M3_M13_M24_M35_E19_E19_ARRAYSIZE = 87 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_M35_E19_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_M35_E19_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_M35_E19>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E19_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_M35_E19_descriptor(), value);
}
inline bool Message9_M3_M13_M24_M35_E19_Parse(absl::string_view name, Message9_M3_M13_M24_M35_E19* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_M35_E19>(
      Message9_M3_M13_M24_M35_E19_descriptor(), name, value);
}
enum Message9_M3_M13_M24_M35_E20 : int {
  Message9_M3_M13_M24_M35_E20_E20_UNSPECIFIED = 0,
  Message9_M3_M13_M24_M35_E20_E20_CONST_1 = 24,
  Message9_M3_M13_M24_M35_E20_E20_CONST_2 = 50,
  Message9_M3_M13_M24_M35_E20_E20_CONST_3 = 68,
  Message9_M3_M13_M24_M35_E20_E20_CONST_4 = 14,
  Message9_M3_M13_M24_M35_E20_E20_CONST_5 = 65,
};

bool Message9_M3_M13_M24_M35_E20_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_M35_E20_internal_data_[];
constexpr Message9_M3_M13_M24_M35_E20 Message9_M3_M13_M24_M35_E20_E20_MIN = static_cast<Message9_M3_M13_M24_M35_E20>(0);
constexpr Message9_M3_M13_M24_M35_E20 Message9_M3_M13_M24_M35_E20_E20_MAX = static_cast<Message9_M3_M13_M24_M35_E20>(68);
constexpr int Message9_M3_M13_M24_M35_E20_E20_ARRAYSIZE = 68 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_M35_E20_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_M35_E20_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_M35_E20>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E20_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_M35_E20_descriptor(), value);
}
inline bool Message9_M3_M13_M24_M35_E20_Parse(absl::string_view name, Message9_M3_M13_M24_M35_E20* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_M35_E20>(
      Message9_M3_M13_M24_M35_E20_descriptor(), name, value);
}
enum Message9_M3_M13_M24_M35_E21 : int {
  Message9_M3_M13_M24_M35_E21_E21_UNSPECIFIED = 0,
  Message9_M3_M13_M24_M35_E21_E21_CONST_1 = 99,
  Message9_M3_M13_M24_M35_E21_E21_CONST_2 = 39,
  Message9_M3_M13_M24_M35_E21_E21_CONST_3 = 36,
  Message9_M3_M13_M24_M35_E21_E21_CONST_4 = 37,
  Message9_M3_M13_M24_M35_E21_E21_CONST_5 = 45,
};

bool Message9_M3_M13_M24_M35_E21_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_M35_E21_internal_data_[];
constexpr Message9_M3_M13_M24_M35_E21 Message9_M3_M13_M24_M35_E21_E21_MIN = static_cast<Message9_M3_M13_M24_M35_E21>(0);
constexpr Message9_M3_M13_M24_M35_E21 Message9_M3_M13_M24_M35_E21_E21_MAX = static_cast<Message9_M3_M13_M24_M35_E21>(99);
constexpr int Message9_M3_M13_M24_M35_E21_E21_ARRAYSIZE = 99 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_M35_E21_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_M35_E21_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_M35_E21>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E21_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_M35_E21_descriptor(), value);
}
inline bool Message9_M3_M13_M24_M35_E21_Parse(absl::string_view name, Message9_M3_M13_M24_M35_E21* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_M35_E21>(
      Message9_M3_M13_M24_M35_E21_descriptor(), name, value);
}
enum Message9_M3_M13_M24_M35_E22 : int {
  Message9_M3_M13_M24_M35_E22_E22_UNSPECIFIED = 0,
  Message9_M3_M13_M24_M35_E22_E22_CONST_1 = 91,
  Message9_M3_M13_M24_M35_E22_E22_CONST_2 = 103,
  Message9_M3_M13_M24_M35_E22_E22_CONST_3 = 123,
  Message9_M3_M13_M24_M35_E22_E22_CONST_4 = 32,
  Message9_M3_M13_M24_M35_E22_E22_CONST_5 = 99,
};

bool Message9_M3_M13_M24_M35_E22_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_M35_E22_internal_data_[];
constexpr Message9_M3_M13_M24_M35_E22 Message9_M3_M13_M24_M35_E22_E22_MIN = static_cast<Message9_M3_M13_M24_M35_E22>(0);
constexpr Message9_M3_M13_M24_M35_E22 Message9_M3_M13_M24_M35_E22_E22_MAX = static_cast<Message9_M3_M13_M24_M35_E22>(123);
constexpr int Message9_M3_M13_M24_M35_E22_E22_ARRAYSIZE = 123 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_M35_E22_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_M35_E22_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_M35_E22>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E22_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_M35_E22_descriptor(), value);
}
inline bool Message9_M3_M13_M24_M35_E22_Parse(absl::string_view name, Message9_M3_M13_M24_M35_E22* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_M35_E22>(
      Message9_M3_M13_M24_M35_E22_descriptor(), name, value);
}
enum Message9_M3_M13_M24_M35_E23 : int {
  Message9_M3_M13_M24_M35_E23_E23_UNSPECIFIED = 0,
  Message9_M3_M13_M24_M35_E23_E23_CONST_1 = 52,
  Message9_M3_M13_M24_M35_E23_E23_CONST_2 = 20,
  Message9_M3_M13_M24_M35_E23_E23_CONST_3 = 97,
  Message9_M3_M13_M24_M35_E23_E23_CONST_4 = 23,
  Message9_M3_M13_M24_M35_E23_E23_CONST_5 = 13,
};

bool Message9_M3_M13_M24_M35_E23_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_M35_E23_internal_data_[];
constexpr Message9_M3_M13_M24_M35_E23 Message9_M3_M13_M24_M35_E23_E23_MIN = static_cast<Message9_M3_M13_M24_M35_E23>(0);
constexpr Message9_M3_M13_M24_M35_E23 Message9_M3_M13_M24_M35_E23_E23_MAX = static_cast<Message9_M3_M13_M24_M35_E23>(97);
constexpr int Message9_M3_M13_M24_M35_E23_E23_ARRAYSIZE = 97 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_M35_E23_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_M35_E23_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_M35_E23>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E23_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_M35_E23_descriptor(), value);
}
inline bool Message9_M3_M13_M24_M35_E23_Parse(absl::string_view name, Message9_M3_M13_M24_M35_E23* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_M35_E23>(
      Message9_M3_M13_M24_M35_E23_descriptor(), name, value);
}
enum Message9_M3_M13_M24_M35_E24 : int {
  Message9_M3_M13_M24_M35_E24_E24_UNSPECIFIED = 0,
  Message9_M3_M13_M24_M35_E24_E24_CONST_1 = 83,
  Message9_M3_M13_M24_M35_E24_E24_CONST_2 = 89,
  Message9_M3_M13_M24_M35_E24_E24_CONST_3 = 125,
  Message9_M3_M13_M24_M35_E24_E24_CONST_4 = 23,
  Message9_M3_M13_M24_M35_E24_E24_CONST_5 = 118,
};

bool Message9_M3_M13_M24_M35_E24_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_M35_E24_internal_data_[];
constexpr Message9_M3_M13_M24_M35_E24 Message9_M3_M13_M24_M35_E24_E24_MIN = static_cast<Message9_M3_M13_M24_M35_E24>(0);
constexpr Message9_M3_M13_M24_M35_E24 Message9_M3_M13_M24_M35_E24_E24_MAX = static_cast<Message9_M3_M13_M24_M35_E24>(125);
constexpr int Message9_M3_M13_M24_M35_E24_E24_ARRAYSIZE = 125 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_M35_E24_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_M35_E24_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_M35_E24>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E24_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_M35_E24_descriptor(), value);
}
inline bool Message9_M3_M13_M24_M35_E24_Parse(absl::string_view name, Message9_M3_M13_M24_M35_E24* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_M35_E24>(
      Message9_M3_M13_M24_M35_E24_descriptor(), name, value);
}
enum Message9_M3_M13_M24_M35_E25 : int {
  Message9_M3_M13_M24_M35_E25_E25_UNSPECIFIED = 0,
  Message9_M3_M13_M24_M35_E25_E25_CONST_1 = 123,
  Message9_M3_M13_M24_M35_E25_E25_CONST_2 = 49,
  Message9_M3_M13_M24_M35_E25_E25_CONST_3 = 45,
  Message9_M3_M13_M24_M35_E25_E25_CONST_4 = 82,
  Message9_M3_M13_M24_M35_E25_E25_CONST_5 = 52,
};

bool Message9_M3_M13_M24_M35_E25_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_M35_E25_internal_data_[];
constexpr Message9_M3_M13_M24_M35_E25 Message9_M3_M13_M24_M35_E25_E25_MIN = static_cast<Message9_M3_M13_M24_M35_E25>(0);
constexpr Message9_M3_M13_M24_M35_E25 Message9_M3_M13_M24_M35_E25_E25_MAX = static_cast<Message9_M3_M13_M24_M35_E25>(123);
constexpr int Message9_M3_M13_M24_M35_E25_E25_ARRAYSIZE = 123 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_M35_E25_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_M35_E25_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_M35_E25>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E25_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_M35_E25_descriptor(), value);
}
inline bool Message9_M3_M13_M24_M35_E25_Parse(absl::string_view name, Message9_M3_M13_M24_M35_E25* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_M35_E25>(
      Message9_M3_M13_M24_M35_E25_descriptor(), name, value);
}
enum Message9_M3_M13_M24_E8 : int {
  Message9_M3_M13_M24_E8_E8_UNSPECIFIED = 0,
  Message9_M3_M13_M24_E8_E8_CONST_1 = 42,
  Message9_M3_M13_M24_E8_E8_CONST_2 = 105,
  Message9_M3_M13_M24_E8_E8_CONST_3 = 95,
  Message9_M3_M13_M24_E8_E8_CONST_4 = 67,
  Message9_M3_M13_M24_E8_E8_CONST_5 = 43,
};

bool Message9_M3_M13_M24_E8_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_E8_internal_data_[];
constexpr Message9_M3_M13_M24_E8 Message9_M3_M13_M24_E8_E8_MIN = static_cast<Message9_M3_M13_M24_E8>(0);
constexpr Message9_M3_M13_M24_E8 Message9_M3_M13_M24_E8_E8_MAX = static_cast<Message9_M3_M13_M24_E8>(105);
constexpr int Message9_M3_M13_M24_E8_E8_ARRAYSIZE = 105 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_E8_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_E8_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_E8>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E8_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_E8_descriptor(), value);
}
inline bool Message9_M3_M13_M24_E8_Parse(absl::string_view name, Message9_M3_M13_M24_E8* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_E8>(
      Message9_M3_M13_M24_E8_descriptor(), name, value);
}
enum Message9_M3_M13_M24_E9 : int {
  Message9_M3_M13_M24_E9_E9_UNSPECIFIED = 0,
  Message9_M3_M13_M24_E9_E9_CONST_1 = 51,
  Message9_M3_M13_M24_E9_E9_CONST_2 = 32,
  Message9_M3_M13_M24_E9_E9_CONST_3 = 107,
  Message9_M3_M13_M24_E9_E9_CONST_4 = 20,
  Message9_M3_M13_M24_E9_E9_CONST_5 = 81,
};

bool Message9_M3_M13_M24_E9_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_E9_internal_data_[];
constexpr Message9_M3_M13_M24_E9 Message9_M3_M13_M24_E9_E9_MIN = static_cast<Message9_M3_M13_M24_E9>(0);
constexpr Message9_M3_M13_M24_E9 Message9_M3_M13_M24_E9_E9_MAX = static_cast<Message9_M3_M13_M24_E9>(107);
constexpr int Message9_M3_M13_M24_E9_E9_ARRAYSIZE = 107 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_E9_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_E9_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_E9>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E9_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_E9_descriptor(), value);
}
inline bool Message9_M3_M13_M24_E9_Parse(absl::string_view name, Message9_M3_M13_M24_E9* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_E9>(
      Message9_M3_M13_M24_E9_descriptor(), name, value);
}
enum Message9_M3_M13_M24_E10 : int {
  Message9_M3_M13_M24_E10_E10_UNSPECIFIED = 0,
  Message9_M3_M13_M24_E10_E10_CONST_1 = 5,
  Message9_M3_M13_M24_E10_E10_CONST_2 = 40,
  Message9_M3_M13_M24_E10_E10_CONST_3 = 110,
  Message9_M3_M13_M24_E10_E10_CONST_4 = 119,
  Message9_M3_M13_M24_E10_E10_CONST_5 = 31,
};

bool Message9_M3_M13_M24_E10_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_E10_internal_data_[];
constexpr Message9_M3_M13_M24_E10 Message9_M3_M13_M24_E10_E10_MIN = static_cast<Message9_M3_M13_M24_E10>(0);
constexpr Message9_M3_M13_M24_E10 Message9_M3_M13_M24_E10_E10_MAX = static_cast<Message9_M3_M13_M24_E10>(119);
constexpr int Message9_M3_M13_M24_E10_E10_ARRAYSIZE = 119 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_E10_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_E10_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_E10>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E10_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_E10_descriptor(), value);
}
inline bool Message9_M3_M13_M24_E10_Parse(absl::string_view name, Message9_M3_M13_M24_E10* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_E10>(
      Message9_M3_M13_M24_E10_descriptor(), name, value);
}
enum Message9_M3_M13_M24_E11 : int {
  Message9_M3_M13_M24_E11_E11_UNSPECIFIED = 0,
  Message9_M3_M13_M24_E11_E11_CONST_1 = 4,
  Message9_M3_M13_M24_E11_E11_CONST_2 = 50,
  Message9_M3_M13_M24_E11_E11_CONST_3 = 35,
  Message9_M3_M13_M24_E11_E11_CONST_4 = 103,
  Message9_M3_M13_M24_E11_E11_CONST_5 = 78,
};

bool Message9_M3_M13_M24_E11_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_E11_internal_data_[];
constexpr Message9_M3_M13_M24_E11 Message9_M3_M13_M24_E11_E11_MIN = static_cast<Message9_M3_M13_M24_E11>(0);
constexpr Message9_M3_M13_M24_E11 Message9_M3_M13_M24_E11_E11_MAX = static_cast<Message9_M3_M13_M24_E11>(103);
constexpr int Message9_M3_M13_M24_E11_E11_ARRAYSIZE = 103 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_E11_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_E11_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_E11>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E11_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_E11_descriptor(), value);
}
inline bool Message9_M3_M13_M24_E11_Parse(absl::string_view name, Message9_M3_M13_M24_E11* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_E11>(
      Message9_M3_M13_M24_E11_descriptor(), name, value);
}
enum Message9_M3_M13_M24_E12 : int {
  Message9_M3_M13_M24_E12_E12_UNSPECIFIED = 0,
  Message9_M3_M13_M24_E12_E12_CONST_1 = 3,
  Message9_M3_M13_M24_E12_E12_CONST_2 = 100,
  Message9_M3_M13_M24_E12_E12_CONST_3 = 74,
  Message9_M3_M13_M24_E12_E12_CONST_4 = 30,
  Message9_M3_M13_M24_E12_E12_CONST_5 = 19,
};

bool Message9_M3_M13_M24_E12_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_E12_internal_data_[];
constexpr Message9_M3_M13_M24_E12 Message9_M3_M13_M24_E12_E12_MIN = static_cast<Message9_M3_M13_M24_E12>(0);
constexpr Message9_M3_M13_M24_E12 Message9_M3_M13_M24_E12_E12_MAX = static_cast<Message9_M3_M13_M24_E12>(100);
constexpr int Message9_M3_M13_M24_E12_E12_ARRAYSIZE = 100 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_E12_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_E12_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_E12>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E12_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_E12_descriptor(), value);
}
inline bool Message9_M3_M13_M24_E12_Parse(absl::string_view name, Message9_M3_M13_M24_E12* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_E12>(
      Message9_M3_M13_M24_E12_descriptor(), name, value);
}
enum Message9_M3_M13_M24_E13 : int {
  Message9_M3_M13_M24_E13_E13_UNSPECIFIED = 0,
  Message9_M3_M13_M24_E13_E13_CONST_1 = 67,
  Message9_M3_M13_M24_E13_E13_CONST_2 = 53,
  Message9_M3_M13_M24_E13_E13_CONST_3 = 103,
  Message9_M3_M13_M24_E13_E13_CONST_4 = 43,
  Message9_M3_M13_M24_E13_E13_CONST_5 = 48,
};

bool Message9_M3_M13_M24_E13_IsValid(int value);
extern const uint32_t Message9_M3_M13_M24_E13_internal_data_[];
constexpr Message9_M3_M13_M24_E13 Message9_M3_M13_M24_E13_E13_MIN = static_cast<Message9_M3_M13_M24_E13>(0);
constexpr Message9_M3_M13_M24_E13 Message9_M3_M13_M24_E13_E13_MAX = static_cast<Message9_M3_M13_M24_E13>(103);
constexpr int Message9_M3_M13_M24_E13_E13_ARRAYSIZE = 103 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M13_M24_E13_descriptor();
template <typename T>
const std::string& Message9_M3_M13_M24_E13_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M13_M24_E13>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E13_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M13_M24_E13_descriptor(), value);
}
inline bool Message9_M3_M13_M24_E13_Parse(absl::string_view name, Message9_M3_M13_M24_E13* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M13_M24_E13>(
      Message9_M3_M13_M24_E13_descriptor(), name, value);
}
enum Message9_M3_M20_M29_E15 : int {
  Message9_M3_M20_M29_E15_E15_UNSPECIFIED = 0,
  Message9_M3_M20_M29_E15_E15_CONST_1 = 122,
  Message9_M3_M20_M29_E15_E15_CONST_2 = 119,
  Message9_M3_M20_M29_E15_E15_CONST_3 = 103,
  Message9_M3_M20_M29_E15_E15_CONST_4 = 90,
  Message9_M3_M20_M29_E15_E15_CONST_5 = 9,
};

bool Message9_M3_M20_M29_E15_IsValid(int value);
extern const uint32_t Message9_M3_M20_M29_E15_internal_data_[];
constexpr Message9_M3_M20_M29_E15 Message9_M3_M20_M29_E15_E15_MIN = static_cast<Message9_M3_M20_M29_E15>(0);
constexpr Message9_M3_M20_M29_E15 Message9_M3_M20_M29_E15_E15_MAX = static_cast<Message9_M3_M20_M29_E15>(122);
constexpr int Message9_M3_M20_M29_E15_E15_ARRAYSIZE = 122 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M3_M20_M29_E15_descriptor();
template <typename T>
const std::string& Message9_M3_M20_M29_E15_Name(T value) {
  static_assert(std::is_same<T, Message9_M3_M20_M29_E15>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E15_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M3_M20_M29_E15_descriptor(), value);
}
inline bool Message9_M3_M20_M29_E15_Parse(absl::string_view name, Message9_M3_M20_M29_E15* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M3_M20_M29_E15>(
      Message9_M3_M20_M29_E15_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M48_E37 : int {
  Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_CONST_1 = 81,
  Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_CONST_2 = 68,
  Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_CONST_3 = 52,
  Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_CONST_4 = 85,
  Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_CONST_5 = 55,
};

bool Message9_M5_M11_M23_M34_M36_M40_M48_E37_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M48_E37_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M48_E37 Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M48_E37>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M48_E37 Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M48_E37>(85);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_ARRAYSIZE = 85 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M48_E37_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M48_E37_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M48_E37>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E37_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M48_E37_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M48_E37_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M48_E37* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M48_E37>(
      Message9_M5_M11_M23_M34_M36_M40_M48_E37_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_CONST_1 = 112,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_CONST_2 = 36,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_CONST_3 = 61,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_CONST_4 = 122,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_CONST_5 = 72,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54>(122);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_ARRAYSIZE = 122 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E54_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_CONST_1 = 92,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_CONST_2 = 42,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_CONST_3 = 216301781,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_CONST_4 = 72,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_CONST_5 = 69,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55>(216301781);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_ARRAYSIZE = 216301781 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E55_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_CONST_1 = 92,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_CONST_2 = 83,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_CONST_3 = 29,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_CONST_4 = 39,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_CONST_5 = 11,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56>(92);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_ARRAYSIZE = 92 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E56_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_CONST_1 = 14,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_CONST_2 = 126,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_CONST_3 = 23,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_CONST_4 = 48,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_CONST_5 = 73,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57>(126);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_ARRAYSIZE = 126 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E57_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_CONST_1 = 36,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_CONST_2 = 56,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_CONST_3 = 44,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_CONST_4 = 57,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_CONST_5 = 2,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58>(57);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_ARRAYSIZE = 57 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E58_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_CONST_1 = 70,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_CONST_2 = 65,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_CONST_3 = 95,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_CONST_4 = 38,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_CONST_5 = 75,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59>(95);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_ARRAYSIZE = 95 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E59_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_CONST_1 = 72,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_CONST_2 = 114,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_CONST_3 = 26,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_CONST_4 = 19,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_CONST_5 = 53,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60>(114);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_ARRAYSIZE = 114 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E60_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_CONST_1 = 71,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_CONST_2 = 114,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_CONST_3 = 107,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_CONST_4 = 110,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_CONST_5 = 58,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61>(114);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_ARRAYSIZE = 114 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E61_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_CONST_1 = 89,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_CONST_2 = 116,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_CONST_3 = 11,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_CONST_4 = 96,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_CONST_5 = 15,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62>(116);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_ARRAYSIZE = 116 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E62_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_CONST_1 = 31,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_CONST_2 = 119,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_CONST_3 = 117,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_CONST_4 = 45,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_CONST_5 = 123,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63>(123);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_ARRAYSIZE = 123 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E63_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_CONST_1 = 67,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_CONST_2 = 9,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_CONST_3 = 102,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_CONST_4 = 29,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_CONST_5 = 97,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64>(102);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_ARRAYSIZE = 102 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E64_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_CONST_1 = 80,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_CONST_2 = 122,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_CONST_3 = 113,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_CONST_4 = 6,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_CONST_5 = 17,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65>(122);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_ARRAYSIZE = 122 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E65_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_CONST_1 = 72,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_CONST_2 = 61,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_CONST_3 = 37,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_CONST_4 = 26,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_CONST_5 = 48,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66>(72);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_ARRAYSIZE = 72 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E66_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_CONST_1 = 34,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_CONST_2 = 122,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_CONST_3 = 72,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_CONST_4 = 124,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_CONST_5 = 19,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67>(124);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_ARRAYSIZE = 124 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E67_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_CONST_1 = 4,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_CONST_2 = 20,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_CONST_3 = 43,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_CONST_4 = 79,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_CONST_5 = 49,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68>(79);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_ARRAYSIZE = 79 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E68_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_CONST_1 = 69,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_CONST_2 = 38,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_CONST_3 = 101,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_CONST_4 = 23,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_CONST_5 = 57,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69>(101);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_ARRAYSIZE = 101 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E69_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_CONST_1 = 23,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_CONST_2 = 2,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_CONST_3 = 75,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_CONST_4 = 64,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_CONST_5 = 69,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70>(75);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_ARRAYSIZE = 75 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E70_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_CONST_1 = 89,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_CONST_2 = 27,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_CONST_3 = 74,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_CONST_4 = 22,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_CONST_5 = 6,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71>(89);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_ARRAYSIZE = 89 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E71_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_CONST_1 = 114,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_CONST_2 = 20,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_CONST_3 = 112,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_CONST_4 = 24,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_CONST_5 = 97,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72>(114);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_ARRAYSIZE = 114 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E72_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_CONST_1 = 58,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_CONST_2 = 53,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_CONST_3 = 20,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_CONST_4 = 30,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_CONST_5 = 64,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73>(64);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_ARRAYSIZE = 64 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E73_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_CONST_1 = 111,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_CONST_2 = 41,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_CONST_3 = 26,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_CONST_4 = 29,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_CONST_5 = 94,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74>(111);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_ARRAYSIZE = 111 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E74_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_CONST_1 = 24,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_CONST_2 = 57,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_CONST_3 = 109,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_CONST_4 = 2,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_CONST_5 = 96,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75>(109);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_ARRAYSIZE = 109 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E75_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_CONST_1 = 41,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_CONST_2 = 84,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_CONST_3 = 28,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_CONST_4 = 97,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_CONST_5 = 48,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76>(97);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_ARRAYSIZE = 97 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E76_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_CONST_1 = 9,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_CONST_2 = 75,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_CONST_3 = 87,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_CONST_4 = 84,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_CONST_5 = 1,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77>(87);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_ARRAYSIZE = 87 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E77_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_CONST_1 = 96,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_CONST_2 = 124,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_CONST_3 = 126,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_CONST_4 = 67,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_CONST_5 = 79,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78>(126);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_ARRAYSIZE = 126 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E78_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_CONST_1 = 68,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_CONST_2 = 28,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_CONST_3 = 81,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_CONST_4 = 58,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_CONST_5 = 66,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79>(81);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_ARRAYSIZE = 81 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E79_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_CONST_1 = 120,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_CONST_2 = 75,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_CONST_3 = 27,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_CONST_4 = 45,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_CONST_5 = 50,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80>(120);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_ARRAYSIZE = 120 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E80_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_CONST_1 = 8,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_CONST_2 = 72,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_CONST_3 = 61,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_CONST_4 = 107,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_CONST_5 = 96,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81>(107);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_ARRAYSIZE = 107 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E81_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_CONST_1 = 122,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_CONST_2 = 104,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_CONST_3 = 88,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_CONST_4 = 105,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_CONST_5 = 23,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82>(122);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_ARRAYSIZE = 122 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E82_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_CONST_1 = 29,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_CONST_2 = 117,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_CONST_3 = 125,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_CONST_4 = 122,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_CONST_5 = 24,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83>(125);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_ARRAYSIZE = 125 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E83_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_CONST_1 = 30,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_CONST_2 = 48,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_CONST_3 = 75,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_CONST_4 = 111,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_CONST_5 = 37,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84>(111);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_ARRAYSIZE = 111 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E84_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_CONST_1 = 114,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_CONST_2 = 6,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_CONST_3 = 22,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_CONST_4 = 30,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_CONST_5 = 55,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85>(114);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_ARRAYSIZE = 114 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E85_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_CONST_1 = 119,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_CONST_2 = 86,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_CONST_3 = 97,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_CONST_4 = 22,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_CONST_5 = 124,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86>(124);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_ARRAYSIZE = 124 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E86_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_CONST_1 = 125,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_CONST_2 = 83,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_CONST_3 = 104,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_CONST_4 = 102,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_CONST_5 = 11,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87>(125);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_ARRAYSIZE = 125 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E87_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_CONST_1 = 30,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_CONST_2 = 33,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_CONST_3 = 63,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_CONST_4 = 42,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_CONST_5 = 88,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88>(88);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_ARRAYSIZE = 88 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E88_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_CONST_1 = 88,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_CONST_2 = 72,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_CONST_3 = 28,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_CONST_4 = 74,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_CONST_5 = 52,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89>(88);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_ARRAYSIZE = 88 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E89_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_CONST_1 = 31,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_CONST_2 = 71,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_CONST_3 = 68,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_CONST_4 = 99,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_CONST_5 = 61,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90>(99);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_ARRAYSIZE = 99 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E90_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_CONST_1 = 73,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_CONST_2 = 35,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_CONST_3 = 108,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_CONST_4 = 120,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_CONST_5 = 101,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91>(120);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_ARRAYSIZE = 120 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E91_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_CONST_1 = 12,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_CONST_2 = 66,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_CONST_3 = 80,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_CONST_4 = 121,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_CONST_5 = 102,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92>(121);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_ARRAYSIZE = 121 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E92_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_CONST_1 = 87,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_CONST_2 = 23,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_CONST_3 = 119,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_CONST_4 = 85,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_CONST_5 = 94,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93>(119);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_ARRAYSIZE = 119 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E93_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_CONST_1 = 114,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_CONST_2 = 45,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_CONST_3 = 24,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_CONST_4 = 13,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_CONST_5 = 107,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94>(114);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_ARRAYSIZE = 114 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E94_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_CONST_1 = 85,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_CONST_2 = 32,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_CONST_3 = 81,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_CONST_4 = 117,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_CONST_5 = 50,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95>(117);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_ARRAYSIZE = 117 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E95_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_CONST_1 = 33,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_CONST_2 = 9,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_CONST_3 = 109,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_CONST_4 = 16,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_CONST_5 = 69,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96>(109);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_ARRAYSIZE = 109 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E96_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_CONST_1 = 75,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_CONST_2 = 20,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_CONST_3 = 1,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_CONST_4 = 40,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_CONST_5 = 60,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97>(75);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_ARRAYSIZE = 75 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E97_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_CONST_1 = 16,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_CONST_2 = 14,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_CONST_3 = 83,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_CONST_4 = 97,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_CONST_5 = 49,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50>(97);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_ARRAYSIZE = 97 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E50_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_CONST_1 = 79,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_CONST_2 = 111,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_CONST_3 = 101,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_CONST_4 = 124,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_CONST_5 = 117,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51>(124);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_ARRAYSIZE = 124 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E51_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_CONST_1 = 1,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_CONST_2 = 34,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_CONST_3 = 8,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_CONST_4 = 28,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_CONST_5 = 105,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52>(105);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_ARRAYSIZE = 105 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E52_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_CONST_1 = 38,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_CONST_2 = 88,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_CONST_3 = 113,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_CONST_4 = 44,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_CONST_5 = 104,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53>(113);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_ARRAYSIZE = 113 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E53_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_CONST_1 = 49,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_CONST_2 = 27,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_CONST_3 = 113,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_CONST_4 = 1,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_CONST_5 = 41,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49>(113);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_ARRAYSIZE = 113 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E49_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_CONST_1 = 100,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_CONST_2 = 21,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_CONST_3 = 120,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_CONST_4 = 15,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_CONST_5 = 1,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48>(120);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_ARRAYSIZE = 120 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E48_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_CONST_1 = 20,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_CONST_2 = 39,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_CONST_3 = 78,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_CONST_4 = 43,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_CONST_5 = 50,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40>(78);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_ARRAYSIZE = 78 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E40_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_CONST_1 = 101,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_CONST_2 = 70,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_CONST_3 = 8,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_CONST_4 = 47,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_CONST_5 = 93,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41>(101);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_ARRAYSIZE = 101 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E41_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_CONST_1 = 112,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_CONST_2 = 96,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_CONST_3 = 55,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_CONST_4 = 81,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_CONST_5 = 125,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42>(125);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_ARRAYSIZE = 125 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E42_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_CONST_1 = 60,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_CONST_2 = 29,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_CONST_3 = 105,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_CONST_4 = 15,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_CONST_5 = 43,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43>(105);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_ARRAYSIZE = 105 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E43_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_CONST_1 = 101,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_CONST_2 = 80,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_CONST_3 = 120,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_CONST_4 = 113,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_CONST_5 = 75,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44>(120);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_ARRAYSIZE = 120 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E44_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_CONST_1 = 31,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_CONST_2 = 80,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_CONST_3 = 18,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_CONST_4 = 86,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_CONST_5 = 108,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45>(108);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_ARRAYSIZE = 108 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E45_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_CONST_1 = 99,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_CONST_2 = 12,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_CONST_3 = 120,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_CONST_4 = 47,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_CONST_5 = 46,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46>(120);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_ARRAYSIZE = 120 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E46_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_CONST_1 = 40,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_CONST_2 = 8,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_CONST_3 = 23,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_CONST_4 = 100,
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_CONST_5 = 114,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47 Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47>(114);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_ARRAYSIZE = 114 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E47_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47>(
      Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M36_M40_M51_E38 : int {
  Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_CONST_1 = 4,
  Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_CONST_2 = 1,
  Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_CONST_3 = 40,
  Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_CONST_4 = 124,
  Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_CONST_5 = 119,
};

bool Message9_M5_M11_M23_M34_M36_M40_M51_E38_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_E38_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_E38 Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_MIN = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_E38>(0);
constexpr Message9_M5_M11_M23_M34_M36_M40_M51_E38 Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_MAX = static_cast<Message9_M5_M11_M23_M34_M36_M40_M51_E38>(124);
constexpr int Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_ARRAYSIZE = 124 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M36_M40_M51_E38_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_E38_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M36_M40_M51_E38>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E38_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M36_M40_M51_E38_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_E38_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M36_M40_M51_E38* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M36_M40_M51_E38>(
      Message9_M5_M11_M23_M34_M36_M40_M51_E38_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_M41_M42_E36 : int {
  Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_CONST_1 = 41,
  Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_CONST_2 = 54,
  Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_CONST_3 = 45,
  Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_CONST_4 = 47,
  Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_CONST_5 = 9,
};

bool Message9_M5_M11_M23_M34_M37_M41_M42_E36_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_M41_M42_E36_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_M41_M42_E36 Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_MIN = static_cast<Message9_M5_M11_M23_M34_M37_M41_M42_E36>(0);
constexpr Message9_M5_M11_M23_M34_M37_M41_M42_E36 Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_MAX = static_cast<Message9_M5_M11_M23_M34_M37_M41_M42_E36>(54);
constexpr int Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_ARRAYSIZE = 54 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_M41_M42_E36_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_M41_M42_E36_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_M41_M42_E36>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E36_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_M41_M42_E36_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_M41_M42_E36_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_M41_M42_E36* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_M41_M42_E36>(
      Message9_M5_M11_M23_M34_M37_M41_M42_E36_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39 : int {
  Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_CONST_1 = 8,
  Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_CONST_2 = 95,
  Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_CONST_3 = 58,
  Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_CONST_4 = 7,
  Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_CONST_5 = 92,
};

bool Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39 Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_MIN = static_cast<Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39>(0);
constexpr Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39 Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_MAX = static_cast<Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39>(95);
constexpr int Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_ARRAYSIZE = 95 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E39_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39>(
      Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_M41_E32 : int {
  Message9_M5_M11_M23_M34_M37_M41_E32_E32_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_M41_E32_E32_CONST_1 = 104,
  Message9_M5_M11_M23_M34_M37_M41_E32_E32_CONST_2 = 35,
  Message9_M5_M11_M23_M34_M37_M41_E32_E32_CONST_3 = 10,
  Message9_M5_M11_M23_M34_M37_M41_E32_E32_CONST_4 = 14,
  Message9_M5_M11_M23_M34_M37_M41_E32_E32_CONST_5 = 115,
};

bool Message9_M5_M11_M23_M34_M37_M41_E32_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_M41_E32_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_M41_E32 Message9_M5_M11_M23_M34_M37_M41_E32_E32_MIN = static_cast<Message9_M5_M11_M23_M34_M37_M41_E32>(0);
constexpr Message9_M5_M11_M23_M34_M37_M41_E32 Message9_M5_M11_M23_M34_M37_M41_E32_E32_MAX = static_cast<Message9_M5_M11_M23_M34_M37_M41_E32>(115);
constexpr int Message9_M5_M11_M23_M34_M37_M41_E32_E32_ARRAYSIZE = 115 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_M41_E32_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_M41_E32_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_M41_E32>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E32_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_M41_E32_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_M41_E32_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_M41_E32* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_M41_E32>(
      Message9_M5_M11_M23_M34_M37_M41_E32_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_M41_E33 : int {
  Message9_M5_M11_M23_M34_M37_M41_E33_E33_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_M41_E33_E33_CONST_1 = 97,
  Message9_M5_M11_M23_M34_M37_M41_E33_E33_CONST_2 = 48,
  Message9_M5_M11_M23_M34_M37_M41_E33_E33_CONST_3 = 11,
  Message9_M5_M11_M23_M34_M37_M41_E33_E33_CONST_4 = 7,
  Message9_M5_M11_M23_M34_M37_M41_E33_E33_CONST_5 = 65,
};

bool Message9_M5_M11_M23_M34_M37_M41_E33_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_M41_E33_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_M41_E33 Message9_M5_M11_M23_M34_M37_M41_E33_E33_MIN = static_cast<Message9_M5_M11_M23_M34_M37_M41_E33>(0);
constexpr Message9_M5_M11_M23_M34_M37_M41_E33 Message9_M5_M11_M23_M34_M37_M41_E33_E33_MAX = static_cast<Message9_M5_M11_M23_M34_M37_M41_E33>(97);
constexpr int Message9_M5_M11_M23_M34_M37_M41_E33_E33_ARRAYSIZE = 97 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_M41_E33_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_M41_E33_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_M41_E33>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E33_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_M41_E33_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_M41_E33_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_M41_E33* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_M41_E33>(
      Message9_M5_M11_M23_M34_M37_M41_E33_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_M41_E34 : int {
  Message9_M5_M11_M23_M34_M37_M41_E34_E34_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_M41_E34_E34_CONST_1 = 118,
  Message9_M5_M11_M23_M34_M37_M41_E34_E34_CONST_2 = 80,
  Message9_M5_M11_M23_M34_M37_M41_E34_E34_CONST_3 = 21,
  Message9_M5_M11_M23_M34_M37_M41_E34_E34_CONST_4 = 67,
  Message9_M5_M11_M23_M34_M37_M41_E34_E34_CONST_5 = 18,
};

bool Message9_M5_M11_M23_M34_M37_M41_E34_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_M41_E34_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_M41_E34 Message9_M5_M11_M23_M34_M37_M41_E34_E34_MIN = static_cast<Message9_M5_M11_M23_M34_M37_M41_E34>(0);
constexpr Message9_M5_M11_M23_M34_M37_M41_E34 Message9_M5_M11_M23_M34_M37_M41_E34_E34_MAX = static_cast<Message9_M5_M11_M23_M34_M37_M41_E34>(118);
constexpr int Message9_M5_M11_M23_M34_M37_M41_E34_E34_ARRAYSIZE = 118 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_M41_E34_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_M41_E34_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_M41_E34>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E34_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_M41_E34_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_M41_E34_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_M41_E34* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_M41_E34>(
      Message9_M5_M11_M23_M34_M37_M41_E34_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_M41_E35 : int {
  Message9_M5_M11_M23_M34_M37_M41_E35_E35_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_M41_E35_E35_CONST_1 = 44,
  Message9_M5_M11_M23_M34_M37_M41_E35_E35_CONST_2 = 55,
  Message9_M5_M11_M23_M34_M37_M41_E35_E35_CONST_3 = 126,
  Message9_M5_M11_M23_M34_M37_M41_E35_E35_CONST_4 = 111,
  Message9_M5_M11_M23_M34_M37_M41_E35_E35_CONST_5 = 9,
};

bool Message9_M5_M11_M23_M34_M37_M41_E35_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_M41_E35_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_M41_E35 Message9_M5_M11_M23_M34_M37_M41_E35_E35_MIN = static_cast<Message9_M5_M11_M23_M34_M37_M41_E35>(0);
constexpr Message9_M5_M11_M23_M34_M37_M41_E35 Message9_M5_M11_M23_M34_M37_M41_E35_E35_MAX = static_cast<Message9_M5_M11_M23_M34_M37_M41_E35>(126);
constexpr int Message9_M5_M11_M23_M34_M37_M41_E35_E35_ARRAYSIZE = 126 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_M41_E35_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_M41_E35_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_M41_E35>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E35_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_M41_E35_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_M41_E35_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_M41_E35* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_M41_E35>(
      Message9_M5_M11_M23_M34_M37_M41_E35_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_E26 : int {
  Message9_M5_M11_M23_M34_M37_E26_E26_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_E26_E26_CONST_1 = 46,
  Message9_M5_M11_M23_M34_M37_E26_E26_CONST_2 = 80,
  Message9_M5_M11_M23_M34_M37_E26_E26_CONST_3 = 44,
  Message9_M5_M11_M23_M34_M37_E26_E26_CONST_4 = 30,
  Message9_M5_M11_M23_M34_M37_E26_E26_CONST_5 = 91,
};

bool Message9_M5_M11_M23_M34_M37_E26_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_E26_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_E26 Message9_M5_M11_M23_M34_M37_E26_E26_MIN = static_cast<Message9_M5_M11_M23_M34_M37_E26>(0);
constexpr Message9_M5_M11_M23_M34_M37_E26 Message9_M5_M11_M23_M34_M37_E26_E26_MAX = static_cast<Message9_M5_M11_M23_M34_M37_E26>(91);
constexpr int Message9_M5_M11_M23_M34_M37_E26_E26_ARRAYSIZE = 91 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_E26_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_E26_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_E26>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E26_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_E26_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_E26_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_E26* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_E26>(
      Message9_M5_M11_M23_M34_M37_E26_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_E27 : int {
  Message9_M5_M11_M23_M34_M37_E27_E27_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_E27_E27_CONST_1 = 110,
  Message9_M5_M11_M23_M34_M37_E27_E27_CONST_2 = 37,
  Message9_M5_M11_M23_M34_M37_E27_E27_CONST_3 = 94,
  Message9_M5_M11_M23_M34_M37_E27_E27_CONST_4 = 9,
  Message9_M5_M11_M23_M34_M37_E27_E27_CONST_5 = 47,
};

bool Message9_M5_M11_M23_M34_M37_E27_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_E27_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_E27 Message9_M5_M11_M23_M34_M37_E27_E27_MIN = static_cast<Message9_M5_M11_M23_M34_M37_E27>(0);
constexpr Message9_M5_M11_M23_M34_M37_E27 Message9_M5_M11_M23_M34_M37_E27_E27_MAX = static_cast<Message9_M5_M11_M23_M34_M37_E27>(110);
constexpr int Message9_M5_M11_M23_M34_M37_E27_E27_ARRAYSIZE = 110 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_E27_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_E27_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_E27>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E27_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_E27_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_E27_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_E27* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_E27>(
      Message9_M5_M11_M23_M34_M37_E27_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_E28 : int {
  Message9_M5_M11_M23_M34_M37_E28_E28_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_E28_E28_CONST_1 = 62,
  Message9_M5_M11_M23_M34_M37_E28_E28_CONST_2 = 31,
  Message9_M5_M11_M23_M34_M37_E28_E28_CONST_3 = 106,
  Message9_M5_M11_M23_M34_M37_E28_E28_CONST_4 = 45,
  Message9_M5_M11_M23_M34_M37_E28_E28_CONST_5 = 55,
};

bool Message9_M5_M11_M23_M34_M37_E28_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_E28_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_E28 Message9_M5_M11_M23_M34_M37_E28_E28_MIN = static_cast<Message9_M5_M11_M23_M34_M37_E28>(0);
constexpr Message9_M5_M11_M23_M34_M37_E28 Message9_M5_M11_M23_M34_M37_E28_E28_MAX = static_cast<Message9_M5_M11_M23_M34_M37_E28>(106);
constexpr int Message9_M5_M11_M23_M34_M37_E28_E28_ARRAYSIZE = 106 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_E28_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_E28_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_E28>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E28_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_E28_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_E28_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_E28* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_E28>(
      Message9_M5_M11_M23_M34_M37_E28_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_E29 : int {
  Message9_M5_M11_M23_M34_M37_E29_E29_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_E29_E29_CONST_1 = 81,
  Message9_M5_M11_M23_M34_M37_E29_E29_CONST_2 = 80,
  Message9_M5_M11_M23_M34_M37_E29_E29_CONST_3 = 110,
  Message9_M5_M11_M23_M34_M37_E29_E29_CONST_4 = 87,
  Message9_M5_M11_M23_M34_M37_E29_E29_CONST_5 = 17,
};

bool Message9_M5_M11_M23_M34_M37_E29_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_E29_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_E29 Message9_M5_M11_M23_M34_M37_E29_E29_MIN = static_cast<Message9_M5_M11_M23_M34_M37_E29>(0);
constexpr Message9_M5_M11_M23_M34_M37_E29 Message9_M5_M11_M23_M34_M37_E29_E29_MAX = static_cast<Message9_M5_M11_M23_M34_M37_E29>(110);
constexpr int Message9_M5_M11_M23_M34_M37_E29_E29_ARRAYSIZE = 110 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_E29_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_E29_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_E29>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E29_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_E29_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_E29_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_E29* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_E29>(
      Message9_M5_M11_M23_M34_M37_E29_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_E30 : int {
  Message9_M5_M11_M23_M34_M37_E30_E30_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_E30_E30_CONST_1 = 59,
  Message9_M5_M11_M23_M34_M37_E30_E30_CONST_2 = 124,
  Message9_M5_M11_M23_M34_M37_E30_E30_CONST_3 = 71,
  Message9_M5_M11_M23_M34_M37_E30_E30_CONST_4 = 27,
  Message9_M5_M11_M23_M34_M37_E30_E30_CONST_5 = 74,
};

bool Message9_M5_M11_M23_M34_M37_E30_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_E30_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_E30 Message9_M5_M11_M23_M34_M37_E30_E30_MIN = static_cast<Message9_M5_M11_M23_M34_M37_E30>(0);
constexpr Message9_M5_M11_M23_M34_M37_E30 Message9_M5_M11_M23_M34_M37_E30_E30_MAX = static_cast<Message9_M5_M11_M23_M34_M37_E30>(124);
constexpr int Message9_M5_M11_M23_M34_M37_E30_E30_ARRAYSIZE = 124 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_E30_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_E30_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_E30>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E30_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_E30_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_E30_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_E30* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_E30>(
      Message9_M5_M11_M23_M34_M37_E30_descriptor(), name, value);
}
enum Message9_M5_M11_M23_M34_M37_E31 : int {
  Message9_M5_M11_M23_M34_M37_E31_E31_UNSPECIFIED = 0,
  Message9_M5_M11_M23_M34_M37_E31_E31_CONST_1 = 77,
  Message9_M5_M11_M23_M34_M37_E31_E31_CONST_2 = 112,
  Message9_M5_M11_M23_M34_M37_E31_E31_CONST_3 = 98,
  Message9_M5_M11_M23_M34_M37_E31_E31_CONST_4 = 3,
  Message9_M5_M11_M23_M34_M37_E31_E31_CONST_5 = 93,
};

bool Message9_M5_M11_M23_M34_M37_E31_IsValid(int value);
extern const uint32_t Message9_M5_M11_M23_M34_M37_E31_internal_data_[];
constexpr Message9_M5_M11_M23_M34_M37_E31 Message9_M5_M11_M23_M34_M37_E31_E31_MIN = static_cast<Message9_M5_M11_M23_M34_M37_E31>(0);
constexpr Message9_M5_M11_M23_M34_M37_E31 Message9_M5_M11_M23_M34_M37_E31_E31_MAX = static_cast<Message9_M5_M11_M23_M34_M37_E31>(112);
constexpr int Message9_M5_M11_M23_M34_M37_E31_E31_ARRAYSIZE = 112 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M23_M34_M37_E31_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M23_M34_M37_E31_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M23_M34_M37_E31>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E31_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M23_M34_M37_E31_descriptor(), value);
}
inline bool Message9_M5_M11_M23_M34_M37_E31_Parse(absl::string_view name, Message9_M5_M11_M23_M34_M37_E31* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M23_M34_M37_E31>(
      Message9_M5_M11_M23_M34_M37_E31_descriptor(), name, value);
}
enum Message9_M5_M11_M25_M31_E18 : int {
  Message9_M5_M11_M25_M31_E18_E18_UNSPECIFIED = 0,
  Message9_M5_M11_M25_M31_E18_E18_CONST_1 = 106,
  Message9_M5_M11_M25_M31_E18_E18_CONST_2 = 20,
  Message9_M5_M11_M25_M31_E18_E18_CONST_3 = 18,
  Message9_M5_M11_M25_M31_E18_E18_CONST_4 = 68,
  Message9_M5_M11_M25_M31_E18_E18_CONST_5 = 98,
};

bool Message9_M5_M11_M25_M31_E18_IsValid(int value);
extern const uint32_t Message9_M5_M11_M25_M31_E18_internal_data_[];
constexpr Message9_M5_M11_M25_M31_E18 Message9_M5_M11_M25_M31_E18_E18_MIN = static_cast<Message9_M5_M11_M25_M31_E18>(0);
constexpr Message9_M5_M11_M25_M31_E18 Message9_M5_M11_M25_M31_E18_E18_MAX = static_cast<Message9_M5_M11_M25_M31_E18>(106);
constexpr int Message9_M5_M11_M25_M31_E18_E18_ARRAYSIZE = 106 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M25_M31_E18_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M25_M31_E18_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M25_M31_E18>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E18_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M25_M31_E18_descriptor(), value);
}
inline bool Message9_M5_M11_M25_M31_E18_Parse(absl::string_view name, Message9_M5_M11_M25_M31_E18* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M25_M31_E18>(
      Message9_M5_M11_M25_M31_E18_descriptor(), name, value);
}
enum Message9_M5_M11_M30_E16 : int {
  Message9_M5_M11_M30_E16_E16_UNSPECIFIED = 0,
  Message9_M5_M11_M30_E16_E16_CONST_1 = 115,
  Message9_M5_M11_M30_E16_E16_CONST_2 = 41,
  Message9_M5_M11_M30_E16_E16_CONST_3 = 85,
  Message9_M5_M11_M30_E16_E16_CONST_4 = 34,
  Message9_M5_M11_M30_E16_E16_CONST_5 = 21,
};

bool Message9_M5_M11_M30_E16_IsValid(int value);
extern const uint32_t Message9_M5_M11_M30_E16_internal_data_[];
constexpr Message9_M5_M11_M30_E16 Message9_M5_M11_M30_E16_E16_MIN = static_cast<Message9_M5_M11_M30_E16>(0);
constexpr Message9_M5_M11_M30_E16 Message9_M5_M11_M30_E16_E16_MAX = static_cast<Message9_M5_M11_M30_E16>(115);
constexpr int Message9_M5_M11_M30_E16_E16_ARRAYSIZE = 115 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M30_E16_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M30_E16_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M30_E16>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E16_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M30_E16_descriptor(), value);
}
inline bool Message9_M5_M11_M30_E16_Parse(absl::string_view name, Message9_M5_M11_M30_E16* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M30_E16>(
      Message9_M5_M11_M30_E16_descriptor(), name, value);
}
enum Message9_M5_M11_M30_E17 : int {
  Message9_M5_M11_M30_E17_E17_UNSPECIFIED = 0,
  Message9_M5_M11_M30_E17_E17_CONST_1 = 77,
  Message9_M5_M11_M30_E17_E17_CONST_2 = 116,
  Message9_M5_M11_M30_E17_E17_CONST_3 = 97,
  Message9_M5_M11_M30_E17_E17_CONST_4 = 46,
  Message9_M5_M11_M30_E17_E17_CONST_5 = 123,
};

bool Message9_M5_M11_M30_E17_IsValid(int value);
extern const uint32_t Message9_M5_M11_M30_E17_internal_data_[];
constexpr Message9_M5_M11_M30_E17 Message9_M5_M11_M30_E17_E17_MIN = static_cast<Message9_M5_M11_M30_E17>(0);
constexpr Message9_M5_M11_M30_E17 Message9_M5_M11_M30_E17_E17_MAX = static_cast<Message9_M5_M11_M30_E17>(123);
constexpr int Message9_M5_M11_M30_E17_E17_ARRAYSIZE = 123 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M5_M11_M30_E17_descriptor();
template <typename T>
const std::string& Message9_M5_M11_M30_E17_Name(T value) {
  static_assert(std::is_same<T, Message9_M5_M11_M30_E17>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E17_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M5_M11_M30_E17_descriptor(), value);
}
inline bool Message9_M5_M11_M30_E17_Parse(absl::string_view name, Message9_M5_M11_M30_E17* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M5_M11_M30_E17>(
      Message9_M5_M11_M30_E17_descriptor(), name, value);
}
enum Message9_M6_M17_M22_E7 : int {
  Message9_M6_M17_M22_E7_E7_UNSPECIFIED = 0,
  Message9_M6_M17_M22_E7_E7_CONST_1 = 19,
  Message9_M6_M17_M22_E7_E7_CONST_2 = 116,
  Message9_M6_M17_M22_E7_E7_CONST_3 = 9,
  Message9_M6_M17_M22_E7_E7_CONST_4 = 4,
  Message9_M6_M17_M22_E7_E7_CONST_5 = 88,
};

bool Message9_M6_M17_M22_E7_IsValid(int value);
extern const uint32_t Message9_M6_M17_M22_E7_internal_data_[];
constexpr Message9_M6_M17_M22_E7 Message9_M6_M17_M22_E7_E7_MIN = static_cast<Message9_M6_M17_M22_E7>(0);
constexpr Message9_M6_M17_M22_E7 Message9_M6_M17_M22_E7_E7_MAX = static_cast<Message9_M6_M17_M22_E7>(116);
constexpr int Message9_M6_M17_M22_E7_E7_ARRAYSIZE = 116 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M6_M17_M22_E7_descriptor();
template <typename T>
const std::string& Message9_M6_M17_M22_E7_Name(T value) {
  static_assert(std::is_same<T, Message9_M6_M17_M22_E7>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E7_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M6_M17_M22_E7_descriptor(), value);
}
inline bool Message9_M6_M17_M22_E7_Parse(absl::string_view name, Message9_M6_M17_M22_E7* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M6_M17_M22_E7>(
      Message9_M6_M17_M22_E7_descriptor(), name, value);
}
enum Message9_M7_M16_M26_E14 : int {
  Message9_M7_M16_M26_E14_E14_UNSPECIFIED = 0,
  Message9_M7_M16_M26_E14_E14_CONST_1 = 99,
  Message9_M7_M16_M26_E14_E14_CONST_2 = 125,
  Message9_M7_M16_M26_E14_E14_CONST_3 = 96,
  Message9_M7_M16_M26_E14_E14_CONST_4 = 62,
  Message9_M7_M16_M26_E14_E14_CONST_5 = 98,
};

bool Message9_M7_M16_M26_E14_IsValid(int value);
extern const uint32_t Message9_M7_M16_M26_E14_internal_data_[];
constexpr Message9_M7_M16_M26_E14 Message9_M7_M16_M26_E14_E14_MIN = static_cast<Message9_M7_M16_M26_E14>(0);
constexpr Message9_M7_M16_M26_E14 Message9_M7_M16_M26_E14_E14_MAX = static_cast<Message9_M7_M16_M26_E14>(125);
constexpr int Message9_M7_M16_M26_E14_E14_ARRAYSIZE = 125 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M7_M16_M26_E14_descriptor();
template <typename T>
const std::string& Message9_M7_M16_M26_E14_Name(T value) {
  static_assert(std::is_same<T, Message9_M7_M16_M26_E14>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E14_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M7_M16_M26_E14_descriptor(), value);
}
inline bool Message9_M7_M16_M26_E14_Parse(absl::string_view name, Message9_M7_M16_M26_E14* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M7_M16_M26_E14>(
      Message9_M7_M16_M26_E14_descriptor(), name, value);
}
enum Message9_M7_M16_E5 : int {
  Message9_M7_M16_E5_E5_UNSPECIFIED = 0,
  Message9_M7_M16_E5_E5_CONST_1 = 89,
  Message9_M7_M16_E5_E5_CONST_2 = 86,
  Message9_M7_M16_E5_E5_CONST_3 = 66,
  Message9_M7_M16_E5_E5_CONST_4 = 17,
  Message9_M7_M16_E5_E5_CONST_5 = 93,
};

bool Message9_M7_M16_E5_IsValid(int value);
extern const uint32_t Message9_M7_M16_E5_internal_data_[];
constexpr Message9_M7_M16_E5 Message9_M7_M16_E5_E5_MIN = static_cast<Message9_M7_M16_E5>(0);
constexpr Message9_M7_M16_E5 Message9_M7_M16_E5_E5_MAX = static_cast<Message9_M7_M16_E5>(93);
constexpr int Message9_M7_M16_E5_E5_ARRAYSIZE = 93 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M7_M16_E5_descriptor();
template <typename T>
const std::string& Message9_M7_M16_E5_Name(T value) {
  static_assert(std::is_same<T, Message9_M7_M16_E5>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E5_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M7_M16_E5_descriptor(), value);
}
inline bool Message9_M7_M16_E5_Parse(absl::string_view name, Message9_M7_M16_E5* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M7_M16_E5>(
      Message9_M7_M16_E5_descriptor(), name, value);
}
enum Message9_M9_E4 : int {
  Message9_M9_E4_E4_UNSPECIFIED = 0,
  Message9_M9_E4_E4_CONST_1 = 74,
  Message9_M9_E4_E4_CONST_2 = 23,
  Message9_M9_E4_E4_CONST_3 = 29,
  Message9_M9_E4_E4_CONST_4 = 118,
  Message9_M9_E4_E4_CONST_5 = 113,
};

bool Message9_M9_E4_IsValid(int value);
extern const uint32_t Message9_M9_E4_internal_data_[];
constexpr Message9_M9_E4 Message9_M9_E4_E4_MIN = static_cast<Message9_M9_E4>(0);
constexpr Message9_M9_E4 Message9_M9_E4_E4_MAX = static_cast<Message9_M9_E4>(118);
constexpr int Message9_M9_E4_E4_ARRAYSIZE = 118 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_M9_E4_descriptor();
template <typename T>
const std::string& Message9_M9_E4_Name(T value) {
  static_assert(std::is_same<T, Message9_M9_E4>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E4_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_M9_E4_descriptor(), value);
}
inline bool Message9_M9_E4_Parse(absl::string_view name, Message9_M9_E4* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_M9_E4>(
      Message9_M9_E4_descriptor(), name, value);
}
enum Message9_E1 : int {
  Message9_E1_E1_UNSPECIFIED = 0,
  Message9_E1_E1_CONST_1 = 125,
  Message9_E1_E1_CONST_2 = 43,
  Message9_E1_E1_CONST_3 = 21,
  Message9_E1_E1_CONST_4 = 2,
  Message9_E1_E1_CONST_5 = 94,
};

bool Message9_E1_IsValid(int value);
extern const uint32_t Message9_E1_internal_data_[];
constexpr Message9_E1 Message9_E1_E1_MIN = static_cast<Message9_E1>(0);
constexpr Message9_E1 Message9_E1_E1_MAX = static_cast<Message9_E1>(125);
constexpr int Message9_E1_E1_ARRAYSIZE = 125 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_E1_descriptor();
template <typename T>
const std::string& Message9_E1_Name(T value) {
  static_assert(std::is_same<T, Message9_E1>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E1_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_E1_descriptor(), value);
}
inline bool Message9_E1_Parse(absl::string_view name, Message9_E1* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_E1>(
      Message9_E1_descriptor(), name, value);
}
enum Message9_E2 : int {
  Message9_E2_E2_UNSPECIFIED = 0,
  Message9_E2_E2_CONST_1 = 85,
  Message9_E2_E2_CONST_2 = 106,
  Message9_E2_E2_CONST_3 = 55,
  Message9_E2_E2_CONST_4 = 33,
  Message9_E2_E2_CONST_5 = 58,
};

bool Message9_E2_IsValid(int value);
extern const uint32_t Message9_E2_internal_data_[];
constexpr Message9_E2 Message9_E2_E2_MIN = static_cast<Message9_E2>(0);
constexpr Message9_E2 Message9_E2_E2_MAX = static_cast<Message9_E2>(106);
constexpr int Message9_E2_E2_ARRAYSIZE = 106 + 1;
const ::google::protobuf::EnumDescriptor*
Message9_E2_descriptor();
template <typename T>
const std::string& Message9_E2_Name(T value) {
  static_assert(std::is_same<T, Message9_E2>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to E2_Name().");
  return ::google::protobuf::internal::NameOfEnum(Message9_E2_descriptor(), value);
}
inline bool Message9_E2_Parse(absl::string_view name, Message9_E2* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message9_E2>(
      Message9_E2_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Message9_M9 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M9) */ {
 public:
  inline Message9_M9() : Message9_M9(nullptr) {}
  ~Message9_M9() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M9(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M9(const Message9_M9& from) : Message9_M9(nullptr, from) {}
  inline Message9_M9(Message9_M9&& from) noexcept
      : Message9_M9(nullptr, std::move(from)) {}
  inline Message9_M9& operator=(const Message9_M9& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M9& operator=(Message9_M9&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M9& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M9* internal_default_instance() {
    return reinterpret_cast<const Message9_M9*>(
        &_Message9_M9_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 74;
  friend void swap(Message9_M9& a, Message9_M9& b) { a.Swap(&b); }
  inline void Swap(Message9_M9* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M9* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M9* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M9>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M9& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M9& from) { Message9_M9::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M9* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M9"; }

 protected:
  explicit Message9_M9(::google::protobuf::Arena* arena);
  Message9_M9(::google::protobuf::Arena* arena, const Message9_M9& from);
  Message9_M9(::google::protobuf::Arena* arena, Message9_M9&& from) noexcept
      : Message9_M9(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using E4 = Message9_M9_E4;
  static constexpr E4 E4_UNSPECIFIED = Message9_M9_E4_E4_UNSPECIFIED;
  static constexpr E4 E4_CONST_1 = Message9_M9_E4_E4_CONST_1;
  static constexpr E4 E4_CONST_2 = Message9_M9_E4_E4_CONST_2;
  static constexpr E4 E4_CONST_3 = Message9_M9_E4_E4_CONST_3;
  static constexpr E4 E4_CONST_4 = Message9_M9_E4_E4_CONST_4;
  static constexpr E4 E4_CONST_5 = Message9_M9_E4_E4_CONST_5;
  static inline bool E4_IsValid(int value) {
    return Message9_M9_E4_IsValid(value);
  }
  static constexpr E4 E4_MIN = Message9_M9_E4_E4_MIN;
  static constexpr E4 E4_MAX = Message9_M9_E4_E4_MAX;
  static constexpr int E4_ARRAYSIZE = Message9_M9_E4_E4_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E4_descriptor() {
    return Message9_M9_E4_descriptor();
  }
  template <typename T>
  static inline const std::string& E4_Name(T value) {
    return Message9_M9_E4_Name(value);
  }
  static inline bool E4_Parse(absl::string_view name, E4* value) {
    return Message9_M9_E4_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_5_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_5())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_5_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_5()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_5_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_5_);
      sizes.push_back(end_addr - start_addr + sizeof(f_5()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_5_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
    kF1FieldNumber = 2,
    kF2FieldNumber = 3,
    kF3FieldNumber = 5,
    kF4FieldNumber = 8,
    kF5FieldNumber = 10,
  };
  // optional uint64 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::uint64_t f_0() const;
  void set_f_0(::uint64_t value);

  private:
  ::uint64_t _internal_f_0() const;
  void _internal_set_f_0(::uint64_t value);

  public:
  // optional int64 f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  ::int64_t f_1() const;
  void set_f_1(::int64_t value);

  private:
  ::int64_t _internal_f_1() const;
  void _internal_set_f_1(::int64_t value);

  public:
  // optional int64 f_2 = 3;
  bool has_f_2() const;
  void clear_f_2() ;
  ::int64_t f_2() const;
  void set_f_2(::int64_t value);

  private:
  ::int64_t _internal_f_2() const;
  void _internal_set_f_2(::int64_t value);

  public:
  // optional int64 f_3 = 5;
  bool has_f_3() const;
  void clear_f_3() ;
  ::int64_t f_3() const;
  void set_f_3(::int64_t value);

  private:
  ::int64_t _internal_f_3() const;
  void _internal_set_f_3(::int64_t value);

  public:
  // optional int32 f_4 = 8;
  bool has_f_4() const;
  void clear_f_4() ;
  ::int32_t f_4() const;
  void set_f_4(::int32_t value);

  private:
  ::int32_t _internal_f_4() const;
  void _internal_set_f_4(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M9.E4 f_5 = 10;
  bool has_f_5() const;
  void clear_f_5() ;
  ::fleetbench::proto::Message9_M9_E4 f_5() const;
  void set_f_5(::fleetbench::proto::Message9_M9_E4 value);

  private:
  ::fleetbench::proto::Message9_M9_E4 _internal_f_5() const;
  void _internal_set_f_5(::fleetbench::proto::Message9_M9_E4 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M9)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M9_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t f_0_;
    ::int64_t f_1_;
    ::int64_t f_2_;
    ::int64_t f_3_;
    ::int32_t f_4_;
    int f_5_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M8 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M8) */ {
 public:
  inline Message9_M8() : Message9_M8(nullptr) {}
  ~Message9_M8() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M8(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M8(const Message9_M8& from) : Message9_M8(nullptr, from) {}
  inline Message9_M8(Message9_M8&& from) noexcept
      : Message9_M8(nullptr, std::move(from)) {}
  inline Message9_M8& operator=(const Message9_M8& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M8& operator=(Message9_M8&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M8& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M8* internal_default_instance() {
    return reinterpret_cast<const Message9_M8*>(
        &_Message9_M8_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 73;
  friend void swap(Message9_M8& a, Message9_M8& b) { a.Swap(&b); }
  inline void Swap(Message9_M8* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M8* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M8* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M8>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M8& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M8& from) { Message9_M8::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M8* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M8"; }

 protected:
  explicit Message9_M8(::google::protobuf::Arena* arena);
  Message9_M8(::google::protobuf::Arena* arena, const Message9_M8& from);
  Message9_M8(::google::protobuf::Arena* arena, Message9_M8&& from) noexcept
      : Message9_M8(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional double f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  double f_0() const;
  void set_f_0(double value);

  private:
  double _internal_f_0() const;
  void _internal_set_f_0(double value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M8)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M8_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M7_M16_M26_M33 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M7.M16.M26.M33) */ {
 public:
  inline Message9_M7_M16_M26_M33() : Message9_M7_M16_M26_M33(nullptr) {}
  ~Message9_M7_M16_M26_M33() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M7_M16_M26_M33(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M7_M16_M26_M33(const Message9_M7_M16_M26_M33& from) : Message9_M7_M16_M26_M33(nullptr, from) {}
  inline Message9_M7_M16_M26_M33(Message9_M7_M16_M26_M33&& from) noexcept
      : Message9_M7_M16_M26_M33(nullptr, std::move(from)) {}
  inline Message9_M7_M16_M26_M33& operator=(const Message9_M7_M16_M26_M33& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M7_M16_M26_M33& operator=(Message9_M7_M16_M26_M33&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M7_M16_M26_M33& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M7_M16_M26_M33* internal_default_instance() {
    return reinterpret_cast<const Message9_M7_M16_M26_M33*>(
        &_Message9_M7_M16_M26_M33_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 69;
  friend void swap(Message9_M7_M16_M26_M33& a, Message9_M7_M16_M26_M33& b) { a.Swap(&b); }
  inline void Swap(Message9_M7_M16_M26_M33* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M7_M16_M26_M33* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M7_M16_M26_M33* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M7_M16_M26_M33>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M7_M16_M26_M33& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M7_M16_M26_M33& from) { Message9_M7_M16_M26_M33::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M7_M16_M26_M33* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M7.M16.M26.M33"; }

 protected:
  explicit Message9_M7_M16_M26_M33(::google::protobuf::Arena* arena);
  Message9_M7_M16_M26_M33(::google::protobuf::Arena* arena, const Message9_M7_M16_M26_M33& from);
  Message9_M7_M16_M26_M33(::google::protobuf::Arena* arena, Message9_M7_M16_M26_M33&& from) noexcept
      : Message9_M7_M16_M26_M33(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_1())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_1()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      sizes.push_back(end_addr - start_addr + sizeof(f_1()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
    kF1FieldNumber = 4,
  };
  // optional double f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  double f_0() const;
  void set_f_0(double value);

  private:
  double _internal_f_0() const;
  void _internal_set_f_0(double value);

  public:
  // optional int64 f_1 = 4;
  bool has_f_1() const;
  void clear_f_1() ;
  ::int64_t f_1() const;
  void set_f_1(::int64_t value);

  private:
  ::int64_t _internal_f_1() const;
  void _internal_set_f_1(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M7.M16.M26.M33)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M7_M16_M26_M33_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double f_0_;
    ::int64_t f_1_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M7_M16_M26_M32 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M7.M16.M26.M32) */ {
 public:
  inline Message9_M7_M16_M26_M32() : Message9_M7_M16_M26_M32(nullptr) {}
  ~Message9_M7_M16_M26_M32() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M7_M16_M26_M32(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M7_M16_M26_M32(const Message9_M7_M16_M26_M32& from) : Message9_M7_M16_M26_M32(nullptr, from) {}
  inline Message9_M7_M16_M26_M32(Message9_M7_M16_M26_M32&& from) noexcept
      : Message9_M7_M16_M26_M32(nullptr, std::move(from)) {}
  inline Message9_M7_M16_M26_M32& operator=(const Message9_M7_M16_M26_M32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M7_M16_M26_M32& operator=(Message9_M7_M16_M26_M32&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M7_M16_M26_M32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M7_M16_M26_M32* internal_default_instance() {
    return reinterpret_cast<const Message9_M7_M16_M26_M32*>(
        &_Message9_M7_M16_M26_M32_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 68;
  friend void swap(Message9_M7_M16_M26_M32& a, Message9_M7_M16_M26_M32& b) { a.Swap(&b); }
  inline void Swap(Message9_M7_M16_M26_M32* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M7_M16_M26_M32* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M7_M16_M26_M32* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M7_M16_M26_M32>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M7_M16_M26_M32& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M7_M16_M26_M32& from) { Message9_M7_M16_M26_M32::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M7_M16_M26_M32* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M7.M16.M26.M32"; }

 protected:
  explicit Message9_M7_M16_M26_M32(::google::protobuf::Arena* arena);
  Message9_M7_M16_M26_M32(::google::protobuf::Arena* arena, const Message9_M7_M16_M26_M32& from);
  Message9_M7_M16_M26_M32(::google::protobuf::Arena* arena, Message9_M7_M16_M26_M32&& from) noexcept
      : Message9_M7_M16_M26_M32(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional int64 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M7.M16.M26.M32)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M7_M16_M26_M32_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M6_M17_M22 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M6.M17.M22) */ {
 public:
  inline Message9_M6_M17_M22() : Message9_M6_M17_M22(nullptr) {}
  ~Message9_M6_M17_M22() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M6_M17_M22(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M6_M17_M22(const Message9_M6_M17_M22& from) : Message9_M6_M17_M22(nullptr, from) {}
  inline Message9_M6_M17_M22(Message9_M6_M17_M22&& from) noexcept
      : Message9_M6_M17_M22(nullptr, std::move(from)) {}
  inline Message9_M6_M17_M22& operator=(const Message9_M6_M17_M22& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M6_M17_M22& operator=(Message9_M6_M17_M22&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M6_M17_M22& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M6_M17_M22* internal_default_instance() {
    return reinterpret_cast<const Message9_M6_M17_M22*>(
        &_Message9_M6_M17_M22_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 65;
  friend void swap(Message9_M6_M17_M22& a, Message9_M6_M17_M22& b) { a.Swap(&b); }
  inline void Swap(Message9_M6_M17_M22* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M6_M17_M22* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M6_M17_M22* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M6_M17_M22>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M6_M17_M22& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M6_M17_M22& from) { Message9_M6_M17_M22::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M6_M17_M22* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M6.M17.M22"; }

 protected:
  explicit Message9_M6_M17_M22(::google::protobuf::Arena* arena);
  Message9_M6_M17_M22(::google::protobuf::Arena* arena, const Message9_M6_M17_M22& from);
  Message9_M6_M17_M22(::google::protobuf::Arena* arena, Message9_M6_M17_M22&& from) noexcept
      : Message9_M6_M17_M22(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using E7 = Message9_M6_M17_M22_E7;
  static constexpr E7 E7_UNSPECIFIED = Message9_M6_M17_M22_E7_E7_UNSPECIFIED;
  static constexpr E7 E7_CONST_1 = Message9_M6_M17_M22_E7_E7_CONST_1;
  static constexpr E7 E7_CONST_2 = Message9_M6_M17_M22_E7_E7_CONST_2;
  static constexpr E7 E7_CONST_3 = Message9_M6_M17_M22_E7_E7_CONST_3;
  static constexpr E7 E7_CONST_4 = Message9_M6_M17_M22_E7_E7_CONST_4;
  static constexpr E7 E7_CONST_5 = Message9_M6_M17_M22_E7_E7_CONST_5;
  static inline bool E7_IsValid(int value) {
    return Message9_M6_M17_M22_E7_IsValid(value);
  }
  static constexpr E7 E7_MIN = Message9_M6_M17_M22_E7_E7_MIN;
  static constexpr E7 E7_MAX = Message9_M6_M17_M22_E7_E7_MAX;
  static constexpr int E7_ARRAYSIZE = Message9_M6_M17_M22_E7_E7_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E7_descriptor() {
    return Message9_M6_M17_M22_E7_descriptor();
  }
  template <typename T>
  static inline const std::string& E7_Name(T value) {
    return Message9_M6_M17_M22_E7_Name(value);
  }
  static inline bool E7_Parse(absl::string_view name, E7* value) {
    return Message9_M6_M17_M22_E7_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional .fleetbench.proto.Message9.M6.M17.M22.E7 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::fleetbench::proto::Message9_M6_M17_M22_E7 f_0() const;
  void set_f_0(::fleetbench::proto::Message9_M6_M17_M22_E7 value);

  private:
  ::fleetbench::proto::Message9_M6_M17_M22_E7 _internal_f_0() const;
  void _internal_set_f_0(::fleetbench::proto::Message9_M6_M17_M22_E7 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M6.M17.M22)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M6_M17_M22_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    int f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M6_M15 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M6.M15) */ {
 public:
  inline Message9_M6_M15() : Message9_M6_M15(nullptr) {}
  ~Message9_M6_M15() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M6_M15(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M6_M15(const Message9_M6_M15& from) : Message9_M6_M15(nullptr, from) {}
  inline Message9_M6_M15(Message9_M6_M15&& from) noexcept
      : Message9_M6_M15(nullptr, std::move(from)) {}
  inline Message9_M6_M15& operator=(const Message9_M6_M15& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M6_M15& operator=(Message9_M6_M15&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M6_M15& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M6_M15* internal_default_instance() {
    return reinterpret_cast<const Message9_M6_M15*>(
        &_Message9_M6_M15_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 64;
  friend void swap(Message9_M6_M15& a, Message9_M6_M15& b) { a.Swap(&b); }
  inline void Swap(Message9_M6_M15* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M6_M15* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M6_M15* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M6_M15>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M6_M15& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M6_M15& from) { Message9_M6_M15::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M6_M15* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M6.M15"; }

 protected:
  explicit Message9_M6_M15(::google::protobuf::Arena* arena);
  Message9_M6_M15(::google::protobuf::Arena* arena, const Message9_M6_M15& from);
  Message9_M6_M15(::google::protobuf::Arena* arena, Message9_M6_M15&& from) noexcept
      : Message9_M6_M15(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 3,
  };
  // optional fixed64 f_0 = 3;
  bool has_f_0() const;
  void clear_f_0() ;
  ::uint64_t f_0() const;
  void set_f_0(::uint64_t value);

  private:
  ::uint64_t _internal_f_0() const;
  void _internal_set_f_0(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M6.M15)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M6_M15_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M6_M12 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M6.M12) */ {
 public:
  inline Message9_M6_M12() : Message9_M6_M12(nullptr) {}
  ~Message9_M6_M12() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M6_M12(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M6_M12(const Message9_M6_M12& from) : Message9_M6_M12(nullptr, from) {}
  inline Message9_M6_M12(Message9_M6_M12&& from) noexcept
      : Message9_M6_M12(nullptr, std::move(from)) {}
  inline Message9_M6_M12& operator=(const Message9_M6_M12& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M6_M12& operator=(Message9_M6_M12&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M6_M12& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M6_M12* internal_default_instance() {
    return reinterpret_cast<const Message9_M6_M12*>(
        &_Message9_M6_M12_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 63;
  friend void swap(Message9_M6_M12& a, Message9_M6_M12& b) { a.Swap(&b); }
  inline void Swap(Message9_M6_M12* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M6_M12* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M6_M12* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M6_M12>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M6_M12& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M6_M12& from) { Message9_M6_M12::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M6_M12* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M6.M12"; }

 protected:
  explicit Message9_M6_M12(::google::protobuf::Arena* arena);
  Message9_M6_M12(::google::protobuf::Arena* arena, const Message9_M6_M12& from);
  Message9_M6_M12(::google::protobuf::Arena* arena, Message9_M6_M12&& from) noexcept
      : Message9_M6_M12(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_6_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_6())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_6_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_6()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_6_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_6_);
      sizes.push_back(end_addr - start_addr + sizeof(f_6()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_6_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF1FieldNumber = 3,
    kF0FieldNumber = 1,
    kF2FieldNumber = 4,
    kF3FieldNumber = 5,
    kF4FieldNumber = 7,
    kF5FieldNumber = 9,
    kF6FieldNumber = 10,
  };
  // optional int64 f_1 = 3;
  bool has_f_1() const;
  void clear_f_1() ;
  ::int64_t f_1() const;
  void set_f_1(::int64_t value);

  private:
  ::int64_t _internal_f_1() const;
  void _internal_set_f_1(::int64_t value);

  public:
  // optional float f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  float f_0() const;
  void set_f_0(float value);

  private:
  float _internal_f_0() const;
  void _internal_set_f_0(float value);

  public:
  // optional bool f_2 = 4;
  bool has_f_2() const;
  void clear_f_2() ;
  bool f_2() const;
  void set_f_2(bool value);

  private:
  bool _internal_f_2() const;
  void _internal_set_f_2(bool value);

  public:
  // optional bool f_3 = 5;
  bool has_f_3() const;
  void clear_f_3() ;
  bool f_3() const;
  void set_f_3(bool value);

  private:
  bool _internal_f_3() const;
  void _internal_set_f_3(bool value);

  public:
  // optional int64 f_4 = 7;
  bool has_f_4() const;
  void clear_f_4() ;
  ::int64_t f_4() const;
  void set_f_4(::int64_t value);

  private:
  ::int64_t _internal_f_4() const;
  void _internal_set_f_4(::int64_t value);

  public:
  // optional fixed64 f_5 = 9;
  bool has_f_5() const;
  void clear_f_5() ;
  ::uint64_t f_5() const;
  void set_f_5(::uint64_t value);

  private:
  ::uint64_t _internal_f_5() const;
  void _internal_set_f_5(::uint64_t value);

  public:
  // optional int64 f_6 = 10;
  bool has_f_6() const;
  void clear_f_6() ;
  ::int64_t f_6() const;
  void set_f_6(::int64_t value);

  private:
  ::int64_t _internal_f_6() const;
  void _internal_set_f_6(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M6.M12)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M6_M12_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t f_1_;
    float f_0_;
    bool f_2_;
    bool f_3_;
    ::int64_t f_4_;
    ::uint64_t f_5_;
    ::int64_t f_6_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M30 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M30) */ {
 public:
  inline Message9_M5_M11_M30() : Message9_M5_M11_M30(nullptr) {}
  ~Message9_M5_M11_M30() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M30(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M30(const Message9_M5_M11_M30& from) : Message9_M5_M11_M30(nullptr, from) {}
  inline Message9_M5_M11_M30(Message9_M5_M11_M30&& from) noexcept
      : Message9_M5_M11_M30(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M30& operator=(const Message9_M5_M11_M30& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M30& operator=(Message9_M5_M11_M30&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M30& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M30* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M30*>(
        &_Message9_M5_M11_M30_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 60;
  friend void swap(Message9_M5_M11_M30& a, Message9_M5_M11_M30& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M30* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M30* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M30* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M30>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M30& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M30& from) { Message9_M5_M11_M30::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M30* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M30"; }

 protected:
  explicit Message9_M5_M11_M30(::google::protobuf::Arena* arena);
  Message9_M5_M11_M30(::google::protobuf::Arena* arena, const Message9_M5_M11_M30& from);
  Message9_M5_M11_M30(::google::protobuf::Arena* arena, Message9_M5_M11_M30&& from) noexcept
      : Message9_M5_M11_M30(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using E16 = Message9_M5_M11_M30_E16;
  static constexpr E16 E16_UNSPECIFIED = Message9_M5_M11_M30_E16_E16_UNSPECIFIED;
  static constexpr E16 E16_CONST_1 = Message9_M5_M11_M30_E16_E16_CONST_1;
  static constexpr E16 E16_CONST_2 = Message9_M5_M11_M30_E16_E16_CONST_2;
  static constexpr E16 E16_CONST_3 = Message9_M5_M11_M30_E16_E16_CONST_3;
  static constexpr E16 E16_CONST_4 = Message9_M5_M11_M30_E16_E16_CONST_4;
  static constexpr E16 E16_CONST_5 = Message9_M5_M11_M30_E16_E16_CONST_5;
  static inline bool E16_IsValid(int value) {
    return Message9_M5_M11_M30_E16_IsValid(value);
  }
  static constexpr E16 E16_MIN = Message9_M5_M11_M30_E16_E16_MIN;
  static constexpr E16 E16_MAX = Message9_M5_M11_M30_E16_E16_MAX;
  static constexpr int E16_ARRAYSIZE = Message9_M5_M11_M30_E16_E16_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E16_descriptor() {
    return Message9_M5_M11_M30_E16_descriptor();
  }
  template <typename T>
  static inline const std::string& E16_Name(T value) {
    return Message9_M5_M11_M30_E16_Name(value);
  }
  static inline bool E16_Parse(absl::string_view name, E16* value) {
    return Message9_M5_M11_M30_E16_Parse(name, value);
  }
  using E17 = Message9_M5_M11_M30_E17;
  static constexpr E17 E17_UNSPECIFIED = Message9_M5_M11_M30_E17_E17_UNSPECIFIED;
  static constexpr E17 E17_CONST_1 = Message9_M5_M11_M30_E17_E17_CONST_1;
  static constexpr E17 E17_CONST_2 = Message9_M5_M11_M30_E17_E17_CONST_2;
  static constexpr E17 E17_CONST_3 = Message9_M5_M11_M30_E17_E17_CONST_3;
  static constexpr E17 E17_CONST_4 = Message9_M5_M11_M30_E17_E17_CONST_4;
  static constexpr E17 E17_CONST_5 = Message9_M5_M11_M30_E17_E17_CONST_5;
  static inline bool E17_IsValid(int value) {
    return Message9_M5_M11_M30_E17_IsValid(value);
  }
  static constexpr E17 E17_MIN = Message9_M5_M11_M30_E17_E17_MIN;
  static constexpr E17 E17_MAX = Message9_M5_M11_M30_E17_E17_MAX;
  static constexpr int E17_ARRAYSIZE = Message9_M5_M11_M30_E17_E17_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E17_descriptor() {
    return Message9_M5_M11_M30_E17_descriptor();
  }
  template <typename T>
  static inline const std::string& E17_Name(T value) {
    return Message9_M5_M11_M30_E17_Name(value);
  }
  static inline bool E17_Parse(absl::string_view name, E17* value) {
    return Message9_M5_M11_M30_E17_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_28_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_28())));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())), f_2().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_4().c_str())), f_4().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())), f_10().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())), f_11().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_18().c_str())), f_18().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_21().c_str())), f_21().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_27().c_str())), f_27().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_28_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_28()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      sizes_list.push_back(f_2().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_4().c_str())));
      sizes_list.push_back(f_4().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      sizes_list.push_back(f_10().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())));
      sizes_list.push_back(f_11().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_18().c_str())));
      sizes_list.push_back(f_18().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_21().c_str())));
      sizes_list.push_back(f_21().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_27().c_str())));
      sizes_list.push_back(f_27().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_28_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_4().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_18().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_21().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_27().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_28_);
      sizes.push_back(end_addr - start_addr + sizeof(f_28()));
      sizes.push_back(f_2().size());
      sizes.push_back(f_4().size());
      sizes.push_back(f_10().size());
      sizes.push_back(f_11().size());
      sizes.push_back(f_18().size());
      sizes.push_back(f_21().size());
      sizes.push_back(f_27().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_28_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_2(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_4(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_4().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_10(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_11(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_18(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_18().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_21(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_21().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_27(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_27().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_2(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_4(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_10(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_11(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_18(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_21(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_27(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 5,
    kF4FieldNumber = 7,
    kF10FieldNumber = 14,
    kF11FieldNumber = 15,
    kF18FieldNumber = 24,
    kF21FieldNumber = 27,
    kF27FieldNumber = 35,
    kF0FieldNumber = 2,
    kF1FieldNumber = 4,
    kF3FieldNumber = 6,
    kF5FieldNumber = 8,
    kF6FieldNumber = 9,
    kF8FieldNumber = 11,
    kF7FieldNumber = 10,
    kF9FieldNumber = 13,
    kF12FieldNumber = 16,
    kF13FieldNumber = 17,
    kF14FieldNumber = 19,
    kF15FieldNumber = 20,
    kF16FieldNumber = 22,
    kF17FieldNumber = 23,
    kF19FieldNumber = 25,
    kF20FieldNumber = 26,
    kF22FieldNumber = 28,
    kF23FieldNumber = 30,
    kF24FieldNumber = 32,
    kF25FieldNumber = 33,
    kF26FieldNumber = 34,
    kF28FieldNumber = 37,
  };
  // optional bytes f_2 = 5;
  bool has_f_2() const;
  void clear_f_2() ;
  const std::string& f_2() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_2(Arg_&& arg, Args_... args);
  std::string* mutable_f_2();
  PROTOBUF_NODISCARD std::string* release_f_2();
  void set_allocated_f_2(std::string* value);

  private:
  const std::string& _internal_f_2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_2(
      const std::string& value);
  std::string* _internal_mutable_f_2();

  public:
  // optional string f_4 = 7;
  bool has_f_4() const;
  void clear_f_4() ;
  const std::string& f_4() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_4(Arg_&& arg, Args_... args);
  std::string* mutable_f_4();
  PROTOBUF_NODISCARD std::string* release_f_4();
  void set_allocated_f_4(std::string* value);

  private:
  const std::string& _internal_f_4() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_4(
      const std::string& value);
  std::string* _internal_mutable_f_4();

  public:
  // optional string f_10 = 14;
  bool has_f_10() const;
  void clear_f_10() ;
  const std::string& f_10() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_10(Arg_&& arg, Args_... args);
  std::string* mutable_f_10();
  PROTOBUF_NODISCARD std::string* release_f_10();
  void set_allocated_f_10(std::string* value);

  private:
  const std::string& _internal_f_10() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_10(
      const std::string& value);
  std::string* _internal_mutable_f_10();

  public:
  // optional string f_11 = 15;
  bool has_f_11() const;
  void clear_f_11() ;
  const std::string& f_11() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_11(Arg_&& arg, Args_... args);
  std::string* mutable_f_11();
  PROTOBUF_NODISCARD std::string* release_f_11();
  void set_allocated_f_11(std::string* value);

  private:
  const std::string& _internal_f_11() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_11(
      const std::string& value);
  std::string* _internal_mutable_f_11();

  public:
  // optional string f_18 = 24;
  bool has_f_18() const;
  void clear_f_18() ;
  const std::string& f_18() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_18(Arg_&& arg, Args_... args);
  std::string* mutable_f_18();
  PROTOBUF_NODISCARD std::string* release_f_18();
  void set_allocated_f_18(std::string* value);

  private:
  const std::string& _internal_f_18() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_18(
      const std::string& value);
  std::string* _internal_mutable_f_18();

  public:
  // optional string f_21 = 27;
  bool has_f_21() const;
  void clear_f_21() ;
  const std::string& f_21() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_21(Arg_&& arg, Args_... args);
  std::string* mutable_f_21();
  PROTOBUF_NODISCARD std::string* release_f_21();
  void set_allocated_f_21(std::string* value);

  private:
  const std::string& _internal_f_21() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_21(
      const std::string& value);
  std::string* _internal_mutable_f_21();

  public:
  // optional string f_27 = 35;
  bool has_f_27() const;
  void clear_f_27() ;
  const std::string& f_27() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_27(Arg_&& arg, Args_... args);
  std::string* mutable_f_27();
  PROTOBUF_NODISCARD std::string* release_f_27();
  void set_allocated_f_27(std::string* value);

  private:
  const std::string& _internal_f_27() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_27(
      const std::string& value);
  std::string* _internal_mutable_f_27();

  public:
  // optional int32 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int32_t f_0() const;
  void set_f_0(::int32_t value);

  private:
  ::int32_t _internal_f_0() const;
  void _internal_set_f_0(::int32_t value);

  public:
  // optional int32 f_1 = 4;
  bool has_f_1() const;
  void clear_f_1() ;
  ::int32_t f_1() const;
  void set_f_1(::int32_t value);

  private:
  ::int32_t _internal_f_1() const;
  void _internal_set_f_1(::int32_t value);

  public:
  // optional int64 f_3 = 6;
  bool has_f_3() const;
  void clear_f_3() ;
  ::int64_t f_3() const;
  void set_f_3(::int64_t value);

  private:
  ::int64_t _internal_f_3() const;
  void _internal_set_f_3(::int64_t value);

  public:
  // optional int32 f_5 = 8;
  bool has_f_5() const;
  void clear_f_5() ;
  ::int32_t f_5() const;
  void set_f_5(::int32_t value);

  private:
  ::int32_t _internal_f_5() const;
  void _internal_set_f_5(::int32_t value);

  public:
  // optional fixed32 f_6 = 9;
  bool has_f_6() const;
  void clear_f_6() ;
  ::uint32_t f_6() const;
  void set_f_6(::uint32_t value);

  private:
  ::uint32_t _internal_f_6() const;
  void _internal_set_f_6(::uint32_t value);

  public:
  // optional int64 f_8 = 11;
  bool has_f_8() const;
  void clear_f_8() ;
  ::int64_t f_8() const;
  void set_f_8(::int64_t value);

  private:
  ::int64_t _internal_f_8() const;
  void _internal_set_f_8(::int64_t value);

  public:
  // optional int32 f_7 = 10;
  bool has_f_7() const;
  void clear_f_7() ;
  ::int32_t f_7() const;
  void set_f_7(::int32_t value);

  private:
  ::int32_t _internal_f_7() const;
  void _internal_set_f_7(::int32_t value);

  public:
  // optional int32 f_9 = 13;
  bool has_f_9() const;
  void clear_f_9() ;
  ::int32_t f_9() const;
  void set_f_9(::int32_t value);

  private:
  ::int32_t _internal_f_9() const;
  void _internal_set_f_9(::int32_t value);

  public:
  // optional uint64 f_12 = 16;
  bool has_f_12() const;
  void clear_f_12() ;
  ::uint64_t f_12() const;
  void set_f_12(::uint64_t value);

  private:
  ::uint64_t _internal_f_12() const;
  void _internal_set_f_12(::uint64_t value);

  public:
  // optional int64 f_13 = 17;
  bool has_f_13() const;
  void clear_f_13() ;
  ::int64_t f_13() const;
  void set_f_13(::int64_t value);

  private:
  ::int64_t _internal_f_13() const;
  void _internal_set_f_13(::int64_t value);

  public:
  // optional uint64 f_14 = 19;
  bool has_f_14() const;
  void clear_f_14() ;
  ::uint64_t f_14() const;
  void set_f_14(::uint64_t value);

  private:
  ::uint64_t _internal_f_14() const;
  void _internal_set_f_14(::uint64_t value);

  public:
  // optional int64 f_15 = 20;
  bool has_f_15() const;
  void clear_f_15() ;
  ::int64_t f_15() const;
  void set_f_15(::int64_t value);

  private:
  ::int64_t _internal_f_15() const;
  void _internal_set_f_15(::int64_t value);

  public:
  // optional int32 f_16 = 22;
  bool has_f_16() const;
  void clear_f_16() ;
  ::int32_t f_16() const;
  void set_f_16(::int32_t value);

  private:
  ::int32_t _internal_f_16() const;
  void _internal_set_f_16(::int32_t value);

  public:
  // optional int32 f_17 = 23;
  bool has_f_17() const;
  void clear_f_17() ;
  ::int32_t f_17() const;
  void set_f_17(::int32_t value);

  private:
  ::int32_t _internal_f_17() const;
  void _internal_set_f_17(::int32_t value);

  public:
  // optional int64 f_19 = 25;
  bool has_f_19() const;
  void clear_f_19() ;
  ::int64_t f_19() const;
  void set_f_19(::int64_t value);

  private:
  ::int64_t _internal_f_19() const;
  void _internal_set_f_19(::int64_t value);

  public:
  // optional bool f_20 = 26;
  bool has_f_20() const;
  void clear_f_20() ;
  bool f_20() const;
  void set_f_20(bool value);

  private:
  bool _internal_f_20() const;
  void _internal_set_f_20(bool value);

  public:
  // optional float f_22 = 28;
  bool has_f_22() const;
  void clear_f_22() ;
  float f_22() const;
  void set_f_22(float value);

  private:
  float _internal_f_22() const;
  void _internal_set_f_22(float value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M30.E16 f_23 = 30;
  bool has_f_23() const;
  void clear_f_23() ;
  ::fleetbench::proto::Message9_M5_M11_M30_E16 f_23() const;
  void set_f_23(::fleetbench::proto::Message9_M5_M11_M30_E16 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M30_E16 _internal_f_23() const;
  void _internal_set_f_23(::fleetbench::proto::Message9_M5_M11_M30_E16 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M30.E17 f_24 = 32;
  bool has_f_24() const;
  void clear_f_24() ;
  ::fleetbench::proto::Message9_M5_M11_M30_E17 f_24() const;
  void set_f_24(::fleetbench::proto::Message9_M5_M11_M30_E17 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M30_E17 _internal_f_24() const;
  void _internal_set_f_24(::fleetbench::proto::Message9_M5_M11_M30_E17 value);

  public:
  // optional int64 f_25 = 33;
  bool has_f_25() const;
  void clear_f_25() ;
  ::int64_t f_25() const;
  void set_f_25(::int64_t value);

  private:
  ::int64_t _internal_f_25() const;
  void _internal_set_f_25(::int64_t value);

  public:
  // optional int64 f_26 = 34;
  bool has_f_26() const;
  void clear_f_26() ;
  ::int64_t f_26() const;
  void set_f_26(::int64_t value);

  private:
  ::int64_t _internal_f_26() const;
  void _internal_set_f_26(::int64_t value);

  public:
  // optional int64 f_28 = 37;
  bool has_f_28() const;
  void clear_f_28() ;
  ::int64_t f_28() const;
  void set_f_28(::int64_t value);

  private:
  ::int64_t _internal_f_28() const;
  void _internal_set_f_28(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M30)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 29, 2,
      92, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M30_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_2_;
    ::google::protobuf::internal::ArenaStringPtr f_4_;
    ::google::protobuf::internal::ArenaStringPtr f_10_;
    ::google::protobuf::internal::ArenaStringPtr f_11_;
    ::google::protobuf::internal::ArenaStringPtr f_18_;
    ::google::protobuf::internal::ArenaStringPtr f_21_;
    ::google::protobuf::internal::ArenaStringPtr f_27_;
    ::int32_t f_0_;
    ::int32_t f_1_;
    ::int64_t f_3_;
    ::int32_t f_5_;
    ::uint32_t f_6_;
    ::int64_t f_8_;
    ::int32_t f_7_;
    ::int32_t f_9_;
    ::uint64_t f_12_;
    ::int64_t f_13_;
    ::uint64_t f_14_;
    ::int64_t f_15_;
    ::int32_t f_16_;
    ::int32_t f_17_;
    ::int64_t f_19_;
    bool f_20_;
    float f_22_;
    int f_23_;
    int f_24_;
    ::int64_t f_25_;
    ::int64_t f_26_;
    ::int64_t f_28_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M25_M31 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M25.M31) */ {
 public:
  inline Message9_M5_M11_M25_M31() : Message9_M5_M11_M25_M31(nullptr) {}
  ~Message9_M5_M11_M25_M31() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M25_M31(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M25_M31(const Message9_M5_M11_M25_M31& from) : Message9_M5_M11_M25_M31(nullptr, from) {}
  inline Message9_M5_M11_M25_M31(Message9_M5_M11_M25_M31&& from) noexcept
      : Message9_M5_M11_M25_M31(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M25_M31& operator=(const Message9_M5_M11_M25_M31& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M25_M31& operator=(Message9_M5_M11_M25_M31&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M25_M31& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M25_M31* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M25_M31*>(
        &_Message9_M5_M11_M25_M31_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(Message9_M5_M11_M25_M31& a, Message9_M5_M11_M25_M31& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M25_M31* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M25_M31* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M25_M31* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M25_M31>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M25_M31& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M25_M31& from) { Message9_M5_M11_M25_M31::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M25_M31* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M25.M31"; }

 protected:
  explicit Message9_M5_M11_M25_M31(::google::protobuf::Arena* arena);
  Message9_M5_M11_M25_M31(::google::protobuf::Arena* arena, const Message9_M5_M11_M25_M31& from);
  Message9_M5_M11_M25_M31(::google::protobuf::Arena* arena, Message9_M5_M11_M25_M31&& from) noexcept
      : Message9_M5_M11_M25_M31(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using E18 = Message9_M5_M11_M25_M31_E18;
  static constexpr E18 E18_UNSPECIFIED = Message9_M5_M11_M25_M31_E18_E18_UNSPECIFIED;
  static constexpr E18 E18_CONST_1 = Message9_M5_M11_M25_M31_E18_E18_CONST_1;
  static constexpr E18 E18_CONST_2 = Message9_M5_M11_M25_M31_E18_E18_CONST_2;
  static constexpr E18 E18_CONST_3 = Message9_M5_M11_M25_M31_E18_E18_CONST_3;
  static constexpr E18 E18_CONST_4 = Message9_M5_M11_M25_M31_E18_E18_CONST_4;
  static constexpr E18 E18_CONST_5 = Message9_M5_M11_M25_M31_E18_E18_CONST_5;
  static inline bool E18_IsValid(int value) {
    return Message9_M5_M11_M25_M31_E18_IsValid(value);
  }
  static constexpr E18 E18_MIN = Message9_M5_M11_M25_M31_E18_E18_MIN;
  static constexpr E18 E18_MAX = Message9_M5_M11_M25_M31_E18_E18_MAX;
  static constexpr int E18_ARRAYSIZE = Message9_M5_M11_M25_M31_E18_E18_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E18_descriptor() {
    return Message9_M5_M11_M25_M31_E18_descriptor();
  }
  template <typename T>
  static inline const std::string& E18_Name(T value) {
    return Message9_M5_M11_M25_M31_E18_Name(value);
  }
  static inline bool E18_Parse(absl::string_view name, E18* value) {
    return Message9_M5_M11_M25_M31_E18_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_1())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_1()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      sizes.push_back(end_addr - start_addr + sizeof(f_1()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
    kF1FieldNumber = 2,
  };
  // optional int64 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M25.M31.E18 f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  ::fleetbench::proto::Message9_M5_M11_M25_M31_E18 f_1() const;
  void set_f_1(::fleetbench::proto::Message9_M5_M11_M25_M31_E18 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M25_M31_E18 _internal_f_1() const;
  void _internal_set_f_1(::fleetbench::proto::Message9_M5_M11_M25_M31_E18 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M25.M31)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M25_M31_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t f_0_;
    int f_1_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M41_M44_M57 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M57) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M57() : Message9_M5_M11_M23_M34_M37_M41_M44_M57(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M41_M44_M57() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M41_M44_M57(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M41_M44_M57(const Message9_M5_M11_M23_M34_M37_M41_M44_M57& from) : Message9_M5_M11_M23_M34_M37_M41_M44_M57(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M57(Message9_M5_M11_M23_M34_M37_M41_M44_M57&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M57(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M57& operator=(const Message9_M5_M11_M23_M34_M37_M41_M44_M57& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M57& operator=(Message9_M5_M11_M23_M34_M37_M41_M44_M57&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M41_M44_M57& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M41_M44_M57* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M41_M44_M57*>(
        &_Message9_M5_M11_M23_M34_M37_M41_M44_M57_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(Message9_M5_M11_M23_M34_M37_M41_M44_M57& a, Message9_M5_M11_M23_M34_M37_M41_M44_M57& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M41_M44_M57* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M57* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M41_M44_M57* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M41_M44_M57>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M57& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M57& from) { Message9_M5_M11_M23_M34_M37_M41_M44_M57::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M57* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M57"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M41_M44_M57(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M41_M44_M57(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M41_M44_M57& from);
  Message9_M5_M11_M23_M34_M37_M41_M44_M57(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M41_M44_M57&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M57(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 4,
  };
  // optional float f_0 = 4;
  bool has_f_0() const;
  void clear_f_0() ;
  float f_0() const;
  void set_f_0(float value);

  private:
  float _internal_f_0() const;
  void _internal_set_f_0(float value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M57)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M41_M44_M57_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M41_M44_M55 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M55) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M55() : Message9_M5_M11_M23_M34_M37_M41_M44_M55(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M41_M44_M55() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M41_M44_M55(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M41_M44_M55(const Message9_M5_M11_M23_M34_M37_M41_M44_M55& from) : Message9_M5_M11_M23_M34_M37_M41_M44_M55(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M55(Message9_M5_M11_M23_M34_M37_M41_M44_M55&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M55(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M55& operator=(const Message9_M5_M11_M23_M34_M37_M41_M44_M55& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M55& operator=(Message9_M5_M11_M23_M34_M37_M41_M44_M55&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M41_M44_M55& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M41_M44_M55* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M41_M44_M55*>(
        &_Message9_M5_M11_M23_M34_M37_M41_M44_M55_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(Message9_M5_M11_M23_M34_M37_M41_M44_M55& a, Message9_M5_M11_M23_M34_M37_M41_M44_M55& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M41_M44_M55* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M55* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M41_M44_M55* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M41_M44_M55>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M55& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M55& from) { Message9_M5_M11_M23_M34_M37_M41_M44_M55::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M55* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M55"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M41_M44_M55(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M41_M44_M55(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M41_M44_M55& from);
  Message9_M5_M11_M23_M34_M37_M41_M44_M55(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M41_M44_M55&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M55(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using E39 = Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39;
  static constexpr E39 E39_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_UNSPECIFIED;
  static constexpr E39 E39_CONST_1 = Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_CONST_1;
  static constexpr E39 E39_CONST_2 = Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_CONST_2;
  static constexpr E39 E39_CONST_3 = Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_CONST_3;
  static constexpr E39 E39_CONST_4 = Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_CONST_4;
  static constexpr E39 E39_CONST_5 = Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_CONST_5;
  static inline bool E39_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_IsValid(value);
  }
  static constexpr E39 E39_MIN = Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_MIN;
  static constexpr E39 E39_MAX = Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_MAX;
  static constexpr int E39_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_E39_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E39_descriptor() {
    return Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_descriptor();
  }
  template <typename T>
  static inline const std::string& E39_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_Name(value);
  }
  static inline bool E39_Parse(absl::string_view name, E39* value) {
    return Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M55.E39 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39 f_0() const;
  void set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39 _internal_f_0() const;
  void _internal_set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M55)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M41_M44_M55_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    int f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62() : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& from) : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& operator=(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& operator=(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62*>(
        &_Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& a, Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& from) { Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& from);
  Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_9_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_9())));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())), f_8().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_9_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_9()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      sizes_list.push_back(f_8().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_9_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_9_);
      sizes.push_back(end_addr - start_addr + sizeof(f_9()));
      sizes.push_back(f_8().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_9_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_8(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_8(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF8FieldNumber = 10,
    kF0FieldNumber = 2,
    kF1FieldNumber = 3,
    kF4FieldNumber = 6,
    kF2FieldNumber = 4,
    kF3FieldNumber = 5,
    kF5FieldNumber = 7,
    kF6FieldNumber = 8,
    kF7FieldNumber = 9,
    kF10FieldNumber = 13,
    kF9FieldNumber = 12,
  };
  // optional string f_8 = 10;
  bool has_f_8() const;
  void clear_f_8() ;
  const std::string& f_8() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_8(Arg_&& arg, Args_... args);
  std::string* mutable_f_8();
  PROTOBUF_NODISCARD std::string* release_f_8();
  void set_allocated_f_8(std::string* value);

  private:
  const std::string& _internal_f_8() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_8(
      const std::string& value);
  std::string* _internal_mutable_f_8();

  public:
  // optional bool f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  bool f_0() const;
  void set_f_0(bool value);

  private:
  bool _internal_f_0() const;
  void _internal_set_f_0(bool value);

  public:
  // optional bool f_1 = 3;
  bool has_f_1() const;
  void clear_f_1() ;
  bool f_1() const;
  void set_f_1(bool value);

  private:
  bool _internal_f_1() const;
  void _internal_set_f_1(bool value);

  public:
  // optional bool f_4 = 6;
  bool has_f_4() const;
  void clear_f_4() ;
  bool f_4() const;
  void set_f_4(bool value);

  private:
  bool _internal_f_4() const;
  void _internal_set_f_4(bool value);

  public:
  // optional fixed32 f_2 = 4;
  bool has_f_2() const;
  void clear_f_2() ;
  ::uint32_t f_2() const;
  void set_f_2(::uint32_t value);

  private:
  ::uint32_t _internal_f_2() const;
  void _internal_set_f_2(::uint32_t value);

  public:
  // optional int64 f_3 = 5;
  bool has_f_3() const;
  void clear_f_3() ;
  ::int64_t f_3() const;
  void set_f_3(::int64_t value);

  private:
  ::int64_t _internal_f_3() const;
  void _internal_set_f_3(::int64_t value);

  public:
  // optional int32 f_5 = 7;
  bool has_f_5() const;
  void clear_f_5() ;
  ::int32_t f_5() const;
  void set_f_5(::int32_t value);

  private:
  ::int32_t _internal_f_5() const;
  void _internal_set_f_5(::int32_t value);

  public:
  // optional int32 f_6 = 8;
  bool has_f_6() const;
  void clear_f_6() ;
  ::int32_t f_6() const;
  void set_f_6(::int32_t value);

  private:
  ::int32_t _internal_f_6() const;
  void _internal_set_f_6(::int32_t value);

  public:
  // optional int32 f_7 = 9;
  bool has_f_7() const;
  void clear_f_7() ;
  ::int32_t f_7() const;
  void set_f_7(::int32_t value);

  private:
  ::int32_t _internal_f_7() const;
  void _internal_set_f_7(::int32_t value);

  public:
  // optional uint32 f_10 = 13;
  bool has_f_10() const;
  void clear_f_10() ;
  ::uint32_t f_10() const;
  void set_f_10(::uint32_t value);

  private:
  ::uint32_t _internal_f_10() const;
  void _internal_set_f_10(::uint32_t value);

  public:
  // optional uint64 f_9 = 12;
  bool has_f_9() const;
  void clear_f_9() ;
  ::uint64_t f_9() const;
  void set_f_9(::uint64_t value);

  private:
  ::uint64_t _internal_f_9() const;
  void _internal_set_f_9(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      80, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_8_;
    bool f_0_;
    bool f_1_;
    bool f_4_;
    ::uint32_t f_2_;
    ::int64_t f_3_;
    ::int32_t f_5_;
    ::int32_t f_6_;
    ::int32_t f_7_;
    ::uint32_t f_10_;
    ::uint64_t f_9_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M61) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61() : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& from) : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& operator=(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& operator=(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61*>(
        &_Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& a, Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& from) { Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M61"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& from);
  Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional float f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  float f_0() const;
  void set_f_0(float value);

  private:
  float _internal_f_0() const;
  void _internal_set_f_0(float value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M61)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M60) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60() : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& from) : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& operator=(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& operator=(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60*>(
        &_Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& a, Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& from) { Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M60"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& from);
  Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional string f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M60)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M41_M43 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M43) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M41_M43() : Message9_M5_M11_M23_M34_M37_M41_M43(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M41_M43() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M41_M43(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M41_M43(const Message9_M5_M11_M23_M34_M37_M41_M43& from) : Message9_M5_M11_M23_M34_M37_M41_M43(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M43(Message9_M5_M11_M23_M34_M37_M41_M43&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M43(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M43& operator=(const Message9_M5_M11_M23_M34_M37_M41_M43& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M41_M43& operator=(Message9_M5_M11_M23_M34_M37_M41_M43&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M41_M43& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M41_M43* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M41_M43*>(
        &_Message9_M5_M11_M23_M34_M37_M41_M43_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(Message9_M5_M11_M23_M34_M37_M41_M43& a, Message9_M5_M11_M23_M34_M37_M41_M43& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M41_M43* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M41_M43* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M41_M43* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M41_M43>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M41_M43& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M41_M43& from) { Message9_M5_M11_M23_M34_M37_M41_M43::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M41_M43* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M43"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M41_M43(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M41_M43(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M41_M43& from);
  Message9_M5_M11_M23_M34_M37_M41_M43(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M41_M43&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M43(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
  };
  // optional uint64 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::uint64_t f_0() const;
  void set_f_0(::uint64_t value);

  private:
  ::uint64_t _internal_f_0() const;
  void _internal_set_f_0(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M43)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M41_M43_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M41_M42 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M42) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M41_M42() : Message9_M5_M11_M23_M34_M37_M41_M42(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M41_M42() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M41_M42(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M41_M42(const Message9_M5_M11_M23_M34_M37_M41_M42& from) : Message9_M5_M11_M23_M34_M37_M41_M42(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M42(Message9_M5_M11_M23_M34_M37_M41_M42&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M42(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M42& operator=(const Message9_M5_M11_M23_M34_M37_M41_M42& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M41_M42& operator=(Message9_M5_M11_M23_M34_M37_M41_M42&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M41_M42& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M41_M42* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M41_M42*>(
        &_Message9_M5_M11_M23_M34_M37_M41_M42_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(Message9_M5_M11_M23_M34_M37_M41_M42& a, Message9_M5_M11_M23_M34_M37_M41_M42& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M41_M42* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M41_M42* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M41_M42* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M41_M42>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M41_M42& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M41_M42& from) { Message9_M5_M11_M23_M34_M37_M41_M42::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M41_M42* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M42"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M41_M42(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M41_M42(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M41_M42& from);
  Message9_M5_M11_M23_M34_M37_M41_M42(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M41_M42&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M42(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using E36 = Message9_M5_M11_M23_M34_M37_M41_M42_E36;
  static constexpr E36 E36_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_UNSPECIFIED;
  static constexpr E36 E36_CONST_1 = Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_CONST_1;
  static constexpr E36 E36_CONST_2 = Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_CONST_2;
  static constexpr E36 E36_CONST_3 = Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_CONST_3;
  static constexpr E36 E36_CONST_4 = Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_CONST_4;
  static constexpr E36 E36_CONST_5 = Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_CONST_5;
  static inline bool E36_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_M41_M42_E36_IsValid(value);
  }
  static constexpr E36 E36_MIN = Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_MIN;
  static constexpr E36 E36_MAX = Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_MAX;
  static constexpr int E36_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_M41_M42_E36_E36_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E36_descriptor() {
    return Message9_M5_M11_M23_M34_M37_M41_M42_E36_descriptor();
  }
  template <typename T>
  static inline const std::string& E36_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_M41_M42_E36_Name(value);
  }
  static inline bool E36_Parse(absl::string_view name, E36* value) {
    return Message9_M5_M11_M23_M34_M37_M41_M42_E36_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M42.E36 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36 f_0() const;
  void set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36 _internal_f_0() const;
  void _internal_set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M42)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M41_M42_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    int f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M39_M50 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M50) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M39_M50() : Message9_M5_M11_M23_M34_M37_M39_M50(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M39_M50() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M39_M50(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M39_M50(const Message9_M5_M11_M23_M34_M37_M39_M50& from) : Message9_M5_M11_M23_M34_M37_M39_M50(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M39_M50(Message9_M5_M11_M23_M34_M37_M39_M50&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M39_M50(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M39_M50& operator=(const Message9_M5_M11_M23_M34_M37_M39_M50& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M39_M50& operator=(Message9_M5_M11_M23_M34_M37_M39_M50&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M39_M50& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M39_M50* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M39_M50*>(
        &_Message9_M5_M11_M23_M34_M37_M39_M50_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(Message9_M5_M11_M23_M34_M37_M39_M50& a, Message9_M5_M11_M23_M34_M37_M39_M50& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M39_M50* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M39_M50* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M39_M50* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M39_M50>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M39_M50& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M39_M50& from) { Message9_M5_M11_M23_M34_M37_M39_M50::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M39_M50* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M50"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M39_M50(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M39_M50(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M39_M50& from);
  Message9_M5_M11_M23_M34_M37_M39_M50(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M39_M50&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M39_M50(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional int64 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M50)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M39_M50_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M39_M45 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M45) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M39_M45() : Message9_M5_M11_M23_M34_M37_M39_M45(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M39_M45() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M39_M45(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M39_M45(const Message9_M5_M11_M23_M34_M37_M39_M45& from) : Message9_M5_M11_M23_M34_M37_M39_M45(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M39_M45(Message9_M5_M11_M23_M34_M37_M39_M45&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M39_M45(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M39_M45& operator=(const Message9_M5_M11_M23_M34_M37_M39_M45& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M39_M45& operator=(Message9_M5_M11_M23_M34_M37_M39_M45&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M39_M45& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M39_M45* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M39_M45*>(
        &_Message9_M5_M11_M23_M34_M37_M39_M45_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(Message9_M5_M11_M23_M34_M37_M39_M45& a, Message9_M5_M11_M23_M34_M37_M39_M45& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M39_M45* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M39_M45* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M39_M45* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M39_M45>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M39_M45& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M39_M45& from) { Message9_M5_M11_M23_M34_M37_M39_M45::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M39_M45* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M45"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M39_M45(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M39_M45(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M39_M45& from);
  Message9_M5_M11_M23_M34_M37_M39_M45(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M39_M45&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M39_M45(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional float f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  float f_0() const;
  void set_f_0(float value);

  private:
  float _internal_f_0() const;
  void _internal_set_f_0(float value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M45)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M39_M45_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M38_M47 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M47) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M38_M47() : Message9_M5_M11_M23_M34_M37_M38_M47(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M38_M47() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M38_M47(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M38_M47(const Message9_M5_M11_M23_M34_M37_M38_M47& from) : Message9_M5_M11_M23_M34_M37_M38_M47(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M38_M47(Message9_M5_M11_M23_M34_M37_M38_M47&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M38_M47(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M38_M47& operator=(const Message9_M5_M11_M23_M34_M37_M38_M47& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M38_M47& operator=(Message9_M5_M11_M23_M34_M37_M38_M47&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M38_M47& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M38_M47* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M38_M47*>(
        &_Message9_M5_M11_M23_M34_M37_M38_M47_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(Message9_M5_M11_M23_M34_M37_M38_M47& a, Message9_M5_M11_M23_M34_M37_M38_M47& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M38_M47* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M38_M47* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M38_M47* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M38_M47>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M38_M47& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M38_M47& from) { Message9_M5_M11_M23_M34_M37_M38_M47::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M38_M47* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M47"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M38_M47(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M38_M47(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M38_M47& from);
  Message9_M5_M11_M23_M34_M37_M38_M47(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M38_M47&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M38_M47(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional int64 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M47)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M38_M47_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M38_M46_M56 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M56) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M38_M46_M56() : Message9_M5_M11_M23_M34_M37_M38_M46_M56(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M38_M46_M56() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M38_M46_M56(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M38_M46_M56(const Message9_M5_M11_M23_M34_M37_M38_M46_M56& from) : Message9_M5_M11_M23_M34_M37_M38_M46_M56(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M38_M46_M56(Message9_M5_M11_M23_M34_M37_M38_M46_M56&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M38_M46_M56(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M38_M46_M56& operator=(const Message9_M5_M11_M23_M34_M37_M38_M46_M56& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M38_M46_M56& operator=(Message9_M5_M11_M23_M34_M37_M38_M46_M56&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M38_M46_M56& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M38_M46_M56* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M38_M46_M56*>(
        &_Message9_M5_M11_M23_M34_M37_M38_M46_M56_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(Message9_M5_M11_M23_M34_M37_M38_M46_M56& a, Message9_M5_M11_M23_M34_M37_M38_M46_M56& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M38_M46_M56* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M38_M46_M56* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M38_M46_M56* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M38_M46_M56>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M38_M46_M56& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M38_M46_M56& from) { Message9_M5_M11_M23_M34_M37_M38_M46_M56::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M38_M46_M56* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M56"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M38_M46_M56(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M38_M46_M56(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M38_M46_M56& from);
  Message9_M5_M11_M23_M34_M37_M38_M46_M56(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M38_M46_M56&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M38_M46_M56(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
  };
  // optional int64 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M56)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M38_M46_M56_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M38_M46_M52 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M52) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M38_M46_M52() : Message9_M5_M11_M23_M34_M37_M38_M46_M52(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M38_M46_M52() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M38_M46_M52(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M38_M46_M52(const Message9_M5_M11_M23_M34_M37_M38_M46_M52& from) : Message9_M5_M11_M23_M34_M37_M38_M46_M52(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M38_M46_M52(Message9_M5_M11_M23_M34_M37_M38_M46_M52&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M38_M46_M52(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M38_M46_M52& operator=(const Message9_M5_M11_M23_M34_M37_M38_M46_M52& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M38_M46_M52& operator=(Message9_M5_M11_M23_M34_M37_M38_M46_M52&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M38_M46_M52& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M38_M46_M52* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M38_M46_M52*>(
        &_Message9_M5_M11_M23_M34_M37_M38_M46_M52_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(Message9_M5_M11_M23_M34_M37_M38_M46_M52& a, Message9_M5_M11_M23_M34_M37_M38_M46_M52& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M38_M46_M52* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M38_M46_M52* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M38_M46_M52* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M38_M46_M52>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M38_M46_M52& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M38_M46_M52& from) { Message9_M5_M11_M23_M34_M37_M38_M46_M52::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M38_M46_M52* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M52"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M38_M46_M52(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M38_M46_M52(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M38_M46_M52& from);
  Message9_M5_M11_M23_M34_M37_M38_M46_M52(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M38_M46_M52&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M38_M46_M52(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional bytes f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M52)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M38_M46_M52_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M66) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M66"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
  };
  // optional float f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  float f_0() const;
  void set_f_0(float value);

  private:
  float _internal_f_0() const;
  void _internal_set_f_0(float value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M66)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    float f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M75) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M75"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 4,
  };
  // optional string f_0 = 4;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M75)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      108, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M74) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M74"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional int32 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int32_t f_0() const;
  void set_f_0(::int32_t value);

  private:
  ::int32_t _internal_f_0() const;
  void _internal_set_f_0(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M74)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.M68) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.M68"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional fixed64 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::uint64_t f_0() const;
  void set_f_0(::uint64_t value);

  private:
  ::uint64_t _internal_f_0() const;
  void _internal_set_f_0(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.M68)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M49 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M49) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M49() : Message9_M5_M11_M23_M34_M36_M40_M49(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M49() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M49(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M49(const Message9_M5_M11_M23_M34_M36_M40_M49& from) : Message9_M5_M11_M23_M34_M36_M40_M49(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M49(Message9_M5_M11_M23_M34_M36_M40_M49&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M49(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M49& operator=(const Message9_M5_M11_M23_M34_M36_M40_M49& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M49& operator=(Message9_M5_M11_M23_M34_M36_M40_M49&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M49& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M49* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M49*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M49_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M49& a, Message9_M5_M11_M23_M34_M36_M40_M49& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M49* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M49* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M49* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M49>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M49& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M49& from) { Message9_M5_M11_M23_M34_M36_M40_M49::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M49* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M49"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M49(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M49(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M49& from);
  Message9_M5_M11_M23_M34_M36_M40_M49(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M49&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M49(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional string f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M49)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M49_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M48_M54 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.M54) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M48_M54() : Message9_M5_M11_M23_M34_M36_M40_M48_M54(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M48_M54() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M48_M54(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M48_M54(const Message9_M5_M11_M23_M34_M36_M40_M48_M54& from) : Message9_M5_M11_M23_M34_M36_M40_M48_M54(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M48_M54(Message9_M5_M11_M23_M34_M36_M40_M48_M54&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M48_M54(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M48_M54& operator=(const Message9_M5_M11_M23_M34_M36_M40_M48_M54& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M48_M54& operator=(Message9_M5_M11_M23_M34_M36_M40_M48_M54&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M48_M54& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M48_M54* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M48_M54*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M48_M54_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M48_M54& a, Message9_M5_M11_M23_M34_M36_M40_M48_M54& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M48_M54* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M48_M54* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M48_M54* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M48_M54>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M48_M54& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M48_M54& from) { Message9_M5_M11_M23_M34_M36_M40_M48_M54::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M48_M54* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.M54"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M48_M54(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M48_M54(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M48_M54& from);
  Message9_M5_M11_M23_M34_M36_M40_M48_M54(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M48_M54&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M48_M54(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional double f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  double f_0() const;
  void set_f_0(double value);

  private:
  double _internal_f_0() const;
  void _internal_set_f_0(double value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.M54)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M48_M54_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    double f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M4_M19_M28 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M4.M19.M28) */ {
 public:
  inline Message9_M4_M19_M28() : Message9_M4_M19_M28(nullptr) {}
  ~Message9_M4_M19_M28() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M4_M19_M28(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M4_M19_M28(const Message9_M4_M19_M28& from) : Message9_M4_M19_M28(nullptr, from) {}
  inline Message9_M4_M19_M28(Message9_M4_M19_M28&& from) noexcept
      : Message9_M4_M19_M28(nullptr, std::move(from)) {}
  inline Message9_M4_M19_M28& operator=(const Message9_M4_M19_M28& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M4_M19_M28& operator=(Message9_M4_M19_M28&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M4_M19_M28& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M4_M19_M28* internal_default_instance() {
    return reinterpret_cast<const Message9_M4_M19_M28*>(
        &_Message9_M4_M19_M28_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(Message9_M4_M19_M28& a, Message9_M4_M19_M28& b) { a.Swap(&b); }
  inline void Swap(Message9_M4_M19_M28* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M4_M19_M28* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M4_M19_M28* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M4_M19_M28>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M4_M19_M28& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M4_M19_M28& from) { Message9_M4_M19_M28::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M4_M19_M28* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M4.M19.M28"; }

 protected:
  explicit Message9_M4_M19_M28(::google::protobuf::Arena* arena);
  Message9_M4_M19_M28(::google::protobuf::Arena* arena, const Message9_M4_M19_M28& from);
  Message9_M4_M19_M28(::google::protobuf::Arena* arena, Message9_M4_M19_M28&& from) noexcept
      : Message9_M4_M19_M28(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional uint32 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::uint32_t f_0() const;
  void set_f_0(::uint32_t value);

  private:
  ::uint32_t _internal_f_0() const;
  void _internal_set_f_0(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M4.M19.M28)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M4_M19_M28_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M3_M21 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M3.M21) */ {
 public:
  inline Message9_M3_M21() : Message9_M3_M21(nullptr) {}
  ~Message9_M3_M21() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M3_M21(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M3_M21(const Message9_M3_M21& from) : Message9_M3_M21(nullptr, from) {}
  inline Message9_M3_M21(Message9_M3_M21&& from) noexcept
      : Message9_M3_M21(nullptr, std::move(from)) {}
  inline Message9_M3_M21& operator=(const Message9_M3_M21& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M3_M21& operator=(Message9_M3_M21&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M3_M21& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M3_M21* internal_default_instance() {
    return reinterpret_cast<const Message9_M3_M21*>(
        &_Message9_M3_M21_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Message9_M3_M21& a, Message9_M3_M21& b) { a.Swap(&b); }
  inline void Swap(Message9_M3_M21* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M3_M21* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M3_M21* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M3_M21>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M3_M21& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M3_M21& from) { Message9_M3_M21::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M3_M21* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M3.M21"; }

 protected:
  explicit Message9_M3_M21(::google::protobuf::Arena* arena);
  Message9_M3_M21(::google::protobuf::Arena* arena, const Message9_M3_M21& from);
  Message9_M3_M21(::google::protobuf::Arena* arena, Message9_M3_M21&& from) noexcept
      : Message9_M3_M21(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_4())));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())), f_2().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())), f_5().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_4()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      sizes_list.push_back(f_2().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      sizes_list.push_back(f_5().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      sizes.push_back(end_addr - start_addr + sizeof(f_4()));
      sizes.push_back(f_2().size());
      sizes.push_back(f_5().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_2(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_5(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_2(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_5(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 3,
    kF5FieldNumber = 8,
    kF0FieldNumber = 1,
    kF1FieldNumber = 2,
    kF3FieldNumber = 5,
    kF4FieldNumber = 6,
  };
  // optional bytes f_2 = 3;
  bool has_f_2() const;
  void clear_f_2() ;
  const std::string& f_2() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_2(Arg_&& arg, Args_... args);
  std::string* mutable_f_2();
  PROTOBUF_NODISCARD std::string* release_f_2();
  void set_allocated_f_2(std::string* value);

  private:
  const std::string& _internal_f_2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_2(
      const std::string& value);
  std::string* _internal_mutable_f_2();

  public:
  // optional string f_5 = 8;
  bool has_f_5() const;
  void clear_f_5() ;
  const std::string& f_5() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_5(Arg_&& arg, Args_... args);
  std::string* mutable_f_5();
  PROTOBUF_NODISCARD std::string* release_f_5();
  void set_allocated_f_5(std::string* value);

  private:
  const std::string& _internal_f_5() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_5(
      const std::string& value);
  std::string* _internal_mutable_f_5();

  public:
  // optional int64 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // optional double f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  double f_1() const;
  void set_f_1(double value);

  private:
  double _internal_f_1() const;
  void _internal_set_f_1(double value);

  public:
  // optional fixed64 f_3 = 5;
  bool has_f_3() const;
  void clear_f_3() ;
  ::uint64_t f_3() const;
  void set_f_3(::uint64_t value);

  private:
  ::uint64_t _internal_f_3() const;
  void _internal_set_f_3(::uint64_t value);

  public:
  // optional bool f_4 = 6;
  bool has_f_4() const;
  void clear_f_4() ;
  bool f_4() const;
  void set_f_4(bool value);

  private:
  bool _internal_f_4() const;
  void _internal_set_f_4(bool value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M3.M21)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M3_M21_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_2_;
    ::google::protobuf::internal::ArenaStringPtr f_5_;
    ::int64_t f_0_;
    double f_1_;
    ::uint64_t f_3_;
    bool f_4_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M3_M20_M29 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M3.M20.M29) */ {
 public:
  inline Message9_M3_M20_M29() : Message9_M3_M20_M29(nullptr) {}
  ~Message9_M3_M20_M29() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M3_M20_M29(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M3_M20_M29(const Message9_M3_M20_M29& from) : Message9_M3_M20_M29(nullptr, from) {}
  inline Message9_M3_M20_M29(Message9_M3_M20_M29&& from) noexcept
      : Message9_M3_M20_M29(nullptr, std::move(from)) {}
  inline Message9_M3_M20_M29& operator=(const Message9_M3_M20_M29& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M3_M20_M29& operator=(Message9_M3_M20_M29&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M3_M20_M29& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M3_M20_M29* internal_default_instance() {
    return reinterpret_cast<const Message9_M3_M20_M29*>(
        &_Message9_M3_M20_M29_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Message9_M3_M20_M29& a, Message9_M3_M20_M29& b) { a.Swap(&b); }
  inline void Swap(Message9_M3_M20_M29* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M3_M20_M29* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M3_M20_M29* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M3_M20_M29>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M3_M20_M29& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M3_M20_M29& from) { Message9_M3_M20_M29::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M3_M20_M29* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M3.M20.M29"; }

 protected:
  explicit Message9_M3_M20_M29(::google::protobuf::Arena* arena);
  Message9_M3_M20_M29(::google::protobuf::Arena* arena, const Message9_M3_M20_M29& from);
  Message9_M3_M20_M29(::google::protobuf::Arena* arena, Message9_M3_M20_M29&& from) noexcept
      : Message9_M3_M20_M29(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using E15 = Message9_M3_M20_M29_E15;
  static constexpr E15 E15_UNSPECIFIED = Message9_M3_M20_M29_E15_E15_UNSPECIFIED;
  static constexpr E15 E15_CONST_1 = Message9_M3_M20_M29_E15_E15_CONST_1;
  static constexpr E15 E15_CONST_2 = Message9_M3_M20_M29_E15_E15_CONST_2;
  static constexpr E15 E15_CONST_3 = Message9_M3_M20_M29_E15_E15_CONST_3;
  static constexpr E15 E15_CONST_4 = Message9_M3_M20_M29_E15_E15_CONST_4;
  static constexpr E15 E15_CONST_5 = Message9_M3_M20_M29_E15_E15_CONST_5;
  static inline bool E15_IsValid(int value) {
    return Message9_M3_M20_M29_E15_IsValid(value);
  }
  static constexpr E15 E15_MIN = Message9_M3_M20_M29_E15_E15_MIN;
  static constexpr E15 E15_MAX = Message9_M3_M20_M29_E15_E15_MAX;
  static constexpr int E15_ARRAYSIZE = Message9_M3_M20_M29_E15_E15_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E15_descriptor() {
    return Message9_M3_M20_M29_E15_descriptor();
  }
  template <typename T>
  static inline const std::string& E15_Name(T value) {
    return Message9_M3_M20_M29_E15_Name(value);
  }
  static inline bool E15_Parse(absl::string_view name, E15* value) {
    return Message9_M3_M20_M29_E15_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
  };
  // optional .fleetbench.proto.Message9.M3.M20.M29.E15 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::fleetbench::proto::Message9_M3_M20_M29_E15 f_0() const;
  void set_f_0(::fleetbench::proto::Message9_M3_M20_M29_E15 value);

  private:
  ::fleetbench::proto::Message9_M3_M20_M29_E15 _internal_f_0() const;
  void _internal_set_f_0(::fleetbench::proto::Message9_M3_M20_M29_E15 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M3.M20.M29)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M3_M20_M29_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    int f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M3_M14_M27 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M3.M14.M27) */ {
 public:
  inline Message9_M3_M14_M27() : Message9_M3_M14_M27(nullptr) {}
  ~Message9_M3_M14_M27() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M3_M14_M27(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M3_M14_M27(const Message9_M3_M14_M27& from) : Message9_M3_M14_M27(nullptr, from) {}
  inline Message9_M3_M14_M27(Message9_M3_M14_M27&& from) noexcept
      : Message9_M3_M14_M27(nullptr, std::move(from)) {}
  inline Message9_M3_M14_M27& operator=(const Message9_M3_M14_M27& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M3_M14_M27& operator=(Message9_M3_M14_M27&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M3_M14_M27& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M3_M14_M27* internal_default_instance() {
    return reinterpret_cast<const Message9_M3_M14_M27*>(
        &_Message9_M3_M14_M27_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(Message9_M3_M14_M27& a, Message9_M3_M14_M27& b) { a.Swap(&b); }
  inline void Swap(Message9_M3_M14_M27* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M3_M14_M27* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M3_M14_M27* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M3_M14_M27>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M3_M14_M27& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M3_M14_M27& from) { Message9_M3_M14_M27::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M3_M14_M27* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M3.M14.M27"; }

 protected:
  explicit Message9_M3_M14_M27(::google::protobuf::Arena* arena);
  Message9_M3_M14_M27(::google::protobuf::Arena* arena, const Message9_M3_M14_M27& from);
  Message9_M3_M14_M27(::google::protobuf::Arena* arena, Message9_M3_M14_M27&& from) noexcept
      : Message9_M3_M14_M27(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional bool f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  bool f_0() const;
  void set_f_0(bool value);

  private:
  bool _internal_f_0() const;
  void _internal_set_f_0(bool value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M3.M14.M27)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M3_M14_M27_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    bool f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M3_M13_M24_M35 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M3.M13.M24.M35) */ {
 public:
  inline Message9_M3_M13_M24_M35() : Message9_M3_M13_M24_M35(nullptr) {}
  ~Message9_M3_M13_M24_M35() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M3_M13_M24_M35(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M3_M13_M24_M35(const Message9_M3_M13_M24_M35& from) : Message9_M3_M13_M24_M35(nullptr, from) {}
  inline Message9_M3_M13_M24_M35(Message9_M3_M13_M24_M35&& from) noexcept
      : Message9_M3_M13_M24_M35(nullptr, std::move(from)) {}
  inline Message9_M3_M13_M24_M35& operator=(const Message9_M3_M13_M24_M35& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M3_M13_M24_M35& operator=(Message9_M3_M13_M24_M35&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M3_M13_M24_M35& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M3_M13_M24_M35* internal_default_instance() {
    return reinterpret_cast<const Message9_M3_M13_M24_M35*>(
        &_Message9_M3_M13_M24_M35_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Message9_M3_M13_M24_M35& a, Message9_M3_M13_M24_M35& b) { a.Swap(&b); }
  inline void Swap(Message9_M3_M13_M24_M35* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M3_M13_M24_M35* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M3_M13_M24_M35* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M3_M13_M24_M35>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M3_M13_M24_M35& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M3_M13_M24_M35& from) { Message9_M3_M13_M24_M35::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M3_M13_M24_M35* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M3.M13.M24.M35"; }

 protected:
  explicit Message9_M3_M13_M24_M35(::google::protobuf::Arena* arena);
  Message9_M3_M13_M24_M35(::google::protobuf::Arena* arena, const Message9_M3_M13_M24_M35& from);
  Message9_M3_M13_M24_M35(::google::protobuf::Arena* arena, Message9_M3_M13_M24_M35&& from) noexcept
      : Message9_M3_M13_M24_M35(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using E19 = Message9_M3_M13_M24_M35_E19;
  static constexpr E19 E19_UNSPECIFIED = Message9_M3_M13_M24_M35_E19_E19_UNSPECIFIED;
  static constexpr E19 E19_CONST_1 = Message9_M3_M13_M24_M35_E19_E19_CONST_1;
  static constexpr E19 E19_CONST_2 = Message9_M3_M13_M24_M35_E19_E19_CONST_2;
  static constexpr E19 E19_CONST_3 = Message9_M3_M13_M24_M35_E19_E19_CONST_3;
  static constexpr E19 E19_CONST_4 = Message9_M3_M13_M24_M35_E19_E19_CONST_4;
  static constexpr E19 E19_CONST_5 = Message9_M3_M13_M24_M35_E19_E19_CONST_5;
  static inline bool E19_IsValid(int value) {
    return Message9_M3_M13_M24_M35_E19_IsValid(value);
  }
  static constexpr E19 E19_MIN = Message9_M3_M13_M24_M35_E19_E19_MIN;
  static constexpr E19 E19_MAX = Message9_M3_M13_M24_M35_E19_E19_MAX;
  static constexpr int E19_ARRAYSIZE = Message9_M3_M13_M24_M35_E19_E19_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E19_descriptor() {
    return Message9_M3_M13_M24_M35_E19_descriptor();
  }
  template <typename T>
  static inline const std::string& E19_Name(T value) {
    return Message9_M3_M13_M24_M35_E19_Name(value);
  }
  static inline bool E19_Parse(absl::string_view name, E19* value) {
    return Message9_M3_M13_M24_M35_E19_Parse(name, value);
  }
  using E20 = Message9_M3_M13_M24_M35_E20;
  static constexpr E20 E20_UNSPECIFIED = Message9_M3_M13_M24_M35_E20_E20_UNSPECIFIED;
  static constexpr E20 E20_CONST_1 = Message9_M3_M13_M24_M35_E20_E20_CONST_1;
  static constexpr E20 E20_CONST_2 = Message9_M3_M13_M24_M35_E20_E20_CONST_2;
  static constexpr E20 E20_CONST_3 = Message9_M3_M13_M24_M35_E20_E20_CONST_3;
  static constexpr E20 E20_CONST_4 = Message9_M3_M13_M24_M35_E20_E20_CONST_4;
  static constexpr E20 E20_CONST_5 = Message9_M3_M13_M24_M35_E20_E20_CONST_5;
  static inline bool E20_IsValid(int value) {
    return Message9_M3_M13_M24_M35_E20_IsValid(value);
  }
  static constexpr E20 E20_MIN = Message9_M3_M13_M24_M35_E20_E20_MIN;
  static constexpr E20 E20_MAX = Message9_M3_M13_M24_M35_E20_E20_MAX;
  static constexpr int E20_ARRAYSIZE = Message9_M3_M13_M24_M35_E20_E20_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E20_descriptor() {
    return Message9_M3_M13_M24_M35_E20_descriptor();
  }
  template <typename T>
  static inline const std::string& E20_Name(T value) {
    return Message9_M3_M13_M24_M35_E20_Name(value);
  }
  static inline bool E20_Parse(absl::string_view name, E20* value) {
    return Message9_M3_M13_M24_M35_E20_Parse(name, value);
  }
  using E21 = Message9_M3_M13_M24_M35_E21;
  static constexpr E21 E21_UNSPECIFIED = Message9_M3_M13_M24_M35_E21_E21_UNSPECIFIED;
  static constexpr E21 E21_CONST_1 = Message9_M3_M13_M24_M35_E21_E21_CONST_1;
  static constexpr E21 E21_CONST_2 = Message9_M3_M13_M24_M35_E21_E21_CONST_2;
  static constexpr E21 E21_CONST_3 = Message9_M3_M13_M24_M35_E21_E21_CONST_3;
  static constexpr E21 E21_CONST_4 = Message9_M3_M13_M24_M35_E21_E21_CONST_4;
  static constexpr E21 E21_CONST_5 = Message9_M3_M13_M24_M35_E21_E21_CONST_5;
  static inline bool E21_IsValid(int value) {
    return Message9_M3_M13_M24_M35_E21_IsValid(value);
  }
  static constexpr E21 E21_MIN = Message9_M3_M13_M24_M35_E21_E21_MIN;
  static constexpr E21 E21_MAX = Message9_M3_M13_M24_M35_E21_E21_MAX;
  static constexpr int E21_ARRAYSIZE = Message9_M3_M13_M24_M35_E21_E21_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E21_descriptor() {
    return Message9_M3_M13_M24_M35_E21_descriptor();
  }
  template <typename T>
  static inline const std::string& E21_Name(T value) {
    return Message9_M3_M13_M24_M35_E21_Name(value);
  }
  static inline bool E21_Parse(absl::string_view name, E21* value) {
    return Message9_M3_M13_M24_M35_E21_Parse(name, value);
  }
  using E22 = Message9_M3_M13_M24_M35_E22;
  static constexpr E22 E22_UNSPECIFIED = Message9_M3_M13_M24_M35_E22_E22_UNSPECIFIED;
  static constexpr E22 E22_CONST_1 = Message9_M3_M13_M24_M35_E22_E22_CONST_1;
  static constexpr E22 E22_CONST_2 = Message9_M3_M13_M24_M35_E22_E22_CONST_2;
  static constexpr E22 E22_CONST_3 = Message9_M3_M13_M24_M35_E22_E22_CONST_3;
  static constexpr E22 E22_CONST_4 = Message9_M3_M13_M24_M35_E22_E22_CONST_4;
  static constexpr E22 E22_CONST_5 = Message9_M3_M13_M24_M35_E22_E22_CONST_5;
  static inline bool E22_IsValid(int value) {
    return Message9_M3_M13_M24_M35_E22_IsValid(value);
  }
  static constexpr E22 E22_MIN = Message9_M3_M13_M24_M35_E22_E22_MIN;
  static constexpr E22 E22_MAX = Message9_M3_M13_M24_M35_E22_E22_MAX;
  static constexpr int E22_ARRAYSIZE = Message9_M3_M13_M24_M35_E22_E22_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E22_descriptor() {
    return Message9_M3_M13_M24_M35_E22_descriptor();
  }
  template <typename T>
  static inline const std::string& E22_Name(T value) {
    return Message9_M3_M13_M24_M35_E22_Name(value);
  }
  static inline bool E22_Parse(absl::string_view name, E22* value) {
    return Message9_M3_M13_M24_M35_E22_Parse(name, value);
  }
  using E23 = Message9_M3_M13_M24_M35_E23;
  static constexpr E23 E23_UNSPECIFIED = Message9_M3_M13_M24_M35_E23_E23_UNSPECIFIED;
  static constexpr E23 E23_CONST_1 = Message9_M3_M13_M24_M35_E23_E23_CONST_1;
  static constexpr E23 E23_CONST_2 = Message9_M3_M13_M24_M35_E23_E23_CONST_2;
  static constexpr E23 E23_CONST_3 = Message9_M3_M13_M24_M35_E23_E23_CONST_3;
  static constexpr E23 E23_CONST_4 = Message9_M3_M13_M24_M35_E23_E23_CONST_4;
  static constexpr E23 E23_CONST_5 = Message9_M3_M13_M24_M35_E23_E23_CONST_5;
  static inline bool E23_IsValid(int value) {
    return Message9_M3_M13_M24_M35_E23_IsValid(value);
  }
  static constexpr E23 E23_MIN = Message9_M3_M13_M24_M35_E23_E23_MIN;
  static constexpr E23 E23_MAX = Message9_M3_M13_M24_M35_E23_E23_MAX;
  static constexpr int E23_ARRAYSIZE = Message9_M3_M13_M24_M35_E23_E23_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E23_descriptor() {
    return Message9_M3_M13_M24_M35_E23_descriptor();
  }
  template <typename T>
  static inline const std::string& E23_Name(T value) {
    return Message9_M3_M13_M24_M35_E23_Name(value);
  }
  static inline bool E23_Parse(absl::string_view name, E23* value) {
    return Message9_M3_M13_M24_M35_E23_Parse(name, value);
  }
  using E24 = Message9_M3_M13_M24_M35_E24;
  static constexpr E24 E24_UNSPECIFIED = Message9_M3_M13_M24_M35_E24_E24_UNSPECIFIED;
  static constexpr E24 E24_CONST_1 = Message9_M3_M13_M24_M35_E24_E24_CONST_1;
  static constexpr E24 E24_CONST_2 = Message9_M3_M13_M24_M35_E24_E24_CONST_2;
  static constexpr E24 E24_CONST_3 = Message9_M3_M13_M24_M35_E24_E24_CONST_3;
  static constexpr E24 E24_CONST_4 = Message9_M3_M13_M24_M35_E24_E24_CONST_4;
  static constexpr E24 E24_CONST_5 = Message9_M3_M13_M24_M35_E24_E24_CONST_5;
  static inline bool E24_IsValid(int value) {
    return Message9_M3_M13_M24_M35_E24_IsValid(value);
  }
  static constexpr E24 E24_MIN = Message9_M3_M13_M24_M35_E24_E24_MIN;
  static constexpr E24 E24_MAX = Message9_M3_M13_M24_M35_E24_E24_MAX;
  static constexpr int E24_ARRAYSIZE = Message9_M3_M13_M24_M35_E24_E24_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E24_descriptor() {
    return Message9_M3_M13_M24_M35_E24_descriptor();
  }
  template <typename T>
  static inline const std::string& E24_Name(T value) {
    return Message9_M3_M13_M24_M35_E24_Name(value);
  }
  static inline bool E24_Parse(absl::string_view name, E24* value) {
    return Message9_M3_M13_M24_M35_E24_Parse(name, value);
  }
  using E25 = Message9_M3_M13_M24_M35_E25;
  static constexpr E25 E25_UNSPECIFIED = Message9_M3_M13_M24_M35_E25_E25_UNSPECIFIED;
  static constexpr E25 E25_CONST_1 = Message9_M3_M13_M24_M35_E25_E25_CONST_1;
  static constexpr E25 E25_CONST_2 = Message9_M3_M13_M24_M35_E25_E25_CONST_2;
  static constexpr E25 E25_CONST_3 = Message9_M3_M13_M24_M35_E25_E25_CONST_3;
  static constexpr E25 E25_CONST_4 = Message9_M3_M13_M24_M35_E25_E25_CONST_4;
  static constexpr E25 E25_CONST_5 = Message9_M3_M13_M24_M35_E25_E25_CONST_5;
  static inline bool E25_IsValid(int value) {
    return Message9_M3_M13_M24_M35_E25_IsValid(value);
  }
  static constexpr E25 E25_MIN = Message9_M3_M13_M24_M35_E25_E25_MIN;
  static constexpr E25 E25_MAX = Message9_M3_M13_M24_M35_E25_E25_MAX;
  static constexpr int E25_ARRAYSIZE = Message9_M3_M13_M24_M35_E25_E25_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E25_descriptor() {
    return Message9_M3_M13_M24_M35_E25_descriptor();
  }
  template <typename T>
  static inline const std::string& E25_Name(T value) {
    return Message9_M3_M13_M24_M35_E25_Name(value);
  }
  static inline bool E25_Parse(absl::string_view name, E25* value) {
    return Message9_M3_M13_M24_M35_E25_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_60_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_60())));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_26().data())), f_26().size() * sizeof(::int32_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_32().data())), f_32().size() * sizeof(::int64_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())), f_5().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_6().c_str())), f_6().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())), f_10().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())), f_11().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_15().c_str())), f_15().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_17().c_str())), f_17().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_25().c_str())), f_25().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_27().c_str())), f_27().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_30().c_str())), f_30().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_44().c_str())), f_44().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_46().c_str())), f_46().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_55().c_str())), f_55().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_60_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_60()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_26().data())));
      sizes_list.push_back(f_26().size() * sizeof(::int32_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_32().data())));
      sizes_list.push_back(f_32().size() * sizeof(::int64_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      sizes_list.push_back(f_5().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_6().c_str())));
      sizes_list.push_back(f_6().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      sizes_list.push_back(f_10().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())));
      sizes_list.push_back(f_11().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_15().c_str())));
      sizes_list.push_back(f_15().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_17().c_str())));
      sizes_list.push_back(f_17().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_25().c_str())));
      sizes_list.push_back(f_25().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_27().c_str())));
      sizes_list.push_back(f_27().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_30().c_str())));
      sizes_list.push_back(f_30().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_44().c_str())));
      sizes_list.push_back(f_44().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_46().c_str())));
      sizes_list.push_back(f_46().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_55().c_str())));
      sizes_list.push_back(f_55().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_60_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_26().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_32().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_6().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_15().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_17().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_25().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_27().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_30().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_44().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_46().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_55().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_60_);
      sizes.push_back(end_addr - start_addr + sizeof(f_60()));
      sizes.push_back(f_26().size() * sizeof(::int32_t));
      sizes.push_back(f_32().size() * sizeof(::int64_t));
      sizes.push_back(f_5().size());
      sizes.push_back(f_6().size());
      sizes.push_back(f_10().size());
      sizes.push_back(f_11().size());
      sizes.push_back(f_15().size());
      sizes.push_back(f_17().size());
      sizes.push_back(f_25().size());
      sizes.push_back(f_27().size());
      sizes.push_back(f_30().size());
      sizes.push_back(f_44().size());
      sizes.push_back(f_46().size());
      sizes.push_back(f_55().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_60_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      mutable_f_26()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_26().data())));
      mutable_f_32()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_32().data())));
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_5(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_6(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_6().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_10(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_11(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_15(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_15().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_17(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_17().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_25(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_25().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_27(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_27().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_30(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_30().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_44(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_44().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_46(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_46().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_55(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_55().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      mutable_f_26()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      mutable_f_32()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_5(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_6(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_10(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_11(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_15(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_17(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_25(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_27(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_30(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_44(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_46(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_55(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF26FieldNumber = 44,
    kF32FieldNumber = 53,
    kF5FieldNumber = 7,
    kF6FieldNumber = 9,
    kF10FieldNumber = 15,
    kF11FieldNumber = 16,
    kF15FieldNumber = 21,
    kF17FieldNumber = 23,
    kF25FieldNumber = 41,
    kF27FieldNumber = 46,
    kF30FieldNumber = 51,
    kF44FieldNumber = 74,
    kF46FieldNumber = 77,
    kF55FieldNumber = 89,
    kF0FieldNumber = 2,
    kF2FieldNumber = 4,
    kF1FieldNumber = 3,
    kF4FieldNumber = 6,
    kF3FieldNumber = 5,
    kF8FieldNumber = 12,
    kF7FieldNumber = 11,
    kF9FieldNumber = 14,
    kF12FieldNumber = 17,
    kF13FieldNumber = 18,
    kF14FieldNumber = 20,
    kF16FieldNumber = 22,
    kF18FieldNumber = 26,
    kF19FieldNumber = 29,
    kF21FieldNumber = 35,
    kF20FieldNumber = 33,
    kF22FieldNumber = 37,
    kF23FieldNumber = 38,
    kF24FieldNumber = 40,
    kF28FieldNumber = 47,
    kF29FieldNumber = 49,
    kF31FieldNumber = 52,
    kF34FieldNumber = 56,
    kF33FieldNumber = 54,
    kF35FieldNumber = 58,
    kF37FieldNumber = 60,
    kF36FieldNumber = 59,
    kF38FieldNumber = 64,
    kF39FieldNumber = 65,
    kF40FieldNumber = 68,
    kF41FieldNumber = 69,
    kF42FieldNumber = 71,
    kF49FieldNumber = 83,
    kF43FieldNumber = 72,
    kF45FieldNumber = 75,
    kF47FieldNumber = 79,
    kF48FieldNumber = 80,
    kF50FieldNumber = 84,
    kF51FieldNumber = 85,
    kF52FieldNumber = 86,
    kF53FieldNumber = 87,
    kF56FieldNumber = 91,
    kF54FieldNumber = 88,
    kF57FieldNumber = 94,
    kF58FieldNumber = 95,
    kF59FieldNumber = 96,
    kF61FieldNumber = 98,
    kF60FieldNumber = 97,
  };
  // repeated int32 f_26 = 44 [packed = true];
  int f_26_size() const;
  private:
  int _internal_f_26_size() const;

  public:
  void clear_f_26() ;
  ::int32_t f_26(int index) const;
  void set_f_26(int index, ::int32_t value);
  void add_f_26(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& f_26() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_f_26();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_f_26() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_f_26();

  public:
  // repeated int64 f_32 = 53 [packed = true];
  int f_32_size() const;
  private:
  int _internal_f_32_size() const;

  public:
  void clear_f_32() ;
  ::int64_t f_32(int index) const;
  void set_f_32(int index, ::int64_t value);
  void add_f_32(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& f_32() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_f_32();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_f_32() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_f_32();

  public:
  // optional bytes f_5 = 7;
  bool has_f_5() const;
  void clear_f_5() ;
  const std::string& f_5() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_5(Arg_&& arg, Args_... args);
  std::string* mutable_f_5();
  PROTOBUF_NODISCARD std::string* release_f_5();
  void set_allocated_f_5(std::string* value);

  private:
  const std::string& _internal_f_5() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_5(
      const std::string& value);
  std::string* _internal_mutable_f_5();

  public:
  // optional bytes f_6 = 9;
  bool has_f_6() const;
  void clear_f_6() ;
  const std::string& f_6() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_6(Arg_&& arg, Args_... args);
  std::string* mutable_f_6();
  PROTOBUF_NODISCARD std::string* release_f_6();
  void set_allocated_f_6(std::string* value);

  private:
  const std::string& _internal_f_6() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_6(
      const std::string& value);
  std::string* _internal_mutable_f_6();

  public:
  // optional string f_10 = 15;
  bool has_f_10() const;
  void clear_f_10() ;
  const std::string& f_10() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_10(Arg_&& arg, Args_... args);
  std::string* mutable_f_10();
  PROTOBUF_NODISCARD std::string* release_f_10();
  void set_allocated_f_10(std::string* value);

  private:
  const std::string& _internal_f_10() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_10(
      const std::string& value);
  std::string* _internal_mutable_f_10();

  public:
  // optional bytes f_11 = 16;
  bool has_f_11() const;
  void clear_f_11() ;
  const std::string& f_11() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_11(Arg_&& arg, Args_... args);
  std::string* mutable_f_11();
  PROTOBUF_NODISCARD std::string* release_f_11();
  void set_allocated_f_11(std::string* value);

  private:
  const std::string& _internal_f_11() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_11(
      const std::string& value);
  std::string* _internal_mutable_f_11();

  public:
  // optional string f_15 = 21;
  bool has_f_15() const;
  void clear_f_15() ;
  const std::string& f_15() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_15(Arg_&& arg, Args_... args);
  std::string* mutable_f_15();
  PROTOBUF_NODISCARD std::string* release_f_15();
  void set_allocated_f_15(std::string* value);

  private:
  const std::string& _internal_f_15() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_15(
      const std::string& value);
  std::string* _internal_mutable_f_15();

  public:
  // optional string f_17 = 23;
  bool has_f_17() const;
  void clear_f_17() ;
  const std::string& f_17() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_17(Arg_&& arg, Args_... args);
  std::string* mutable_f_17();
  PROTOBUF_NODISCARD std::string* release_f_17();
  void set_allocated_f_17(std::string* value);

  private:
  const std::string& _internal_f_17() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_17(
      const std::string& value);
  std::string* _internal_mutable_f_17();

  public:
  // optional string f_25 = 41;
  bool has_f_25() const;
  void clear_f_25() ;
  const std::string& f_25() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_25(Arg_&& arg, Args_... args);
  std::string* mutable_f_25();
  PROTOBUF_NODISCARD std::string* release_f_25();
  void set_allocated_f_25(std::string* value);

  private:
  const std::string& _internal_f_25() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_25(
      const std::string& value);
  std::string* _internal_mutable_f_25();

  public:
  // optional bytes f_27 = 46;
  bool has_f_27() const;
  void clear_f_27() ;
  const std::string& f_27() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_27(Arg_&& arg, Args_... args);
  std::string* mutable_f_27();
  PROTOBUF_NODISCARD std::string* release_f_27();
  void set_allocated_f_27(std::string* value);

  private:
  const std::string& _internal_f_27() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_27(
      const std::string& value);
  std::string* _internal_mutable_f_27();

  public:
  // optional bytes f_30 = 51;
  bool has_f_30() const;
  void clear_f_30() ;
  const std::string& f_30() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_30(Arg_&& arg, Args_... args);
  std::string* mutable_f_30();
  PROTOBUF_NODISCARD std::string* release_f_30();
  void set_allocated_f_30(std::string* value);

  private:
  const std::string& _internal_f_30() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_30(
      const std::string& value);
  std::string* _internal_mutable_f_30();

  public:
  // optional string f_44 = 74;
  bool has_f_44() const;
  void clear_f_44() ;
  const std::string& f_44() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_44(Arg_&& arg, Args_... args);
  std::string* mutable_f_44();
  PROTOBUF_NODISCARD std::string* release_f_44();
  void set_allocated_f_44(std::string* value);

  private:
  const std::string& _internal_f_44() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_44(
      const std::string& value);
  std::string* _internal_mutable_f_44();

  public:
  // optional string f_46 = 77;
  bool has_f_46() const;
  void clear_f_46() ;
  const std::string& f_46() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_46(Arg_&& arg, Args_... args);
  std::string* mutable_f_46();
  PROTOBUF_NODISCARD std::string* release_f_46();
  void set_allocated_f_46(std::string* value);

  private:
  const std::string& _internal_f_46() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_46(
      const std::string& value);
  std::string* _internal_mutable_f_46();

  public:
  // optional string f_55 = 89;
  bool has_f_55() const;
  void clear_f_55() ;
  const std::string& f_55() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_55(Arg_&& arg, Args_... args);
  std::string* mutable_f_55();
  PROTOBUF_NODISCARD std::string* release_f_55();
  void set_allocated_f_55(std::string* value);

  private:
  const std::string& _internal_f_55() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_55(
      const std::string& value);
  std::string* _internal_mutable_f_55();

  public:
  // optional int64 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // optional int64 f_2 = 4;
  bool has_f_2() const;
  void clear_f_2() ;
  ::int64_t f_2() const;
  void set_f_2(::int64_t value);

  private:
  ::int64_t _internal_f_2() const;
  void _internal_set_f_2(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.M35.E19 f_1 = 3;
  bool has_f_1() const;
  void clear_f_1() ;
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E19 f_1() const;
  void set_f_1(::fleetbench::proto::Message9_M3_M13_M24_M35_E19 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E19 _internal_f_1() const;
  void _internal_set_f_1(::fleetbench::proto::Message9_M3_M13_M24_M35_E19 value);

  public:
  // optional fixed32 f_4 = 6;
  bool has_f_4() const;
  void clear_f_4() ;
  ::uint32_t f_4() const;
  void set_f_4(::uint32_t value);

  private:
  ::uint32_t _internal_f_4() const;
  void _internal_set_f_4(::uint32_t value);

  public:
  // optional int64 f_3 = 5;
  bool has_f_3() const;
  void clear_f_3() ;
  ::int64_t f_3() const;
  void set_f_3(::int64_t value);

  private:
  ::int64_t _internal_f_3() const;
  void _internal_set_f_3(::int64_t value);

  public:
  // optional fixed64 f_8 = 12;
  bool has_f_8() const;
  void clear_f_8() ;
  ::uint64_t f_8() const;
  void set_f_8(::uint64_t value);

  private:
  ::uint64_t _internal_f_8() const;
  void _internal_set_f_8(::uint64_t value);

  public:
  // optional float f_7 = 11;
  bool has_f_7() const;
  void clear_f_7() ;
  float f_7() const;
  void set_f_7(float value);

  private:
  float _internal_f_7() const;
  void _internal_set_f_7(float value);

  public:
  // optional float f_9 = 14;
  bool has_f_9() const;
  void clear_f_9() ;
  float f_9() const;
  void set_f_9(float value);

  private:
  float _internal_f_9() const;
  void _internal_set_f_9(float value);

  public:
  // optional fixed32 f_12 = 17;
  bool has_f_12() const;
  void clear_f_12() ;
  ::uint32_t f_12() const;
  void set_f_12(::uint32_t value);

  private:
  ::uint32_t _internal_f_12() const;
  void _internal_set_f_12(::uint32_t value);

  public:
  // optional int32 f_13 = 18;
  bool has_f_13() const;
  void clear_f_13() ;
  ::int32_t f_13() const;
  void set_f_13(::int32_t value);

  private:
  ::int32_t _internal_f_13() const;
  void _internal_set_f_13(::int32_t value);

  public:
  // optional double f_14 = 20;
  bool has_f_14() const;
  void clear_f_14() ;
  double f_14() const;
  void set_f_14(double value);

  private:
  double _internal_f_14() const;
  void _internal_set_f_14(double value);

  public:
  // optional int64 f_16 = 22;
  bool has_f_16() const;
  void clear_f_16() ;
  ::int64_t f_16() const;
  void set_f_16(::int64_t value);

  private:
  ::int64_t _internal_f_16() const;
  void _internal_set_f_16(::int64_t value);

  public:
  // optional uint64 f_18 = 26;
  bool has_f_18() const;
  void clear_f_18() ;
  ::uint64_t f_18() const;
  void set_f_18(::uint64_t value);

  private:
  ::uint64_t _internal_f_18() const;
  void _internal_set_f_18(::uint64_t value);

  public:
  // optional uint64 f_19 = 29;
  bool has_f_19() const;
  void clear_f_19() ;
  ::uint64_t f_19() const;
  void set_f_19(::uint64_t value);

  private:
  ::uint64_t _internal_f_19() const;
  void _internal_set_f_19(::uint64_t value);

  public:
  // optional double f_21 = 35;
  bool has_f_21() const;
  void clear_f_21() ;
  double f_21() const;
  void set_f_21(double value);

  private:
  double _internal_f_21() const;
  void _internal_set_f_21(double value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.M35.E20 f_20 = 33;
  bool has_f_20() const;
  void clear_f_20() ;
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E20 f_20() const;
  void set_f_20(::fleetbench::proto::Message9_M3_M13_M24_M35_E20 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E20 _internal_f_20() const;
  void _internal_set_f_20(::fleetbench::proto::Message9_M3_M13_M24_M35_E20 value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.M35.E21 f_22 = 37;
  bool has_f_22() const;
  void clear_f_22() ;
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E21 f_22() const;
  void set_f_22(::fleetbench::proto::Message9_M3_M13_M24_M35_E21 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E21 _internal_f_22() const;
  void _internal_set_f_22(::fleetbench::proto::Message9_M3_M13_M24_M35_E21 value);

  public:
  // optional int64 f_23 = 38;
  bool has_f_23() const;
  void clear_f_23() ;
  ::int64_t f_23() const;
  void set_f_23(::int64_t value);

  private:
  ::int64_t _internal_f_23() const;
  void _internal_set_f_23(::int64_t value);

  public:
  // optional int32 f_24 = 40;
  bool has_f_24() const;
  void clear_f_24() ;
  ::int32_t f_24() const;
  void set_f_24(::int32_t value);

  private:
  ::int32_t _internal_f_24() const;
  void _internal_set_f_24(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.M35.E22 f_28 = 47;
  bool has_f_28() const;
  void clear_f_28() ;
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E22 f_28() const;
  void set_f_28(::fleetbench::proto::Message9_M3_M13_M24_M35_E22 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E22 _internal_f_28() const;
  void _internal_set_f_28(::fleetbench::proto::Message9_M3_M13_M24_M35_E22 value);

  public:
  // optional int32 f_29 = 49;
  bool has_f_29() const;
  void clear_f_29() ;
  ::int32_t f_29() const;
  void set_f_29(::int32_t value);

  private:
  ::int32_t _internal_f_29() const;
  void _internal_set_f_29(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.M35.E23 f_31 = 52;
  bool has_f_31() const;
  void clear_f_31() ;
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E23 f_31() const;
  void set_f_31(::fleetbench::proto::Message9_M3_M13_M24_M35_E23 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E23 _internal_f_31() const;
  void _internal_set_f_31(::fleetbench::proto::Message9_M3_M13_M24_M35_E23 value);

  public:
  // optional int64 f_34 = 56;
  bool has_f_34() const;
  void clear_f_34() ;
  ::int64_t f_34() const;
  void set_f_34(::int64_t value);

  private:
  ::int64_t _internal_f_34() const;
  void _internal_set_f_34(::int64_t value);

  public:
  // optional int32 f_33 = 54;
  bool has_f_33() const;
  void clear_f_33() ;
  ::int32_t f_33() const;
  void set_f_33(::int32_t value);

  private:
  ::int32_t _internal_f_33() const;
  void _internal_set_f_33(::int32_t value);

  public:
  // optional fixed32 f_35 = 58;
  bool has_f_35() const;
  void clear_f_35() ;
  ::uint32_t f_35() const;
  void set_f_35(::uint32_t value);

  private:
  ::uint32_t _internal_f_35() const;
  void _internal_set_f_35(::uint32_t value);

  public:
  // optional int64 f_37 = 60;
  bool has_f_37() const;
  void clear_f_37() ;
  ::int64_t f_37() const;
  void set_f_37(::int64_t value);

  private:
  ::int64_t _internal_f_37() const;
  void _internal_set_f_37(::int64_t value);

  public:
  // optional float f_36 = 59;
  bool has_f_36() const;
  void clear_f_36() ;
  float f_36() const;
  void set_f_36(float value);

  private:
  float _internal_f_36() const;
  void _internal_set_f_36(float value);

  public:
  // optional int32 f_38 = 64;
  bool has_f_38() const;
  void clear_f_38() ;
  ::int32_t f_38() const;
  void set_f_38(::int32_t value);

  private:
  ::int32_t _internal_f_38() const;
  void _internal_set_f_38(::int32_t value);

  public:
  // optional float f_39 = 65;
  bool has_f_39() const;
  void clear_f_39() ;
  float f_39() const;
  void set_f_39(float value);

  private:
  float _internal_f_39() const;
  void _internal_set_f_39(float value);

  public:
  // optional bool f_40 = 68;
  bool has_f_40() const;
  void clear_f_40() ;
  bool f_40() const;
  void set_f_40(bool value);

  private:
  bool _internal_f_40() const;
  void _internal_set_f_40(bool value);

  public:
  // optional bool f_41 = 69;
  bool has_f_41() const;
  void clear_f_41() ;
  bool f_41() const;
  void set_f_41(bool value);

  private:
  bool _internal_f_41() const;
  void _internal_set_f_41(bool value);

  public:
  // optional bool f_42 = 71;
  bool has_f_42() const;
  void clear_f_42() ;
  bool f_42() const;
  void set_f_42(bool value);

  private:
  bool _internal_f_42() const;
  void _internal_set_f_42(bool value);

  public:
  // optional bool f_49 = 83;
  bool has_f_49() const;
  void clear_f_49() ;
  bool f_49() const;
  void set_f_49(bool value);

  private:
  bool _internal_f_49() const;
  void _internal_set_f_49(bool value);

  public:
  // optional int64 f_43 = 72;
  bool has_f_43() const;
  void clear_f_43() ;
  ::int64_t f_43() const;
  void set_f_43(::int64_t value);

  private:
  ::int64_t _internal_f_43() const;
  void _internal_set_f_43(::int64_t value);

  public:
  // optional float f_45 = 75;
  bool has_f_45() const;
  void clear_f_45() ;
  float f_45() const;
  void set_f_45(float value);

  private:
  float _internal_f_45() const;
  void _internal_set_f_45(float value);

  public:
  // optional int32 f_47 = 79;
  bool has_f_47() const;
  void clear_f_47() ;
  ::int32_t f_47() const;
  void set_f_47(::int32_t value);

  private:
  ::int32_t _internal_f_47() const;
  void _internal_set_f_47(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.M35.E24 f_48 = 80;
  bool has_f_48() const;
  void clear_f_48() ;
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E24 f_48() const;
  void set_f_48(::fleetbench::proto::Message9_M3_M13_M24_M35_E24 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E24 _internal_f_48() const;
  void _internal_set_f_48(::fleetbench::proto::Message9_M3_M13_M24_M35_E24 value);

  public:
  // optional fixed32 f_50 = 84;
  bool has_f_50() const;
  void clear_f_50() ;
  ::uint32_t f_50() const;
  void set_f_50(::uint32_t value);

  private:
  ::uint32_t _internal_f_50() const;
  void _internal_set_f_50(::uint32_t value);

  public:
  // optional float f_51 = 85;
  bool has_f_51() const;
  void clear_f_51() ;
  float f_51() const;
  void set_f_51(float value);

  private:
  float _internal_f_51() const;
  void _internal_set_f_51(float value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.M35.E25 f_52 = 86;
  bool has_f_52() const;
  void clear_f_52() ;
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E25 f_52() const;
  void set_f_52(::fleetbench::proto::Message9_M3_M13_M24_M35_E25 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_M35_E25 _internal_f_52() const;
  void _internal_set_f_52(::fleetbench::proto::Message9_M3_M13_M24_M35_E25 value);

  public:
  // optional int64 f_53 = 87;
  bool has_f_53() const;
  void clear_f_53() ;
  ::int64_t f_53() const;
  void set_f_53(::int64_t value);

  private:
  ::int64_t _internal_f_53() const;
  void _internal_set_f_53(::int64_t value);

  public:
  // optional int64 f_56 = 91;
  bool has_f_56() const;
  void clear_f_56() ;
  ::int64_t f_56() const;
  void set_f_56(::int64_t value);

  private:
  ::int64_t _internal_f_56() const;
  void _internal_set_f_56(::int64_t value);

  public:
  // optional int32 f_54 = 88;
  bool has_f_54() const;
  void clear_f_54() ;
  ::int32_t f_54() const;
  void set_f_54(::int32_t value);

  private:
  ::int32_t _internal_f_54() const;
  void _internal_set_f_54(::int32_t value);

  public:
  // optional float f_57 = 94;
  bool has_f_57() const;
  void clear_f_57() ;
  float f_57() const;
  void set_f_57(float value);

  private:
  float _internal_f_57() const;
  void _internal_set_f_57(float value);

  public:
  // optional int64 f_58 = 95;
  bool has_f_58() const;
  void clear_f_58() ;
  ::int64_t f_58() const;
  void set_f_58(::int64_t value);

  private:
  ::int64_t _internal_f_58() const;
  void _internal_set_f_58(::int64_t value);

  public:
  // optional int64 f_59 = 96;
  bool has_f_59() const;
  void clear_f_59() ;
  ::int64_t f_59() const;
  void set_f_59(::int64_t value);

  private:
  ::int64_t _internal_f_59() const;
  void _internal_set_f_59(::int64_t value);

  public:
  // optional fixed64 f_61 = 98;
  bool has_f_61() const;
  void clear_f_61() ;
  ::uint64_t f_61() const;
  void set_f_61(::uint64_t value);

  private:
  ::uint64_t _internal_f_61() const;
  void _internal_set_f_61(::uint64_t value);

  public:
  // optional float f_60 = 97;
  bool has_f_60() const;
  void clear_f_60() ;
  float f_60() const;
  void set_f_60(float value);

  private:
  float _internal_f_60() const;
  void _internal_set_f_60(float value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M3.M13.M24.M35)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 62, 7,
      133, 15>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M3_M13_M24_M35_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<2> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> f_26_;
    mutable ::google::protobuf::internal::CachedSize _f_26_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> f_32_;
    mutable ::google::protobuf::internal::CachedSize _f_32_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr f_5_;
    ::google::protobuf::internal::ArenaStringPtr f_6_;
    ::google::protobuf::internal::ArenaStringPtr f_10_;
    ::google::protobuf::internal::ArenaStringPtr f_11_;
    ::google::protobuf::internal::ArenaStringPtr f_15_;
    ::google::protobuf::internal::ArenaStringPtr f_17_;
    ::google::protobuf::internal::ArenaStringPtr f_25_;
    ::google::protobuf::internal::ArenaStringPtr f_27_;
    ::google::protobuf::internal::ArenaStringPtr f_30_;
    ::google::protobuf::internal::ArenaStringPtr f_44_;
    ::google::protobuf::internal::ArenaStringPtr f_46_;
    ::google::protobuf::internal::ArenaStringPtr f_55_;
    ::int64_t f_0_;
    ::int64_t f_2_;
    int f_1_;
    ::uint32_t f_4_;
    ::int64_t f_3_;
    ::uint64_t f_8_;
    float f_7_;
    float f_9_;
    ::uint32_t f_12_;
    ::int32_t f_13_;
    double f_14_;
    ::int64_t f_16_;
    ::uint64_t f_18_;
    ::uint64_t f_19_;
    double f_21_;
    int f_20_;
    int f_22_;
    ::int64_t f_23_;
    ::int32_t f_24_;
    int f_28_;
    ::int32_t f_29_;
    int f_31_;
    ::int64_t f_34_;
    ::int32_t f_33_;
    ::uint32_t f_35_;
    ::int64_t f_37_;
    float f_36_;
    ::int32_t f_38_;
    float f_39_;
    bool f_40_;
    bool f_41_;
    bool f_42_;
    bool f_49_;
    ::int64_t f_43_;
    float f_45_;
    ::int32_t f_47_;
    int f_48_;
    ::uint32_t f_50_;
    float f_51_;
    int f_52_;
    ::int64_t f_53_;
    ::int64_t f_56_;
    ::int32_t f_54_;
    float f_57_;
    ::int64_t f_58_;
    ::int64_t f_59_;
    ::uint64_t f_61_;
    float f_60_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M3_M10 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M3.M10) */ {
 public:
  inline Message9_M3_M10() : Message9_M3_M10(nullptr) {}
  ~Message9_M3_M10() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M3_M10(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M3_M10(const Message9_M3_M10& from) : Message9_M3_M10(nullptr, from) {}
  inline Message9_M3_M10(Message9_M3_M10&& from) noexcept
      : Message9_M3_M10(nullptr, std::move(from)) {}
  inline Message9_M3_M10& operator=(const Message9_M3_M10& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M3_M10& operator=(Message9_M3_M10&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M3_M10& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M3_M10* internal_default_instance() {
    return reinterpret_cast<const Message9_M3_M10*>(
        &_Message9_M3_M10_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Message9_M3_M10& a, Message9_M3_M10& b) { a.Swap(&b); }
  inline void Swap(Message9_M3_M10* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M3_M10* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M3_M10* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M3_M10>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M3_M10& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M3_M10& from) { Message9_M3_M10::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M3_M10* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M3.M10"; }

 protected:
  explicit Message9_M3_M10(::google::protobuf::Arena* arena);
  Message9_M3_M10(::google::protobuf::Arena* arena, const Message9_M3_M10& from);
  Message9_M3_M10(::google::protobuf::Arena* arena, Message9_M3_M10&& from) noexcept
      : Message9_M3_M10(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional int64 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M3.M10)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M3_M10_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M2 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M2) */ {
 public:
  inline Message9_M2() : Message9_M2(nullptr) {}
  ~Message9_M2() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M2(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M2(const Message9_M2& from) : Message9_M2(nullptr, from) {}
  inline Message9_M2(Message9_M2&& from) noexcept
      : Message9_M2(nullptr, std::move(from)) {}
  inline Message9_M2& operator=(const Message9_M2& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M2& operator=(Message9_M2&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M2& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M2* internal_default_instance() {
    return reinterpret_cast<const Message9_M2*>(
        &_Message9_M2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Message9_M2& a, Message9_M2& b) { a.Swap(&b); }
  inline void Swap(Message9_M2* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M2* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M2& from) { Message9_M2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M2* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M2"; }

 protected:
  explicit Message9_M2(::google::protobuf::Arena* arena);
  Message9_M2(::google::protobuf::Arena* arena, const Message9_M2& from);
  Message9_M2(::google::protobuf::Arena* arena, Message9_M2&& from) noexcept
      : Message9_M2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using E3 = Message9_M2_E3;
  static constexpr E3 E3_UNSPECIFIED = Message9_M2_E3_E3_UNSPECIFIED;
  static constexpr E3 E3_CONST_1 = Message9_M2_E3_E3_CONST_1;
  static constexpr E3 E3_CONST_2 = Message9_M2_E3_E3_CONST_2;
  static constexpr E3 E3_CONST_3 = Message9_M2_E3_E3_CONST_3;
  static constexpr E3 E3_CONST_4 = Message9_M2_E3_E3_CONST_4;
  static constexpr E3 E3_CONST_5 = Message9_M2_E3_E3_CONST_5;
  static inline bool E3_IsValid(int value) {
    return Message9_M2_E3_IsValid(value);
  }
  static constexpr E3 E3_MIN = Message9_M2_E3_E3_MIN;
  static constexpr E3 E3_MAX = Message9_M2_E3_E3_MAX;
  static constexpr int E3_ARRAYSIZE = Message9_M2_E3_E3_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E3_descriptor() {
    return Message9_M2_E3_descriptor();
  }
  template <typename T>
  static inline const std::string& E3_Name(T value) {
    return Message9_M2_E3_Name(value);
  }
  static inline bool E3_Parse(absl::string_view name, E3* value) {
    return Message9_M2_E3_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
  };
  // optional .fleetbench.proto.Message9.M2.E3 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::fleetbench::proto::Message9_M2_E3 f_0() const;
  void set_f_0(::fleetbench::proto::Message9_M2_E3 value);

  private:
  ::fleetbench::proto::Message9_M2_E3 _internal_f_0() const;
  void _internal_set_f_0(::fleetbench::proto::Message9_M2_E3 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M2)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M2_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    int f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M1_M18 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M1.M18) */ {
 public:
  inline Message9_M1_M18() : Message9_M1_M18(nullptr) {}
  ~Message9_M1_M18() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M1_M18(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M1_M18(const Message9_M1_M18& from) : Message9_M1_M18(nullptr, from) {}
  inline Message9_M1_M18(Message9_M1_M18&& from) noexcept
      : Message9_M1_M18(nullptr, std::move(from)) {}
  inline Message9_M1_M18& operator=(const Message9_M1_M18& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M1_M18& operator=(Message9_M1_M18&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M1_M18& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M1_M18* internal_default_instance() {
    return reinterpret_cast<const Message9_M1_M18*>(
        &_Message9_M1_M18_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Message9_M1_M18& a, Message9_M1_M18& b) { a.Swap(&b); }
  inline void Swap(Message9_M1_M18* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M1_M18* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M1_M18* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M1_M18>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M1_M18& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M1_M18& from) { Message9_M1_M18::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M1_M18* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M1.M18"; }

 protected:
  explicit Message9_M1_M18(::google::protobuf::Arena* arena);
  Message9_M1_M18(::google::protobuf::Arena* arena, const Message9_M1_M18& from);
  Message9_M1_M18(::google::protobuf::Arena* arena, Message9_M1_M18&& from) noexcept
      : Message9_M1_M18(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using E6 = Message9_M1_M18_E6;
  static constexpr E6 E6_UNSPECIFIED = Message9_M1_M18_E6_E6_UNSPECIFIED;
  static constexpr E6 E6_CONST_1 = Message9_M1_M18_E6_E6_CONST_1;
  static constexpr E6 E6_CONST_2 = Message9_M1_M18_E6_E6_CONST_2;
  static constexpr E6 E6_CONST_3 = Message9_M1_M18_E6_E6_CONST_3;
  static constexpr E6 E6_CONST_4 = Message9_M1_M18_E6_E6_CONST_4;
  static constexpr E6 E6_CONST_5 = Message9_M1_M18_E6_E6_CONST_5;
  static inline bool E6_IsValid(int value) {
    return Message9_M1_M18_E6_IsValid(value);
  }
  static constexpr E6 E6_MIN = Message9_M1_M18_E6_E6_MIN;
  static constexpr E6 E6_MAX = Message9_M1_M18_E6_E6_MAX;
  static constexpr int E6_ARRAYSIZE = Message9_M1_M18_E6_E6_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E6_descriptor() {
    return Message9_M1_M18_E6_descriptor();
  }
  template <typename T>
  static inline const std::string& E6_Name(T value) {
    return Message9_M1_M18_E6_Name(value);
  }
  static inline bool E6_Parse(absl::string_view name, E6* value) {
    return Message9_M1_M18_E6_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
  };
  // optional .fleetbench.proto.Message9.M1.M18.E6 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::fleetbench::proto::Message9_M1_M18_E6 f_0() const;
  void set_f_0(::fleetbench::proto::Message9_M1_M18_E6 value);

  private:
  ::fleetbench::proto::Message9_M1_M18_E6 _internal_f_0() const;
  void _internal_set_f_0(::fleetbench::proto::Message9_M1_M18_E6 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M1.M18)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M1_M18_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    int f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M7_M16_M26 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M7.M16.M26) */ {
 public:
  inline Message9_M7_M16_M26() : Message9_M7_M16_M26(nullptr) {}
  ~Message9_M7_M16_M26() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M7_M16_M26(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M7_M16_M26(const Message9_M7_M16_M26& from) : Message9_M7_M16_M26(nullptr, from) {}
  inline Message9_M7_M16_M26(Message9_M7_M16_M26&& from) noexcept
      : Message9_M7_M16_M26(nullptr, std::move(from)) {}
  inline Message9_M7_M16_M26& operator=(const Message9_M7_M16_M26& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M7_M16_M26& operator=(Message9_M7_M16_M26&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M7_M16_M26& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M7_M16_M26* internal_default_instance() {
    return reinterpret_cast<const Message9_M7_M16_M26*>(
        &_Message9_M7_M16_M26_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 70;
  friend void swap(Message9_M7_M16_M26& a, Message9_M7_M16_M26& b) { a.Swap(&b); }
  inline void Swap(Message9_M7_M16_M26* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M7_M16_M26* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M7_M16_M26* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M7_M16_M26>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M7_M16_M26& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M7_M16_M26& from) { Message9_M7_M16_M26::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M7_M16_M26* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M7.M16.M26"; }

 protected:
  explicit Message9_M7_M16_M26(::google::protobuf::Arena* arena);
  Message9_M7_M16_M26(::google::protobuf::Arena* arena, const Message9_M7_M16_M26& from);
  Message9_M7_M16_M26(::google::protobuf::Arena* arena, Message9_M7_M16_M26&& from) noexcept
      : Message9_M7_M16_M26(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M32 = Message9_M7_M16_M26_M32;
  using M33 = Message9_M7_M16_M26_M33;
  using E14 = Message9_M7_M16_M26_E14;
  static constexpr E14 E14_UNSPECIFIED = Message9_M7_M16_M26_E14_E14_UNSPECIFIED;
  static constexpr E14 E14_CONST_1 = Message9_M7_M16_M26_E14_E14_CONST_1;
  static constexpr E14 E14_CONST_2 = Message9_M7_M16_M26_E14_E14_CONST_2;
  static constexpr E14 E14_CONST_3 = Message9_M7_M16_M26_E14_E14_CONST_3;
  static constexpr E14 E14_CONST_4 = Message9_M7_M16_M26_E14_E14_CONST_4;
  static constexpr E14 E14_CONST_5 = Message9_M7_M16_M26_E14_E14_CONST_5;
  static inline bool E14_IsValid(int value) {
    return Message9_M7_M16_M26_E14_IsValid(value);
  }
  static constexpr E14 E14_MIN = Message9_M7_M16_M26_E14_E14_MIN;
  static constexpr E14 E14_MAX = Message9_M7_M16_M26_E14_E14_MAX;
  static constexpr int E14_ARRAYSIZE = Message9_M7_M16_M26_E14_E14_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E14_descriptor() {
    return Message9_M7_M16_M26_E14_descriptor();
  }
  template <typename T>
  static inline const std::string& E14_Name(T value) {
    return Message9_M7_M16_M26_E14_Name(value);
  }
  static inline bool E14_Parse(absl::string_view name, E14* value) {
    return Message9_M7_M16_M26_E14_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_schema(schema);
      }
      mutable_f_1()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_3().size());
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      mutable_f_1()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_scatter_ptrs(ptrs);
      }
      mutable_f_1()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      sizes.push_back(f_3().size());
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_scatter_sizes(sizes);
      }
      mutable_f_1()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      size_t num_f_3_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_3_entries; ++i) {
        auto* new_msg = add_f_3();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_3(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_1()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_3_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_3_entries; ++i) {
        auto* new_msg = add_f_3();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_3(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_1()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF3FieldNumber = 4,
    kF1FieldNumber = 3,
    kF0FieldNumber = 1,
  };
  // repeated .fleetbench.proto.Message9.M7.M16.M26.M33 f_3 = 4;
  int f_3_size() const;
  private:
  int _internal_f_3_size() const;

  public:
  void clear_f_3() ;
  ::fleetbench::proto::Message9_M7_M16_M26_M33* mutable_f_3(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26_M33>* mutable_f_3();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26_M33>& _internal_f_3() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26_M33>* _internal_mutable_f_3();
  public:
  const ::fleetbench::proto::Message9_M7_M16_M26_M33& f_3(int index) const;
  ::fleetbench::proto::Message9_M7_M16_M26_M33* add_f_3();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26_M33>& f_3() const;
  // optional .fleetbench.proto.Message9.M7.M16.M26.M32 f_1 = 3;
  bool has_f_1() const;
  void clear_f_1() ;
  const ::fleetbench::proto::Message9_M7_M16_M26_M32& f_1() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M7_M16_M26_M32* release_f_1();
  ::fleetbench::proto::Message9_M7_M16_M26_M32* mutable_f_1();
  void set_allocated_f_1(::fleetbench::proto::Message9_M7_M16_M26_M32* value);
  void unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M7_M16_M26_M32* value);
  ::fleetbench::proto::Message9_M7_M16_M26_M32* unsafe_arena_release_f_1();

  private:
  const ::fleetbench::proto::Message9_M7_M16_M26_M32& _internal_f_1() const;
  ::fleetbench::proto::Message9_M7_M16_M26_M32* _internal_mutable_f_1();

  public:
  // optional .fleetbench.proto.Message9.M7.M16.M26.E14 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::fleetbench::proto::Message9_M7_M16_M26_E14 f_0() const;
  void set_f_0(::fleetbench::proto::Message9_M7_M16_M26_E14 value);

  private:
  ::fleetbench::proto::Message9_M7_M16_M26_E14 _internal_f_0() const;
  void _internal_set_f_0(::fleetbench::proto::Message9_M7_M16_M26_E14 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M7.M16.M26)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M7_M16_M26_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M7_M16_M26_M33 > f_3_;
    ::fleetbench::proto::Message9_M7_M16_M26_M32* f_1_;
    int f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M6_M17 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M6.M17) */ {
 public:
  inline Message9_M6_M17() : Message9_M6_M17(nullptr) {}
  ~Message9_M6_M17() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M6_M17(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M6_M17(const Message9_M6_M17& from) : Message9_M6_M17(nullptr, from) {}
  inline Message9_M6_M17(Message9_M6_M17&& from) noexcept
      : Message9_M6_M17(nullptr, std::move(from)) {}
  inline Message9_M6_M17& operator=(const Message9_M6_M17& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M6_M17& operator=(Message9_M6_M17&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M6_M17& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M6_M17* internal_default_instance() {
    return reinterpret_cast<const Message9_M6_M17*>(
        &_Message9_M6_M17_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 66;
  friend void swap(Message9_M6_M17& a, Message9_M6_M17& b) { a.Swap(&b); }
  inline void Swap(Message9_M6_M17* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M6_M17* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M6_M17* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M6_M17>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M6_M17& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M6_M17& from) { Message9_M6_M17::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M6_M17* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M6.M17"; }

 protected:
  explicit Message9_M6_M17(::google::protobuf::Arena* arena);
  Message9_M6_M17(::google::protobuf::Arena* arena, const Message9_M6_M17& from);
  Message9_M6_M17(::google::protobuf::Arena* arena, Message9_M6_M17&& from) noexcept
      : Message9_M6_M17(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M22 = Message9_M6_M17_M22;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      mutable_f_1()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_1()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      mutable_f_1()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_1()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      idx = mutable_f_1()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      idx = mutable_f_1()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF1FieldNumber = 2,
    kF0FieldNumber = 1,
  };
  // optional .fleetbench.proto.Message9.M6.M17.M22 f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  const ::fleetbench::proto::Message9_M6_M17_M22& f_1() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M6_M17_M22* release_f_1();
  ::fleetbench::proto::Message9_M6_M17_M22* mutable_f_1();
  void set_allocated_f_1(::fleetbench::proto::Message9_M6_M17_M22* value);
  void unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M6_M17_M22* value);
  ::fleetbench::proto::Message9_M6_M17_M22* unsafe_arena_release_f_1();

  private:
  const ::fleetbench::proto::Message9_M6_M17_M22& _internal_f_1() const;
  ::fleetbench::proto::Message9_M6_M17_M22* _internal_mutable_f_1();

  public:
  // optional int32 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int32_t f_0() const;
  void set_f_0(::int32_t value);

  private:
  ::int32_t _internal_f_0() const;
  void _internal_set_f_0(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M6.M17)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M6_M17_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::fleetbench::proto::Message9_M6_M17_M22* f_1_;
    ::int32_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M25 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M25) */ {
 public:
  inline Message9_M5_M11_M25() : Message9_M5_M11_M25(nullptr) {}
  ~Message9_M5_M11_M25() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M25(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M25(const Message9_M5_M11_M25& from) : Message9_M5_M11_M25(nullptr, from) {}
  inline Message9_M5_M11_M25(Message9_M5_M11_M25&& from) noexcept
      : Message9_M5_M11_M25(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M25& operator=(const Message9_M5_M11_M25& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M25& operator=(Message9_M5_M11_M25&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M25& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M25* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M25*>(
        &_Message9_M5_M11_M25_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 59;
  friend void swap(Message9_M5_M11_M25& a, Message9_M5_M11_M25& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M25* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M25* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M25* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M25>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M25& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M25& from) { Message9_M5_M11_M25::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M25* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M25"; }

 protected:
  explicit Message9_M5_M11_M25(::google::protobuf::Arena* arena);
  Message9_M5_M11_M25(::google::protobuf::Arena* arena, const Message9_M5_M11_M25& from);
  Message9_M5_M11_M25(::google::protobuf::Arena* arena, Message9_M5_M11_M25&& from) noexcept
      : Message9_M5_M11_M25(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M31 = Message9_M5_M11_M25_M31;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
      mutable_f_1()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
      mutable_f_1()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      mutable_f_1()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size());
      mutable_f_1()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      idx = mutable_f_1()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      idx = mutable_f_1()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
    kF1FieldNumber = 2,
  };
  // optional string f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M25.M31 f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  const ::fleetbench::proto::Message9_M5_M11_M25_M31& f_1() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M25_M31* release_f_1();
  ::fleetbench::proto::Message9_M5_M11_M25_M31* mutable_f_1();
  void set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M25_M31* value);
  void unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M25_M31* value);
  ::fleetbench::proto::Message9_M5_M11_M25_M31* unsafe_arena_release_f_1();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M25_M31& _internal_f_1() const;
  ::fleetbench::proto::Message9_M5_M11_M25_M31* _internal_mutable_f_1();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M25)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M25_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    ::fleetbench::proto::Message9_M5_M11_M25_M31* f_1_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M41_M44_M53 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53() : Message9_M5_M11_M23_M34_M37_M41_M44_M53(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M41_M44_M53() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M41_M44_M53(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53(const Message9_M5_M11_M23_M34_M37_M41_M44_M53& from) : Message9_M5_M11_M23_M34_M37_M41_M44_M53(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53(Message9_M5_M11_M23_M34_M37_M41_M44_M53&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M53(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53& operator=(const Message9_M5_M11_M23_M34_M37_M41_M44_M53& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M41_M44_M53& operator=(Message9_M5_M11_M23_M34_M37_M41_M44_M53&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M41_M44_M53& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M41_M44_M53* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M41_M44_M53*>(
        &_Message9_M5_M11_M23_M34_M37_M41_M44_M53_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(Message9_M5_M11_M23_M34_M37_M41_M44_M53& a, Message9_M5_M11_M23_M34_M37_M41_M44_M53& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M41_M44_M53* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M53* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M41_M44_M53* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M41_M44_M53>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M53& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M41_M44_M53& from) { Message9_M5_M11_M23_M34_M37_M41_M44_M53::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M41_M44_M53* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M41_M44_M53(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M41_M44_M53(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M41_M44_M53& from);
  Message9_M5_M11_M23_M34_M37_M41_M44_M53(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M41_M44_M53&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44_M53(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M60 = Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60;
  using M61 = Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61;
  using M62 = Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      for (int i = 0; i < f_1_size(); ++i) {
        mutable_f_1(i)->generate_schema(schema);
      }
      for (int i = 0; i < f_6_size(); ++i) {
        mutable_f_6(i)->generate_schema(schema);
      }
      mutable_f_3()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_1().size());
      for (int i = 0; i < f_1_size(); ++i) {
        mutable_f_1(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_6().size());
      for (int i = 0; i < f_6_size(); ++i) {
        mutable_f_6(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      mutable_f_3()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_1_size(); ++i) {
        mutable_f_1(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_6_size(); ++i) {
        mutable_f_6(i)->generate_scatter_ptrs(ptrs);
      }
      mutable_f_3()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      sizes.push_back(f_1().size());
      for (int i = 0; i < f_1_size(); ++i) {
        mutable_f_1(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_6().size());
      for (int i = 0; i < f_6_size(); ++i) {
        mutable_f_6(i)->generate_scatter_sizes(sizes);
      }
      mutable_f_3()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      size_t num_f_1_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_1_entries; ++i) {
        auto* new_msg = add_f_1();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_1(i)->allocate_from_sizes(sizes, idx); 
      }
      size_t num_f_6_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_6_entries; ++i) {
        auto* new_msg = add_f_6();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_6(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_3()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_1_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_1_entries; ++i) {
        auto* new_msg = add_f_1();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_1(i)->allocate_from_sizes(sizes, idx); 
      }
      size_t num_f_6_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_6_entries; ++i) {
        auto* new_msg = add_f_6();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_6(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_3()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF1FieldNumber = 3,
    kF6FieldNumber = 7,
    kF3FieldNumber = 6,
    kF0FieldNumber = 1,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M60 f_1 = 3;
  int f_1_size() const;
  private:
  int _internal_f_1_size() const;

  public:
  void clear_f_1() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60* mutable_f_1(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60>* mutable_f_1();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60>& _internal_f_1() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60>* _internal_mutable_f_1();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& f_1(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60* add_f_1();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60>& f_1() const;
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62 f_6 = 7;
  int f_6_size() const;
  private:
  int _internal_f_6_size() const;

  public:
  void clear_f_6() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62* mutable_f_6(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62>* mutable_f_6();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62>& _internal_f_6() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62>* _internal_mutable_f_6();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& f_6(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62* add_f_6();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62>& f_6() const;
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M61 f_3 = 6;
  bool has_f_3() const;
  void clear_f_3() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& f_3() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* release_f_3();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* mutable_f_3();
  void set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* value);
  void unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* unsafe_arena_release_f_3();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& _internal_f_3() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* _internal_mutable_f_3();

  public:
  // optional double f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  double f_0() const;
  void set_f_0(double value);

  private:
  double _internal_f_0() const;
  void _internal_set_f_0(double value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M41_M44_M53_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60 > f_1_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62 > f_6_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* f_3_;
    double f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M39 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M39() : Message9_M5_M11_M23_M34_M37_M39(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M39() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M39(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M39(const Message9_M5_M11_M23_M34_M37_M39& from) : Message9_M5_M11_M23_M34_M37_M39(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M39(Message9_M5_M11_M23_M34_M37_M39&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M39(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M39& operator=(const Message9_M5_M11_M23_M34_M37_M39& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M39& operator=(Message9_M5_M11_M23_M34_M37_M39&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M39& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M39* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M39*>(
        &_Message9_M5_M11_M23_M34_M37_M39_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(Message9_M5_M11_M23_M34_M37_M39& a, Message9_M5_M11_M23_M34_M37_M39& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M39* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M39* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M39* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M39>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M39& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M39& from) { Message9_M5_M11_M23_M34_M37_M39::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M39* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M39(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M39(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M39& from);
  Message9_M5_M11_M23_M34_M37_M39(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M39&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M39(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M45 = Message9_M5_M11_M23_M34_M37_M39_M45;
  using M50 = Message9_M5_M11_M23_M34_M37_M39_M50;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_schema(schema);
      }
      mutable_f_3()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      mutable_f_3()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_ptrs(ptrs);
      }
      mutable_f_3()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      sizes.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_sizes(sizes);
      }
      mutable_f_3()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      size_t num_f_2_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_3()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_2_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_3()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 3,
    kF3FieldNumber = 4,
    kF0FieldNumber = 2,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M45 f_2 = 3;
  int f_2_size() const;
  private:
  int _internal_f_2_size() const;

  public:
  void clear_f_2() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45* mutable_f_2(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45>* mutable_f_2();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45>& _internal_f_2() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45>* _internal_mutable_f_2();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45& f_2(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45* add_f_2();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45>& f_2() const;
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M50 f_3 = 4;
  bool has_f_3() const;
  void clear_f_3() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50& f_3() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* release_f_3();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* mutable_f_3();
  void set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* value);
  void unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* unsafe_arena_release_f_3();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50& _internal_f_3() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* _internal_mutable_f_3();

  public:
  // optional uint32 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::uint32_t f_0() const;
  void set_f_0(::uint32_t value);

  private:
  ::uint32_t _internal_f_0() const;
  void _internal_set_f_0(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M39_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45 > f_2_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* f_3_;
    ::uint32_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M38_M46 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M38_M46() : Message9_M5_M11_M23_M34_M37_M38_M46(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M38_M46() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M38_M46(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M38_M46(const Message9_M5_M11_M23_M34_M37_M38_M46& from) : Message9_M5_M11_M23_M34_M37_M38_M46(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M38_M46(Message9_M5_M11_M23_M34_M37_M38_M46&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M38_M46(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M38_M46& operator=(const Message9_M5_M11_M23_M34_M37_M38_M46& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M38_M46& operator=(Message9_M5_M11_M23_M34_M37_M38_M46&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M38_M46& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M38_M46* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M38_M46*>(
        &_Message9_M5_M11_M23_M34_M37_M38_M46_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(Message9_M5_M11_M23_M34_M37_M38_M46& a, Message9_M5_M11_M23_M34_M37_M38_M46& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M38_M46* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M38_M46* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M38_M46* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M38_M46>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M38_M46& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M38_M46& from) { Message9_M5_M11_M23_M34_M37_M38_M46::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M38_M46* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M38_M46(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M38_M46(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M38_M46& from);
  Message9_M5_M11_M23_M34_M37_M38_M46(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M38_M46&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M38_M46(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M52 = Message9_M5_M11_M23_M34_M37_M38_M46_M52;
  using M56 = Message9_M5_M11_M23_M34_M37_M38_M46_M56;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
      mutable_f_2()->generate_schema(schema);
      mutable_f_3()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
      mutable_f_2()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_3()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      mutable_f_2()->generate_scatter_ptrs(ptrs);
      mutable_f_3()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size());
      mutable_f_2()->generate_scatter_sizes(sizes);
      mutable_f_3()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      idx = mutable_f_2()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_3()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      idx = mutable_f_2()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_3()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
    kF2FieldNumber = 3,
    kF3FieldNumber = 4,
  };
  // optional string f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M52 f_2 = 3;
  bool has_f_2() const;
  void clear_f_2() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52& f_2() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* release_f_2();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* mutable_f_2();
  void set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* value);
  void unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* unsafe_arena_release_f_2();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52& _internal_f_2() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* _internal_mutable_f_2();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M56 f_3 = 4;
  bool has_f_3() const;
  void clear_f_3() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56& f_3() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* release_f_3();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* mutable_f_3();
  void set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* value);
  void unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* unsafe_arena_release_f_3();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56& _internal_f_3() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* _internal_mutable_f_3();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M38_M46_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* f_2_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* f_3_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M74 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74;
  using M75 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75;
  using E54 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54;
  static constexpr E54 E54_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_UNSPECIFIED;
  static constexpr E54 E54_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_CONST_1;
  static constexpr E54 E54_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_CONST_2;
  static constexpr E54 E54_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_CONST_3;
  static constexpr E54 E54_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_CONST_4;
  static constexpr E54 E54_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_CONST_5;
  static inline bool E54_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_IsValid(value);
  }
  static constexpr E54 E54_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_MIN;
  static constexpr E54 E54_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_MAX;
  static constexpr int E54_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_E54_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E54_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_descriptor();
  }
  template <typename T>
  static inline const std::string& E54_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_Name(value);
  }
  static inline bool E54_Parse(absl::string_view name, E54* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_Parse(name, value);
  }
  using E55 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55;
  static constexpr E55 E55_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_UNSPECIFIED;
  static constexpr E55 E55_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_CONST_1;
  static constexpr E55 E55_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_CONST_2;
  static constexpr E55 E55_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_CONST_3;
  static constexpr E55 E55_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_CONST_4;
  static constexpr E55 E55_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_CONST_5;
  static inline bool E55_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_IsValid(value);
  }
  static constexpr E55 E55_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_MIN;
  static constexpr E55 E55_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_MAX;
  static constexpr int E55_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_E55_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E55_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_descriptor();
  }
  template <typename T>
  static inline const std::string& E55_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_Name(value);
  }
  static inline bool E55_Parse(absl::string_view name, E55* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_Parse(name, value);
  }
  using E56 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56;
  static constexpr E56 E56_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_UNSPECIFIED;
  static constexpr E56 E56_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_CONST_1;
  static constexpr E56 E56_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_CONST_2;
  static constexpr E56 E56_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_CONST_3;
  static constexpr E56 E56_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_CONST_4;
  static constexpr E56 E56_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_CONST_5;
  static inline bool E56_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_IsValid(value);
  }
  static constexpr E56 E56_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_MIN;
  static constexpr E56 E56_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_MAX;
  static constexpr int E56_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_E56_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E56_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_descriptor();
  }
  template <typename T>
  static inline const std::string& E56_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_Name(value);
  }
  static inline bool E56_Parse(absl::string_view name, E56* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_Parse(name, value);
  }
  using E57 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57;
  static constexpr E57 E57_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_UNSPECIFIED;
  static constexpr E57 E57_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_CONST_1;
  static constexpr E57 E57_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_CONST_2;
  static constexpr E57 E57_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_CONST_3;
  static constexpr E57 E57_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_CONST_4;
  static constexpr E57 E57_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_CONST_5;
  static inline bool E57_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_IsValid(value);
  }
  static constexpr E57 E57_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_MIN;
  static constexpr E57 E57_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_MAX;
  static constexpr int E57_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_E57_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E57_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_descriptor();
  }
  template <typename T>
  static inline const std::string& E57_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_Name(value);
  }
  static inline bool E57_Parse(absl::string_view name, E57* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_Parse(name, value);
  }
  using E58 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58;
  static constexpr E58 E58_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_UNSPECIFIED;
  static constexpr E58 E58_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_CONST_1;
  static constexpr E58 E58_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_CONST_2;
  static constexpr E58 E58_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_CONST_3;
  static constexpr E58 E58_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_CONST_4;
  static constexpr E58 E58_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_CONST_5;
  static inline bool E58_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_IsValid(value);
  }
  static constexpr E58 E58_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_MIN;
  static constexpr E58 E58_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_MAX;
  static constexpr int E58_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_E58_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E58_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_descriptor();
  }
  template <typename T>
  static inline const std::string& E58_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_Name(value);
  }
  static inline bool E58_Parse(absl::string_view name, E58* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_Parse(name, value);
  }
  using E59 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59;
  static constexpr E59 E59_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_UNSPECIFIED;
  static constexpr E59 E59_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_CONST_1;
  static constexpr E59 E59_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_CONST_2;
  static constexpr E59 E59_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_CONST_3;
  static constexpr E59 E59_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_CONST_4;
  static constexpr E59 E59_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_CONST_5;
  static inline bool E59_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_IsValid(value);
  }
  static constexpr E59 E59_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_MIN;
  static constexpr E59 E59_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_MAX;
  static constexpr int E59_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_E59_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E59_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_descriptor();
  }
  template <typename T>
  static inline const std::string& E59_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_Name(value);
  }
  static inline bool E59_Parse(absl::string_view name, E59* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_Parse(name, value);
  }
  using E60 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60;
  static constexpr E60 E60_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_UNSPECIFIED;
  static constexpr E60 E60_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_CONST_1;
  static constexpr E60 E60_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_CONST_2;
  static constexpr E60 E60_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_CONST_3;
  static constexpr E60 E60_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_CONST_4;
  static constexpr E60 E60_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_CONST_5;
  static inline bool E60_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_IsValid(value);
  }
  static constexpr E60 E60_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_MIN;
  static constexpr E60 E60_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_MAX;
  static constexpr int E60_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_E60_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E60_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_descriptor();
  }
  template <typename T>
  static inline const std::string& E60_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_Name(value);
  }
  static inline bool E60_Parse(absl::string_view name, E60* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_Parse(name, value);
  }
  using E61 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61;
  static constexpr E61 E61_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_UNSPECIFIED;
  static constexpr E61 E61_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_CONST_1;
  static constexpr E61 E61_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_CONST_2;
  static constexpr E61 E61_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_CONST_3;
  static constexpr E61 E61_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_CONST_4;
  static constexpr E61 E61_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_CONST_5;
  static inline bool E61_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_IsValid(value);
  }
  static constexpr E61 E61_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_MIN;
  static constexpr E61 E61_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_MAX;
  static constexpr int E61_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_E61_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E61_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_descriptor();
  }
  template <typename T>
  static inline const std::string& E61_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_Name(value);
  }
  static inline bool E61_Parse(absl::string_view name, E61* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_Parse(name, value);
  }
  using E62 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62;
  static constexpr E62 E62_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_UNSPECIFIED;
  static constexpr E62 E62_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_CONST_1;
  static constexpr E62 E62_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_CONST_2;
  static constexpr E62 E62_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_CONST_3;
  static constexpr E62 E62_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_CONST_4;
  static constexpr E62 E62_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_CONST_5;
  static inline bool E62_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_IsValid(value);
  }
  static constexpr E62 E62_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_MIN;
  static constexpr E62 E62_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_MAX;
  static constexpr int E62_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_E62_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E62_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_descriptor();
  }
  template <typename T>
  static inline const std::string& E62_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_Name(value);
  }
  static inline bool E62_Parse(absl::string_view name, E62* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_Parse(name, value);
  }
  using E63 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63;
  static constexpr E63 E63_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_UNSPECIFIED;
  static constexpr E63 E63_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_CONST_1;
  static constexpr E63 E63_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_CONST_2;
  static constexpr E63 E63_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_CONST_3;
  static constexpr E63 E63_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_CONST_4;
  static constexpr E63 E63_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_CONST_5;
  static inline bool E63_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_IsValid(value);
  }
  static constexpr E63 E63_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_MIN;
  static constexpr E63 E63_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_MAX;
  static constexpr int E63_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_E63_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E63_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_descriptor();
  }
  template <typename T>
  static inline const std::string& E63_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_Name(value);
  }
  static inline bool E63_Parse(absl::string_view name, E63* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_Parse(name, value);
  }
  using E64 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64;
  static constexpr E64 E64_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_UNSPECIFIED;
  static constexpr E64 E64_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_CONST_1;
  static constexpr E64 E64_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_CONST_2;
  static constexpr E64 E64_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_CONST_3;
  static constexpr E64 E64_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_CONST_4;
  static constexpr E64 E64_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_CONST_5;
  static inline bool E64_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_IsValid(value);
  }
  static constexpr E64 E64_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_MIN;
  static constexpr E64 E64_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_MAX;
  static constexpr int E64_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_E64_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E64_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_descriptor();
  }
  template <typename T>
  static inline const std::string& E64_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_Name(value);
  }
  static inline bool E64_Parse(absl::string_view name, E64* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_Parse(name, value);
  }
  using E65 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65;
  static constexpr E65 E65_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_UNSPECIFIED;
  static constexpr E65 E65_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_CONST_1;
  static constexpr E65 E65_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_CONST_2;
  static constexpr E65 E65_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_CONST_3;
  static constexpr E65 E65_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_CONST_4;
  static constexpr E65 E65_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_CONST_5;
  static inline bool E65_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_IsValid(value);
  }
  static constexpr E65 E65_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_MIN;
  static constexpr E65 E65_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_MAX;
  static constexpr int E65_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_E65_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E65_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_descriptor();
  }
  template <typename T>
  static inline const std::string& E65_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_Name(value);
  }
  static inline bool E65_Parse(absl::string_view name, E65* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_Parse(name, value);
  }
  using E66 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66;
  static constexpr E66 E66_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_UNSPECIFIED;
  static constexpr E66 E66_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_CONST_1;
  static constexpr E66 E66_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_CONST_2;
  static constexpr E66 E66_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_CONST_3;
  static constexpr E66 E66_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_CONST_4;
  static constexpr E66 E66_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_CONST_5;
  static inline bool E66_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_IsValid(value);
  }
  static constexpr E66 E66_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_MIN;
  static constexpr E66 E66_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_MAX;
  static constexpr int E66_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_E66_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E66_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_descriptor();
  }
  template <typename T>
  static inline const std::string& E66_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_Name(value);
  }
  static inline bool E66_Parse(absl::string_view name, E66* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_Parse(name, value);
  }
  using E67 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67;
  static constexpr E67 E67_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_UNSPECIFIED;
  static constexpr E67 E67_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_CONST_1;
  static constexpr E67 E67_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_CONST_2;
  static constexpr E67 E67_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_CONST_3;
  static constexpr E67 E67_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_CONST_4;
  static constexpr E67 E67_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_CONST_5;
  static inline bool E67_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_IsValid(value);
  }
  static constexpr E67 E67_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_MIN;
  static constexpr E67 E67_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_MAX;
  static constexpr int E67_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_E67_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E67_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_descriptor();
  }
  template <typename T>
  static inline const std::string& E67_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_Name(value);
  }
  static inline bool E67_Parse(absl::string_view name, E67* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_Parse(name, value);
  }
  using E68 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68;
  static constexpr E68 E68_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_UNSPECIFIED;
  static constexpr E68 E68_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_CONST_1;
  static constexpr E68 E68_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_CONST_2;
  static constexpr E68 E68_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_CONST_3;
  static constexpr E68 E68_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_CONST_4;
  static constexpr E68 E68_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_CONST_5;
  static inline bool E68_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_IsValid(value);
  }
  static constexpr E68 E68_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_MIN;
  static constexpr E68 E68_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_MAX;
  static constexpr int E68_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_E68_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E68_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_descriptor();
  }
  template <typename T>
  static inline const std::string& E68_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_Name(value);
  }
  static inline bool E68_Parse(absl::string_view name, E68* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_Parse(name, value);
  }
  using E69 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69;
  static constexpr E69 E69_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_UNSPECIFIED;
  static constexpr E69 E69_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_CONST_1;
  static constexpr E69 E69_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_CONST_2;
  static constexpr E69 E69_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_CONST_3;
  static constexpr E69 E69_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_CONST_4;
  static constexpr E69 E69_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_CONST_5;
  static inline bool E69_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_IsValid(value);
  }
  static constexpr E69 E69_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_MIN;
  static constexpr E69 E69_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_MAX;
  static constexpr int E69_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_E69_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E69_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_descriptor();
  }
  template <typename T>
  static inline const std::string& E69_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_Name(value);
  }
  static inline bool E69_Parse(absl::string_view name, E69* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_Parse(name, value);
  }
  using E70 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70;
  static constexpr E70 E70_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_UNSPECIFIED;
  static constexpr E70 E70_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_CONST_1;
  static constexpr E70 E70_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_CONST_2;
  static constexpr E70 E70_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_CONST_3;
  static constexpr E70 E70_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_CONST_4;
  static constexpr E70 E70_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_CONST_5;
  static inline bool E70_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_IsValid(value);
  }
  static constexpr E70 E70_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_MIN;
  static constexpr E70 E70_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_MAX;
  static constexpr int E70_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_E70_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E70_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_descriptor();
  }
  template <typename T>
  static inline const std::string& E70_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_Name(value);
  }
  static inline bool E70_Parse(absl::string_view name, E70* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_Parse(name, value);
  }
  using E71 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71;
  static constexpr E71 E71_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_UNSPECIFIED;
  static constexpr E71 E71_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_CONST_1;
  static constexpr E71 E71_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_CONST_2;
  static constexpr E71 E71_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_CONST_3;
  static constexpr E71 E71_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_CONST_4;
  static constexpr E71 E71_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_CONST_5;
  static inline bool E71_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_IsValid(value);
  }
  static constexpr E71 E71_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_MIN;
  static constexpr E71 E71_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_MAX;
  static constexpr int E71_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_E71_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E71_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_descriptor();
  }
  template <typename T>
  static inline const std::string& E71_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_Name(value);
  }
  static inline bool E71_Parse(absl::string_view name, E71* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_Parse(name, value);
  }
  using E72 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72;
  static constexpr E72 E72_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_UNSPECIFIED;
  static constexpr E72 E72_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_CONST_1;
  static constexpr E72 E72_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_CONST_2;
  static constexpr E72 E72_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_CONST_3;
  static constexpr E72 E72_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_CONST_4;
  static constexpr E72 E72_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_CONST_5;
  static inline bool E72_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_IsValid(value);
  }
  static constexpr E72 E72_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_MIN;
  static constexpr E72 E72_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_MAX;
  static constexpr int E72_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_E72_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E72_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_descriptor();
  }
  template <typename T>
  static inline const std::string& E72_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_Name(value);
  }
  static inline bool E72_Parse(absl::string_view name, E72* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_Parse(name, value);
  }
  using E73 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73;
  static constexpr E73 E73_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_UNSPECIFIED;
  static constexpr E73 E73_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_CONST_1;
  static constexpr E73 E73_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_CONST_2;
  static constexpr E73 E73_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_CONST_3;
  static constexpr E73 E73_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_CONST_4;
  static constexpr E73 E73_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_CONST_5;
  static inline bool E73_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_IsValid(value);
  }
  static constexpr E73 E73_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_MIN;
  static constexpr E73 E73_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_MAX;
  static constexpr int E73_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_E73_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E73_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_descriptor();
  }
  template <typename T>
  static inline const std::string& E73_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_Name(value);
  }
  static inline bool E73_Parse(absl::string_view name, E73* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_Parse(name, value);
  }
  using E74 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74;
  static constexpr E74 E74_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_UNSPECIFIED;
  static constexpr E74 E74_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_CONST_1;
  static constexpr E74 E74_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_CONST_2;
  static constexpr E74 E74_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_CONST_3;
  static constexpr E74 E74_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_CONST_4;
  static constexpr E74 E74_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_CONST_5;
  static inline bool E74_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_IsValid(value);
  }
  static constexpr E74 E74_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_MIN;
  static constexpr E74 E74_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_MAX;
  static constexpr int E74_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_E74_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E74_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_descriptor();
  }
  template <typename T>
  static inline const std::string& E74_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_Name(value);
  }
  static inline bool E74_Parse(absl::string_view name, E74* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_Parse(name, value);
  }
  using E75 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75;
  static constexpr E75 E75_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_UNSPECIFIED;
  static constexpr E75 E75_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_CONST_1;
  static constexpr E75 E75_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_CONST_2;
  static constexpr E75 E75_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_CONST_3;
  static constexpr E75 E75_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_CONST_4;
  static constexpr E75 E75_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_CONST_5;
  static inline bool E75_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_IsValid(value);
  }
  static constexpr E75 E75_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_MIN;
  static constexpr E75 E75_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_MAX;
  static constexpr int E75_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_E75_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E75_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_descriptor();
  }
  template <typename T>
  static inline const std::string& E75_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_Name(value);
  }
  static inline bool E75_Parse(absl::string_view name, E75* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_Parse(name, value);
  }
  using E76 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76;
  static constexpr E76 E76_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_UNSPECIFIED;
  static constexpr E76 E76_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_CONST_1;
  static constexpr E76 E76_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_CONST_2;
  static constexpr E76 E76_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_CONST_3;
  static constexpr E76 E76_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_CONST_4;
  static constexpr E76 E76_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_CONST_5;
  static inline bool E76_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_IsValid(value);
  }
  static constexpr E76 E76_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_MIN;
  static constexpr E76 E76_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_MAX;
  static constexpr int E76_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_E76_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E76_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_descriptor();
  }
  template <typename T>
  static inline const std::string& E76_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_Name(value);
  }
  static inline bool E76_Parse(absl::string_view name, E76* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_Parse(name, value);
  }
  using E77 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77;
  static constexpr E77 E77_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_UNSPECIFIED;
  static constexpr E77 E77_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_CONST_1;
  static constexpr E77 E77_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_CONST_2;
  static constexpr E77 E77_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_CONST_3;
  static constexpr E77 E77_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_CONST_4;
  static constexpr E77 E77_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_CONST_5;
  static inline bool E77_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_IsValid(value);
  }
  static constexpr E77 E77_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_MIN;
  static constexpr E77 E77_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_MAX;
  static constexpr int E77_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_E77_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E77_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_descriptor();
  }
  template <typename T>
  static inline const std::string& E77_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_Name(value);
  }
  static inline bool E77_Parse(absl::string_view name, E77* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_Parse(name, value);
  }
  using E78 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78;
  static constexpr E78 E78_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_UNSPECIFIED;
  static constexpr E78 E78_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_CONST_1;
  static constexpr E78 E78_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_CONST_2;
  static constexpr E78 E78_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_CONST_3;
  static constexpr E78 E78_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_CONST_4;
  static constexpr E78 E78_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_CONST_5;
  static inline bool E78_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_IsValid(value);
  }
  static constexpr E78 E78_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_MIN;
  static constexpr E78 E78_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_MAX;
  static constexpr int E78_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_E78_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E78_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_descriptor();
  }
  template <typename T>
  static inline const std::string& E78_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_Name(value);
  }
  static inline bool E78_Parse(absl::string_view name, E78* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_Parse(name, value);
  }
  using E79 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79;
  static constexpr E79 E79_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_UNSPECIFIED;
  static constexpr E79 E79_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_CONST_1;
  static constexpr E79 E79_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_CONST_2;
  static constexpr E79 E79_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_CONST_3;
  static constexpr E79 E79_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_CONST_4;
  static constexpr E79 E79_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_CONST_5;
  static inline bool E79_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_IsValid(value);
  }
  static constexpr E79 E79_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_MIN;
  static constexpr E79 E79_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_MAX;
  static constexpr int E79_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_E79_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E79_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_descriptor();
  }
  template <typename T>
  static inline const std::string& E79_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_Name(value);
  }
  static inline bool E79_Parse(absl::string_view name, E79* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_Parse(name, value);
  }
  using E80 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80;
  static constexpr E80 E80_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_UNSPECIFIED;
  static constexpr E80 E80_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_CONST_1;
  static constexpr E80 E80_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_CONST_2;
  static constexpr E80 E80_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_CONST_3;
  static constexpr E80 E80_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_CONST_4;
  static constexpr E80 E80_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_CONST_5;
  static inline bool E80_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_IsValid(value);
  }
  static constexpr E80 E80_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_MIN;
  static constexpr E80 E80_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_MAX;
  static constexpr int E80_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_E80_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E80_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_descriptor();
  }
  template <typename T>
  static inline const std::string& E80_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_Name(value);
  }
  static inline bool E80_Parse(absl::string_view name, E80* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_Parse(name, value);
  }
  using E81 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81;
  static constexpr E81 E81_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_UNSPECIFIED;
  static constexpr E81 E81_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_CONST_1;
  static constexpr E81 E81_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_CONST_2;
  static constexpr E81 E81_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_CONST_3;
  static constexpr E81 E81_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_CONST_4;
  static constexpr E81 E81_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_CONST_5;
  static inline bool E81_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_IsValid(value);
  }
  static constexpr E81 E81_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_MIN;
  static constexpr E81 E81_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_MAX;
  static constexpr int E81_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_E81_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E81_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_descriptor();
  }
  template <typename T>
  static inline const std::string& E81_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_Name(value);
  }
  static inline bool E81_Parse(absl::string_view name, E81* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_Parse(name, value);
  }
  using E82 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82;
  static constexpr E82 E82_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_UNSPECIFIED;
  static constexpr E82 E82_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_CONST_1;
  static constexpr E82 E82_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_CONST_2;
  static constexpr E82 E82_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_CONST_3;
  static constexpr E82 E82_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_CONST_4;
  static constexpr E82 E82_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_CONST_5;
  static inline bool E82_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_IsValid(value);
  }
  static constexpr E82 E82_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_MIN;
  static constexpr E82 E82_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_MAX;
  static constexpr int E82_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_E82_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E82_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_descriptor();
  }
  template <typename T>
  static inline const std::string& E82_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_Name(value);
  }
  static inline bool E82_Parse(absl::string_view name, E82* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_Parse(name, value);
  }
  using E83 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83;
  static constexpr E83 E83_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_UNSPECIFIED;
  static constexpr E83 E83_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_CONST_1;
  static constexpr E83 E83_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_CONST_2;
  static constexpr E83 E83_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_CONST_3;
  static constexpr E83 E83_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_CONST_4;
  static constexpr E83 E83_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_CONST_5;
  static inline bool E83_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_IsValid(value);
  }
  static constexpr E83 E83_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_MIN;
  static constexpr E83 E83_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_MAX;
  static constexpr int E83_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_E83_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E83_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_descriptor();
  }
  template <typename T>
  static inline const std::string& E83_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_Name(value);
  }
  static inline bool E83_Parse(absl::string_view name, E83* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_Parse(name, value);
  }
  using E84 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84;
  static constexpr E84 E84_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_UNSPECIFIED;
  static constexpr E84 E84_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_CONST_1;
  static constexpr E84 E84_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_CONST_2;
  static constexpr E84 E84_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_CONST_3;
  static constexpr E84 E84_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_CONST_4;
  static constexpr E84 E84_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_CONST_5;
  static inline bool E84_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_IsValid(value);
  }
  static constexpr E84 E84_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_MIN;
  static constexpr E84 E84_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_MAX;
  static constexpr int E84_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_E84_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E84_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_descriptor();
  }
  template <typename T>
  static inline const std::string& E84_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_Name(value);
  }
  static inline bool E84_Parse(absl::string_view name, E84* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_Parse(name, value);
  }
  using E85 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85;
  static constexpr E85 E85_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_UNSPECIFIED;
  static constexpr E85 E85_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_CONST_1;
  static constexpr E85 E85_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_CONST_2;
  static constexpr E85 E85_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_CONST_3;
  static constexpr E85 E85_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_CONST_4;
  static constexpr E85 E85_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_CONST_5;
  static inline bool E85_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_IsValid(value);
  }
  static constexpr E85 E85_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_MIN;
  static constexpr E85 E85_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_MAX;
  static constexpr int E85_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_E85_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E85_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_descriptor();
  }
  template <typename T>
  static inline const std::string& E85_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_Name(value);
  }
  static inline bool E85_Parse(absl::string_view name, E85* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_Parse(name, value);
  }
  using E86 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86;
  static constexpr E86 E86_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_UNSPECIFIED;
  static constexpr E86 E86_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_CONST_1;
  static constexpr E86 E86_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_CONST_2;
  static constexpr E86 E86_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_CONST_3;
  static constexpr E86 E86_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_CONST_4;
  static constexpr E86 E86_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_CONST_5;
  static inline bool E86_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_IsValid(value);
  }
  static constexpr E86 E86_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_MIN;
  static constexpr E86 E86_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_MAX;
  static constexpr int E86_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_E86_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E86_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_descriptor();
  }
  template <typename T>
  static inline const std::string& E86_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_Name(value);
  }
  static inline bool E86_Parse(absl::string_view name, E86* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_Parse(name, value);
  }
  using E87 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87;
  static constexpr E87 E87_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_UNSPECIFIED;
  static constexpr E87 E87_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_CONST_1;
  static constexpr E87 E87_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_CONST_2;
  static constexpr E87 E87_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_CONST_3;
  static constexpr E87 E87_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_CONST_4;
  static constexpr E87 E87_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_CONST_5;
  static inline bool E87_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_IsValid(value);
  }
  static constexpr E87 E87_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_MIN;
  static constexpr E87 E87_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_MAX;
  static constexpr int E87_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_E87_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E87_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_descriptor();
  }
  template <typename T>
  static inline const std::string& E87_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_Name(value);
  }
  static inline bool E87_Parse(absl::string_view name, E87* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_Parse(name, value);
  }
  using E88 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88;
  static constexpr E88 E88_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_UNSPECIFIED;
  static constexpr E88 E88_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_CONST_1;
  static constexpr E88 E88_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_CONST_2;
  static constexpr E88 E88_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_CONST_3;
  static constexpr E88 E88_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_CONST_4;
  static constexpr E88 E88_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_CONST_5;
  static inline bool E88_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_IsValid(value);
  }
  static constexpr E88 E88_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_MIN;
  static constexpr E88 E88_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_MAX;
  static constexpr int E88_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_E88_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E88_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_descriptor();
  }
  template <typename T>
  static inline const std::string& E88_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_Name(value);
  }
  static inline bool E88_Parse(absl::string_view name, E88* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_Parse(name, value);
  }
  using E89 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89;
  static constexpr E89 E89_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_UNSPECIFIED;
  static constexpr E89 E89_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_CONST_1;
  static constexpr E89 E89_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_CONST_2;
  static constexpr E89 E89_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_CONST_3;
  static constexpr E89 E89_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_CONST_4;
  static constexpr E89 E89_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_CONST_5;
  static inline bool E89_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_IsValid(value);
  }
  static constexpr E89 E89_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_MIN;
  static constexpr E89 E89_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_MAX;
  static constexpr int E89_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_E89_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E89_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_descriptor();
  }
  template <typename T>
  static inline const std::string& E89_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_Name(value);
  }
  static inline bool E89_Parse(absl::string_view name, E89* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_Parse(name, value);
  }
  using E90 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90;
  static constexpr E90 E90_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_UNSPECIFIED;
  static constexpr E90 E90_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_CONST_1;
  static constexpr E90 E90_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_CONST_2;
  static constexpr E90 E90_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_CONST_3;
  static constexpr E90 E90_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_CONST_4;
  static constexpr E90 E90_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_CONST_5;
  static inline bool E90_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_IsValid(value);
  }
  static constexpr E90 E90_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_MIN;
  static constexpr E90 E90_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_MAX;
  static constexpr int E90_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_E90_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E90_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_descriptor();
  }
  template <typename T>
  static inline const std::string& E90_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_Name(value);
  }
  static inline bool E90_Parse(absl::string_view name, E90* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_Parse(name, value);
  }
  using E91 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91;
  static constexpr E91 E91_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_UNSPECIFIED;
  static constexpr E91 E91_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_CONST_1;
  static constexpr E91 E91_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_CONST_2;
  static constexpr E91 E91_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_CONST_3;
  static constexpr E91 E91_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_CONST_4;
  static constexpr E91 E91_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_CONST_5;
  static inline bool E91_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_IsValid(value);
  }
  static constexpr E91 E91_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_MIN;
  static constexpr E91 E91_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_MAX;
  static constexpr int E91_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_E91_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E91_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_descriptor();
  }
  template <typename T>
  static inline const std::string& E91_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_Name(value);
  }
  static inline bool E91_Parse(absl::string_view name, E91* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_Parse(name, value);
  }
  using E92 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92;
  static constexpr E92 E92_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_UNSPECIFIED;
  static constexpr E92 E92_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_CONST_1;
  static constexpr E92 E92_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_CONST_2;
  static constexpr E92 E92_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_CONST_3;
  static constexpr E92 E92_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_CONST_4;
  static constexpr E92 E92_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_CONST_5;
  static inline bool E92_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_IsValid(value);
  }
  static constexpr E92 E92_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_MIN;
  static constexpr E92 E92_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_MAX;
  static constexpr int E92_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_E92_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E92_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_descriptor();
  }
  template <typename T>
  static inline const std::string& E92_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_Name(value);
  }
  static inline bool E92_Parse(absl::string_view name, E92* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_Parse(name, value);
  }
  using E93 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93;
  static constexpr E93 E93_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_UNSPECIFIED;
  static constexpr E93 E93_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_CONST_1;
  static constexpr E93 E93_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_CONST_2;
  static constexpr E93 E93_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_CONST_3;
  static constexpr E93 E93_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_CONST_4;
  static constexpr E93 E93_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_CONST_5;
  static inline bool E93_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_IsValid(value);
  }
  static constexpr E93 E93_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_MIN;
  static constexpr E93 E93_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_MAX;
  static constexpr int E93_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_E93_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E93_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_descriptor();
  }
  template <typename T>
  static inline const std::string& E93_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_Name(value);
  }
  static inline bool E93_Parse(absl::string_view name, E93* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_Parse(name, value);
  }
  using E94 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94;
  static constexpr E94 E94_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_UNSPECIFIED;
  static constexpr E94 E94_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_CONST_1;
  static constexpr E94 E94_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_CONST_2;
  static constexpr E94 E94_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_CONST_3;
  static constexpr E94 E94_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_CONST_4;
  static constexpr E94 E94_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_CONST_5;
  static inline bool E94_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_IsValid(value);
  }
  static constexpr E94 E94_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_MIN;
  static constexpr E94 E94_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_MAX;
  static constexpr int E94_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_E94_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E94_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_descriptor();
  }
  template <typename T>
  static inline const std::string& E94_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_Name(value);
  }
  static inline bool E94_Parse(absl::string_view name, E94* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_Parse(name, value);
  }
  using E95 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95;
  static constexpr E95 E95_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_UNSPECIFIED;
  static constexpr E95 E95_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_CONST_1;
  static constexpr E95 E95_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_CONST_2;
  static constexpr E95 E95_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_CONST_3;
  static constexpr E95 E95_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_CONST_4;
  static constexpr E95 E95_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_CONST_5;
  static inline bool E95_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_IsValid(value);
  }
  static constexpr E95 E95_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_MIN;
  static constexpr E95 E95_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_MAX;
  static constexpr int E95_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_E95_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E95_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_descriptor();
  }
  template <typename T>
  static inline const std::string& E95_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_Name(value);
  }
  static inline bool E95_Parse(absl::string_view name, E95* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_Parse(name, value);
  }
  using E96 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96;
  static constexpr E96 E96_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_UNSPECIFIED;
  static constexpr E96 E96_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_CONST_1;
  static constexpr E96 E96_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_CONST_2;
  static constexpr E96 E96_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_CONST_3;
  static constexpr E96 E96_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_CONST_4;
  static constexpr E96 E96_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_CONST_5;
  static inline bool E96_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_IsValid(value);
  }
  static constexpr E96 E96_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_MIN;
  static constexpr E96 E96_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_MAX;
  static constexpr int E96_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_E96_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E96_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_descriptor();
  }
  template <typename T>
  static inline const std::string& E96_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_Name(value);
  }
  static inline bool E96_Parse(absl::string_view name, E96* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_Parse(name, value);
  }
  using E97 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97;
  static constexpr E97 E97_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_UNSPECIFIED;
  static constexpr E97 E97_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_CONST_1;
  static constexpr E97 E97_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_CONST_2;
  static constexpr E97 E97_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_CONST_3;
  static constexpr E97 E97_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_CONST_4;
  static constexpr E97 E97_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_CONST_5;
  static inline bool E97_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_IsValid(value);
  }
  static constexpr E97 E97_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_MIN;
  static constexpr E97 E97_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_MAX;
  static constexpr int E97_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_E97_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E97_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_descriptor();
  }
  template <typename T>
  static inline const std::string& E97_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_Name(value);
  }
  static inline bool E97_Parse(absl::string_view name, E97* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_286_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_286())));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_5().data())), f_5().size() * sizeof(::int32_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_57().data())), f_57().size() * sizeof(::int32_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_79().data())), f_79().size() * sizeof(::int64_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_81().data())), f_81().size() * sizeof(::int32_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_165().data())), f_165().size() * sizeof(::int64_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_173().data())), f_173().size() * sizeof(::int64_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_206().data())), f_206().size() * sizeof(::int32_t)));
      for (int i = 0; i < f_219_size(); ++i) {
        schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_219(i).data())), f_219(i).size()));
      }
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_230().data())), f_230().size() * sizeof(::int32_t)));
      for (int i = 0; i < f_237_size(); ++i) {
        schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_237(i).data())), f_237(i).size()));
      }
      for (int i = 0; i < f_420_size(); ++i) {
        mutable_f_420(i)->generate_schema(schema);
      }
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_1().c_str())), f_1().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())), f_2().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_7().c_str())), f_7().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())), f_16().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_29().c_str())), f_29().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_43().c_str())), f_43().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_45().c_str())), f_45().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_50().c_str())), f_50().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_55().c_str())), f_55().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_58().c_str())), f_58().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_68().c_str())), f_68().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_70().c_str())), f_70().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_91().c_str())), f_91().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_97().c_str())), f_97().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_106().c_str())), f_106().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_107().c_str())), f_107().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_108().c_str())), f_108().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_109().c_str())), f_109().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_110().c_str())), f_110().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_113().c_str())), f_113().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_116().c_str())), f_116().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_118().c_str())), f_118().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_119().c_str())), f_119().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_121().c_str())), f_121().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_125().c_str())), f_125().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_129().c_str())), f_129().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_131().c_str())), f_131().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_132().c_str())), f_132().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_133().c_str())), f_133().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_134().c_str())), f_134().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_135().c_str())), f_135().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_142().c_str())), f_142().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_143().c_str())), f_143().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_148().c_str())), f_148().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_149().c_str())), f_149().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_151().c_str())), f_151().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_153().c_str())), f_153().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_155().c_str())), f_155().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_176().c_str())), f_176().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_177().c_str())), f_177().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_178().c_str())), f_178().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_179().c_str())), f_179().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_180().c_str())), f_180().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_186().c_str())), f_186().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_198().c_str())), f_198().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_204().c_str())), f_204().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_216().c_str())), f_216().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_222().c_str())), f_222().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_231().c_str())), f_231().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_232().c_str())), f_232().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_246().c_str())), f_246().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_247().c_str())), f_247().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_248().c_str())), f_248().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_253().c_str())), f_253().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_261().c_str())), f_261().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_268().c_str())), f_268().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_283().c_str())), f_283().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_289().c_str())), f_289().size()));
      mutable_f_421()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_286_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_286()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_5().data())));
      sizes_list.push_back(f_5().size() * sizeof(::int32_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_57().data())));
      sizes_list.push_back(f_57().size() * sizeof(::int32_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_79().data())));
      sizes_list.push_back(f_79().size() * sizeof(::int64_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_81().data())));
      sizes_list.push_back(f_81().size() * sizeof(::int32_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_101().data())));
      sizes_list.push_back(f_101().size() * sizeof(int));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_158().data())));
      sizes_list.push_back(f_158().size() * sizeof(int));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_165().data())));
      sizes_list.push_back(f_165().size() * sizeof(::int64_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_173().data())));
      sizes_list.push_back(f_173().size() * sizeof(::int64_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_206().data())));
      sizes_list.push_back(f_206().size() * sizeof(::int32_t));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_219().size());
      for (int i = 0; i < f_219_size(); ++i) {
        ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_219(i).c_str())));
        sizes_list.push_back(f_219(i).size());
      }
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_230().data())));
      sizes_list.push_back(f_230().size() * sizeof(::int32_t));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_237().size());
      for (int i = 0; i < f_237_size(); ++i) {
        ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_237(i).c_str())));
        sizes_list.push_back(f_237(i).size());
      }
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_420().size());
      for (int i = 0; i < f_420_size(); ++i) {
        mutable_f_420(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_1().c_str())));
      sizes_list.push_back(f_1().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      sizes_list.push_back(f_2().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_7().c_str())));
      sizes_list.push_back(f_7().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())));
      sizes_list.push_back(f_16().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_29().c_str())));
      sizes_list.push_back(f_29().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_43().c_str())));
      sizes_list.push_back(f_43().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_45().c_str())));
      sizes_list.push_back(f_45().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_50().c_str())));
      sizes_list.push_back(f_50().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_55().c_str())));
      sizes_list.push_back(f_55().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_58().c_str())));
      sizes_list.push_back(f_58().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_68().c_str())));
      sizes_list.push_back(f_68().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_70().c_str())));
      sizes_list.push_back(f_70().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_91().c_str())));
      sizes_list.push_back(f_91().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_97().c_str())));
      sizes_list.push_back(f_97().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_106().c_str())));
      sizes_list.push_back(f_106().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_107().c_str())));
      sizes_list.push_back(f_107().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_108().c_str())));
      sizes_list.push_back(f_108().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_109().c_str())));
      sizes_list.push_back(f_109().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_110().c_str())));
      sizes_list.push_back(f_110().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_113().c_str())));
      sizes_list.push_back(f_113().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_116().c_str())));
      sizes_list.push_back(f_116().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_118().c_str())));
      sizes_list.push_back(f_118().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_119().c_str())));
      sizes_list.push_back(f_119().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_121().c_str())));
      sizes_list.push_back(f_121().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_125().c_str())));
      sizes_list.push_back(f_125().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_129().c_str())));
      sizes_list.push_back(f_129().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_131().c_str())));
      sizes_list.push_back(f_131().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_132().c_str())));
      sizes_list.push_back(f_132().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_133().c_str())));
      sizes_list.push_back(f_133().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_134().c_str())));
      sizes_list.push_back(f_134().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_135().c_str())));
      sizes_list.push_back(f_135().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_142().c_str())));
      sizes_list.push_back(f_142().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_143().c_str())));
      sizes_list.push_back(f_143().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_148().c_str())));
      sizes_list.push_back(f_148().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_149().c_str())));
      sizes_list.push_back(f_149().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_151().c_str())));
      sizes_list.push_back(f_151().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_153().c_str())));
      sizes_list.push_back(f_153().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_155().c_str())));
      sizes_list.push_back(f_155().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_176().c_str())));
      sizes_list.push_back(f_176().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_177().c_str())));
      sizes_list.push_back(f_177().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_178().c_str())));
      sizes_list.push_back(f_178().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_179().c_str())));
      sizes_list.push_back(f_179().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_180().c_str())));
      sizes_list.push_back(f_180().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_186().c_str())));
      sizes_list.push_back(f_186().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_198().c_str())));
      sizes_list.push_back(f_198().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_204().c_str())));
      sizes_list.push_back(f_204().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_216().c_str())));
      sizes_list.push_back(f_216().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_222().c_str())));
      sizes_list.push_back(f_222().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_231().c_str())));
      sizes_list.push_back(f_231().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_232().c_str())));
      sizes_list.push_back(f_232().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_246().c_str())));
      sizes_list.push_back(f_246().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_247().c_str())));
      sizes_list.push_back(f_247().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_248().c_str())));
      sizes_list.push_back(f_248().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_253().c_str())));
      sizes_list.push_back(f_253().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_261().c_str())));
      sizes_list.push_back(f_261().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_268().c_str())));
      sizes_list.push_back(f_268().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_283().c_str())));
      sizes_list.push_back(f_283().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_289().c_str())));
      sizes_list.push_back(f_289().size());
      mutable_f_421()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_286_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_5().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_57().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_79().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_81().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_101().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_158().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_165().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_173().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_206().data())));
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_219_size(); ++i) {
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_219(i).c_str())));
      }
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_230().data())));
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_237_size(); ++i) {
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_237(i).c_str())));
      }
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_420_size(); ++i) {
        mutable_f_420(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_1().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_7().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_29().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_43().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_45().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_50().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_55().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_58().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_68().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_70().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_91().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_97().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_106().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_107().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_108().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_109().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_110().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_113().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_116().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_118().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_119().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_121().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_125().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_129().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_131().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_132().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_133().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_134().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_135().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_142().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_143().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_148().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_149().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_151().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_153().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_155().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_176().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_177().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_178().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_179().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_180().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_186().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_198().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_204().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_216().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_222().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_231().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_232().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_246().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_247().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_248().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_253().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_261().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_268().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_283().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_289().c_str())));
      mutable_f_421()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_286_);
      sizes.push_back(end_addr - start_addr + sizeof(f_286()));
      sizes.push_back(f_5().size() * sizeof(::int32_t));
      sizes.push_back(f_57().size() * sizeof(::int32_t));
      sizes.push_back(f_79().size() * sizeof(::int64_t));
      sizes.push_back(f_81().size() * sizeof(::int32_t));
      sizes.push_back(f_101().size() * sizeof(int));
      sizes.push_back(f_158().size() * sizeof(int));
      sizes.push_back(f_165().size() * sizeof(::int64_t));
      sizes.push_back(f_173().size() * sizeof(::int64_t));
      sizes.push_back(f_206().size() * sizeof(::int32_t));
      sizes.push_back(f_219().size());
      for (int i = 0; i < f_219_size(); ++i) {
        sizes.push_back(f_219(i).size());
      }
      sizes.push_back(f_230().size() * sizeof(::int32_t));
      sizes.push_back(f_237().size());
      for (int i = 0; i < f_237_size(); ++i) {
        sizes.push_back(f_237(i).size());
      }
      sizes.push_back(f_420().size());
      for (int i = 0; i < f_420_size(); ++i) {
        mutable_f_420(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_1().size());
      sizes.push_back(f_2().size());
      sizes.push_back(f_7().size());
      sizes.push_back(f_16().size());
      sizes.push_back(f_29().size());
      sizes.push_back(f_43().size());
      sizes.push_back(f_45().size());
      sizes.push_back(f_50().size());
      sizes.push_back(f_55().size());
      sizes.push_back(f_58().size());
      sizes.push_back(f_68().size());
      sizes.push_back(f_70().size());
      sizes.push_back(f_91().size());
      sizes.push_back(f_97().size());
      sizes.push_back(f_106().size());
      sizes.push_back(f_107().size());
      sizes.push_back(f_108().size());
      sizes.push_back(f_109().size());
      sizes.push_back(f_110().size());
      sizes.push_back(f_113().size());
      sizes.push_back(f_116().size());
      sizes.push_back(f_118().size());
      sizes.push_back(f_119().size());
      sizes.push_back(f_121().size());
      sizes.push_back(f_125().size());
      sizes.push_back(f_129().size());
      sizes.push_back(f_131().size());
      sizes.push_back(f_132().size());
      sizes.push_back(f_133().size());
      sizes.push_back(f_134().size());
      sizes.push_back(f_135().size());
      sizes.push_back(f_142().size());
      sizes.push_back(f_143().size());
      sizes.push_back(f_148().size());
      sizes.push_back(f_149().size());
      sizes.push_back(f_151().size());
      sizes.push_back(f_153().size());
      sizes.push_back(f_155().size());
      sizes.push_back(f_176().size());
      sizes.push_back(f_177().size());
      sizes.push_back(f_178().size());
      sizes.push_back(f_179().size());
      sizes.push_back(f_180().size());
      sizes.push_back(f_186().size());
      sizes.push_back(f_198().size());
      sizes.push_back(f_204().size());
      sizes.push_back(f_216().size());
      sizes.push_back(f_222().size());
      sizes.push_back(f_231().size());
      sizes.push_back(f_232().size());
      sizes.push_back(f_246().size());
      sizes.push_back(f_247().size());
      sizes.push_back(f_248().size());
      sizes.push_back(f_253().size());
      sizes.push_back(f_261().size());
      sizes.push_back(f_268().size());
      sizes.push_back(f_283().size());
      sizes.push_back(f_289().size());
      mutable_f_421()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_286_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      mutable_f_5()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_5().data())));
      mutable_f_57()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_57().data())));
      mutable_f_79()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_79().data())));
      mutable_f_81()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_81().data())));
      mutable_f_101()->Resize(sizes[idx++] / sizeof(int), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_101().data())));
      mutable_f_158()->Resize(sizes[idx++] / sizeof(int), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_158().data())));
      mutable_f_165()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_165().data())));
      mutable_f_173()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_173().data())));
      mutable_f_206()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_206().data())));
      size_t num_f_219_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_219_entries; ++i) {
          std::string tmp_str(sizes[idx++], 'x');  // Preallocate needed size
          add_f_219(std::move(tmp_str));
          ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_219(i).c_str())));
      }
      mutable_f_230()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_230().data())));
      size_t num_f_237_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_237_entries; ++i) {
          std::string tmp_str(sizes[idx++], 'x');  // Preallocate needed size
          add_f_237(std::move(tmp_str));
          ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_237(i).c_str())));
      }
      size_t num_f_420_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_420_entries; ++i) {
        auto* new_msg = add_f_420();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_420(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_1(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_1().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_2(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_7(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_7().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_16(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_29(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_29().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_43(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_43().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_45(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_45().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_50(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_50().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_55(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_55().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_58(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_58().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_68(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_68().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_70(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_70().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_91(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_91().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_97(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_97().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_106(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_106().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_107(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_107().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_108(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_108().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_109(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_109().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_110(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_110().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_113(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_113().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_116(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_116().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_118(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_118().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_119(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_119().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_121(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_121().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_125(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_125().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_129(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_129().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_131(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_131().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_132(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_132().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_133(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_133().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_134(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_134().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_135(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_135().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_142(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_142().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_143(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_143().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_148(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_148().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_149(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_149().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_151(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_151().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_153(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_153().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_155(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_155().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_176(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_176().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_177(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_177().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_178(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_178().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_179(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_179().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_180(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_180().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_186(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_186().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_198(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_198().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_204(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_204().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_216(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_216().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_222(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_222().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_231(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_231().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_232(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_232().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_246(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_246().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_247(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_247().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_248(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_248().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_253(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_253().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_261(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_261().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_268(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_268().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_283(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_283().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_289(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_289().c_str())));
      }
      idx = mutable_f_421()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      mutable_f_5()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      mutable_f_57()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      mutable_f_79()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      mutable_f_81()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      mutable_f_101()->Resize(sizes[idx++] / sizeof(int), 0);
      mutable_f_158()->Resize(sizes[idx++] / sizeof(int), 0);
      mutable_f_165()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      mutable_f_173()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      mutable_f_206()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      size_t num_f_219_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_219_entries; ++i) {
          std::string tmp_str(sizes[idx++], 'x');  // Preallocate needed size
          add_f_219(std::move(tmp_str));
      }
      mutable_f_230()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      size_t num_f_237_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_237_entries; ++i) {
          std::string tmp_str(sizes[idx++], 'x');  // Preallocate needed size
          add_f_237(std::move(tmp_str));
      }
      size_t num_f_420_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_420_entries; ++i) {
        auto* new_msg = add_f_420();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_420(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_1(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_2(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_7(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_16(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_29(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_43(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_45(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_50(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_55(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_58(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_68(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_70(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_91(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_97(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_106(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_107(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_108(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_109(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_110(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_113(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_116(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_118(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_119(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_121(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_125(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_129(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_131(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_132(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_133(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_134(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_135(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_142(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_143(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_148(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_149(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_151(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_153(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_155(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_176(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_177(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_178(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_179(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_180(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_186(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_198(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_204(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_216(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_222(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_231(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_232(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_246(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_247(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_248(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_253(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_261(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_268(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_283(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_289(std::move(tmp_str));
        }
      }
      idx = mutable_f_421()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF5FieldNumber = 9,
    kF57FieldNumber = 87,
    kF79FieldNumber = 117,
    kF81FieldNumber = 119,
    kF101FieldNumber = 153,
    kF158FieldNumber = 231,
    kF165FieldNumber = 240,
    kF173FieldNumber = 253,
    kF206FieldNumber = 296,
    kF219FieldNumber = 315,
    kF230FieldNumber = 333,
    kF237FieldNumber = 342,
    kF420FieldNumber = 421,
    kF1FieldNumber = 4,
    kF2FieldNumber = 5,
    kF7FieldNumber = 11,
    kF16FieldNumber = 23,
    kF29FieldNumber = 47,
    kF43FieldNumber = 69,
    kF45FieldNumber = 73,
    kF50FieldNumber = 78,
    kF55FieldNumber = 85,
    kF58FieldNumber = 88,
    kF68FieldNumber = 103,
    kF70FieldNumber = 105,
    kF91FieldNumber = 137,
    kF97FieldNumber = 144,
    kF106FieldNumber = 159,
    kF107FieldNumber = 161,
    kF108FieldNumber = 162,
    kF109FieldNumber = 163,
    kF110FieldNumber = 165,
    kF113FieldNumber = 169,
    kF116FieldNumber = 172,
    kF118FieldNumber = 176,
    kF119FieldNumber = 177,
    kF121FieldNumber = 179,
    kF125FieldNumber = 183,
    kF129FieldNumber = 188,
    kF131FieldNumber = 190,
    kF132FieldNumber = 191,
    kF133FieldNumber = 193,
    kF134FieldNumber = 195,
    kF135FieldNumber = 196,
    kF142FieldNumber = 205,
    kF143FieldNumber = 206,
    kF148FieldNumber = 215,
    kF149FieldNumber = 218,
    kF151FieldNumber = 220,
    kF153FieldNumber = 224,
    kF155FieldNumber = 228,
    kF176FieldNumber = 257,
    kF177FieldNumber = 258,
    kF178FieldNumber = 259,
    kF179FieldNumber = 260,
    kF180FieldNumber = 261,
    kF186FieldNumber = 267,
    kF198FieldNumber = 283,
    kF204FieldNumber = 291,
    kF216FieldNumber = 310,
    kF222FieldNumber = 319,
    kF231FieldNumber = 334,
    kF232FieldNumber = 335,
    kF246FieldNumber = 357,
    kF247FieldNumber = 358,
    kF248FieldNumber = 360,
    kF253FieldNumber = 366,
    kF261FieldNumber = 378,
    kF268FieldNumber = 389,
    kF283FieldNumber = 412,
    kF289FieldNumber = 420,
    kF421FieldNumber = 422,
    kF0FieldNumber = 1,
    kF3FieldNumber = 7,
    kF6FieldNumber = 10,
    kF4FieldNumber = 8,
    kF9FieldNumber = 13,
    kF8FieldNumber = 12,
    kF10FieldNumber = 14,
    kF11FieldNumber = 16,
    kF12FieldNumber = 18,
    kF13FieldNumber = 19,
    kF14FieldNumber = 20,
    kF15FieldNumber = 21,
    kF18FieldNumber = 27,
    kF19FieldNumber = 28,
    kF17FieldNumber = 26,
    kF20FieldNumber = 31,
    kF21FieldNumber = 34,
    kF22FieldNumber = 37,
    kF25FieldNumber = 42,
    kF24FieldNumber = 41,
    kF26FieldNumber = 43,
    kF27FieldNumber = 45,
    kF28FieldNumber = 46,
    kF30FieldNumber = 49,
    kF32FieldNumber = 52,
    kF31FieldNumber = 51,
    kF33FieldNumber = 53,
    kF34FieldNumber = 54,
    kF35FieldNumber = 55,
    kF36FieldNumber = 57,
    kF37FieldNumber = 58,
    kF38FieldNumber = 59,
    kF40FieldNumber = 62,
    kF39FieldNumber = 60,
    kF41FieldNumber = 64,
    kF42FieldNumber = 66,
    kF44FieldNumber = 71,
    kF47FieldNumber = 75,
    kF46FieldNumber = 74,
    kF48FieldNumber = 76,
    kF49FieldNumber = 77,
    kF51FieldNumber = 80,
    kF52FieldNumber = 81,
    kF54FieldNumber = 84,
    kF53FieldNumber = 83,
    kF56FieldNumber = 86,
    kF60FieldNumber = 91,
    kF59FieldNumber = 90,
    kF61FieldNumber = 94,
    kF62FieldNumber = 95,
    kF63FieldNumber = 97,
    kF65FieldNumber = 100,
    kF64FieldNumber = 99,
    kF66FieldNumber = 101,
    kF69FieldNumber = 104,
    kF71FieldNumber = 106,
    kF67FieldNumber = 102,
    kF76FieldNumber = 114,
    kF72FieldNumber = 109,
    kF73FieldNumber = 111,
    kF74FieldNumber = 112,
    kF75FieldNumber = 113,
    kF77FieldNumber = 115,
    kF78FieldNumber = 116,
    kF23FieldNumber = 39,
    kF90FieldNumber = 134,
    kF94FieldNumber = 140,
    kF102FieldNumber = 154,
    kF80FieldNumber = 118,
    kF82FieldNumber = 120,
    kF83FieldNumber = 122,
    kF84FieldNumber = 124,
    kF86FieldNumber = 127,
    kF85FieldNumber = 126,
    kF87FieldNumber = 128,
    kF88FieldNumber = 130,
    kF89FieldNumber = 132,
    kF93FieldNumber = 139,
    kF92FieldNumber = 138,
    kF95FieldNumber = 142,
    kF98FieldNumber = 147,
    kF96FieldNumber = 143,
    kF100FieldNumber = 151,
    kF99FieldNumber = 149,
    kF103FieldNumber = 155,
    kF104FieldNumber = 156,
    kF105FieldNumber = 158,
    kF111FieldNumber = 166,
    kF112FieldNumber = 167,
    kF114FieldNumber = 170,
    kF117FieldNumber = 173,
    kF115FieldNumber = 171,
    kF120FieldNumber = 178,
    kF124FieldNumber = 182,
    kF122FieldNumber = 180,
    kF126FieldNumber = 184,
    kF127FieldNumber = 185,
    kF128FieldNumber = 186,
    kF130FieldNumber = 189,
    kF137FieldNumber = 199,
    kF136FieldNumber = 198,
    kF138FieldNumber = 200,
    kF139FieldNumber = 201,
    kF123FieldNumber = 181,
    kF141FieldNumber = 203,
    kF144FieldNumber = 209,
    kF147FieldNumber = 214,
    kF140FieldNumber = 202,
    kF145FieldNumber = 210,
    kF146FieldNumber = 213,
    kF152FieldNumber = 222,
    kF150FieldNumber = 219,
    kF154FieldNumber = 226,
    kF157FieldNumber = 230,
    kF156FieldNumber = 229,
    kF159FieldNumber = 232,
    kF160FieldNumber = 234,
    kF161FieldNumber = 235,
    kF162FieldNumber = 236,
    kF163FieldNumber = 237,
    kF164FieldNumber = 239,
    kF166FieldNumber = 242,
    kF168FieldNumber = 247,
    kF169FieldNumber = 248,
    kF170FieldNumber = 249,
    kF171FieldNumber = 250,
    kF172FieldNumber = 252,
    kF174FieldNumber = 255,
    kF175FieldNumber = 256,
    kF181FieldNumber = 262,
    kF182FieldNumber = 263,
    kF184FieldNumber = 265,
    kF183FieldNumber = 264,
    kF185FieldNumber = 266,
    kF188FieldNumber = 271,
    kF189FieldNumber = 272,
    kF191FieldNumber = 274,
    kF192FieldNumber = 275,
    kF190FieldNumber = 273,
    kF193FieldNumber = 277,
    kF194FieldNumber = 278,
    kF195FieldNumber = 279,
    kF197FieldNumber = 281,
    kF196FieldNumber = 280,
    kF167FieldNumber = 245,
    kF187FieldNumber = 270,
    kF202FieldNumber = 289,
    kF225FieldNumber = 323,
    kF199FieldNumber = 284,
    kF200FieldNumber = 286,
    kF201FieldNumber = 288,
    kF203FieldNumber = 290,
    kF205FieldNumber = 294,
    kF207FieldNumber = 297,
    kF208FieldNumber = 298,
    kF209FieldNumber = 301,
    kF210FieldNumber = 302,
    kF212FieldNumber = 305,
    kF213FieldNumber = 306,
    kF211FieldNumber = 304,
    kF214FieldNumber = 308,
    kF215FieldNumber = 309,
    kF218FieldNumber = 313,
    kF217FieldNumber = 312,
    kF220FieldNumber = 316,
    kF221FieldNumber = 317,
    kF224FieldNumber = 322,
    kF223FieldNumber = 321,
    kF227FieldNumber = 326,
    kF226FieldNumber = 324,
    kF229FieldNumber = 332,
    kF234FieldNumber = 338,
    kF233FieldNumber = 337,
    kF235FieldNumber = 339,
    kF236FieldNumber = 341,
    kF239FieldNumber = 346,
    kF238FieldNumber = 345,
    kF240FieldNumber = 349,
    kF241FieldNumber = 351,
    kF242FieldNumber = 352,
    kF243FieldNumber = 353,
    kF244FieldNumber = 354,
    kF245FieldNumber = 355,
    kF249FieldNumber = 361,
    kF250FieldNumber = 363,
    kF228FieldNumber = 328,
    kF256FieldNumber = 370,
    kF259FieldNumber = 375,
    kF262FieldNumber = 379,
    kF252FieldNumber = 365,
    kF251FieldNumber = 364,
    kF254FieldNumber = 368,
    kF257FieldNumber = 372,
    kF258FieldNumber = 373,
    kF255FieldNumber = 369,
    kF264FieldNumber = 382,
    kF260FieldNumber = 376,
    kF263FieldNumber = 381,
    kF266FieldNumber = 386,
    kF265FieldNumber = 383,
    kF269FieldNumber = 393,
    kF270FieldNumber = 394,
    kF271FieldNumber = 395,
    kF274FieldNumber = 398,
    kF272FieldNumber = 396,
    kF275FieldNumber = 400,
    kF276FieldNumber = 401,
    kF267FieldNumber = 388,
    kF273FieldNumber = 397,
    kF279FieldNumber = 407,
    kF288FieldNumber = 419,
    kF277FieldNumber = 403,
    kF278FieldNumber = 406,
    kF281FieldNumber = 409,
    kF280FieldNumber = 408,
    kF282FieldNumber = 410,
    kF284FieldNumber = 414,
    kF285FieldNumber = 415,
    kF287FieldNumber = 417,
    kF286FieldNumber = 416,
  };
  // repeated int32 f_5 = 9 [packed = true];
  int f_5_size() const;
  private:
  int _internal_f_5_size() const;

  public:
  void clear_f_5() ;
  ::int32_t f_5(int index) const;
  void set_f_5(int index, ::int32_t value);
  void add_f_5(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& f_5() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_f_5();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_f_5() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_f_5();

  public:
  // repeated int32 f_57 = 87 [packed = true];
  int f_57_size() const;
  private:
  int _internal_f_57_size() const;

  public:
  void clear_f_57() ;
  ::int32_t f_57(int index) const;
  void set_f_57(int index, ::int32_t value);
  void add_f_57(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& f_57() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_f_57();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_f_57() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_f_57();

  public:
  // repeated int64 f_79 = 117 [packed = true];
  int f_79_size() const;
  private:
  int _internal_f_79_size() const;

  public:
  void clear_f_79() ;
  ::int64_t f_79(int index) const;
  void set_f_79(int index, ::int64_t value);
  void add_f_79(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& f_79() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_f_79();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_f_79() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_f_79();

  public:
  // repeated int32 f_81 = 119 [packed = true];
  int f_81_size() const;
  private:
  int _internal_f_81_size() const;

  public:
  void clear_f_81() ;
  ::int32_t f_81(int index) const;
  void set_f_81(int index, ::int32_t value);
  void add_f_81(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& f_81() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_f_81();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_f_81() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_f_81();

  public:
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E73 f_101 = 153 [packed = true];
  int f_101_size() const;
  private:
  int _internal_f_101_size() const;

  public:
  void clear_f_101() ;
  public:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73 f_101(int index) const;
  void set_f_101(int index, ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73 value);
  void add_f_101(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73 value);
  const ::google::protobuf::RepeatedField<int>& f_101() const;
  ::google::protobuf::RepeatedField<int>* mutable_f_101();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_f_101() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_f_101();

  public:
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E79 f_158 = 231 [packed = true];
  int f_158_size() const;
  private:
  int _internal_f_158_size() const;

  public:
  void clear_f_158() ;
  public:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79 f_158(int index) const;
  void set_f_158(int index, ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79 value);
  void add_f_158(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79 value);
  const ::google::protobuf::RepeatedField<int>& f_158() const;
  ::google::protobuf::RepeatedField<int>* mutable_f_158();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_f_158() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_f_158();

  public:
  // repeated int64 f_165 = 240 [packed = true];
  int f_165_size() const;
  private:
  int _internal_f_165_size() const;

  public:
  void clear_f_165() ;
  ::int64_t f_165(int index) const;
  void set_f_165(int index, ::int64_t value);
  void add_f_165(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& f_165() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_f_165();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_f_165() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_f_165();

  public:
  // repeated int64 f_173 = 253 [packed = true];
  int f_173_size() const;
  private:
  int _internal_f_173_size() const;

  public:
  void clear_f_173() ;
  ::int64_t f_173(int index) const;
  void set_f_173(int index, ::int64_t value);
  void add_f_173(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& f_173() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_f_173();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_f_173() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_f_173();

  public:
  // repeated int32 f_206 = 296 [packed = true];
  int f_206_size() const;
  private:
  int _internal_f_206_size() const;

  public:
  void clear_f_206() ;
  ::int32_t f_206(int index) const;
  void set_f_206(int index, ::int32_t value);
  void add_f_206(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& f_206() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_f_206();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_f_206() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_f_206();

  public:
  // repeated string f_219 = 315;
  int f_219_size() const;
  private:
  int _internal_f_219_size() const;

  public:
  void clear_f_219() ;
  const std::string& f_219(int index) const;
  std::string* mutable_f_219(int index);
  void set_f_219(int index, const std::string& value);
  void set_f_219(int index, std::string&& value);
  void set_f_219(int index, const char* value);
  void set_f_219(int index, const char* value, std::size_t size);
  void set_f_219(int index, absl::string_view value);
  std::string* add_f_219();
  void add_f_219(const std::string& value);
  void add_f_219(std::string&& value);
  void add_f_219(const char* value);
  void add_f_219(const char* value, std::size_t size);
  void add_f_219(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& f_219() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_f_219();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_f_219() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_f_219();

  public:
  // repeated int32 f_230 = 333 [packed = true];
  int f_230_size() const;
  private:
  int _internal_f_230_size() const;

  public:
  void clear_f_230() ;
  ::int32_t f_230(int index) const;
  void set_f_230(int index, ::int32_t value);
  void add_f_230(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& f_230() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_f_230();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_f_230() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_f_230();

  public:
  // repeated string f_237 = 342;
  int f_237_size() const;
  private:
  int _internal_f_237_size() const;

  public:
  void clear_f_237() ;
  const std::string& f_237(int index) const;
  std::string* mutable_f_237(int index);
  void set_f_237(int index, const std::string& value);
  void set_f_237(int index, std::string&& value);
  void set_f_237(int index, const char* value);
  void set_f_237(int index, const char* value, std::size_t size);
  void set_f_237(int index, absl::string_view value);
  std::string* add_f_237();
  void add_f_237(const std::string& value);
  void add_f_237(std::string&& value);
  void add_f_237(const char* value);
  void add_f_237(const char* value, std::size_t size);
  void add_f_237(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& f_237() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_f_237();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_f_237() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_f_237();

  public:
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M74 f_420 = 421;
  int f_420_size() const;
  private:
  int _internal_f_420_size() const;

  public:
  void clear_f_420() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74* mutable_f_420(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74>* mutable_f_420();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74>& _internal_f_420() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74>* _internal_mutable_f_420();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& f_420(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74* add_f_420();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74>& f_420() const;
  // optional bytes f_1 = 4;
  bool has_f_1() const;
  void clear_f_1() ;
  const std::string& f_1() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_1(Arg_&& arg, Args_... args);
  std::string* mutable_f_1();
  PROTOBUF_NODISCARD std::string* release_f_1();
  void set_allocated_f_1(std::string* value);

  private:
  const std::string& _internal_f_1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_1(
      const std::string& value);
  std::string* _internal_mutable_f_1();

  public:
  // optional string f_2 = 5;
  bool has_f_2() const;
  void clear_f_2() ;
  const std::string& f_2() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_2(Arg_&& arg, Args_... args);
  std::string* mutable_f_2();
  PROTOBUF_NODISCARD std::string* release_f_2();
  void set_allocated_f_2(std::string* value);

  private:
  const std::string& _internal_f_2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_2(
      const std::string& value);
  std::string* _internal_mutable_f_2();

  public:
  // optional string f_7 = 11;
  bool has_f_7() const;
  void clear_f_7() ;
  const std::string& f_7() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_7(Arg_&& arg, Args_... args);
  std::string* mutable_f_7();
  PROTOBUF_NODISCARD std::string* release_f_7();
  void set_allocated_f_7(std::string* value);

  private:
  const std::string& _internal_f_7() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_7(
      const std::string& value);
  std::string* _internal_mutable_f_7();

  public:
  // optional string f_16 = 23;
  bool has_f_16() const;
  void clear_f_16() ;
  const std::string& f_16() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_16(Arg_&& arg, Args_... args);
  std::string* mutable_f_16();
  PROTOBUF_NODISCARD std::string* release_f_16();
  void set_allocated_f_16(std::string* value);

  private:
  const std::string& _internal_f_16() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_16(
      const std::string& value);
  std::string* _internal_mutable_f_16();

  public:
  // optional bytes f_29 = 47;
  bool has_f_29() const;
  void clear_f_29() ;
  const std::string& f_29() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_29(Arg_&& arg, Args_... args);
  std::string* mutable_f_29();
  PROTOBUF_NODISCARD std::string* release_f_29();
  void set_allocated_f_29(std::string* value);

  private:
  const std::string& _internal_f_29() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_29(
      const std::string& value);
  std::string* _internal_mutable_f_29();

  public:
  // optional string f_43 = 69;
  bool has_f_43() const;
  void clear_f_43() ;
  const std::string& f_43() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_43(Arg_&& arg, Args_... args);
  std::string* mutable_f_43();
  PROTOBUF_NODISCARD std::string* release_f_43();
  void set_allocated_f_43(std::string* value);

  private:
  const std::string& _internal_f_43() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_43(
      const std::string& value);
  std::string* _internal_mutable_f_43();

  public:
  // optional string f_45 = 73;
  bool has_f_45() const;
  void clear_f_45() ;
  const std::string& f_45() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_45(Arg_&& arg, Args_... args);
  std::string* mutable_f_45();
  PROTOBUF_NODISCARD std::string* release_f_45();
  void set_allocated_f_45(std::string* value);

  private:
  const std::string& _internal_f_45() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_45(
      const std::string& value);
  std::string* _internal_mutable_f_45();

  public:
  // optional string f_50 = 78;
  bool has_f_50() const;
  void clear_f_50() ;
  const std::string& f_50() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_50(Arg_&& arg, Args_... args);
  std::string* mutable_f_50();
  PROTOBUF_NODISCARD std::string* release_f_50();
  void set_allocated_f_50(std::string* value);

  private:
  const std::string& _internal_f_50() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_50(
      const std::string& value);
  std::string* _internal_mutable_f_50();

  public:
  // optional string f_55 = 85;
  bool has_f_55() const;
  void clear_f_55() ;
  const std::string& f_55() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_55(Arg_&& arg, Args_... args);
  std::string* mutable_f_55();
  PROTOBUF_NODISCARD std::string* release_f_55();
  void set_allocated_f_55(std::string* value);

  private:
  const std::string& _internal_f_55() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_55(
      const std::string& value);
  std::string* _internal_mutable_f_55();

  public:
  // optional string f_58 = 88;
  bool has_f_58() const;
  void clear_f_58() ;
  const std::string& f_58() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_58(Arg_&& arg, Args_... args);
  std::string* mutable_f_58();
  PROTOBUF_NODISCARD std::string* release_f_58();
  void set_allocated_f_58(std::string* value);

  private:
  const std::string& _internal_f_58() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_58(
      const std::string& value);
  std::string* _internal_mutable_f_58();

  public:
  // optional string f_68 = 103;
  bool has_f_68() const;
  void clear_f_68() ;
  const std::string& f_68() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_68(Arg_&& arg, Args_... args);
  std::string* mutable_f_68();
  PROTOBUF_NODISCARD std::string* release_f_68();
  void set_allocated_f_68(std::string* value);

  private:
  const std::string& _internal_f_68() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_68(
      const std::string& value);
  std::string* _internal_mutable_f_68();

  public:
  // optional bytes f_70 = 105;
  bool has_f_70() const;
  void clear_f_70() ;
  const std::string& f_70() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_70(Arg_&& arg, Args_... args);
  std::string* mutable_f_70();
  PROTOBUF_NODISCARD std::string* release_f_70();
  void set_allocated_f_70(std::string* value);

  private:
  const std::string& _internal_f_70() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_70(
      const std::string& value);
  std::string* _internal_mutable_f_70();

  public:
  // optional string f_91 = 137;
  bool has_f_91() const;
  void clear_f_91() ;
  const std::string& f_91() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_91(Arg_&& arg, Args_... args);
  std::string* mutable_f_91();
  PROTOBUF_NODISCARD std::string* release_f_91();
  void set_allocated_f_91(std::string* value);

  private:
  const std::string& _internal_f_91() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_91(
      const std::string& value);
  std::string* _internal_mutable_f_91();

  public:
  // optional string f_97 = 144;
  bool has_f_97() const;
  void clear_f_97() ;
  const std::string& f_97() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_97(Arg_&& arg, Args_... args);
  std::string* mutable_f_97();
  PROTOBUF_NODISCARD std::string* release_f_97();
  void set_allocated_f_97(std::string* value);

  private:
  const std::string& _internal_f_97() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_97(
      const std::string& value);
  std::string* _internal_mutable_f_97();

  public:
  // optional string f_106 = 159;
  bool has_f_106() const;
  void clear_f_106() ;
  const std::string& f_106() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_106(Arg_&& arg, Args_... args);
  std::string* mutable_f_106();
  PROTOBUF_NODISCARD std::string* release_f_106();
  void set_allocated_f_106(std::string* value);

  private:
  const std::string& _internal_f_106() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_106(
      const std::string& value);
  std::string* _internal_mutable_f_106();

  public:
  // optional bytes f_107 = 161;
  bool has_f_107() const;
  void clear_f_107() ;
  const std::string& f_107() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_107(Arg_&& arg, Args_... args);
  std::string* mutable_f_107();
  PROTOBUF_NODISCARD std::string* release_f_107();
  void set_allocated_f_107(std::string* value);

  private:
  const std::string& _internal_f_107() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_107(
      const std::string& value);
  std::string* _internal_mutable_f_107();

  public:
  // optional string f_108 = 162;
  bool has_f_108() const;
  void clear_f_108() ;
  const std::string& f_108() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_108(Arg_&& arg, Args_... args);
  std::string* mutable_f_108();
  PROTOBUF_NODISCARD std::string* release_f_108();
  void set_allocated_f_108(std::string* value);

  private:
  const std::string& _internal_f_108() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_108(
      const std::string& value);
  std::string* _internal_mutable_f_108();

  public:
  // optional string f_109 = 163;
  bool has_f_109() const;
  void clear_f_109() ;
  const std::string& f_109() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_109(Arg_&& arg, Args_... args);
  std::string* mutable_f_109();
  PROTOBUF_NODISCARD std::string* release_f_109();
  void set_allocated_f_109(std::string* value);

  private:
  const std::string& _internal_f_109() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_109(
      const std::string& value);
  std::string* _internal_mutable_f_109();

  public:
  // optional string f_110 = 165;
  bool has_f_110() const;
  void clear_f_110() ;
  const std::string& f_110() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_110(Arg_&& arg, Args_... args);
  std::string* mutable_f_110();
  PROTOBUF_NODISCARD std::string* release_f_110();
  void set_allocated_f_110(std::string* value);

  private:
  const std::string& _internal_f_110() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_110(
      const std::string& value);
  std::string* _internal_mutable_f_110();

  public:
  // optional string f_113 = 169;
  bool has_f_113() const;
  void clear_f_113() ;
  const std::string& f_113() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_113(Arg_&& arg, Args_... args);
  std::string* mutable_f_113();
  PROTOBUF_NODISCARD std::string* release_f_113();
  void set_allocated_f_113(std::string* value);

  private:
  const std::string& _internal_f_113() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_113(
      const std::string& value);
  std::string* _internal_mutable_f_113();

  public:
  // optional string f_116 = 172;
  bool has_f_116() const;
  void clear_f_116() ;
  const std::string& f_116() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_116(Arg_&& arg, Args_... args);
  std::string* mutable_f_116();
  PROTOBUF_NODISCARD std::string* release_f_116();
  void set_allocated_f_116(std::string* value);

  private:
  const std::string& _internal_f_116() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_116(
      const std::string& value);
  std::string* _internal_mutable_f_116();

  public:
  // optional string f_118 = 176;
  bool has_f_118() const;
  void clear_f_118() ;
  const std::string& f_118() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_118(Arg_&& arg, Args_... args);
  std::string* mutable_f_118();
  PROTOBUF_NODISCARD std::string* release_f_118();
  void set_allocated_f_118(std::string* value);

  private:
  const std::string& _internal_f_118() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_118(
      const std::string& value);
  std::string* _internal_mutable_f_118();

  public:
  // optional string f_119 = 177;
  bool has_f_119() const;
  void clear_f_119() ;
  const std::string& f_119() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_119(Arg_&& arg, Args_... args);
  std::string* mutable_f_119();
  PROTOBUF_NODISCARD std::string* release_f_119();
  void set_allocated_f_119(std::string* value);

  private:
  const std::string& _internal_f_119() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_119(
      const std::string& value);
  std::string* _internal_mutable_f_119();

  public:
  // optional string f_121 = 179;
  bool has_f_121() const;
  void clear_f_121() ;
  const std::string& f_121() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_121(Arg_&& arg, Args_... args);
  std::string* mutable_f_121();
  PROTOBUF_NODISCARD std::string* release_f_121();
  void set_allocated_f_121(std::string* value);

  private:
  const std::string& _internal_f_121() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_121(
      const std::string& value);
  std::string* _internal_mutable_f_121();

  public:
  // optional string f_125 = 183;
  bool has_f_125() const;
  void clear_f_125() ;
  const std::string& f_125() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_125(Arg_&& arg, Args_... args);
  std::string* mutable_f_125();
  PROTOBUF_NODISCARD std::string* release_f_125();
  void set_allocated_f_125(std::string* value);

  private:
  const std::string& _internal_f_125() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_125(
      const std::string& value);
  std::string* _internal_mutable_f_125();

  public:
  // optional string f_129 = 188;
  bool has_f_129() const;
  void clear_f_129() ;
  const std::string& f_129() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_129(Arg_&& arg, Args_... args);
  std::string* mutable_f_129();
  PROTOBUF_NODISCARD std::string* release_f_129();
  void set_allocated_f_129(std::string* value);

  private:
  const std::string& _internal_f_129() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_129(
      const std::string& value);
  std::string* _internal_mutable_f_129();

  public:
  // optional string f_131 = 190;
  bool has_f_131() const;
  void clear_f_131() ;
  const std::string& f_131() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_131(Arg_&& arg, Args_... args);
  std::string* mutable_f_131();
  PROTOBUF_NODISCARD std::string* release_f_131();
  void set_allocated_f_131(std::string* value);

  private:
  const std::string& _internal_f_131() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_131(
      const std::string& value);
  std::string* _internal_mutable_f_131();

  public:
  // optional string f_132 = 191;
  bool has_f_132() const;
  void clear_f_132() ;
  const std::string& f_132() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_132(Arg_&& arg, Args_... args);
  std::string* mutable_f_132();
  PROTOBUF_NODISCARD std::string* release_f_132();
  void set_allocated_f_132(std::string* value);

  private:
  const std::string& _internal_f_132() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_132(
      const std::string& value);
  std::string* _internal_mutable_f_132();

  public:
  // optional string f_133 = 193;
  bool has_f_133() const;
  void clear_f_133() ;
  const std::string& f_133() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_133(Arg_&& arg, Args_... args);
  std::string* mutable_f_133();
  PROTOBUF_NODISCARD std::string* release_f_133();
  void set_allocated_f_133(std::string* value);

  private:
  const std::string& _internal_f_133() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_133(
      const std::string& value);
  std::string* _internal_mutable_f_133();

  public:
  // optional string f_134 = 195;
  bool has_f_134() const;
  void clear_f_134() ;
  const std::string& f_134() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_134(Arg_&& arg, Args_... args);
  std::string* mutable_f_134();
  PROTOBUF_NODISCARD std::string* release_f_134();
  void set_allocated_f_134(std::string* value);

  private:
  const std::string& _internal_f_134() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_134(
      const std::string& value);
  std::string* _internal_mutable_f_134();

  public:
  // optional string f_135 = 196;
  bool has_f_135() const;
  void clear_f_135() ;
  const std::string& f_135() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_135(Arg_&& arg, Args_... args);
  std::string* mutable_f_135();
  PROTOBUF_NODISCARD std::string* release_f_135();
  void set_allocated_f_135(std::string* value);

  private:
  const std::string& _internal_f_135() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_135(
      const std::string& value);
  std::string* _internal_mutable_f_135();

  public:
  // optional string f_142 = 205;
  bool has_f_142() const;
  void clear_f_142() ;
  const std::string& f_142() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_142(Arg_&& arg, Args_... args);
  std::string* mutable_f_142();
  PROTOBUF_NODISCARD std::string* release_f_142();
  void set_allocated_f_142(std::string* value);

  private:
  const std::string& _internal_f_142() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_142(
      const std::string& value);
  std::string* _internal_mutable_f_142();

  public:
  // optional string f_143 = 206;
  bool has_f_143() const;
  void clear_f_143() ;
  const std::string& f_143() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_143(Arg_&& arg, Args_... args);
  std::string* mutable_f_143();
  PROTOBUF_NODISCARD std::string* release_f_143();
  void set_allocated_f_143(std::string* value);

  private:
  const std::string& _internal_f_143() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_143(
      const std::string& value);
  std::string* _internal_mutable_f_143();

  public:
  // optional string f_148 = 215;
  bool has_f_148() const;
  void clear_f_148() ;
  const std::string& f_148() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_148(Arg_&& arg, Args_... args);
  std::string* mutable_f_148();
  PROTOBUF_NODISCARD std::string* release_f_148();
  void set_allocated_f_148(std::string* value);

  private:
  const std::string& _internal_f_148() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_148(
      const std::string& value);
  std::string* _internal_mutable_f_148();

  public:
  // optional string f_149 = 218;
  bool has_f_149() const;
  void clear_f_149() ;
  const std::string& f_149() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_149(Arg_&& arg, Args_... args);
  std::string* mutable_f_149();
  PROTOBUF_NODISCARD std::string* release_f_149();
  void set_allocated_f_149(std::string* value);

  private:
  const std::string& _internal_f_149() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_149(
      const std::string& value);
  std::string* _internal_mutable_f_149();

  public:
  // optional bytes f_151 = 220;
  bool has_f_151() const;
  void clear_f_151() ;
  const std::string& f_151() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_151(Arg_&& arg, Args_... args);
  std::string* mutable_f_151();
  PROTOBUF_NODISCARD std::string* release_f_151();
  void set_allocated_f_151(std::string* value);

  private:
  const std::string& _internal_f_151() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_151(
      const std::string& value);
  std::string* _internal_mutable_f_151();

  public:
  // optional string f_153 = 224;
  bool has_f_153() const;
  void clear_f_153() ;
  const std::string& f_153() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_153(Arg_&& arg, Args_... args);
  std::string* mutable_f_153();
  PROTOBUF_NODISCARD std::string* release_f_153();
  void set_allocated_f_153(std::string* value);

  private:
  const std::string& _internal_f_153() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_153(
      const std::string& value);
  std::string* _internal_mutable_f_153();

  public:
  // optional string f_155 = 228;
  bool has_f_155() const;
  void clear_f_155() ;
  const std::string& f_155() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_155(Arg_&& arg, Args_... args);
  std::string* mutable_f_155();
  PROTOBUF_NODISCARD std::string* release_f_155();
  void set_allocated_f_155(std::string* value);

  private:
  const std::string& _internal_f_155() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_155(
      const std::string& value);
  std::string* _internal_mutable_f_155();

  public:
  // optional bytes f_176 = 257;
  bool has_f_176() const;
  void clear_f_176() ;
  const std::string& f_176() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_176(Arg_&& arg, Args_... args);
  std::string* mutable_f_176();
  PROTOBUF_NODISCARD std::string* release_f_176();
  void set_allocated_f_176(std::string* value);

  private:
  const std::string& _internal_f_176() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_176(
      const std::string& value);
  std::string* _internal_mutable_f_176();

  public:
  // optional string f_177 = 258;
  bool has_f_177() const;
  void clear_f_177() ;
  const std::string& f_177() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_177(Arg_&& arg, Args_... args);
  std::string* mutable_f_177();
  PROTOBUF_NODISCARD std::string* release_f_177();
  void set_allocated_f_177(std::string* value);

  private:
  const std::string& _internal_f_177() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_177(
      const std::string& value);
  std::string* _internal_mutable_f_177();

  public:
  // optional string f_178 = 259;
  bool has_f_178() const;
  void clear_f_178() ;
  const std::string& f_178() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_178(Arg_&& arg, Args_... args);
  std::string* mutable_f_178();
  PROTOBUF_NODISCARD std::string* release_f_178();
  void set_allocated_f_178(std::string* value);

  private:
  const std::string& _internal_f_178() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_178(
      const std::string& value);
  std::string* _internal_mutable_f_178();

  public:
  // optional string f_179 = 260;
  bool has_f_179() const;
  void clear_f_179() ;
  const std::string& f_179() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_179(Arg_&& arg, Args_... args);
  std::string* mutable_f_179();
  PROTOBUF_NODISCARD std::string* release_f_179();
  void set_allocated_f_179(std::string* value);

  private:
  const std::string& _internal_f_179() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_179(
      const std::string& value);
  std::string* _internal_mutable_f_179();

  public:
  // optional string f_180 = 261;
  bool has_f_180() const;
  void clear_f_180() ;
  const std::string& f_180() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_180(Arg_&& arg, Args_... args);
  std::string* mutable_f_180();
  PROTOBUF_NODISCARD std::string* release_f_180();
  void set_allocated_f_180(std::string* value);

  private:
  const std::string& _internal_f_180() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_180(
      const std::string& value);
  std::string* _internal_mutable_f_180();

  public:
  // optional string f_186 = 267;
  bool has_f_186() const;
  void clear_f_186() ;
  const std::string& f_186() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_186(Arg_&& arg, Args_... args);
  std::string* mutable_f_186();
  PROTOBUF_NODISCARD std::string* release_f_186();
  void set_allocated_f_186(std::string* value);

  private:
  const std::string& _internal_f_186() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_186(
      const std::string& value);
  std::string* _internal_mutable_f_186();

  public:
  // optional string f_198 = 283;
  bool has_f_198() const;
  void clear_f_198() ;
  const std::string& f_198() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_198(Arg_&& arg, Args_... args);
  std::string* mutable_f_198();
  PROTOBUF_NODISCARD std::string* release_f_198();
  void set_allocated_f_198(std::string* value);

  private:
  const std::string& _internal_f_198() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_198(
      const std::string& value);
  std::string* _internal_mutable_f_198();

  public:
  // optional string f_204 = 291;
  bool has_f_204() const;
  void clear_f_204() ;
  const std::string& f_204() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_204(Arg_&& arg, Args_... args);
  std::string* mutable_f_204();
  PROTOBUF_NODISCARD std::string* release_f_204();
  void set_allocated_f_204(std::string* value);

  private:
  const std::string& _internal_f_204() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_204(
      const std::string& value);
  std::string* _internal_mutable_f_204();

  public:
  // optional string f_216 = 310;
  bool has_f_216() const;
  void clear_f_216() ;
  const std::string& f_216() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_216(Arg_&& arg, Args_... args);
  std::string* mutable_f_216();
  PROTOBUF_NODISCARD std::string* release_f_216();
  void set_allocated_f_216(std::string* value);

  private:
  const std::string& _internal_f_216() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_216(
      const std::string& value);
  std::string* _internal_mutable_f_216();

  public:
  // optional bytes f_222 = 319;
  bool has_f_222() const;
  void clear_f_222() ;
  const std::string& f_222() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_222(Arg_&& arg, Args_... args);
  std::string* mutable_f_222();
  PROTOBUF_NODISCARD std::string* release_f_222();
  void set_allocated_f_222(std::string* value);

  private:
  const std::string& _internal_f_222() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_222(
      const std::string& value);
  std::string* _internal_mutable_f_222();

  public:
  // optional bytes f_231 = 334;
  bool has_f_231() const;
  void clear_f_231() ;
  const std::string& f_231() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_231(Arg_&& arg, Args_... args);
  std::string* mutable_f_231();
  PROTOBUF_NODISCARD std::string* release_f_231();
  void set_allocated_f_231(std::string* value);

  private:
  const std::string& _internal_f_231() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_231(
      const std::string& value);
  std::string* _internal_mutable_f_231();

  public:
  // optional string f_232 = 335;
  bool has_f_232() const;
  void clear_f_232() ;
  const std::string& f_232() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_232(Arg_&& arg, Args_... args);
  std::string* mutable_f_232();
  PROTOBUF_NODISCARD std::string* release_f_232();
  void set_allocated_f_232(std::string* value);

  private:
  const std::string& _internal_f_232() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_232(
      const std::string& value);
  std::string* _internal_mutable_f_232();

  public:
  // optional string f_246 = 357;
  bool has_f_246() const;
  void clear_f_246() ;
  const std::string& f_246() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_246(Arg_&& arg, Args_... args);
  std::string* mutable_f_246();
  PROTOBUF_NODISCARD std::string* release_f_246();
  void set_allocated_f_246(std::string* value);

  private:
  const std::string& _internal_f_246() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_246(
      const std::string& value);
  std::string* _internal_mutable_f_246();

  public:
  // optional string f_247 = 358;
  bool has_f_247() const;
  void clear_f_247() ;
  const std::string& f_247() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_247(Arg_&& arg, Args_... args);
  std::string* mutable_f_247();
  PROTOBUF_NODISCARD std::string* release_f_247();
  void set_allocated_f_247(std::string* value);

  private:
  const std::string& _internal_f_247() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_247(
      const std::string& value);
  std::string* _internal_mutable_f_247();

  public:
  // optional string f_248 = 360;
  bool has_f_248() const;
  void clear_f_248() ;
  const std::string& f_248() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_248(Arg_&& arg, Args_... args);
  std::string* mutable_f_248();
  PROTOBUF_NODISCARD std::string* release_f_248();
  void set_allocated_f_248(std::string* value);

  private:
  const std::string& _internal_f_248() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_248(
      const std::string& value);
  std::string* _internal_mutable_f_248();

  public:
  // optional string f_253 = 366;
  bool has_f_253() const;
  void clear_f_253() ;
  const std::string& f_253() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_253(Arg_&& arg, Args_... args);
  std::string* mutable_f_253();
  PROTOBUF_NODISCARD std::string* release_f_253();
  void set_allocated_f_253(std::string* value);

  private:
  const std::string& _internal_f_253() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_253(
      const std::string& value);
  std::string* _internal_mutable_f_253();

  public:
  // optional string f_261 = 378;
  bool has_f_261() const;
  void clear_f_261() ;
  const std::string& f_261() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_261(Arg_&& arg, Args_... args);
  std::string* mutable_f_261();
  PROTOBUF_NODISCARD std::string* release_f_261();
  void set_allocated_f_261(std::string* value);

  private:
  const std::string& _internal_f_261() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_261(
      const std::string& value);
  std::string* _internal_mutable_f_261();

  public:
  // optional string f_268 = 389;
  bool has_f_268() const;
  void clear_f_268() ;
  const std::string& f_268() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_268(Arg_&& arg, Args_... args);
  std::string* mutable_f_268();
  PROTOBUF_NODISCARD std::string* release_f_268();
  void set_allocated_f_268(std::string* value);

  private:
  const std::string& _internal_f_268() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_268(
      const std::string& value);
  std::string* _internal_mutable_f_268();

  public:
  // optional string f_283 = 412;
  bool has_f_283() const;
  void clear_f_283() ;
  const std::string& f_283() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_283(Arg_&& arg, Args_... args);
  std::string* mutable_f_283();
  PROTOBUF_NODISCARD std::string* release_f_283();
  void set_allocated_f_283(std::string* value);

  private:
  const std::string& _internal_f_283() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_283(
      const std::string& value);
  std::string* _internal_mutable_f_283();

  public:
  // optional string f_289 = 420;
  bool has_f_289() const;
  void clear_f_289() ;
  const std::string& f_289() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_289(Arg_&& arg, Args_... args);
  std::string* mutable_f_289();
  PROTOBUF_NODISCARD std::string* release_f_289();
  void set_allocated_f_289(std::string* value);

  private:
  const std::string& _internal_f_289() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_289(
      const std::string& value);
  std::string* _internal_mutable_f_289();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M75 f_421 = 422;
  bool has_f_421() const;
  void clear_f_421() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& f_421() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* release_f_421();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* mutable_f_421();
  void set_allocated_f_421(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* value);
  void unsafe_arena_set_allocated_f_421(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* unsafe_arena_release_f_421();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& _internal_f_421() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* _internal_mutable_f_421();

  public:
  // optional uint64 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::uint64_t f_0() const;
  void set_f_0(::uint64_t value);

  private:
  ::uint64_t _internal_f_0() const;
  void _internal_set_f_0(::uint64_t value);

  public:
  // optional int64 f_3 = 7;
  bool has_f_3() const;
  void clear_f_3() ;
  ::int64_t f_3() const;
  void set_f_3(::int64_t value);

  private:
  ::int64_t _internal_f_3() const;
  void _internal_set_f_3(::int64_t value);

  public:
  // optional int64 f_6 = 10;
  bool has_f_6() const;
  void clear_f_6() ;
  ::int64_t f_6() const;
  void set_f_6(::int64_t value);

  private:
  ::int64_t _internal_f_6() const;
  void _internal_set_f_6(::int64_t value);

  public:
  // optional float f_4 = 8;
  bool has_f_4() const;
  void clear_f_4() ;
  float f_4() const;
  void set_f_4(float value);

  private:
  float _internal_f_4() const;
  void _internal_set_f_4(float value);

  public:
  // optional uint32 f_9 = 13;
  bool has_f_9() const;
  void clear_f_9() ;
  ::uint32_t f_9() const;
  void set_f_9(::uint32_t value);

  private:
  ::uint32_t _internal_f_9() const;
  void _internal_set_f_9(::uint32_t value);

  public:
  // optional int64 f_8 = 12;
  bool has_f_8() const;
  void clear_f_8() ;
  ::int64_t f_8() const;
  void set_f_8(::int64_t value);

  private:
  ::int64_t _internal_f_8() const;
  void _internal_set_f_8(::int64_t value);

  public:
  // optional int64 f_10 = 14;
  bool has_f_10() const;
  void clear_f_10() ;
  ::int64_t f_10() const;
  void set_f_10(::int64_t value);

  private:
  ::int64_t _internal_f_10() const;
  void _internal_set_f_10(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E54 f_11 = 16;
  bool has_f_11() const;
  void clear_f_11() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54 f_11() const;
  void set_f_11(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54 _internal_f_11() const;
  void _internal_set_f_11(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E55 f_12 = 18;
  bool has_f_12() const;
  void clear_f_12() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55 f_12() const;
  void set_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55 _internal_f_12() const;
  void _internal_set_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55 value);

  public:
  // optional fixed64 f_13 = 19;
  bool has_f_13() const;
  void clear_f_13() ;
  ::uint64_t f_13() const;
  void set_f_13(::uint64_t value);

  private:
  ::uint64_t _internal_f_13() const;
  void _internal_set_f_13(::uint64_t value);

  public:
  // optional int64 f_14 = 20;
  bool has_f_14() const;
  void clear_f_14() ;
  ::int64_t f_14() const;
  void set_f_14(::int64_t value);

  private:
  ::int64_t _internal_f_14() const;
  void _internal_set_f_14(::int64_t value);

  public:
  // optional uint64 f_15 = 21;
  bool has_f_15() const;
  void clear_f_15() ;
  ::uint64_t f_15() const;
  void set_f_15(::uint64_t value);

  private:
  ::uint64_t _internal_f_15() const;
  void _internal_set_f_15(::uint64_t value);

  public:
  // optional int64 f_18 = 27;
  bool has_f_18() const;
  void clear_f_18() ;
  ::int64_t f_18() const;
  void set_f_18(::int64_t value);

  private:
  ::int64_t _internal_f_18() const;
  void _internal_set_f_18(::int64_t value);

  public:
  // optional uint64 f_19 = 28;
  bool has_f_19() const;
  void clear_f_19() ;
  ::uint64_t f_19() const;
  void set_f_19(::uint64_t value);

  private:
  ::uint64_t _internal_f_19() const;
  void _internal_set_f_19(::uint64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E56 f_17 = 26;
  bool has_f_17() const;
  void clear_f_17() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56 f_17() const;
  void set_f_17(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56 _internal_f_17() const;
  void _internal_set_f_17(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56 value);

  public:
  // optional int32 f_20 = 31;
  bool has_f_20() const;
  void clear_f_20() ;
  ::int32_t f_20() const;
  void set_f_20(::int32_t value);

  private:
  ::int32_t _internal_f_20() const;
  void _internal_set_f_20(::int32_t value);

  public:
  // optional int64 f_21 = 34;
  bool has_f_21() const;
  void clear_f_21() ;
  ::int64_t f_21() const;
  void set_f_21(::int64_t value);

  private:
  ::int64_t _internal_f_21() const;
  void _internal_set_f_21(::int64_t value);

  public:
  // optional uint64 f_22 = 37;
  bool has_f_22() const;
  void clear_f_22() ;
  ::uint64_t f_22() const;
  void set_f_22(::uint64_t value);

  private:
  ::uint64_t _internal_f_22() const;
  void _internal_set_f_22(::uint64_t value);

  public:
  // optional fixed64 f_25 = 42;
  bool has_f_25() const;
  void clear_f_25() ;
  ::uint64_t f_25() const;
  void set_f_25(::uint64_t value);

  private:
  ::uint64_t _internal_f_25() const;
  void _internal_set_f_25(::uint64_t value);

  public:
  // optional int32 f_24 = 41;
  bool has_f_24() const;
  void clear_f_24() ;
  ::int32_t f_24() const;
  void set_f_24(::int32_t value);

  private:
  ::int32_t _internal_f_24() const;
  void _internal_set_f_24(::int32_t value);

  public:
  // optional int32 f_26 = 43;
  bool has_f_26() const;
  void clear_f_26() ;
  ::int32_t f_26() const;
  void set_f_26(::int32_t value);

  private:
  ::int32_t _internal_f_26() const;
  void _internal_set_f_26(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E57 f_27 = 45;
  bool has_f_27() const;
  void clear_f_27() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57 f_27() const;
  void set_f_27(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57 _internal_f_27() const;
  void _internal_set_f_27(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57 value);

  public:
  // optional int32 f_28 = 46;
  bool has_f_28() const;
  void clear_f_28() ;
  ::int32_t f_28() const;
  void set_f_28(::int32_t value);

  private:
  ::int32_t _internal_f_28() const;
  void _internal_set_f_28(::int32_t value);

  public:
  // optional fixed32 f_30 = 49;
  bool has_f_30() const;
  void clear_f_30() ;
  ::uint32_t f_30() const;
  void set_f_30(::uint32_t value);

  private:
  ::uint32_t _internal_f_30() const;
  void _internal_set_f_30(::uint32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E58 f_32 = 52;
  bool has_f_32() const;
  void clear_f_32() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58 f_32() const;
  void set_f_32(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58 _internal_f_32() const;
  void _internal_set_f_32(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58 value);

  public:
  // optional fixed64 f_31 = 51;
  bool has_f_31() const;
  void clear_f_31() ;
  ::uint64_t f_31() const;
  void set_f_31(::uint64_t value);

  private:
  ::uint64_t _internal_f_31() const;
  void _internal_set_f_31(::uint64_t value);

  public:
  // optional int64 f_33 = 53;
  bool has_f_33() const;
  void clear_f_33() ;
  ::int64_t f_33() const;
  void set_f_33(::int64_t value);

  private:
  ::int64_t _internal_f_33() const;
  void _internal_set_f_33(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E59 f_34 = 54;
  bool has_f_34() const;
  void clear_f_34() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59 f_34() const;
  void set_f_34(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59 _internal_f_34() const;
  void _internal_set_f_34(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E60 f_35 = 55;
  bool has_f_35() const;
  void clear_f_35() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60 f_35() const;
  void set_f_35(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60 _internal_f_35() const;
  void _internal_set_f_35(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60 value);

  public:
  // optional int32 f_36 = 57;
  bool has_f_36() const;
  void clear_f_36() ;
  ::int32_t f_36() const;
  void set_f_36(::int32_t value);

  private:
  ::int32_t _internal_f_36() const;
  void _internal_set_f_36(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E61 f_37 = 58;
  bool has_f_37() const;
  void clear_f_37() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61 f_37() const;
  void set_f_37(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61 _internal_f_37() const;
  void _internal_set_f_37(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61 value);

  public:
  // optional fixed64 f_38 = 59;
  bool has_f_38() const;
  void clear_f_38() ;
  ::uint64_t f_38() const;
  void set_f_38(::uint64_t value);

  private:
  ::uint64_t _internal_f_38() const;
  void _internal_set_f_38(::uint64_t value);

  public:
  // optional uint64 f_40 = 62;
  bool has_f_40() const;
  void clear_f_40() ;
  ::uint64_t f_40() const;
  void set_f_40(::uint64_t value);

  private:
  ::uint64_t _internal_f_40() const;
  void _internal_set_f_40(::uint64_t value);

  public:
  // optional int32 f_39 = 60;
  bool has_f_39() const;
  void clear_f_39() ;
  ::int32_t f_39() const;
  void set_f_39(::int32_t value);

  private:
  ::int32_t _internal_f_39() const;
  void _internal_set_f_39(::int32_t value);

  public:
  // optional int32 f_41 = 64;
  bool has_f_41() const;
  void clear_f_41() ;
  ::int32_t f_41() const;
  void set_f_41(::int32_t value);

  private:
  ::int32_t _internal_f_41() const;
  void _internal_set_f_41(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E62 f_42 = 66;
  bool has_f_42() const;
  void clear_f_42() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62 f_42() const;
  void set_f_42(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62 _internal_f_42() const;
  void _internal_set_f_42(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62 value);

  public:
  // optional int32 f_44 = 71;
  bool has_f_44() const;
  void clear_f_44() ;
  ::int32_t f_44() const;
  void set_f_44(::int32_t value);

  private:
  ::int32_t _internal_f_44() const;
  void _internal_set_f_44(::int32_t value);

  public:
  // optional int64 f_47 = 75;
  bool has_f_47() const;
  void clear_f_47() ;
  ::int64_t f_47() const;
  void set_f_47(::int64_t value);

  private:
  ::int64_t _internal_f_47() const;
  void _internal_set_f_47(::int64_t value);

  public:
  // optional float f_46 = 74;
  bool has_f_46() const;
  void clear_f_46() ;
  float f_46() const;
  void set_f_46(float value);

  private:
  float _internal_f_46() const;
  void _internal_set_f_46(float value);

  public:
  // optional int32 f_48 = 76;
  bool has_f_48() const;
  void clear_f_48() ;
  ::int32_t f_48() const;
  void set_f_48(::int32_t value);

  private:
  ::int32_t _internal_f_48() const;
  void _internal_set_f_48(::int32_t value);

  public:
  // optional int64 f_49 = 77;
  bool has_f_49() const;
  void clear_f_49() ;
  ::int64_t f_49() const;
  void set_f_49(::int64_t value);

  private:
  ::int64_t _internal_f_49() const;
  void _internal_set_f_49(::int64_t value);

  public:
  // optional int64 f_51 = 80;
  bool has_f_51() const;
  void clear_f_51() ;
  ::int64_t f_51() const;
  void set_f_51(::int64_t value);

  private:
  ::int64_t _internal_f_51() const;
  void _internal_set_f_51(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E63 f_52 = 81;
  bool has_f_52() const;
  void clear_f_52() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63 f_52() const;
  void set_f_52(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63 _internal_f_52() const;
  void _internal_set_f_52(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63 value);

  public:
  // optional int32 f_54 = 84;
  bool has_f_54() const;
  void clear_f_54() ;
  ::int32_t f_54() const;
  void set_f_54(::int32_t value);

  private:
  ::int32_t _internal_f_54() const;
  void _internal_set_f_54(::int32_t value);

  public:
  // optional int64 f_53 = 83;
  bool has_f_53() const;
  void clear_f_53() ;
  ::int64_t f_53() const;
  void set_f_53(::int64_t value);

  private:
  ::int64_t _internal_f_53() const;
  void _internal_set_f_53(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E64 f_56 = 86;
  bool has_f_56() const;
  void clear_f_56() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64 f_56() const;
  void set_f_56(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64 _internal_f_56() const;
  void _internal_set_f_56(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E65 f_60 = 91;
  bool has_f_60() const;
  void clear_f_60() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65 f_60() const;
  void set_f_60(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65 _internal_f_60() const;
  void _internal_set_f_60(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65 value);

  public:
  // optional int64 f_59 = 90;
  bool has_f_59() const;
  void clear_f_59() ;
  ::int64_t f_59() const;
  void set_f_59(::int64_t value);

  private:
  ::int64_t _internal_f_59() const;
  void _internal_set_f_59(::int64_t value);

  public:
  // optional int64 f_61 = 94;
  bool has_f_61() const;
  void clear_f_61() ;
  ::int64_t f_61() const;
  void set_f_61(::int64_t value);

  private:
  ::int64_t _internal_f_61() const;
  void _internal_set_f_61(::int64_t value);

  public:
  // optional int64 f_62 = 95;
  bool has_f_62() const;
  void clear_f_62() ;
  ::int64_t f_62() const;
  void set_f_62(::int64_t value);

  private:
  ::int64_t _internal_f_62() const;
  void _internal_set_f_62(::int64_t value);

  public:
  // optional int64 f_63 = 97;
  bool has_f_63() const;
  void clear_f_63() ;
  ::int64_t f_63() const;
  void set_f_63(::int64_t value);

  private:
  ::int64_t _internal_f_63() const;
  void _internal_set_f_63(::int64_t value);

  public:
  // optional double f_65 = 100;
  bool has_f_65() const;
  void clear_f_65() ;
  double f_65() const;
  void set_f_65(double value);

  private:
  double _internal_f_65() const;
  void _internal_set_f_65(double value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E66 f_64 = 99;
  bool has_f_64() const;
  void clear_f_64() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66 f_64() const;
  void set_f_64(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66 _internal_f_64() const;
  void _internal_set_f_64(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66 value);

  public:
  // optional float f_66 = 101;
  bool has_f_66() const;
  void clear_f_66() ;
  float f_66() const;
  void set_f_66(float value);

  private:
  float _internal_f_66() const;
  void _internal_set_f_66(float value);

  public:
  // optional int64 f_69 = 104;
  bool has_f_69() const;
  void clear_f_69() ;
  ::int64_t f_69() const;
  void set_f_69(::int64_t value);

  private:
  ::int64_t _internal_f_69() const;
  void _internal_set_f_69(::int64_t value);

  public:
  // optional fixed64 f_71 = 106;
  bool has_f_71() const;
  void clear_f_71() ;
  ::uint64_t f_71() const;
  void set_f_71(::uint64_t value);

  private:
  ::uint64_t _internal_f_71() const;
  void _internal_set_f_71(::uint64_t value);

  public:
  // optional float f_67 = 102;
  bool has_f_67() const;
  void clear_f_67() ;
  float f_67() const;
  void set_f_67(float value);

  private:
  float _internal_f_67() const;
  void _internal_set_f_67(float value);

  public:
  // optional fixed32 f_76 = 114;
  bool has_f_76() const;
  void clear_f_76() ;
  ::uint32_t f_76() const;
  void set_f_76(::uint32_t value);

  private:
  ::uint32_t _internal_f_76() const;
  void _internal_set_f_76(::uint32_t value);

  public:
  // optional int64 f_72 = 109;
  bool has_f_72() const;
  void clear_f_72() ;
  ::int64_t f_72() const;
  void set_f_72(::int64_t value);

  private:
  ::int64_t _internal_f_72() const;
  void _internal_set_f_72(::int64_t value);

  public:
  // optional int64 f_73 = 111;
  bool has_f_73() const;
  void clear_f_73() ;
  ::int64_t f_73() const;
  void set_f_73(::int64_t value);

  private:
  ::int64_t _internal_f_73() const;
  void _internal_set_f_73(::int64_t value);

  public:
  // optional int64 f_74 = 112;
  bool has_f_74() const;
  void clear_f_74() ;
  ::int64_t f_74() const;
  void set_f_74(::int64_t value);

  private:
  ::int64_t _internal_f_74() const;
  void _internal_set_f_74(::int64_t value);

  public:
  // optional int64 f_75 = 113;
  bool has_f_75() const;
  void clear_f_75() ;
  ::int64_t f_75() const;
  void set_f_75(::int64_t value);

  private:
  ::int64_t _internal_f_75() const;
  void _internal_set_f_75(::int64_t value);

  public:
  // optional int64 f_77 = 115;
  bool has_f_77() const;
  void clear_f_77() ;
  ::int64_t f_77() const;
  void set_f_77(::int64_t value);

  private:
  ::int64_t _internal_f_77() const;
  void _internal_set_f_77(::int64_t value);

  public:
  // optional int32 f_78 = 116;
  bool has_f_78() const;
  void clear_f_78() ;
  ::int32_t f_78() const;
  void set_f_78(::int32_t value);

  private:
  ::int32_t _internal_f_78() const;
  void _internal_set_f_78(::int32_t value);

  public:
  // optional bool f_23 = 39;
  bool has_f_23() const;
  void clear_f_23() ;
  bool f_23() const;
  void set_f_23(bool value);

  private:
  bool _internal_f_23() const;
  void _internal_set_f_23(bool value);

  public:
  // optional bool f_90 = 134;
  bool has_f_90() const;
  void clear_f_90() ;
  bool f_90() const;
  void set_f_90(bool value);

  private:
  bool _internal_f_90() const;
  void _internal_set_f_90(bool value);

  public:
  // optional bool f_94 = 140;
  bool has_f_94() const;
  void clear_f_94() ;
  bool f_94() const;
  void set_f_94(bool value);

  private:
  bool _internal_f_94() const;
  void _internal_set_f_94(bool value);

  public:
  // optional bool f_102 = 154;
  bool has_f_102() const;
  void clear_f_102() ;
  bool f_102() const;
  void set_f_102(bool value);

  private:
  bool _internal_f_102() const;
  void _internal_set_f_102(bool value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E67 f_80 = 118;
  bool has_f_80() const;
  void clear_f_80() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67 f_80() const;
  void set_f_80(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67 _internal_f_80() const;
  void _internal_set_f_80(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67 value);

  public:
  // optional fixed32 f_82 = 120;
  bool has_f_82() const;
  void clear_f_82() ;
  ::uint32_t f_82() const;
  void set_f_82(::uint32_t value);

  private:
  ::uint32_t _internal_f_82() const;
  void _internal_set_f_82(::uint32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E68 f_83 = 122;
  bool has_f_83() const;
  void clear_f_83() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68 f_83() const;
  void set_f_83(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68 _internal_f_83() const;
  void _internal_set_f_83(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E69 f_84 = 124;
  bool has_f_84() const;
  void clear_f_84() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69 f_84() const;
  void set_f_84(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69 _internal_f_84() const;
  void _internal_set_f_84(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69 value);

  public:
  // optional int64 f_86 = 127;
  bool has_f_86() const;
  void clear_f_86() ;
  ::int64_t f_86() const;
  void set_f_86(::int64_t value);

  private:
  ::int64_t _internal_f_86() const;
  void _internal_set_f_86(::int64_t value);

  public:
  // optional float f_85 = 126;
  bool has_f_85() const;
  void clear_f_85() ;
  float f_85() const;
  void set_f_85(float value);

  private:
  float _internal_f_85() const;
  void _internal_set_f_85(float value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E70 f_87 = 128;
  bool has_f_87() const;
  void clear_f_87() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70 f_87() const;
  void set_f_87(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70 _internal_f_87() const;
  void _internal_set_f_87(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E71 f_88 = 130;
  bool has_f_88() const;
  void clear_f_88() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71 f_88() const;
  void set_f_88(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71 _internal_f_88() const;
  void _internal_set_f_88(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71 value);

  public:
  // optional int32 f_89 = 132;
  bool has_f_89() const;
  void clear_f_89() ;
  ::int32_t f_89() const;
  void set_f_89(::int32_t value);

  private:
  ::int32_t _internal_f_89() const;
  void _internal_set_f_89(::int32_t value);

  public:
  // optional int64 f_93 = 139;
  bool has_f_93() const;
  void clear_f_93() ;
  ::int64_t f_93() const;
  void set_f_93(::int64_t value);

  private:
  ::int64_t _internal_f_93() const;
  void _internal_set_f_93(::int64_t value);

  public:
  // optional int32 f_92 = 138;
  bool has_f_92() const;
  void clear_f_92() ;
  ::int32_t f_92() const;
  void set_f_92(::int32_t value);

  private:
  ::int32_t _internal_f_92() const;
  void _internal_set_f_92(::int32_t value);

  public:
  // optional float f_95 = 142;
  bool has_f_95() const;
  void clear_f_95() ;
  float f_95() const;
  void set_f_95(float value);

  private:
  float _internal_f_95() const;
  void _internal_set_f_95(float value);

  public:
  // optional int64 f_98 = 147;
  bool has_f_98() const;
  void clear_f_98() ;
  ::int64_t f_98() const;
  void set_f_98(::int64_t value);

  private:
  ::int64_t _internal_f_98() const;
  void _internal_set_f_98(::int64_t value);

  public:
  // optional int32 f_96 = 143;
  bool has_f_96() const;
  void clear_f_96() ;
  ::int32_t f_96() const;
  void set_f_96(::int32_t value);

  private:
  ::int32_t _internal_f_96() const;
  void _internal_set_f_96(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E72 f_100 = 151;
  bool has_f_100() const;
  void clear_f_100() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72 f_100() const;
  void set_f_100(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72 _internal_f_100() const;
  void _internal_set_f_100(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72 value);

  public:
  // optional int64 f_99 = 149;
  bool has_f_99() const;
  void clear_f_99() ;
  ::int64_t f_99() const;
  void set_f_99(::int64_t value);

  private:
  ::int64_t _internal_f_99() const;
  void _internal_set_f_99(::int64_t value);

  public:
  // optional double f_103 = 155;
  bool has_f_103() const;
  void clear_f_103() ;
  double f_103() const;
  void set_f_103(double value);

  private:
  double _internal_f_103() const;
  void _internal_set_f_103(double value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E74 f_104 = 156;
  bool has_f_104() const;
  void clear_f_104() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74 f_104() const;
  void set_f_104(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74 _internal_f_104() const;
  void _internal_set_f_104(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74 value);

  public:
  // optional int32 f_105 = 158;
  bool has_f_105() const;
  void clear_f_105() ;
  ::int32_t f_105() const;
  void set_f_105(::int32_t value);

  private:
  ::int32_t _internal_f_105() const;
  void _internal_set_f_105(::int32_t value);

  public:
  // optional int64 f_111 = 166;
  bool has_f_111() const;
  void clear_f_111() ;
  ::int64_t f_111() const;
  void set_f_111(::int64_t value);

  private:
  ::int64_t _internal_f_111() const;
  void _internal_set_f_111(::int64_t value);

  public:
  // optional int32 f_112 = 167;
  bool has_f_112() const;
  void clear_f_112() ;
  ::int32_t f_112() const;
  void set_f_112(::int32_t value);

  private:
  ::int32_t _internal_f_112() const;
  void _internal_set_f_112(::int32_t value);

  public:
  // optional int32 f_114 = 170;
  bool has_f_114() const;
  void clear_f_114() ;
  ::int32_t f_114() const;
  void set_f_114(::int32_t value);

  private:
  ::int32_t _internal_f_114() const;
  void _internal_set_f_114(::int32_t value);

  public:
  // optional int64 f_117 = 173;
  bool has_f_117() const;
  void clear_f_117() ;
  ::int64_t f_117() const;
  void set_f_117(::int64_t value);

  private:
  ::int64_t _internal_f_117() const;
  void _internal_set_f_117(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E75 f_115 = 171;
  bool has_f_115() const;
  void clear_f_115() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75 f_115() const;
  void set_f_115(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75 _internal_f_115() const;
  void _internal_set_f_115(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75 value);

  public:
  // optional int32 f_120 = 178;
  bool has_f_120() const;
  void clear_f_120() ;
  ::int32_t f_120() const;
  void set_f_120(::int32_t value);

  private:
  ::int32_t _internal_f_120() const;
  void _internal_set_f_120(::int32_t value);

  public:
  // optional int64 f_124 = 182;
  bool has_f_124() const;
  void clear_f_124() ;
  ::int64_t f_124() const;
  void set_f_124(::int64_t value);

  private:
  ::int64_t _internal_f_124() const;
  void _internal_set_f_124(::int64_t value);

  public:
  // optional fixed32 f_122 = 180;
  bool has_f_122() const;
  void clear_f_122() ;
  ::uint32_t f_122() const;
  void set_f_122(::uint32_t value);

  private:
  ::uint32_t _internal_f_122() const;
  void _internal_set_f_122(::uint32_t value);

  public:
  // optional fixed32 f_126 = 184;
  bool has_f_126() const;
  void clear_f_126() ;
  ::uint32_t f_126() const;
  void set_f_126(::uint32_t value);

  private:
  ::uint32_t _internal_f_126() const;
  void _internal_set_f_126(::uint32_t value);

  public:
  // optional fixed32 f_127 = 185;
  bool has_f_127() const;
  void clear_f_127() ;
  ::uint32_t f_127() const;
  void set_f_127(::uint32_t value);

  private:
  ::uint32_t _internal_f_127() const;
  void _internal_set_f_127(::uint32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E76 f_128 = 186;
  bool has_f_128() const;
  void clear_f_128() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76 f_128() const;
  void set_f_128(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76 _internal_f_128() const;
  void _internal_set_f_128(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76 value);

  public:
  // optional int32 f_130 = 189;
  bool has_f_130() const;
  void clear_f_130() ;
  ::int32_t f_130() const;
  void set_f_130(::int32_t value);

  private:
  ::int32_t _internal_f_130() const;
  void _internal_set_f_130(::int32_t value);

  public:
  // optional float f_137 = 199;
  bool has_f_137() const;
  void clear_f_137() ;
  float f_137() const;
  void set_f_137(float value);

  private:
  float _internal_f_137() const;
  void _internal_set_f_137(float value);

  public:
  // optional fixed64 f_136 = 198;
  bool has_f_136() const;
  void clear_f_136() ;
  ::uint64_t f_136() const;
  void set_f_136(::uint64_t value);

  private:
  ::uint64_t _internal_f_136() const;
  void _internal_set_f_136(::uint64_t value);

  public:
  // optional uint64 f_138 = 200;
  bool has_f_138() const;
  void clear_f_138() ;
  ::uint64_t f_138() const;
  void set_f_138(::uint64_t value);

  private:
  ::uint64_t _internal_f_138() const;
  void _internal_set_f_138(::uint64_t value);

  public:
  // optional int64 f_139 = 201;
  bool has_f_139() const;
  void clear_f_139() ;
  ::int64_t f_139() const;
  void set_f_139(::int64_t value);

  private:
  ::int64_t _internal_f_139() const;
  void _internal_set_f_139(::int64_t value);

  public:
  // optional bool f_123 = 181;
  bool has_f_123() const;
  void clear_f_123() ;
  bool f_123() const;
  void set_f_123(bool value);

  private:
  bool _internal_f_123() const;
  void _internal_set_f_123(bool value);

  public:
  // optional bool f_141 = 203;
  bool has_f_141() const;
  void clear_f_141() ;
  bool f_141() const;
  void set_f_141(bool value);

  private:
  bool _internal_f_141() const;
  void _internal_set_f_141(bool value);

  public:
  // optional bool f_144 = 209;
  bool has_f_144() const;
  void clear_f_144() ;
  bool f_144() const;
  void set_f_144(bool value);

  private:
  bool _internal_f_144() const;
  void _internal_set_f_144(bool value);

  public:
  // optional bool f_147 = 214;
  bool has_f_147() const;
  void clear_f_147() ;
  bool f_147() const;
  void set_f_147(bool value);

  private:
  bool _internal_f_147() const;
  void _internal_set_f_147(bool value);

  public:
  // optional int32 f_140 = 202;
  bool has_f_140() const;
  void clear_f_140() ;
  ::int32_t f_140() const;
  void set_f_140(::int32_t value);

  private:
  ::int32_t _internal_f_140() const;
  void _internal_set_f_140(::int32_t value);

  public:
  // optional uint64 f_145 = 210;
  bool has_f_145() const;
  void clear_f_145() ;
  ::uint64_t f_145() const;
  void set_f_145(::uint64_t value);

  private:
  ::uint64_t _internal_f_145() const;
  void _internal_set_f_145(::uint64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E77 f_146 = 213;
  bool has_f_146() const;
  void clear_f_146() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77 f_146() const;
  void set_f_146(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77 _internal_f_146() const;
  void _internal_set_f_146(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E78 f_152 = 222;
  bool has_f_152() const;
  void clear_f_152() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78 f_152() const;
  void set_f_152(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78 _internal_f_152() const;
  void _internal_set_f_152(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78 value);

  public:
  // optional uint64 f_150 = 219;
  bool has_f_150() const;
  void clear_f_150() ;
  ::uint64_t f_150() const;
  void set_f_150(::uint64_t value);

  private:
  ::uint64_t _internal_f_150() const;
  void _internal_set_f_150(::uint64_t value);

  public:
  // optional uint32 f_154 = 226;
  bool has_f_154() const;
  void clear_f_154() ;
  ::uint32_t f_154() const;
  void set_f_154(::uint32_t value);

  private:
  ::uint32_t _internal_f_154() const;
  void _internal_set_f_154(::uint32_t value);

  public:
  // optional int32 f_157 = 230;
  bool has_f_157() const;
  void clear_f_157() ;
  ::int32_t f_157() const;
  void set_f_157(::int32_t value);

  private:
  ::int32_t _internal_f_157() const;
  void _internal_set_f_157(::int32_t value);

  public:
  // optional int64 f_156 = 229;
  bool has_f_156() const;
  void clear_f_156() ;
  ::int64_t f_156() const;
  void set_f_156(::int64_t value);

  private:
  ::int64_t _internal_f_156() const;
  void _internal_set_f_156(::int64_t value);

  public:
  // optional int64 f_159 = 232;
  bool has_f_159() const;
  void clear_f_159() ;
  ::int64_t f_159() const;
  void set_f_159(::int64_t value);

  private:
  ::int64_t _internal_f_159() const;
  void _internal_set_f_159(::int64_t value);

  public:
  // optional int64 f_160 = 234;
  bool has_f_160() const;
  void clear_f_160() ;
  ::int64_t f_160() const;
  void set_f_160(::int64_t value);

  private:
  ::int64_t _internal_f_160() const;
  void _internal_set_f_160(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E80 f_161 = 235;
  bool has_f_161() const;
  void clear_f_161() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80 f_161() const;
  void set_f_161(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80 _internal_f_161() const;
  void _internal_set_f_161(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80 value);

  public:
  // optional int32 f_162 = 236;
  bool has_f_162() const;
  void clear_f_162() ;
  ::int32_t f_162() const;
  void set_f_162(::int32_t value);

  private:
  ::int32_t _internal_f_162() const;
  void _internal_set_f_162(::int32_t value);

  public:
  // optional int32 f_163 = 237;
  bool has_f_163() const;
  void clear_f_163() ;
  ::int32_t f_163() const;
  void set_f_163(::int32_t value);

  private:
  ::int32_t _internal_f_163() const;
  void _internal_set_f_163(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E81 f_164 = 239;
  bool has_f_164() const;
  void clear_f_164() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81 f_164() const;
  void set_f_164(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81 _internal_f_164() const;
  void _internal_set_f_164(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E82 f_166 = 242;
  bool has_f_166() const;
  void clear_f_166() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82 f_166() const;
  void set_f_166(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82 _internal_f_166() const;
  void _internal_set_f_166(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82 value);

  public:
  // optional uint32 f_168 = 247;
  bool has_f_168() const;
  void clear_f_168() ;
  ::uint32_t f_168() const;
  void set_f_168(::uint32_t value);

  private:
  ::uint32_t _internal_f_168() const;
  void _internal_set_f_168(::uint32_t value);

  public:
  // optional int64 f_169 = 248;
  bool has_f_169() const;
  void clear_f_169() ;
  ::int64_t f_169() const;
  void set_f_169(::int64_t value);

  private:
  ::int64_t _internal_f_169() const;
  void _internal_set_f_169(::int64_t value);

  public:
  // optional int32 f_170 = 249;
  bool has_f_170() const;
  void clear_f_170() ;
  ::int32_t f_170() const;
  void set_f_170(::int32_t value);

  private:
  ::int32_t _internal_f_170() const;
  void _internal_set_f_170(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E83 f_171 = 250;
  bool has_f_171() const;
  void clear_f_171() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83 f_171() const;
  void set_f_171(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83 _internal_f_171() const;
  void _internal_set_f_171(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E84 f_172 = 252;
  bool has_f_172() const;
  void clear_f_172() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84 f_172() const;
  void set_f_172(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84 _internal_f_172() const;
  void _internal_set_f_172(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84 value);

  public:
  // optional int32 f_174 = 255;
  bool has_f_174() const;
  void clear_f_174() ;
  ::int32_t f_174() const;
  void set_f_174(::int32_t value);

  private:
  ::int32_t _internal_f_174() const;
  void _internal_set_f_174(::int32_t value);

  public:
  // optional int64 f_175 = 256;
  bool has_f_175() const;
  void clear_f_175() ;
  ::int64_t f_175() const;
  void set_f_175(::int64_t value);

  private:
  ::int64_t _internal_f_175() const;
  void _internal_set_f_175(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E85 f_181 = 262;
  bool has_f_181() const;
  void clear_f_181() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85 f_181() const;
  void set_f_181(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85 _internal_f_181() const;
  void _internal_set_f_181(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85 value);

  public:
  // optional float f_182 = 263;
  bool has_f_182() const;
  void clear_f_182() ;
  float f_182() const;
  void set_f_182(float value);

  private:
  float _internal_f_182() const;
  void _internal_set_f_182(float value);

  public:
  // optional uint64 f_184 = 265;
  bool has_f_184() const;
  void clear_f_184() ;
  ::uint64_t f_184() const;
  void set_f_184(::uint64_t value);

  private:
  ::uint64_t _internal_f_184() const;
  void _internal_set_f_184(::uint64_t value);

  public:
  // optional int32 f_183 = 264;
  bool has_f_183() const;
  void clear_f_183() ;
  ::int32_t f_183() const;
  void set_f_183(::int32_t value);

  private:
  ::int32_t _internal_f_183() const;
  void _internal_set_f_183(::int32_t value);

  public:
  // optional int32 f_185 = 266;
  bool has_f_185() const;
  void clear_f_185() ;
  ::int32_t f_185() const;
  void set_f_185(::int32_t value);

  private:
  ::int32_t _internal_f_185() const;
  void _internal_set_f_185(::int32_t value);

  public:
  // optional int64 f_188 = 271;
  bool has_f_188() const;
  void clear_f_188() ;
  ::int64_t f_188() const;
  void set_f_188(::int64_t value);

  private:
  ::int64_t _internal_f_188() const;
  void _internal_set_f_188(::int64_t value);

  public:
  // optional int64 f_189 = 272;
  bool has_f_189() const;
  void clear_f_189() ;
  ::int64_t f_189() const;
  void set_f_189(::int64_t value);

  private:
  ::int64_t _internal_f_189() const;
  void _internal_set_f_189(::int64_t value);

  public:
  // optional uint64 f_191 = 274;
  bool has_f_191() const;
  void clear_f_191() ;
  ::uint64_t f_191() const;
  void set_f_191(::uint64_t value);

  private:
  ::uint64_t _internal_f_191() const;
  void _internal_set_f_191(::uint64_t value);

  public:
  // optional int64 f_192 = 275;
  bool has_f_192() const;
  void clear_f_192() ;
  ::int64_t f_192() const;
  void set_f_192(::int64_t value);

  private:
  ::int64_t _internal_f_192() const;
  void _internal_set_f_192(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E86 f_190 = 273;
  bool has_f_190() const;
  void clear_f_190() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86 f_190() const;
  void set_f_190(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86 _internal_f_190() const;
  void _internal_set_f_190(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86 value);

  public:
  // optional fixed32 f_193 = 277;
  bool has_f_193() const;
  void clear_f_193() ;
  ::uint32_t f_193() const;
  void set_f_193(::uint32_t value);

  private:
  ::uint32_t _internal_f_193() const;
  void _internal_set_f_193(::uint32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E87 f_194 = 278;
  bool has_f_194() const;
  void clear_f_194() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87 f_194() const;
  void set_f_194(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87 _internal_f_194() const;
  void _internal_set_f_194(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87 value);

  public:
  // optional fixed32 f_195 = 279;
  bool has_f_195() const;
  void clear_f_195() ;
  ::uint32_t f_195() const;
  void set_f_195(::uint32_t value);

  private:
  ::uint32_t _internal_f_195() const;
  void _internal_set_f_195(::uint32_t value);

  public:
  // optional int64 f_197 = 281;
  bool has_f_197() const;
  void clear_f_197() ;
  ::int64_t f_197() const;
  void set_f_197(::int64_t value);

  private:
  ::int64_t _internal_f_197() const;
  void _internal_set_f_197(::int64_t value);

  public:
  // optional float f_196 = 280;
  bool has_f_196() const;
  void clear_f_196() ;
  float f_196() const;
  void set_f_196(float value);

  private:
  float _internal_f_196() const;
  void _internal_set_f_196(float value);

  public:
  // optional bool f_167 = 245;
  bool has_f_167() const;
  void clear_f_167() ;
  bool f_167() const;
  void set_f_167(bool value);

  private:
  bool _internal_f_167() const;
  void _internal_set_f_167(bool value);

  public:
  // optional bool f_187 = 270;
  bool has_f_187() const;
  void clear_f_187() ;
  bool f_187() const;
  void set_f_187(bool value);

  private:
  bool _internal_f_187() const;
  void _internal_set_f_187(bool value);

  public:
  // optional bool f_202 = 289;
  bool has_f_202() const;
  void clear_f_202() ;
  bool f_202() const;
  void set_f_202(bool value);

  private:
  bool _internal_f_202() const;
  void _internal_set_f_202(bool value);

  public:
  // optional bool f_225 = 323;
  bool has_f_225() const;
  void clear_f_225() ;
  bool f_225() const;
  void set_f_225(bool value);

  private:
  bool _internal_f_225() const;
  void _internal_set_f_225(bool value);

  public:
  // optional int32 f_199 = 284;
  bool has_f_199() const;
  void clear_f_199() ;
  ::int32_t f_199() const;
  void set_f_199(::int32_t value);

  private:
  ::int32_t _internal_f_199() const;
  void _internal_set_f_199(::int32_t value);

  public:
  // optional int32 f_200 = 286;
  bool has_f_200() const;
  void clear_f_200() ;
  ::int32_t f_200() const;
  void set_f_200(::int32_t value);

  private:
  ::int32_t _internal_f_200() const;
  void _internal_set_f_200(::int32_t value);

  public:
  // optional int32 f_201 = 288;
  bool has_f_201() const;
  void clear_f_201() ;
  ::int32_t f_201() const;
  void set_f_201(::int32_t value);

  private:
  ::int32_t _internal_f_201() const;
  void _internal_set_f_201(::int32_t value);

  public:
  // optional fixed32 f_203 = 290;
  bool has_f_203() const;
  void clear_f_203() ;
  ::uint32_t f_203() const;
  void set_f_203(::uint32_t value);

  private:
  ::uint32_t _internal_f_203() const;
  void _internal_set_f_203(::uint32_t value);

  public:
  // optional int32 f_205 = 294;
  bool has_f_205() const;
  void clear_f_205() ;
  ::int32_t f_205() const;
  void set_f_205(::int32_t value);

  private:
  ::int32_t _internal_f_205() const;
  void _internal_set_f_205(::int32_t value);

  public:
  // optional int32 f_207 = 297;
  bool has_f_207() const;
  void clear_f_207() ;
  ::int32_t f_207() const;
  void set_f_207(::int32_t value);

  private:
  ::int32_t _internal_f_207() const;
  void _internal_set_f_207(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E88 f_208 = 298;
  bool has_f_208() const;
  void clear_f_208() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88 f_208() const;
  void set_f_208(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88 _internal_f_208() const;
  void _internal_set_f_208(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88 value);

  public:
  // optional int32 f_209 = 301;
  bool has_f_209() const;
  void clear_f_209() ;
  ::int32_t f_209() const;
  void set_f_209(::int32_t value);

  private:
  ::int32_t _internal_f_209() const;
  void _internal_set_f_209(::int32_t value);

  public:
  // optional int64 f_210 = 302;
  bool has_f_210() const;
  void clear_f_210() ;
  ::int64_t f_210() const;
  void set_f_210(::int64_t value);

  private:
  ::int64_t _internal_f_210() const;
  void _internal_set_f_210(::int64_t value);

  public:
  // optional int64 f_212 = 305;
  bool has_f_212() const;
  void clear_f_212() ;
  ::int64_t f_212() const;
  void set_f_212(::int64_t value);

  private:
  ::int64_t _internal_f_212() const;
  void _internal_set_f_212(::int64_t value);

  public:
  // optional int64 f_213 = 306;
  bool has_f_213() const;
  void clear_f_213() ;
  ::int64_t f_213() const;
  void set_f_213(::int64_t value);

  private:
  ::int64_t _internal_f_213() const;
  void _internal_set_f_213(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E89 f_211 = 304;
  bool has_f_211() const;
  void clear_f_211() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89 f_211() const;
  void set_f_211(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89 _internal_f_211() const;
  void _internal_set_f_211(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89 value);

  public:
  // optional float f_214 = 308;
  bool has_f_214() const;
  void clear_f_214() ;
  float f_214() const;
  void set_f_214(float value);

  private:
  float _internal_f_214() const;
  void _internal_set_f_214(float value);

  public:
  // optional int64 f_215 = 309;
  bool has_f_215() const;
  void clear_f_215() ;
  ::int64_t f_215() const;
  void set_f_215(::int64_t value);

  private:
  ::int64_t _internal_f_215() const;
  void _internal_set_f_215(::int64_t value);

  public:
  // optional int64 f_218 = 313;
  bool has_f_218() const;
  void clear_f_218() ;
  ::int64_t f_218() const;
  void set_f_218(::int64_t value);

  private:
  ::int64_t _internal_f_218() const;
  void _internal_set_f_218(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E90 f_217 = 312;
  bool has_f_217() const;
  void clear_f_217() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90 f_217() const;
  void set_f_217(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90 _internal_f_217() const;
  void _internal_set_f_217(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90 value);

  public:
  // optional fixed32 f_220 = 316;
  bool has_f_220() const;
  void clear_f_220() ;
  ::uint32_t f_220() const;
  void set_f_220(::uint32_t value);

  private:
  ::uint32_t _internal_f_220() const;
  void _internal_set_f_220(::uint32_t value);

  public:
  // optional int64 f_221 = 317;
  bool has_f_221() const;
  void clear_f_221() ;
  ::int64_t f_221() const;
  void set_f_221(::int64_t value);

  private:
  ::int64_t _internal_f_221() const;
  void _internal_set_f_221(::int64_t value);

  public:
  // optional int64 f_224 = 322;
  bool has_f_224() const;
  void clear_f_224() ;
  ::int64_t f_224() const;
  void set_f_224(::int64_t value);

  private:
  ::int64_t _internal_f_224() const;
  void _internal_set_f_224(::int64_t value);

  public:
  // optional float f_223 = 321;
  bool has_f_223() const;
  void clear_f_223() ;
  float f_223() const;
  void set_f_223(float value);

  private:
  float _internal_f_223() const;
  void _internal_set_f_223(float value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E91 f_227 = 326;
  bool has_f_227() const;
  void clear_f_227() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91 f_227() const;
  void set_f_227(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91 _internal_f_227() const;
  void _internal_set_f_227(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91 value);

  public:
  // optional fixed64 f_226 = 324;
  bool has_f_226() const;
  void clear_f_226() ;
  ::uint64_t f_226() const;
  void set_f_226(::uint64_t value);

  private:
  ::uint64_t _internal_f_226() const;
  void _internal_set_f_226(::uint64_t value);

  public:
  // optional int32 f_229 = 332;
  bool has_f_229() const;
  void clear_f_229() ;
  ::int32_t f_229() const;
  void set_f_229(::int32_t value);

  private:
  ::int32_t _internal_f_229() const;
  void _internal_set_f_229(::int32_t value);

  public:
  // optional int32 f_234 = 338;
  bool has_f_234() const;
  void clear_f_234() ;
  ::int32_t f_234() const;
  void set_f_234(::int32_t value);

  private:
  ::int32_t _internal_f_234() const;
  void _internal_set_f_234(::int32_t value);

  public:
  // optional int64 f_233 = 337;
  bool has_f_233() const;
  void clear_f_233() ;
  ::int64_t f_233() const;
  void set_f_233(::int64_t value);

  private:
  ::int64_t _internal_f_233() const;
  void _internal_set_f_233(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E92 f_235 = 339;
  bool has_f_235() const;
  void clear_f_235() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92 f_235() const;
  void set_f_235(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92 _internal_f_235() const;
  void _internal_set_f_235(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92 value);

  public:
  // optional float f_236 = 341;
  bool has_f_236() const;
  void clear_f_236() ;
  float f_236() const;
  void set_f_236(float value);

  private:
  float _internal_f_236() const;
  void _internal_set_f_236(float value);

  public:
  // optional int64 f_239 = 346;
  bool has_f_239() const;
  void clear_f_239() ;
  ::int64_t f_239() const;
  void set_f_239(::int64_t value);

  private:
  ::int64_t _internal_f_239() const;
  void _internal_set_f_239(::int64_t value);

  public:
  // optional float f_238 = 345;
  bool has_f_238() const;
  void clear_f_238() ;
  float f_238() const;
  void set_f_238(float value);

  private:
  float _internal_f_238() const;
  void _internal_set_f_238(float value);

  public:
  // optional float f_240 = 349;
  bool has_f_240() const;
  void clear_f_240() ;
  float f_240() const;
  void set_f_240(float value);

  private:
  float _internal_f_240() const;
  void _internal_set_f_240(float value);

  public:
  // optional int32 f_241 = 351;
  bool has_f_241() const;
  void clear_f_241() ;
  ::int32_t f_241() const;
  void set_f_241(::int32_t value);

  private:
  ::int32_t _internal_f_241() const;
  void _internal_set_f_241(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E93 f_242 = 352;
  bool has_f_242() const;
  void clear_f_242() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93 f_242() const;
  void set_f_242(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93 _internal_f_242() const;
  void _internal_set_f_242(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93 value);

  public:
  // optional int64 f_243 = 353;
  bool has_f_243() const;
  void clear_f_243() ;
  ::int64_t f_243() const;
  void set_f_243(::int64_t value);

  private:
  ::int64_t _internal_f_243() const;
  void _internal_set_f_243(::int64_t value);

  public:
  // optional uint32 f_244 = 354;
  bool has_f_244() const;
  void clear_f_244() ;
  ::uint32_t f_244() const;
  void set_f_244(::uint32_t value);

  private:
  ::uint32_t _internal_f_244() const;
  void _internal_set_f_244(::uint32_t value);

  public:
  // optional int32 f_245 = 355;
  bool has_f_245() const;
  void clear_f_245() ;
  ::int32_t f_245() const;
  void set_f_245(::int32_t value);

  private:
  ::int32_t _internal_f_245() const;
  void _internal_set_f_245(::int32_t value);

  public:
  // optional uint32 f_249 = 361;
  bool has_f_249() const;
  void clear_f_249() ;
  ::uint32_t f_249() const;
  void set_f_249(::uint32_t value);

  private:
  ::uint32_t _internal_f_249() const;
  void _internal_set_f_249(::uint32_t value);

  public:
  // optional uint32 f_250 = 363;
  bool has_f_250() const;
  void clear_f_250() ;
  ::uint32_t f_250() const;
  void set_f_250(::uint32_t value);

  private:
  ::uint32_t _internal_f_250() const;
  void _internal_set_f_250(::uint32_t value);

  public:
  // optional bool f_228 = 328;
  bool has_f_228() const;
  void clear_f_228() ;
  bool f_228() const;
  void set_f_228(bool value);

  private:
  bool _internal_f_228() const;
  void _internal_set_f_228(bool value);

  public:
  // optional bool f_256 = 370;
  bool has_f_256() const;
  void clear_f_256() ;
  bool f_256() const;
  void set_f_256(bool value);

  private:
  bool _internal_f_256() const;
  void _internal_set_f_256(bool value);

  public:
  // optional bool f_259 = 375;
  bool has_f_259() const;
  void clear_f_259() ;
  bool f_259() const;
  void set_f_259(bool value);

  private:
  bool _internal_f_259() const;
  void _internal_set_f_259(bool value);

  public:
  // optional bool f_262 = 379;
  bool has_f_262() const;
  void clear_f_262() ;
  bool f_262() const;
  void set_f_262(bool value);

  private:
  bool _internal_f_262() const;
  void _internal_set_f_262(bool value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E94 f_252 = 365;
  bool has_f_252() const;
  void clear_f_252() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94 f_252() const;
  void set_f_252(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94 _internal_f_252() const;
  void _internal_set_f_252(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94 value);

  public:
  // optional uint64 f_251 = 364;
  bool has_f_251() const;
  void clear_f_251() ;
  ::uint64_t f_251() const;
  void set_f_251(::uint64_t value);

  private:
  ::uint64_t _internal_f_251() const;
  void _internal_set_f_251(::uint64_t value);

  public:
  // optional int64 f_254 = 368;
  bool has_f_254() const;
  void clear_f_254() ;
  ::int64_t f_254() const;
  void set_f_254(::int64_t value);

  private:
  ::int64_t _internal_f_254() const;
  void _internal_set_f_254(::int64_t value);

  public:
  // optional int64 f_257 = 372;
  bool has_f_257() const;
  void clear_f_257() ;
  ::int64_t f_257() const;
  void set_f_257(::int64_t value);

  private:
  ::int64_t _internal_f_257() const;
  void _internal_set_f_257(::int64_t value);

  public:
  // optional fixed64 f_258 = 373;
  bool has_f_258() const;
  void clear_f_258() ;
  ::uint64_t f_258() const;
  void set_f_258(::uint64_t value);

  private:
  ::uint64_t _internal_f_258() const;
  void _internal_set_f_258(::uint64_t value);

  public:
  // optional float f_255 = 369;
  bool has_f_255() const;
  void clear_f_255() ;
  float f_255() const;
  void set_f_255(float value);

  private:
  float _internal_f_255() const;
  void _internal_set_f_255(float value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E95 f_264 = 382;
  bool has_f_264() const;
  void clear_f_264() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95 f_264() const;
  void set_f_264(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95 _internal_f_264() const;
  void _internal_set_f_264(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95 value);

  public:
  // optional int64 f_260 = 376;
  bool has_f_260() const;
  void clear_f_260() ;
  ::int64_t f_260() const;
  void set_f_260(::int64_t value);

  private:
  ::int64_t _internal_f_260() const;
  void _internal_set_f_260(::int64_t value);

  public:
  // optional uint64 f_263 = 381;
  bool has_f_263() const;
  void clear_f_263() ;
  ::uint64_t f_263() const;
  void set_f_263(::uint64_t value);

  private:
  ::uint64_t _internal_f_263() const;
  void _internal_set_f_263(::uint64_t value);

  public:
  // optional int64 f_266 = 386;
  bool has_f_266() const;
  void clear_f_266() ;
  ::int64_t f_266() const;
  void set_f_266(::int64_t value);

  private:
  ::int64_t _internal_f_266() const;
  void _internal_set_f_266(::int64_t value);

  public:
  // optional fixed32 f_265 = 383;
  bool has_f_265() const;
  void clear_f_265() ;
  ::uint32_t f_265() const;
  void set_f_265(::uint32_t value);

  private:
  ::uint32_t _internal_f_265() const;
  void _internal_set_f_265(::uint32_t value);

  public:
  // optional int32 f_269 = 393;
  bool has_f_269() const;
  void clear_f_269() ;
  ::int32_t f_269() const;
  void set_f_269(::int32_t value);

  private:
  ::int32_t _internal_f_269() const;
  void _internal_set_f_269(::int32_t value);

  public:
  // optional int64 f_270 = 394;
  bool has_f_270() const;
  void clear_f_270() ;
  ::int64_t f_270() const;
  void set_f_270(::int64_t value);

  private:
  ::int64_t _internal_f_270() const;
  void _internal_set_f_270(::int64_t value);

  public:
  // optional fixed64 f_271 = 395;
  bool has_f_271() const;
  void clear_f_271() ;
  ::uint64_t f_271() const;
  void set_f_271(::uint64_t value);

  private:
  ::uint64_t _internal_f_271() const;
  void _internal_set_f_271(::uint64_t value);

  public:
  // optional int64 f_274 = 398;
  bool has_f_274() const;
  void clear_f_274() ;
  ::int64_t f_274() const;
  void set_f_274(::int64_t value);

  private:
  ::int64_t _internal_f_274() const;
  void _internal_set_f_274(::int64_t value);

  public:
  // optional int32 f_272 = 396;
  bool has_f_272() const;
  void clear_f_272() ;
  ::int32_t f_272() const;
  void set_f_272(::int32_t value);

  private:
  ::int32_t _internal_f_272() const;
  void _internal_set_f_272(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E96 f_275 = 400;
  bool has_f_275() const;
  void clear_f_275() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96 f_275() const;
  void set_f_275(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96 _internal_f_275() const;
  void _internal_set_f_275(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96 value);

  public:
  // optional int64 f_276 = 401;
  bool has_f_276() const;
  void clear_f_276() ;
  ::int64_t f_276() const;
  void set_f_276(::int64_t value);

  private:
  ::int64_t _internal_f_276() const;
  void _internal_set_f_276(::int64_t value);

  public:
  // optional bool f_267 = 388;
  bool has_f_267() const;
  void clear_f_267() ;
  bool f_267() const;
  void set_f_267(bool value);

  private:
  bool _internal_f_267() const;
  void _internal_set_f_267(bool value);

  public:
  // optional bool f_273 = 397;
  bool has_f_273() const;
  void clear_f_273() ;
  bool f_273() const;
  void set_f_273(bool value);

  private:
  bool _internal_f_273() const;
  void _internal_set_f_273(bool value);

  public:
  // optional bool f_279 = 407;
  bool has_f_279() const;
  void clear_f_279() ;
  bool f_279() const;
  void set_f_279(bool value);

  private:
  bool _internal_f_279() const;
  void _internal_set_f_279(bool value);

  public:
  // optional bool f_288 = 419;
  bool has_f_288() const;
  void clear_f_288() ;
  bool f_288() const;
  void set_f_288(bool value);

  private:
  bool _internal_f_288() const;
  void _internal_set_f_288(bool value);

  public:
  // optional int32 f_277 = 403;
  bool has_f_277() const;
  void clear_f_277() ;
  ::int32_t f_277() const;
  void set_f_277(::int32_t value);

  private:
  ::int32_t _internal_f_277() const;
  void _internal_set_f_277(::int32_t value);

  public:
  // optional uint64 f_278 = 406;
  bool has_f_278() const;
  void clear_f_278() ;
  ::uint64_t f_278() const;
  void set_f_278(::uint64_t value);

  private:
  ::uint64_t _internal_f_278() const;
  void _internal_set_f_278(::uint64_t value);

  public:
  // optional int64 f_281 = 409;
  bool has_f_281() const;
  void clear_f_281() ;
  ::int64_t f_281() const;
  void set_f_281(::int64_t value);

  private:
  ::int64_t _internal_f_281() const;
  void _internal_set_f_281(::int64_t value);

  public:
  // optional float f_280 = 408;
  bool has_f_280() const;
  void clear_f_280() ;
  float f_280() const;
  void set_f_280(float value);

  private:
  float _internal_f_280() const;
  void _internal_set_f_280(float value);

  public:
  // optional int32 f_282 = 410;
  bool has_f_282() const;
  void clear_f_282() ;
  ::int32_t f_282() const;
  void set_f_282(::int32_t value);

  private:
  ::int32_t _internal_f_282() const;
  void _internal_set_f_282(::int32_t value);

  public:
  // optional int32 f_284 = 414;
  bool has_f_284() const;
  void clear_f_284() ;
  ::int32_t f_284() const;
  void set_f_284(::int32_t value);

  private:
  ::int32_t _internal_f_284() const;
  void _internal_set_f_284(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E97 f_285 = 415;
  bool has_f_285() const;
  void clear_f_285() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97 f_285() const;
  void set_f_285(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97 _internal_f_285() const;
  void _internal_set_f_285(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97 value);

  public:
  // optional int64 f_287 = 417;
  bool has_f_287() const;
  void clear_f_287() ;
  ::int64_t f_287() const;
  void set_f_287(::int64_t value);

  private:
  ::int64_t _internal_f_287() const;
  void _internal_set_f_287(::int64_t value);

  public:
  // optional int32 f_286 = 416;
  bool has_f_286() const;
  void clear_f_286() ;
  ::int32_t f_286() const;
  void set_f_286(::int32_t value);

  private:
  ::int32_t _internal_f_286() const;
  void _internal_set_f_286(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 292, 46,
      636, 55>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<9> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> f_5_;
    mutable ::google::protobuf::internal::CachedSize _f_5_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> f_57_;
    mutable ::google::protobuf::internal::CachedSize _f_57_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> f_79_;
    mutable ::google::protobuf::internal::CachedSize _f_79_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> f_81_;
    mutable ::google::protobuf::internal::CachedSize _f_81_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> f_101_;
    mutable ::google::protobuf::internal::CachedSize _f_101_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> f_158_;
    mutable ::google::protobuf::internal::CachedSize _f_158_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> f_165_;
    mutable ::google::protobuf::internal::CachedSize _f_165_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> f_173_;
    mutable ::google::protobuf::internal::CachedSize _f_173_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> f_206_;
    mutable ::google::protobuf::internal::CachedSize _f_206_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> f_219_;
    ::google::protobuf::RepeatedField<::int32_t> f_230_;
    mutable ::google::protobuf::internal::CachedSize _f_230_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> f_237_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74 > f_420_;
    ::google::protobuf::internal::ArenaStringPtr f_1_;
    ::google::protobuf::internal::ArenaStringPtr f_2_;
    ::google::protobuf::internal::ArenaStringPtr f_7_;
    ::google::protobuf::internal::ArenaStringPtr f_16_;
    ::google::protobuf::internal::ArenaStringPtr f_29_;
    ::google::protobuf::internal::ArenaStringPtr f_43_;
    ::google::protobuf::internal::ArenaStringPtr f_45_;
    ::google::protobuf::internal::ArenaStringPtr f_50_;
    ::google::protobuf::internal::ArenaStringPtr f_55_;
    ::google::protobuf::internal::ArenaStringPtr f_58_;
    ::google::protobuf::internal::ArenaStringPtr f_68_;
    ::google::protobuf::internal::ArenaStringPtr f_70_;
    ::google::protobuf::internal::ArenaStringPtr f_91_;
    ::google::protobuf::internal::ArenaStringPtr f_97_;
    ::google::protobuf::internal::ArenaStringPtr f_106_;
    ::google::protobuf::internal::ArenaStringPtr f_107_;
    ::google::protobuf::internal::ArenaStringPtr f_108_;
    ::google::protobuf::internal::ArenaStringPtr f_109_;
    ::google::protobuf::internal::ArenaStringPtr f_110_;
    ::google::protobuf::internal::ArenaStringPtr f_113_;
    ::google::protobuf::internal::ArenaStringPtr f_116_;
    ::google::protobuf::internal::ArenaStringPtr f_118_;
    ::google::protobuf::internal::ArenaStringPtr f_119_;
    ::google::protobuf::internal::ArenaStringPtr f_121_;
    ::google::protobuf::internal::ArenaStringPtr f_125_;
    ::google::protobuf::internal::ArenaStringPtr f_129_;
    ::google::protobuf::internal::ArenaStringPtr f_131_;
    ::google::protobuf::internal::ArenaStringPtr f_132_;
    ::google::protobuf::internal::ArenaStringPtr f_133_;
    ::google::protobuf::internal::ArenaStringPtr f_134_;
    ::google::protobuf::internal::ArenaStringPtr f_135_;
    ::google::protobuf::internal::ArenaStringPtr f_142_;
    ::google::protobuf::internal::ArenaStringPtr f_143_;
    ::google::protobuf::internal::ArenaStringPtr f_148_;
    ::google::protobuf::internal::ArenaStringPtr f_149_;
    ::google::protobuf::internal::ArenaStringPtr f_151_;
    ::google::protobuf::internal::ArenaStringPtr f_153_;
    ::google::protobuf::internal::ArenaStringPtr f_155_;
    ::google::protobuf::internal::ArenaStringPtr f_176_;
    ::google::protobuf::internal::ArenaStringPtr f_177_;
    ::google::protobuf::internal::ArenaStringPtr f_178_;
    ::google::protobuf::internal::ArenaStringPtr f_179_;
    ::google::protobuf::internal::ArenaStringPtr f_180_;
    ::google::protobuf::internal::ArenaStringPtr f_186_;
    ::google::protobuf::internal::ArenaStringPtr f_198_;
    ::google::protobuf::internal::ArenaStringPtr f_204_;
    ::google::protobuf::internal::ArenaStringPtr f_216_;
    ::google::protobuf::internal::ArenaStringPtr f_222_;
    ::google::protobuf::internal::ArenaStringPtr f_231_;
    ::google::protobuf::internal::ArenaStringPtr f_232_;
    ::google::protobuf::internal::ArenaStringPtr f_246_;
    ::google::protobuf::internal::ArenaStringPtr f_247_;
    ::google::protobuf::internal::ArenaStringPtr f_248_;
    ::google::protobuf::internal::ArenaStringPtr f_253_;
    ::google::protobuf::internal::ArenaStringPtr f_261_;
    ::google::protobuf::internal::ArenaStringPtr f_268_;
    ::google::protobuf::internal::ArenaStringPtr f_283_;
    ::google::protobuf::internal::ArenaStringPtr f_289_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* f_421_;
    ::uint64_t f_0_;
    ::int64_t f_3_;
    ::int64_t f_6_;
    float f_4_;
    ::uint32_t f_9_;
    ::int64_t f_8_;
    ::int64_t f_10_;
    int f_11_;
    int f_12_;
    ::uint64_t f_13_;
    ::int64_t f_14_;
    ::uint64_t f_15_;
    ::int64_t f_18_;
    ::uint64_t f_19_;
    int f_17_;
    ::int32_t f_20_;
    ::int64_t f_21_;
    ::uint64_t f_22_;
    ::uint64_t f_25_;
    ::int32_t f_24_;
    ::int32_t f_26_;
    int f_27_;
    ::int32_t f_28_;
    ::uint32_t f_30_;
    int f_32_;
    ::uint64_t f_31_;
    ::int64_t f_33_;
    int f_34_;
    int f_35_;
    ::int32_t f_36_;
    int f_37_;
    ::uint64_t f_38_;
    ::uint64_t f_40_;
    ::int32_t f_39_;
    ::int32_t f_41_;
    int f_42_;
    ::int32_t f_44_;
    ::int64_t f_47_;
    float f_46_;
    ::int32_t f_48_;
    ::int64_t f_49_;
    ::int64_t f_51_;
    int f_52_;
    ::int32_t f_54_;
    ::int64_t f_53_;
    int f_56_;
    int f_60_;
    ::int64_t f_59_;
    ::int64_t f_61_;
    ::int64_t f_62_;
    ::int64_t f_63_;
    double f_65_;
    int f_64_;
    float f_66_;
    ::int64_t f_69_;
    ::uint64_t f_71_;
    float f_67_;
    ::uint32_t f_76_;
    ::int64_t f_72_;
    ::int64_t f_73_;
    ::int64_t f_74_;
    ::int64_t f_75_;
    ::int64_t f_77_;
    ::int32_t f_78_;
    bool f_23_;
    bool f_90_;
    bool f_94_;
    bool f_102_;
    int f_80_;
    ::uint32_t f_82_;
    int f_83_;
    int f_84_;
    ::int64_t f_86_;
    float f_85_;
    int f_87_;
    int f_88_;
    ::int32_t f_89_;
    ::int64_t f_93_;
    ::int32_t f_92_;
    float f_95_;
    ::int64_t f_98_;
    ::int32_t f_96_;
    int f_100_;
    ::int64_t f_99_;
    double f_103_;
    int f_104_;
    ::int32_t f_105_;
    ::int64_t f_111_;
    ::int32_t f_112_;
    ::int32_t f_114_;
    ::int64_t f_117_;
    int f_115_;
    ::int32_t f_120_;
    ::int64_t f_124_;
    ::uint32_t f_122_;
    ::uint32_t f_126_;
    ::uint32_t f_127_;
    int f_128_;
    ::int32_t f_130_;
    float f_137_;
    ::uint64_t f_136_;
    ::uint64_t f_138_;
    ::int64_t f_139_;
    bool f_123_;
    bool f_141_;
    bool f_144_;
    bool f_147_;
    ::int32_t f_140_;
    ::uint64_t f_145_;
    int f_146_;
    int f_152_;
    ::uint64_t f_150_;
    ::uint32_t f_154_;
    ::int32_t f_157_;
    ::int64_t f_156_;
    ::int64_t f_159_;
    ::int64_t f_160_;
    int f_161_;
    ::int32_t f_162_;
    ::int32_t f_163_;
    int f_164_;
    int f_166_;
    ::uint32_t f_168_;
    ::int64_t f_169_;
    ::int32_t f_170_;
    int f_171_;
    int f_172_;
    ::int32_t f_174_;
    ::int64_t f_175_;
    int f_181_;
    float f_182_;
    ::uint64_t f_184_;
    ::int32_t f_183_;
    ::int32_t f_185_;
    ::int64_t f_188_;
    ::int64_t f_189_;
    ::uint64_t f_191_;
    ::int64_t f_192_;
    int f_190_;
    ::uint32_t f_193_;
    int f_194_;
    ::uint32_t f_195_;
    ::int64_t f_197_;
    float f_196_;
    bool f_167_;
    bool f_187_;
    bool f_202_;
    bool f_225_;
    ::int32_t f_199_;
    ::int32_t f_200_;
    ::int32_t f_201_;
    ::uint32_t f_203_;
    ::int32_t f_205_;
    ::int32_t f_207_;
    int f_208_;
    ::int32_t f_209_;
    ::int64_t f_210_;
    ::int64_t f_212_;
    ::int64_t f_213_;
    int f_211_;
    float f_214_;
    ::int64_t f_215_;
    ::int64_t f_218_;
    int f_217_;
    ::uint32_t f_220_;
    ::int64_t f_221_;
    ::int64_t f_224_;
    float f_223_;
    int f_227_;
    ::uint64_t f_226_;
    ::int32_t f_229_;
    ::int32_t f_234_;
    ::int64_t f_233_;
    int f_235_;
    float f_236_;
    ::int64_t f_239_;
    float f_238_;
    float f_240_;
    ::int32_t f_241_;
    int f_242_;
    ::int64_t f_243_;
    ::uint32_t f_244_;
    ::int32_t f_245_;
    ::uint32_t f_249_;
    ::uint32_t f_250_;
    bool f_228_;
    bool f_256_;
    bool f_259_;
    bool f_262_;
    int f_252_;
    ::uint64_t f_251_;
    ::int64_t f_254_;
    ::int64_t f_257_;
    ::uint64_t f_258_;
    float f_255_;
    int f_264_;
    ::int64_t f_260_;
    ::uint64_t f_263_;
    ::int64_t f_266_;
    ::uint32_t f_265_;
    ::int32_t f_269_;
    ::int64_t f_270_;
    ::uint64_t f_271_;
    ::int64_t f_274_;
    ::int32_t f_272_;
    int f_275_;
    ::int64_t f_276_;
    bool f_267_;
    bool f_273_;
    bool f_279_;
    bool f_288_;
    ::int32_t f_277_;
    ::uint64_t f_278_;
    ::int64_t f_281_;
    float f_280_;
    ::int32_t f_282_;
    ::int32_t f_284_;
    int f_285_;
    ::int64_t f_287_;
    ::int32_t f_286_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M68 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      for (int i = 0; i < f_1_size(); ++i) {
        mutable_f_1(i)->generate_schema(schema);
      }
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_1().size());
      for (int i = 0; i < f_1_size(); ++i) {
        mutable_f_1(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_1_size(); ++i) {
        mutable_f_1(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_1().size());
      for (int i = 0; i < f_1_size(); ++i) {
        mutable_f_1(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_0().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      size_t num_f_1_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_1_entries; ++i) {
        auto* new_msg = add_f_1();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_1(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_1_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_1_entries; ++i) {
        auto* new_msg = add_f_1();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_1(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF1FieldNumber = 2,
    kF0FieldNumber = 1,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.M68 f_1 = 2;
  int f_1_size() const;
  private:
  int _internal_f_1_size() const;

  public:
  void clear_f_1() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68* mutable_f_1(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68>* mutable_f_1();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68>& _internal_f_1() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68>* _internal_mutable_f_1();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& f_1(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68* add_f_1();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68>& f_1() const;
  // optional string f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      80, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68 > f_1_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M48 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M48() : Message9_M5_M11_M23_M34_M36_M40_M48(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M48() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M48(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M48(const Message9_M5_M11_M23_M34_M36_M40_M48& from) : Message9_M5_M11_M23_M34_M36_M40_M48(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M48(Message9_M5_M11_M23_M34_M36_M40_M48&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M48(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M48& operator=(const Message9_M5_M11_M23_M34_M36_M40_M48& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M48& operator=(Message9_M5_M11_M23_M34_M36_M40_M48&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M48& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M48* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M48*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M48_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M48& a, Message9_M5_M11_M23_M34_M36_M40_M48& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M48* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M48* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M48* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M48>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M48& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M48& from) { Message9_M5_M11_M23_M34_M36_M40_M48::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M48* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M48(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M48(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M48& from);
  Message9_M5_M11_M23_M34_M36_M40_M48(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M48&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M48(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M54 = Message9_M5_M11_M23_M34_M36_M40_M48_M54;
  using E37 = Message9_M5_M11_M23_M34_M36_M40_M48_E37;
  static constexpr E37 E37_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_UNSPECIFIED;
  static constexpr E37 E37_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_CONST_1;
  static constexpr E37 E37_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_CONST_2;
  static constexpr E37 E37_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_CONST_3;
  static constexpr E37 E37_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_CONST_4;
  static constexpr E37 E37_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_CONST_5;
  static inline bool E37_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M48_E37_IsValid(value);
  }
  static constexpr E37 E37_MIN = Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_MIN;
  static constexpr E37 E37_MAX = Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_MAX;
  static constexpr int E37_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M48_E37_E37_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E37_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M48_E37_descriptor();
  }
  template <typename T>
  static inline const std::string& E37_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M48_E37_Name(value);
  }
  static inline bool E37_Parse(absl::string_view name, E37* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M48_E37_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      mutable_f_1()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_1()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      mutable_f_1()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_1()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      idx = mutable_f_1()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      idx = mutable_f_1()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF1FieldNumber = 2,
    kF0FieldNumber = 1,
  };
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.M54 f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54& f_1() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* release_f_1();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* mutable_f_1();
  void set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* value);
  void unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* unsafe_arena_release_f_1();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54& _internal_f_1() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* _internal_mutable_f_1();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.E37 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37 f_0() const;
  void set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37 _internal_f_0() const;
  void _internal_set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M48_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* f_1_;
    int f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M4_M19 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M4.M19) */ {
 public:
  inline Message9_M4_M19() : Message9_M4_M19(nullptr) {}
  ~Message9_M4_M19() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M4_M19(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M4_M19(const Message9_M4_M19& from) : Message9_M4_M19(nullptr, from) {}
  inline Message9_M4_M19(Message9_M4_M19&& from) noexcept
      : Message9_M4_M19(nullptr, std::move(from)) {}
  inline Message9_M4_M19& operator=(const Message9_M4_M19& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M4_M19& operator=(Message9_M4_M19&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M4_M19& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M4_M19* internal_default_instance() {
    return reinterpret_cast<const Message9_M4_M19*>(
        &_Message9_M4_M19_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(Message9_M4_M19& a, Message9_M4_M19& b) { a.Swap(&b); }
  inline void Swap(Message9_M4_M19* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M4_M19* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M4_M19* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M4_M19>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M4_M19& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M4_M19& from) { Message9_M4_M19::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M4_M19* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M4.M19"; }

 protected:
  explicit Message9_M4_M19(::google::protobuf::Arena* arena);
  Message9_M4_M19(::google::protobuf::Arena* arena, const Message9_M4_M19& from);
  Message9_M4_M19(::google::protobuf::Arena* arena, Message9_M4_M19&& from) noexcept
      : Message9_M4_M19(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M28 = Message9_M4_M19_M28;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_0().data())), f_0().size() * sizeof(::int64_t)));
      mutable_f_2()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_0().data())));
      sizes_list.push_back(f_0().size() * sizeof(::int64_t));
      mutable_f_2()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_0().data())));
      mutable_f_2()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size() * sizeof(::int64_t));
      mutable_f_2()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      mutable_f_0()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_0().data())));
      idx = mutable_f_2()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      mutable_f_0()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      idx = mutable_f_2()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
    kF2FieldNumber = 4,
  };
  // repeated int64 f_0 = 2 [packed = true];
  int f_0_size() const;
  private:
  int _internal_f_0_size() const;

  public:
  void clear_f_0() ;
  ::int64_t f_0(int index) const;
  void set_f_0(int index, ::int64_t value);
  void add_f_0(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& f_0() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_f_0();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_f_0() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M4.M19.M28 f_2 = 4;
  bool has_f_2() const;
  void clear_f_2() ;
  const ::fleetbench::proto::Message9_M4_M19_M28& f_2() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M4_M19_M28* release_f_2();
  ::fleetbench::proto::Message9_M4_M19_M28* mutable_f_2();
  void set_allocated_f_2(::fleetbench::proto::Message9_M4_M19_M28* value);
  void unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M4_M19_M28* value);
  ::fleetbench::proto::Message9_M4_M19_M28* unsafe_arena_release_f_2();

  private:
  const ::fleetbench::proto::Message9_M4_M19_M28& _internal_f_2() const;
  ::fleetbench::proto::Message9_M4_M19_M28* _internal_mutable_f_2();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M4.M19)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M4_M19_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int64_t> f_0_;
    mutable ::google::protobuf::internal::CachedSize _f_0_cached_byte_size_;
    ::fleetbench::proto::Message9_M4_M19_M28* f_2_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M3_M20 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M3.M20) */ {
 public:
  inline Message9_M3_M20() : Message9_M3_M20(nullptr) {}
  ~Message9_M3_M20() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M3_M20(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M3_M20(const Message9_M3_M20& from) : Message9_M3_M20(nullptr, from) {}
  inline Message9_M3_M20(Message9_M3_M20&& from) noexcept
      : Message9_M3_M20(nullptr, std::move(from)) {}
  inline Message9_M3_M20& operator=(const Message9_M3_M20& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M3_M20& operator=(Message9_M3_M20&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M3_M20& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M3_M20* internal_default_instance() {
    return reinterpret_cast<const Message9_M3_M20*>(
        &_Message9_M3_M20_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(Message9_M3_M20& a, Message9_M3_M20& b) { a.Swap(&b); }
  inline void Swap(Message9_M3_M20* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M3_M20* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M3_M20* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M3_M20>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M3_M20& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M3_M20& from) { Message9_M3_M20::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M3_M20* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M3.M20"; }

 protected:
  explicit Message9_M3_M20(::google::protobuf::Arena* arena);
  Message9_M3_M20(::google::protobuf::Arena* arena, const Message9_M3_M20& from);
  Message9_M3_M20(::google::protobuf::Arena* arena, Message9_M3_M20&& from) noexcept
      : Message9_M3_M20(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M29 = Message9_M3_M20_M29;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_0().data())), f_0().size() * sizeof(::int32_t)));
      mutable_f_1()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_0().data())));
      sizes_list.push_back(f_0().size() * sizeof(::int32_t));
      mutable_f_1()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_0().data())));
      mutable_f_1()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size() * sizeof(::int32_t));
      mutable_f_1()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      mutable_f_0()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_0().data())));
      idx = mutable_f_1()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      mutable_f_0()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      idx = mutable_f_1()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
    kF1FieldNumber = 3,
  };
  // repeated int32 f_0 = 1 [packed = true];
  int f_0_size() const;
  private:
  int _internal_f_0_size() const;

  public:
  void clear_f_0() ;
  ::int32_t f_0(int index) const;
  void set_f_0(int index, ::int32_t value);
  void add_f_0(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& f_0() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_f_0();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_f_0() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M3.M20.M29 f_1 = 3;
  bool has_f_1() const;
  void clear_f_1() ;
  const ::fleetbench::proto::Message9_M3_M20_M29& f_1() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M3_M20_M29* release_f_1();
  ::fleetbench::proto::Message9_M3_M20_M29* mutable_f_1();
  void set_allocated_f_1(::fleetbench::proto::Message9_M3_M20_M29* value);
  void unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M3_M20_M29* value);
  ::fleetbench::proto::Message9_M3_M20_M29* unsafe_arena_release_f_1();

  private:
  const ::fleetbench::proto::Message9_M3_M20_M29& _internal_f_1() const;
  ::fleetbench::proto::Message9_M3_M20_M29* _internal_mutable_f_1();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M3.M20)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M3_M20_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> f_0_;
    mutable ::google::protobuf::internal::CachedSize _f_0_cached_byte_size_;
    ::fleetbench::proto::Message9_M3_M20_M29* f_1_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M3_M14 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M3.M14) */ {
 public:
  inline Message9_M3_M14() : Message9_M3_M14(nullptr) {}
  ~Message9_M3_M14() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M3_M14(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M3_M14(const Message9_M3_M14& from) : Message9_M3_M14(nullptr, from) {}
  inline Message9_M3_M14(Message9_M3_M14&& from) noexcept
      : Message9_M3_M14(nullptr, std::move(from)) {}
  inline Message9_M3_M14& operator=(const Message9_M3_M14& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M3_M14& operator=(Message9_M3_M14&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M3_M14& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M3_M14* internal_default_instance() {
    return reinterpret_cast<const Message9_M3_M14*>(
        &_Message9_M3_M14_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Message9_M3_M14& a, Message9_M3_M14& b) { a.Swap(&b); }
  inline void Swap(Message9_M3_M14* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M3_M14* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M3_M14* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M3_M14>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M3_M14& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M3_M14& from) { Message9_M3_M14::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M3_M14* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M3.M14"; }

 protected:
  explicit Message9_M3_M14(::google::protobuf::Arena* arena);
  Message9_M3_M14(::google::protobuf::Arena* arena, const Message9_M3_M14& from);
  Message9_M3_M14(::google::protobuf::Arena* arena, Message9_M3_M14&& from) noexcept
      : Message9_M3_M14(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M27 = Message9_M3_M14_M27;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
      mutable_f_2()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
      mutable_f_2()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      mutable_f_2()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size());
      mutable_f_2()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      idx = mutable_f_2()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      idx = mutable_f_2()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
    kF2FieldNumber = 3,
  };
  // optional string f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M3.M14.M27 f_2 = 3;
  bool has_f_2() const;
  void clear_f_2() ;
  const ::fleetbench::proto::Message9_M3_M14_M27& f_2() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M3_M14_M27* release_f_2();
  ::fleetbench::proto::Message9_M3_M14_M27* mutable_f_2();
  void set_allocated_f_2(::fleetbench::proto::Message9_M3_M14_M27* value);
  void unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M3_M14_M27* value);
  ::fleetbench::proto::Message9_M3_M14_M27* unsafe_arena_release_f_2();

  private:
  const ::fleetbench::proto::Message9_M3_M14_M27& _internal_f_2() const;
  ::fleetbench::proto::Message9_M3_M14_M27* _internal_mutable_f_2();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M3.M14)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M3_M14_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    ::fleetbench::proto::Message9_M3_M14_M27* f_2_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M3_M13_M24 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M3.M13.M24) */ {
 public:
  inline Message9_M3_M13_M24() : Message9_M3_M13_M24(nullptr) {}
  ~Message9_M3_M13_M24() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M3_M13_M24(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M3_M13_M24(const Message9_M3_M13_M24& from) : Message9_M3_M13_M24(nullptr, from) {}
  inline Message9_M3_M13_M24(Message9_M3_M13_M24&& from) noexcept
      : Message9_M3_M13_M24(nullptr, std::move(from)) {}
  inline Message9_M3_M13_M24& operator=(const Message9_M3_M13_M24& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M3_M13_M24& operator=(Message9_M3_M13_M24&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M3_M13_M24& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M3_M13_M24* internal_default_instance() {
    return reinterpret_cast<const Message9_M3_M13_M24*>(
        &_Message9_M3_M13_M24_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Message9_M3_M13_M24& a, Message9_M3_M13_M24& b) { a.Swap(&b); }
  inline void Swap(Message9_M3_M13_M24* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M3_M13_M24* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M3_M13_M24* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M3_M13_M24>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M3_M13_M24& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M3_M13_M24& from) { Message9_M3_M13_M24::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M3_M13_M24* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M3.M13.M24"; }

 protected:
  explicit Message9_M3_M13_M24(::google::protobuf::Arena* arena);
  Message9_M3_M13_M24(::google::protobuf::Arena* arena, const Message9_M3_M13_M24& from);
  Message9_M3_M13_M24(::google::protobuf::Arena* arena, Message9_M3_M13_M24&& from) noexcept
      : Message9_M3_M13_M24(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M35 = Message9_M3_M13_M24_M35;
  using E8 = Message9_M3_M13_M24_E8;
  static constexpr E8 E8_UNSPECIFIED = Message9_M3_M13_M24_E8_E8_UNSPECIFIED;
  static constexpr E8 E8_CONST_1 = Message9_M3_M13_M24_E8_E8_CONST_1;
  static constexpr E8 E8_CONST_2 = Message9_M3_M13_M24_E8_E8_CONST_2;
  static constexpr E8 E8_CONST_3 = Message9_M3_M13_M24_E8_E8_CONST_3;
  static constexpr E8 E8_CONST_4 = Message9_M3_M13_M24_E8_E8_CONST_4;
  static constexpr E8 E8_CONST_5 = Message9_M3_M13_M24_E8_E8_CONST_5;
  static inline bool E8_IsValid(int value) {
    return Message9_M3_M13_M24_E8_IsValid(value);
  }
  static constexpr E8 E8_MIN = Message9_M3_M13_M24_E8_E8_MIN;
  static constexpr E8 E8_MAX = Message9_M3_M13_M24_E8_E8_MAX;
  static constexpr int E8_ARRAYSIZE = Message9_M3_M13_M24_E8_E8_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E8_descriptor() {
    return Message9_M3_M13_M24_E8_descriptor();
  }
  template <typename T>
  static inline const std::string& E8_Name(T value) {
    return Message9_M3_M13_M24_E8_Name(value);
  }
  static inline bool E8_Parse(absl::string_view name, E8* value) {
    return Message9_M3_M13_M24_E8_Parse(name, value);
  }
  using E9 = Message9_M3_M13_M24_E9;
  static constexpr E9 E9_UNSPECIFIED = Message9_M3_M13_M24_E9_E9_UNSPECIFIED;
  static constexpr E9 E9_CONST_1 = Message9_M3_M13_M24_E9_E9_CONST_1;
  static constexpr E9 E9_CONST_2 = Message9_M3_M13_M24_E9_E9_CONST_2;
  static constexpr E9 E9_CONST_3 = Message9_M3_M13_M24_E9_E9_CONST_3;
  static constexpr E9 E9_CONST_4 = Message9_M3_M13_M24_E9_E9_CONST_4;
  static constexpr E9 E9_CONST_5 = Message9_M3_M13_M24_E9_E9_CONST_5;
  static inline bool E9_IsValid(int value) {
    return Message9_M3_M13_M24_E9_IsValid(value);
  }
  static constexpr E9 E9_MIN = Message9_M3_M13_M24_E9_E9_MIN;
  static constexpr E9 E9_MAX = Message9_M3_M13_M24_E9_E9_MAX;
  static constexpr int E9_ARRAYSIZE = Message9_M3_M13_M24_E9_E9_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E9_descriptor() {
    return Message9_M3_M13_M24_E9_descriptor();
  }
  template <typename T>
  static inline const std::string& E9_Name(T value) {
    return Message9_M3_M13_M24_E9_Name(value);
  }
  static inline bool E9_Parse(absl::string_view name, E9* value) {
    return Message9_M3_M13_M24_E9_Parse(name, value);
  }
  using E10 = Message9_M3_M13_M24_E10;
  static constexpr E10 E10_UNSPECIFIED = Message9_M3_M13_M24_E10_E10_UNSPECIFIED;
  static constexpr E10 E10_CONST_1 = Message9_M3_M13_M24_E10_E10_CONST_1;
  static constexpr E10 E10_CONST_2 = Message9_M3_M13_M24_E10_E10_CONST_2;
  static constexpr E10 E10_CONST_3 = Message9_M3_M13_M24_E10_E10_CONST_3;
  static constexpr E10 E10_CONST_4 = Message9_M3_M13_M24_E10_E10_CONST_4;
  static constexpr E10 E10_CONST_5 = Message9_M3_M13_M24_E10_E10_CONST_5;
  static inline bool E10_IsValid(int value) {
    return Message9_M3_M13_M24_E10_IsValid(value);
  }
  static constexpr E10 E10_MIN = Message9_M3_M13_M24_E10_E10_MIN;
  static constexpr E10 E10_MAX = Message9_M3_M13_M24_E10_E10_MAX;
  static constexpr int E10_ARRAYSIZE = Message9_M3_M13_M24_E10_E10_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E10_descriptor() {
    return Message9_M3_M13_M24_E10_descriptor();
  }
  template <typename T>
  static inline const std::string& E10_Name(T value) {
    return Message9_M3_M13_M24_E10_Name(value);
  }
  static inline bool E10_Parse(absl::string_view name, E10* value) {
    return Message9_M3_M13_M24_E10_Parse(name, value);
  }
  using E11 = Message9_M3_M13_M24_E11;
  static constexpr E11 E11_UNSPECIFIED = Message9_M3_M13_M24_E11_E11_UNSPECIFIED;
  static constexpr E11 E11_CONST_1 = Message9_M3_M13_M24_E11_E11_CONST_1;
  static constexpr E11 E11_CONST_2 = Message9_M3_M13_M24_E11_E11_CONST_2;
  static constexpr E11 E11_CONST_3 = Message9_M3_M13_M24_E11_E11_CONST_3;
  static constexpr E11 E11_CONST_4 = Message9_M3_M13_M24_E11_E11_CONST_4;
  static constexpr E11 E11_CONST_5 = Message9_M3_M13_M24_E11_E11_CONST_5;
  static inline bool E11_IsValid(int value) {
    return Message9_M3_M13_M24_E11_IsValid(value);
  }
  static constexpr E11 E11_MIN = Message9_M3_M13_M24_E11_E11_MIN;
  static constexpr E11 E11_MAX = Message9_M3_M13_M24_E11_E11_MAX;
  static constexpr int E11_ARRAYSIZE = Message9_M3_M13_M24_E11_E11_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E11_descriptor() {
    return Message9_M3_M13_M24_E11_descriptor();
  }
  template <typename T>
  static inline const std::string& E11_Name(T value) {
    return Message9_M3_M13_M24_E11_Name(value);
  }
  static inline bool E11_Parse(absl::string_view name, E11* value) {
    return Message9_M3_M13_M24_E11_Parse(name, value);
  }
  using E12 = Message9_M3_M13_M24_E12;
  static constexpr E12 E12_UNSPECIFIED = Message9_M3_M13_M24_E12_E12_UNSPECIFIED;
  static constexpr E12 E12_CONST_1 = Message9_M3_M13_M24_E12_E12_CONST_1;
  static constexpr E12 E12_CONST_2 = Message9_M3_M13_M24_E12_E12_CONST_2;
  static constexpr E12 E12_CONST_3 = Message9_M3_M13_M24_E12_E12_CONST_3;
  static constexpr E12 E12_CONST_4 = Message9_M3_M13_M24_E12_E12_CONST_4;
  static constexpr E12 E12_CONST_5 = Message9_M3_M13_M24_E12_E12_CONST_5;
  static inline bool E12_IsValid(int value) {
    return Message9_M3_M13_M24_E12_IsValid(value);
  }
  static constexpr E12 E12_MIN = Message9_M3_M13_M24_E12_E12_MIN;
  static constexpr E12 E12_MAX = Message9_M3_M13_M24_E12_E12_MAX;
  static constexpr int E12_ARRAYSIZE = Message9_M3_M13_M24_E12_E12_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E12_descriptor() {
    return Message9_M3_M13_M24_E12_descriptor();
  }
  template <typename T>
  static inline const std::string& E12_Name(T value) {
    return Message9_M3_M13_M24_E12_Name(value);
  }
  static inline bool E12_Parse(absl::string_view name, E12* value) {
    return Message9_M3_M13_M24_E12_Parse(name, value);
  }
  using E13 = Message9_M3_M13_M24_E13;
  static constexpr E13 E13_UNSPECIFIED = Message9_M3_M13_M24_E13_E13_UNSPECIFIED;
  static constexpr E13 E13_CONST_1 = Message9_M3_M13_M24_E13_E13_CONST_1;
  static constexpr E13 E13_CONST_2 = Message9_M3_M13_M24_E13_E13_CONST_2;
  static constexpr E13 E13_CONST_3 = Message9_M3_M13_M24_E13_E13_CONST_3;
  static constexpr E13 E13_CONST_4 = Message9_M3_M13_M24_E13_E13_CONST_4;
  static constexpr E13 E13_CONST_5 = Message9_M3_M13_M24_E13_E13_CONST_5;
  static inline bool E13_IsValid(int value) {
    return Message9_M3_M13_M24_E13_IsValid(value);
  }
  static constexpr E13 E13_MIN = Message9_M3_M13_M24_E13_E13_MIN;
  static constexpr E13 E13_MAX = Message9_M3_M13_M24_E13_E13_MAX;
  static constexpr int E13_ARRAYSIZE = Message9_M3_M13_M24_E13_E13_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E13_descriptor() {
    return Message9_M3_M13_M24_E13_descriptor();
  }
  template <typename T>
  static inline const std::string& E13_Name(T value) {
    return Message9_M3_M13_M24_E13_Name(value);
  }
  static inline bool E13_Parse(absl::string_view name, E13* value) {
    return Message9_M3_M13_M24_E13_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_19_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_19())));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())), f_5().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())), f_8().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())), f_10().size()));
      mutable_f_27()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_19_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_19()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_13().data())));
      sizes_list.push_back(f_13().size() * sizeof(int));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      sizes_list.push_back(f_5().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      sizes_list.push_back(f_8().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      sizes_list.push_back(f_10().size());
      mutable_f_27()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_19_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_13().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      mutable_f_27()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_19_);
      sizes.push_back(end_addr - start_addr + sizeof(f_19()));
      sizes.push_back(f_13().size() * sizeof(int));
      sizes.push_back(f_0().size());
      sizes.push_back(f_5().size());
      sizes.push_back(f_8().size());
      sizes.push_back(f_10().size());
      mutable_f_27()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_19_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      mutable_f_13()->Resize(sizes[idx++] / sizeof(int), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_13().data())));
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_5(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_8(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_10(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      }
      idx = mutable_f_27()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      mutable_f_13()->Resize(sizes[idx++] / sizeof(int), 0);
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_5(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_8(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_10(std::move(tmp_str));
        }
      }
      idx = mutable_f_27()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF13FieldNumber = 20,
    kF0FieldNumber = 2,
    kF5FieldNumber = 10,
    kF8FieldNumber = 13,
    kF10FieldNumber = 16,
    kF27FieldNumber = 28,
    kF1FieldNumber = 3,
    kF2FieldNumber = 5,
    kF4FieldNumber = 9,
    kF3FieldNumber = 7,
    kF6FieldNumber = 11,
    kF7FieldNumber = 12,
    kF9FieldNumber = 15,
    kF11FieldNumber = 17,
    kF12FieldNumber = 18,
    kF14FieldNumber = 21,
    kF15FieldNumber = 22,
    kF16FieldNumber = 24,
    kF17FieldNumber = 25,
    kF18FieldNumber = 26,
    kF19FieldNumber = 27,
  };
  // repeated .fleetbench.proto.Message9.M3.M13.M24.E12 f_13 = 20 [packed = true];
  int f_13_size() const;
  private:
  int _internal_f_13_size() const;

  public:
  void clear_f_13() ;
  public:
  ::fleetbench::proto::Message9_M3_M13_M24_E12 f_13(int index) const;
  void set_f_13(int index, ::fleetbench::proto::Message9_M3_M13_M24_E12 value);
  void add_f_13(::fleetbench::proto::Message9_M3_M13_M24_E12 value);
  const ::google::protobuf::RepeatedField<int>& f_13() const;
  ::google::protobuf::RepeatedField<int>* mutable_f_13();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_f_13() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_f_13();

  public:
  // optional bytes f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional bytes f_5 = 10;
  bool has_f_5() const;
  void clear_f_5() ;
  const std::string& f_5() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_5(Arg_&& arg, Args_... args);
  std::string* mutable_f_5();
  PROTOBUF_NODISCARD std::string* release_f_5();
  void set_allocated_f_5(std::string* value);

  private:
  const std::string& _internal_f_5() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_5(
      const std::string& value);
  std::string* _internal_mutable_f_5();

  public:
  // optional string f_8 = 13;
  bool has_f_8() const;
  void clear_f_8() ;
  const std::string& f_8() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_8(Arg_&& arg, Args_... args);
  std::string* mutable_f_8();
  PROTOBUF_NODISCARD std::string* release_f_8();
  void set_allocated_f_8(std::string* value);

  private:
  const std::string& _internal_f_8() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_8(
      const std::string& value);
  std::string* _internal_mutable_f_8();

  public:
  // optional bytes f_10 = 16;
  bool has_f_10() const;
  void clear_f_10() ;
  const std::string& f_10() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_10(Arg_&& arg, Args_... args);
  std::string* mutable_f_10();
  PROTOBUF_NODISCARD std::string* release_f_10();
  void set_allocated_f_10(std::string* value);

  private:
  const std::string& _internal_f_10() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_10(
      const std::string& value);
  std::string* _internal_mutable_f_10();

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.M35 f_27 = 28;
  bool has_f_27() const;
  void clear_f_27() ;
  const ::fleetbench::proto::Message9_M3_M13_M24_M35& f_27() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M3_M13_M24_M35* release_f_27();
  ::fleetbench::proto::Message9_M3_M13_M24_M35* mutable_f_27();
  void set_allocated_f_27(::fleetbench::proto::Message9_M3_M13_M24_M35* value);
  void unsafe_arena_set_allocated_f_27(::fleetbench::proto::Message9_M3_M13_M24_M35* value);
  ::fleetbench::proto::Message9_M3_M13_M24_M35* unsafe_arena_release_f_27();

  private:
  const ::fleetbench::proto::Message9_M3_M13_M24_M35& _internal_f_27() const;
  ::fleetbench::proto::Message9_M3_M13_M24_M35* _internal_mutable_f_27();

  public:
  // optional fixed64 f_1 = 3;
  bool has_f_1() const;
  void clear_f_1() ;
  ::uint64_t f_1() const;
  void set_f_1(::uint64_t value);

  private:
  ::uint64_t _internal_f_1() const;
  void _internal_set_f_1(::uint64_t value);

  public:
  // optional int64 f_2 = 5;
  bool has_f_2() const;
  void clear_f_2() ;
  ::int64_t f_2() const;
  void set_f_2(::int64_t value);

  private:
  ::int64_t _internal_f_2() const;
  void _internal_set_f_2(::int64_t value);

  public:
  // optional int64 f_4 = 9;
  bool has_f_4() const;
  void clear_f_4() ;
  ::int64_t f_4() const;
  void set_f_4(::int64_t value);

  private:
  ::int64_t _internal_f_4() const;
  void _internal_set_f_4(::int64_t value);

  public:
  // optional int32 f_3 = 7;
  bool has_f_3() const;
  void clear_f_3() ;
  ::int32_t f_3() const;
  void set_f_3(::int32_t value);

  private:
  ::int32_t _internal_f_3() const;
  void _internal_set_f_3(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.E8 f_6 = 11;
  bool has_f_6() const;
  void clear_f_6() ;
  ::fleetbench::proto::Message9_M3_M13_M24_E8 f_6() const;
  void set_f_6(::fleetbench::proto::Message9_M3_M13_M24_E8 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_E8 _internal_f_6() const;
  void _internal_set_f_6(::fleetbench::proto::Message9_M3_M13_M24_E8 value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.E9 f_7 = 12;
  bool has_f_7() const;
  void clear_f_7() ;
  ::fleetbench::proto::Message9_M3_M13_M24_E9 f_7() const;
  void set_f_7(::fleetbench::proto::Message9_M3_M13_M24_E9 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_E9 _internal_f_7() const;
  void _internal_set_f_7(::fleetbench::proto::Message9_M3_M13_M24_E9 value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.E10 f_9 = 15;
  bool has_f_9() const;
  void clear_f_9() ;
  ::fleetbench::proto::Message9_M3_M13_M24_E10 f_9() const;
  void set_f_9(::fleetbench::proto::Message9_M3_M13_M24_E10 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_E10 _internal_f_9() const;
  void _internal_set_f_9(::fleetbench::proto::Message9_M3_M13_M24_E10 value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.E11 f_11 = 17;
  bool has_f_11() const;
  void clear_f_11() ;
  ::fleetbench::proto::Message9_M3_M13_M24_E11 f_11() const;
  void set_f_11(::fleetbench::proto::Message9_M3_M13_M24_E11 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_E11 _internal_f_11() const;
  void _internal_set_f_11(::fleetbench::proto::Message9_M3_M13_M24_E11 value);

  public:
  // optional bool f_12 = 18;
  bool has_f_12() const;
  void clear_f_12() ;
  bool f_12() const;
  void set_f_12(bool value);

  private:
  bool _internal_f_12() const;
  void _internal_set_f_12(bool value);

  public:
  // optional int32 f_14 = 21;
  bool has_f_14() const;
  void clear_f_14() ;
  ::int32_t f_14() const;
  void set_f_14(::int32_t value);

  private:
  ::int32_t _internal_f_14() const;
  void _internal_set_f_14(::int32_t value);

  public:
  // optional float f_15 = 22;
  bool has_f_15() const;
  void clear_f_15() ;
  float f_15() const;
  void set_f_15(float value);

  private:
  float _internal_f_15() const;
  void _internal_set_f_15(float value);

  public:
  // optional int64 f_16 = 24;
  bool has_f_16() const;
  void clear_f_16() ;
  ::int64_t f_16() const;
  void set_f_16(::int64_t value);

  private:
  ::int64_t _internal_f_16() const;
  void _internal_set_f_16(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24.E13 f_17 = 25;
  bool has_f_17() const;
  void clear_f_17() ;
  ::fleetbench::proto::Message9_M3_M13_M24_E13 f_17() const;
  void set_f_17(::fleetbench::proto::Message9_M3_M13_M24_E13 value);

  private:
  ::fleetbench::proto::Message9_M3_M13_M24_E13 _internal_f_17() const;
  void _internal_set_f_17(::fleetbench::proto::Message9_M3_M13_M24_E13 value);

  public:
  // optional float f_18 = 26;
  bool has_f_18() const;
  void clear_f_18() ;
  float f_18() const;
  void set_f_18(float value);

  private:
  float _internal_f_18() const;
  void _internal_set_f_18(float value);

  public:
  // optional int32 f_19 = 27;
  bool has_f_19() const;
  void clear_f_19() ;
  ::int32_t f_19() const;
  void set_f_19(::int32_t value);

  private:
  ::int32_t _internal_f_19() const;
  void _internal_set_f_19(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M3.M13.M24)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 21, 7,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M3_M13_M24_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> f_13_;
    mutable ::google::protobuf::internal::CachedSize _f_13_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    ::google::protobuf::internal::ArenaStringPtr f_5_;
    ::google::protobuf::internal::ArenaStringPtr f_8_;
    ::google::protobuf::internal::ArenaStringPtr f_10_;
    ::fleetbench::proto::Message9_M3_M13_M24_M35* f_27_;
    ::uint64_t f_1_;
    ::int64_t f_2_;
    ::int64_t f_4_;
    ::int32_t f_3_;
    int f_6_;
    int f_7_;
    int f_9_;
    int f_11_;
    bool f_12_;
    ::int32_t f_14_;
    float f_15_;
    ::int64_t f_16_;
    int f_17_;
    float f_18_;
    ::int32_t f_19_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M1 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M1) */ {
 public:
  inline Message9_M1() : Message9_M1(nullptr) {}
  ~Message9_M1() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M1(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M1(const Message9_M1& from) : Message9_M1(nullptr, from) {}
  inline Message9_M1(Message9_M1&& from) noexcept
      : Message9_M1(nullptr, std::move(from)) {}
  inline Message9_M1& operator=(const Message9_M1& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M1& operator=(Message9_M1&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M1& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M1* internal_default_instance() {
    return reinterpret_cast<const Message9_M1*>(
        &_Message9_M1_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Message9_M1& a, Message9_M1& b) { a.Swap(&b); }
  inline void Swap(Message9_M1* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M1* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M1* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M1>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M1& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M1& from) { Message9_M1::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M1* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M1"; }

 protected:
  explicit Message9_M1(::google::protobuf::Arena* arena);
  Message9_M1(::google::protobuf::Arena* arena, const Message9_M1& from);
  Message9_M1(::google::protobuf::Arena* arena, Message9_M1&& from) noexcept
      : Message9_M1(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M18 = Message9_M1_M18;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      mutable_f_2()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_2()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      mutable_f_2()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_2()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      idx = mutable_f_2()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      idx = mutable_f_2()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 3,
    kF0FieldNumber = 2,
  };
  // optional .fleetbench.proto.Message9.M1.M18 f_2 = 3;
  bool has_f_2() const;
  void clear_f_2() ;
  const ::fleetbench::proto::Message9_M1_M18& f_2() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M1_M18* release_f_2();
  ::fleetbench::proto::Message9_M1_M18* mutable_f_2();
  void set_allocated_f_2(::fleetbench::proto::Message9_M1_M18* value);
  void unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M1_M18* value);
  ::fleetbench::proto::Message9_M1_M18* unsafe_arena_release_f_2();

  private:
  const ::fleetbench::proto::Message9_M1_M18& _internal_f_2() const;
  ::fleetbench::proto::Message9_M1_M18* _internal_mutable_f_2();

  public:
  // optional int64 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M1)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M1_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::fleetbench::proto::Message9_M1_M18* f_2_;
    ::int64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M7_M16 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M7.M16) */ {
 public:
  inline Message9_M7_M16() : Message9_M7_M16(nullptr) {}
  ~Message9_M7_M16() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M7_M16(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M7_M16(const Message9_M7_M16& from) : Message9_M7_M16(nullptr, from) {}
  inline Message9_M7_M16(Message9_M7_M16&& from) noexcept
      : Message9_M7_M16(nullptr, std::move(from)) {}
  inline Message9_M7_M16& operator=(const Message9_M7_M16& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M7_M16& operator=(Message9_M7_M16&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M7_M16& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M7_M16* internal_default_instance() {
    return reinterpret_cast<const Message9_M7_M16*>(
        &_Message9_M7_M16_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 71;
  friend void swap(Message9_M7_M16& a, Message9_M7_M16& b) { a.Swap(&b); }
  inline void Swap(Message9_M7_M16* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M7_M16* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M7_M16* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M7_M16>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M7_M16& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M7_M16& from) { Message9_M7_M16::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M7_M16* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M7.M16"; }

 protected:
  explicit Message9_M7_M16(::google::protobuf::Arena* arena);
  Message9_M7_M16(::google::protobuf::Arena* arena, const Message9_M7_M16& from);
  Message9_M7_M16(::google::protobuf::Arena* arena, Message9_M7_M16&& from) noexcept
      : Message9_M7_M16(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M26 = Message9_M7_M16_M26;
  using E5 = Message9_M7_M16_E5;
  static constexpr E5 E5_UNSPECIFIED = Message9_M7_M16_E5_E5_UNSPECIFIED;
  static constexpr E5 E5_CONST_1 = Message9_M7_M16_E5_E5_CONST_1;
  static constexpr E5 E5_CONST_2 = Message9_M7_M16_E5_E5_CONST_2;
  static constexpr E5 E5_CONST_3 = Message9_M7_M16_E5_E5_CONST_3;
  static constexpr E5 E5_CONST_4 = Message9_M7_M16_E5_E5_CONST_4;
  static constexpr E5 E5_CONST_5 = Message9_M7_M16_E5_E5_CONST_5;
  static inline bool E5_IsValid(int value) {
    return Message9_M7_M16_E5_IsValid(value);
  }
  static constexpr E5 E5_MIN = Message9_M7_M16_E5_E5_MIN;
  static constexpr E5 E5_MAX = Message9_M7_M16_E5_E5_MAX;
  static constexpr int E5_ARRAYSIZE = Message9_M7_M16_E5_E5_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E5_descriptor() {
    return Message9_M7_M16_E5_descriptor();
  }
  template <typename T>
  static inline const std::string& E5_Name(T value) {
    return Message9_M7_M16_E5_Name(value);
  }
  static inline bool E5_Parse(absl::string_view name, E5* value) {
    return Message9_M7_M16_E5_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_4())));
      for (int i = 0; i < f_10_size(); ++i) {
        mutable_f_10(i)->generate_schema(schema);
      }
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_4()));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_10().size());
      for (int i = 0; i < f_10_size(); ++i) {
        mutable_f_10(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs.push_back(start_addr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_10_size(); ++i) {
        mutable_f_10(i)->generate_scatter_ptrs(ptrs);
      }
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      sizes.push_back(end_addr - start_addr + sizeof(f_4()));
      sizes.push_back(f_10().size());
      for (int i = 0; i < f_10_size(); ++i) {
        mutable_f_10(i)->generate_scatter_sizes(sizes);
      }
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      size_t num_f_10_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_10_entries; ++i) {
        auto* new_msg = add_f_10();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_10(i)->allocate_from_sizes(sizes, idx); 
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_10_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_10_entries; ++i) {
        auto* new_msg = add_f_10();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_10(i)->allocate_from_sizes(sizes, idx); 
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF10FieldNumber = 12,
    kF0FieldNumber = 2,
    kF1FieldNumber = 3,
    kF3FieldNumber = 8,
    kF2FieldNumber = 6,
    kF4FieldNumber = 10,
  };
  // repeated .fleetbench.proto.Message9.M7.M16.M26 f_10 = 12;
  int f_10_size() const;
  private:
  int _internal_f_10_size() const;

  public:
  void clear_f_10() ;
  ::fleetbench::proto::Message9_M7_M16_M26* mutable_f_10(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26>* mutable_f_10();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26>& _internal_f_10() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26>* _internal_mutable_f_10();
  public:
  const ::fleetbench::proto::Message9_M7_M16_M26& f_10(int index) const;
  ::fleetbench::proto::Message9_M7_M16_M26* add_f_10();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26>& f_10() const;
  // optional .fleetbench.proto.Message9.M7.M16.E5 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::fleetbench::proto::Message9_M7_M16_E5 f_0() const;
  void set_f_0(::fleetbench::proto::Message9_M7_M16_E5 value);

  private:
  ::fleetbench::proto::Message9_M7_M16_E5 _internal_f_0() const;
  void _internal_set_f_0(::fleetbench::proto::Message9_M7_M16_E5 value);

  public:
  // optional bool f_1 = 3;
  bool has_f_1() const;
  void clear_f_1() ;
  bool f_1() const;
  void set_f_1(bool value);

  private:
  bool _internal_f_1() const;
  void _internal_set_f_1(bool value);

  public:
  // optional double f_3 = 8;
  bool has_f_3() const;
  void clear_f_3() ;
  double f_3() const;
  void set_f_3(double value);

  private:
  double _internal_f_3() const;
  void _internal_set_f_3(double value);

  public:
  // optional fixed32 f_2 = 6;
  bool has_f_2() const;
  void clear_f_2() ;
  ::uint32_t f_2() const;
  void set_f_2(::uint32_t value);

  private:
  ::uint32_t _internal_f_2() const;
  void _internal_set_f_2(::uint32_t value);

  public:
  // optional int32 f_4 = 10;
  bool has_f_4() const;
  void clear_f_4() ;
  ::int32_t f_4() const;
  void set_f_4(::int32_t value);

  private:
  ::int32_t _internal_f_4() const;
  void _internal_set_f_4(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M7.M16)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M7_M16_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M7_M16_M26 > f_10_;
    int f_0_;
    bool f_1_;
    double f_3_;
    ::uint32_t f_2_;
    ::int32_t f_4_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M6 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M6) */ {
 public:
  inline Message9_M6() : Message9_M6(nullptr) {}
  ~Message9_M6() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M6(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M6(const Message9_M6& from) : Message9_M6(nullptr, from) {}
  inline Message9_M6(Message9_M6&& from) noexcept
      : Message9_M6(nullptr, std::move(from)) {}
  inline Message9_M6& operator=(const Message9_M6& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M6& operator=(Message9_M6&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M6& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M6* internal_default_instance() {
    return reinterpret_cast<const Message9_M6*>(
        &_Message9_M6_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 67;
  friend void swap(Message9_M6& a, Message9_M6& b) { a.Swap(&b); }
  inline void Swap(Message9_M6* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M6* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M6* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M6>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M6& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M6& from) { Message9_M6::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M6* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M6"; }

 protected:
  explicit Message9_M6(::google::protobuf::Arena* arena);
  Message9_M6(::google::protobuf::Arena* arena, const Message9_M6& from);
  Message9_M6(::google::protobuf::Arena* arena, Message9_M6&& from) noexcept
      : Message9_M6(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M12 = Message9_M6_M12;
  using M15 = Message9_M6_M15;
  using M17 = Message9_M6_M17;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      for (int i = 0; i < f_7_size(); ++i) {
        mutable_f_7(i)->generate_schema(schema);
      }
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
      mutable_f_3()->generate_schema(schema);
      mutable_f_5()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_7().size());
      for (int i = 0; i < f_7_size(); ++i) {
        mutable_f_7(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
      mutable_f_3()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_5()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_7_size(); ++i) {
        mutable_f_7(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      mutable_f_3()->generate_scatter_ptrs(ptrs);
      mutable_f_5()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_7().size());
      for (int i = 0; i < f_7_size(); ++i) {
        mutable_f_7(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_0().size());
      mutable_f_3()->generate_scatter_sizes(sizes);
      mutable_f_5()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      size_t num_f_7_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_7_entries; ++i) {
        auto* new_msg = add_f_7();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_7(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      idx = mutable_f_3()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_5()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_7_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_7_entries; ++i) {
        auto* new_msg = add_f_7();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_7(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      idx = mutable_f_3()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_5()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF7FieldNumber = 8,
    kF0FieldNumber = 3,
    kF3FieldNumber = 5,
    kF5FieldNumber = 7,
  };
  // repeated .fleetbench.proto.Message9.M6.M17 f_7 = 8;
  int f_7_size() const;
  private:
  int _internal_f_7_size() const;

  public:
  void clear_f_7() ;
  ::fleetbench::proto::Message9_M6_M17* mutable_f_7(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M6_M17>* mutable_f_7();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M6_M17>& _internal_f_7() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M6_M17>* _internal_mutable_f_7();
  public:
  const ::fleetbench::proto::Message9_M6_M17& f_7(int index) const;
  ::fleetbench::proto::Message9_M6_M17* add_f_7();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M6_M17>& f_7() const;
  // optional bytes f_0 = 3;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M6.M12 f_3 = 5;
  bool has_f_3() const;
  void clear_f_3() ;
  const ::fleetbench::proto::Message9_M6_M12& f_3() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M6_M12* release_f_3();
  ::fleetbench::proto::Message9_M6_M12* mutable_f_3();
  void set_allocated_f_3(::fleetbench::proto::Message9_M6_M12* value);
  void unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M6_M12* value);
  ::fleetbench::proto::Message9_M6_M12* unsafe_arena_release_f_3();

  private:
  const ::fleetbench::proto::Message9_M6_M12& _internal_f_3() const;
  ::fleetbench::proto::Message9_M6_M12* _internal_mutable_f_3();

  public:
  // optional .fleetbench.proto.Message9.M6.M15 f_5 = 7;
  bool has_f_5() const;
  void clear_f_5() ;
  const ::fleetbench::proto::Message9_M6_M15& f_5() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M6_M15* release_f_5();
  ::fleetbench::proto::Message9_M6_M15* mutable_f_5();
  void set_allocated_f_5(::fleetbench::proto::Message9_M6_M15* value);
  void unsafe_arena_set_allocated_f_5(::fleetbench::proto::Message9_M6_M15* value);
  ::fleetbench::proto::Message9_M6_M15* unsafe_arena_release_f_5();

  private:
  const ::fleetbench::proto::Message9_M6_M15& _internal_f_5() const;
  ::fleetbench::proto::Message9_M6_M15* _internal_mutable_f_5();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M6)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M6_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M6_M17 > f_7_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    ::fleetbench::proto::Message9_M6_M12* f_3_;
    ::fleetbench::proto::Message9_M6_M15* f_5_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M41_M44 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M41_M44() : Message9_M5_M11_M23_M34_M37_M41_M44(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M41_M44() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M41_M44(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M41_M44(const Message9_M5_M11_M23_M34_M37_M41_M44& from) : Message9_M5_M11_M23_M34_M37_M41_M44(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44(Message9_M5_M11_M23_M34_M37_M41_M44&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M41_M44& operator=(const Message9_M5_M11_M23_M34_M37_M41_M44& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M41_M44& operator=(Message9_M5_M11_M23_M34_M37_M41_M44&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M41_M44& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M41_M44* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M41_M44*>(
        &_Message9_M5_M11_M23_M34_M37_M41_M44_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(Message9_M5_M11_M23_M34_M37_M41_M44& a, Message9_M5_M11_M23_M34_M37_M41_M44& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M41_M44* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M41_M44* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M41_M44* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M41_M44>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M41_M44& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M41_M44& from) { Message9_M5_M11_M23_M34_M37_M41_M44::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M41_M44* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M41_M44(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M41_M44(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M41_M44& from);
  Message9_M5_M11_M23_M34_M37_M41_M44(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M41_M44&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41_M44(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M53 = Message9_M5_M11_M23_M34_M37_M41_M44_M53;
  using M55 = Message9_M5_M11_M23_M34_M37_M41_M44_M55;
  using M57 = Message9_M5_M11_M23_M34_M37_M41_M44_M57;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      mutable_f_1()->generate_schema(schema);
      mutable_f_2()->generate_schema(schema);
      mutable_f_4()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_1()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_2()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_4()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      mutable_f_1()->generate_scatter_ptrs(ptrs);
      mutable_f_2()->generate_scatter_ptrs(ptrs);
      mutable_f_4()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_1()->generate_scatter_sizes(sizes);
      mutable_f_2()->generate_scatter_sizes(sizes);
      mutable_f_4()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      idx = mutable_f_1()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_2()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_4()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      idx = mutable_f_1()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_2()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_4()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF1FieldNumber = 2,
    kF2FieldNumber = 4,
    kF4FieldNumber = 6,
    kF0FieldNumber = 1,
  };
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53 f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53& f_1() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* release_f_1();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* mutable_f_1();
  void set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* value);
  void unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* unsafe_arena_release_f_1();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53& _internal_f_1() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* _internal_mutable_f_1();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M55 f_2 = 4;
  bool has_f_2() const;
  void clear_f_2() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55& f_2() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* release_f_2();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* mutable_f_2();
  void set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* value);
  void unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* unsafe_arena_release_f_2();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55& _internal_f_2() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* _internal_mutable_f_2();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M57 f_4 = 6;
  bool has_f_4() const;
  void clear_f_4() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57& f_4() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* release_f_4();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* mutable_f_4();
  void set_allocated_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* value);
  void unsafe_arena_set_allocated_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* unsafe_arena_release_f_4();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57& _internal_f_4() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* _internal_mutable_f_4();

  public:
  // optional int64 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M41_M44_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* f_1_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* f_2_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* f_4_;
    ::int64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M38 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M38() : Message9_M5_M11_M23_M34_M37_M38(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M38() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M38(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M38(const Message9_M5_M11_M23_M34_M37_M38& from) : Message9_M5_M11_M23_M34_M37_M38(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M38(Message9_M5_M11_M23_M34_M37_M38&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M38(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M38& operator=(const Message9_M5_M11_M23_M34_M37_M38& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M38& operator=(Message9_M5_M11_M23_M34_M37_M38&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M38& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M38* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M38*>(
        &_Message9_M5_M11_M23_M34_M37_M38_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(Message9_M5_M11_M23_M34_M37_M38& a, Message9_M5_M11_M23_M34_M37_M38& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M38* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M38* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M38* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M38>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M38& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M38& from) { Message9_M5_M11_M23_M34_M37_M38::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M38* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M38(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M38(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M38& from);
  Message9_M5_M11_M23_M34_M37_M38(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M38&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M38(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M46 = Message9_M5_M11_M23_M34_M37_M38_M46;
  using M47 = Message9_M5_M11_M23_M34_M37_M38_M47;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_schema(schema);
      }
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
      mutable_f_4()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
      mutable_f_4()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      mutable_f_4()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_0().size());
      mutable_f_4()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      size_t num_f_2_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      idx = mutable_f_4()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_2_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      idx = mutable_f_4()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 4,
    kF0FieldNumber = 2,
    kF4FieldNumber = 6,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46 f_2 = 4;
  int f_2_size() const;
  private:
  int _internal_f_2_size() const;

  public:
  void clear_f_2() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46* mutable_f_2(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46>* mutable_f_2();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46>& _internal_f_2() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46>* _internal_mutable_f_2();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46& f_2(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46* add_f_2();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46>& f_2() const;
  // optional string f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M47 f_4 = 6;
  bool has_f_4() const;
  void clear_f_4() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47& f_4() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* release_f_4();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* mutable_f_4();
  void set_allocated_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* value);
  void unsafe_arena_set_allocated_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* unsafe_arena_release_f_4();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47& _internal_f_4() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* _internal_mutable_f_4();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      60, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M38_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46 > f_2_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* f_4_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M73 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73;
  using E50 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50;
  static constexpr E50 E50_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_UNSPECIFIED;
  static constexpr E50 E50_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_CONST_1;
  static constexpr E50 E50_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_CONST_2;
  static constexpr E50 E50_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_CONST_3;
  static constexpr E50 E50_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_CONST_4;
  static constexpr E50 E50_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_CONST_5;
  static inline bool E50_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_IsValid(value);
  }
  static constexpr E50 E50_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_MIN;
  static constexpr E50 E50_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_MAX;
  static constexpr int E50_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_E50_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E50_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_descriptor();
  }
  template <typename T>
  static inline const std::string& E50_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_Name(value);
  }
  static inline bool E50_Parse(absl::string_view name, E50* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_Parse(name, value);
  }
  using E51 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51;
  static constexpr E51 E51_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_UNSPECIFIED;
  static constexpr E51 E51_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_CONST_1;
  static constexpr E51 E51_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_CONST_2;
  static constexpr E51 E51_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_CONST_3;
  static constexpr E51 E51_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_CONST_4;
  static constexpr E51 E51_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_CONST_5;
  static inline bool E51_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_IsValid(value);
  }
  static constexpr E51 E51_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_MIN;
  static constexpr E51 E51_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_MAX;
  static constexpr int E51_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_E51_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E51_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_descriptor();
  }
  template <typename T>
  static inline const std::string& E51_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_Name(value);
  }
  static inline bool E51_Parse(absl::string_view name, E51* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_Parse(name, value);
  }
  using E52 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52;
  static constexpr E52 E52_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_UNSPECIFIED;
  static constexpr E52 E52_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_CONST_1;
  static constexpr E52 E52_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_CONST_2;
  static constexpr E52 E52_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_CONST_3;
  static constexpr E52 E52_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_CONST_4;
  static constexpr E52 E52_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_CONST_5;
  static inline bool E52_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_IsValid(value);
  }
  static constexpr E52 E52_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_MIN;
  static constexpr E52 E52_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_MAX;
  static constexpr int E52_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_E52_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E52_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_descriptor();
  }
  template <typename T>
  static inline const std::string& E52_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_Name(value);
  }
  static inline bool E52_Parse(absl::string_view name, E52* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_Parse(name, value);
  }
  using E53 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53;
  static constexpr E53 E53_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_UNSPECIFIED;
  static constexpr E53 E53_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_CONST_1;
  static constexpr E53 E53_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_CONST_2;
  static constexpr E53 E53_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_CONST_3;
  static constexpr E53 E53_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_CONST_4;
  static constexpr E53 E53_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_CONST_5;
  static inline bool E53_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_IsValid(value);
  }
  static constexpr E53 E53_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_MIN;
  static constexpr E53 E53_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_MAX;
  static constexpr int E53_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_E53_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E53_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_descriptor();
  }
  template <typename T>
  static inline const std::string& E53_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_Name(value);
  }
  static inline bool E53_Parse(absl::string_view name, E53* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_22_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_22())));
      for (int i = 0; i < f_31_size(); ++i) {
        mutable_f_31(i)->generate_schema(schema);
      }
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_1().c_str())), f_1().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())), f_10().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_13().c_str())), f_13().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_14().c_str())), f_14().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())), f_16().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_17().c_str())), f_17().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_18().c_str())), f_18().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_19().c_str())), f_19().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_23().c_str())), f_23().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_22_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_22()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_7().data())));
      sizes_list.push_back(f_7().size() * sizeof(int));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_31().size());
      for (int i = 0; i < f_31_size(); ++i) {
        mutable_f_31(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_1().c_str())));
      sizes_list.push_back(f_1().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      sizes_list.push_back(f_10().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_13().c_str())));
      sizes_list.push_back(f_13().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_14().c_str())));
      sizes_list.push_back(f_14().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())));
      sizes_list.push_back(f_16().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_17().c_str())));
      sizes_list.push_back(f_17().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_18().c_str())));
      sizes_list.push_back(f_18().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_19().c_str())));
      sizes_list.push_back(f_19().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_23().c_str())));
      sizes_list.push_back(f_23().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_22_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_7().data())));
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_31_size(); ++i) {
        mutable_f_31(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_1().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_13().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_14().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_17().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_18().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_19().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_23().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_22_);
      sizes.push_back(end_addr - start_addr + sizeof(f_22()));
      sizes.push_back(f_7().size() * sizeof(int));
      sizes.push_back(f_31().size());
      for (int i = 0; i < f_31_size(); ++i) {
        mutable_f_31(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_1().size());
      sizes.push_back(f_10().size());
      sizes.push_back(f_13().size());
      sizes.push_back(f_14().size());
      sizes.push_back(f_16().size());
      sizes.push_back(f_17().size());
      sizes.push_back(f_18().size());
      sizes.push_back(f_19().size());
      sizes.push_back(f_23().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_22_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      mutable_f_7()->Resize(sizes[idx++] / sizeof(int), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_7().data())));
      size_t num_f_31_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_31_entries; ++i) {
        auto* new_msg = add_f_31();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_31(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_1(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_1().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_10(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_13(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_13().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_14(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_14().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_16(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_17(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_17().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_18(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_18().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_19(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_19().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_23(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_23().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      mutable_f_7()->Resize(sizes[idx++] / sizeof(int), 0);
      size_t num_f_31_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_31_entries; ++i) {
        auto* new_msg = add_f_31();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_31(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_1(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_10(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_13(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_14(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_16(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_17(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_18(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_19(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_23(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF7FieldNumber = 12,
    kF31FieldNumber = 32,
    kF1FieldNumber = 3,
    kF10FieldNumber = 16,
    kF13FieldNumber = 20,
    kF14FieldNumber = 21,
    kF16FieldNumber = 23,
    kF17FieldNumber = 24,
    kF18FieldNumber = 25,
    kF19FieldNumber = 26,
    kF23FieldNumber = 31,
    kF0FieldNumber = 2,
    kF2FieldNumber = 4,
    kF3FieldNumber = 5,
    kF5FieldNumber = 10,
    kF4FieldNumber = 9,
    kF8FieldNumber = 13,
    kF6FieldNumber = 11,
    kF9FieldNumber = 15,
    kF11FieldNumber = 18,
    kF15FieldNumber = 22,
    kF12FieldNumber = 19,
    kF20FieldNumber = 27,
    kF21FieldNumber = 28,
    kF22FieldNumber = 29,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.E53 f_7 = 12 [packed = true];
  int f_7_size() const;
  private:
  int _internal_f_7_size() const;

  public:
  void clear_f_7() ;
  public:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53 f_7(int index) const;
  void set_f_7(int index, ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53 value);
  void add_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53 value);
  const ::google::protobuf::RepeatedField<int>& f_7() const;
  ::google::protobuf::RepeatedField<int>* mutable_f_7();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_f_7() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_f_7();

  public:
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73 f_31 = 32;
  int f_31_size() const;
  private:
  int _internal_f_31_size() const;

  public:
  void clear_f_31() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73* mutable_f_31(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73>* mutable_f_31();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73>& _internal_f_31() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73>* _internal_mutable_f_31();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& f_31(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73* add_f_31();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73>& f_31() const;
  // optional string f_1 = 3;
  bool has_f_1() const;
  void clear_f_1() ;
  const std::string& f_1() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_1(Arg_&& arg, Args_... args);
  std::string* mutable_f_1();
  PROTOBUF_NODISCARD std::string* release_f_1();
  void set_allocated_f_1(std::string* value);

  private:
  const std::string& _internal_f_1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_1(
      const std::string& value);
  std::string* _internal_mutable_f_1();

  public:
  // optional bytes f_10 = 16;
  bool has_f_10() const;
  void clear_f_10() ;
  const std::string& f_10() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_10(Arg_&& arg, Args_... args);
  std::string* mutable_f_10();
  PROTOBUF_NODISCARD std::string* release_f_10();
  void set_allocated_f_10(std::string* value);

  private:
  const std::string& _internal_f_10() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_10(
      const std::string& value);
  std::string* _internal_mutable_f_10();

  public:
  // optional string f_13 = 20;
  bool has_f_13() const;
  void clear_f_13() ;
  const std::string& f_13() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_13(Arg_&& arg, Args_... args);
  std::string* mutable_f_13();
  PROTOBUF_NODISCARD std::string* release_f_13();
  void set_allocated_f_13(std::string* value);

  private:
  const std::string& _internal_f_13() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_13(
      const std::string& value);
  std::string* _internal_mutable_f_13();

  public:
  // optional string f_14 = 21;
  bool has_f_14() const;
  void clear_f_14() ;
  const std::string& f_14() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_14(Arg_&& arg, Args_... args);
  std::string* mutable_f_14();
  PROTOBUF_NODISCARD std::string* release_f_14();
  void set_allocated_f_14(std::string* value);

  private:
  const std::string& _internal_f_14() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_14(
      const std::string& value);
  std::string* _internal_mutable_f_14();

  public:
  // optional string f_16 = 23;
  bool has_f_16() const;
  void clear_f_16() ;
  const std::string& f_16() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_16(Arg_&& arg, Args_... args);
  std::string* mutable_f_16();
  PROTOBUF_NODISCARD std::string* release_f_16();
  void set_allocated_f_16(std::string* value);

  private:
  const std::string& _internal_f_16() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_16(
      const std::string& value);
  std::string* _internal_mutable_f_16();

  public:
  // optional string f_17 = 24;
  bool has_f_17() const;
  void clear_f_17() ;
  const std::string& f_17() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_17(Arg_&& arg, Args_... args);
  std::string* mutable_f_17();
  PROTOBUF_NODISCARD std::string* release_f_17();
  void set_allocated_f_17(std::string* value);

  private:
  const std::string& _internal_f_17() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_17(
      const std::string& value);
  std::string* _internal_mutable_f_17();

  public:
  // optional string f_18 = 25;
  bool has_f_18() const;
  void clear_f_18() ;
  const std::string& f_18() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_18(Arg_&& arg, Args_... args);
  std::string* mutable_f_18();
  PROTOBUF_NODISCARD std::string* release_f_18();
  void set_allocated_f_18(std::string* value);

  private:
  const std::string& _internal_f_18() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_18(
      const std::string& value);
  std::string* _internal_mutable_f_18();

  public:
  // optional string f_19 = 26;
  bool has_f_19() const;
  void clear_f_19() ;
  const std::string& f_19() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_19(Arg_&& arg, Args_... args);
  std::string* mutable_f_19();
  PROTOBUF_NODISCARD std::string* release_f_19();
  void set_allocated_f_19(std::string* value);

  private:
  const std::string& _internal_f_19() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_19(
      const std::string& value);
  std::string* _internal_mutable_f_19();

  public:
  // optional bytes f_23 = 31;
  bool has_f_23() const;
  void clear_f_23() ;
  const std::string& f_23() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_23(Arg_&& arg, Args_... args);
  std::string* mutable_f_23();
  PROTOBUF_NODISCARD std::string* release_f_23();
  void set_allocated_f_23(std::string* value);

  private:
  const std::string& _internal_f_23() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_23(
      const std::string& value);
  std::string* _internal_mutable_f_23();

  public:
  // optional float f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  float f_0() const;
  void set_f_0(float value);

  private:
  float _internal_f_0() const;
  void _internal_set_f_0(float value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.E50 f_2 = 4;
  bool has_f_2() const;
  void clear_f_2() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50 f_2() const;
  void set_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50 _internal_f_2() const;
  void _internal_set_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.E51 f_3 = 5;
  bool has_f_3() const;
  void clear_f_3() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51 f_3() const;
  void set_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51 _internal_f_3() const;
  void _internal_set_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51 value);

  public:
  // optional bool f_5 = 10;
  bool has_f_5() const;
  void clear_f_5() ;
  bool f_5() const;
  void set_f_5(bool value);

  private:
  bool _internal_f_5() const;
  void _internal_set_f_5(bool value);

  public:
  // optional int64 f_4 = 9;
  bool has_f_4() const;
  void clear_f_4() ;
  ::int64_t f_4() const;
  void set_f_4(::int64_t value);

  private:
  ::int64_t _internal_f_4() const;
  void _internal_set_f_4(::int64_t value);

  public:
  // optional int64 f_8 = 13;
  bool has_f_8() const;
  void clear_f_8() ;
  ::int64_t f_8() const;
  void set_f_8(::int64_t value);

  private:
  ::int64_t _internal_f_8() const;
  void _internal_set_f_8(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.E52 f_6 = 11;
  bool has_f_6() const;
  void clear_f_6() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52 f_6() const;
  void set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52 _internal_f_6() const;
  void _internal_set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52 value);

  public:
  // optional float f_9 = 15;
  bool has_f_9() const;
  void clear_f_9() ;
  float f_9() const;
  void set_f_9(float value);

  private:
  float _internal_f_9() const;
  void _internal_set_f_9(float value);

  public:
  // optional uint64 f_11 = 18;
  bool has_f_11() const;
  void clear_f_11() ;
  ::uint64_t f_11() const;
  void set_f_11(::uint64_t value);

  private:
  ::uint64_t _internal_f_11() const;
  void _internal_set_f_11(::uint64_t value);

  public:
  // optional int64 f_15 = 22;
  bool has_f_15() const;
  void clear_f_15() ;
  ::int64_t f_15() const;
  void set_f_15(::int64_t value);

  private:
  ::int64_t _internal_f_15() const;
  void _internal_set_f_15(::int64_t value);

  public:
  // optional int32 f_12 = 19;
  bool has_f_12() const;
  void clear_f_12() ;
  ::int32_t f_12() const;
  void set_f_12(::int32_t value);

  private:
  ::int32_t _internal_f_12() const;
  void _internal_set_f_12(::int32_t value);

  public:
  // optional float f_20 = 27;
  bool has_f_20() const;
  void clear_f_20() ;
  float f_20() const;
  void set_f_20(float value);

  private:
  float _internal_f_20() const;
  void _internal_set_f_20(float value);

  public:
  // optional double f_21 = 28;
  bool has_f_21() const;
  void clear_f_21() ;
  double f_21() const;
  void set_f_21(double value);

  private:
  double _internal_f_21() const;
  void _internal_set_f_21(double value);

  public:
  // optional uint64 f_22 = 29;
  bool has_f_22() const;
  void clear_f_22() ;
  ::uint64_t f_22() const;
  void set_f_22(::uint64_t value);

  private:
  ::uint64_t _internal_f_22() const;
  void _internal_set_f_22(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 25, 5,
      148, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> f_7_;
    mutable ::google::protobuf::internal::CachedSize _f_7_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73 > f_31_;
    ::google::protobuf::internal::ArenaStringPtr f_1_;
    ::google::protobuf::internal::ArenaStringPtr f_10_;
    ::google::protobuf::internal::ArenaStringPtr f_13_;
    ::google::protobuf::internal::ArenaStringPtr f_14_;
    ::google::protobuf::internal::ArenaStringPtr f_16_;
    ::google::protobuf::internal::ArenaStringPtr f_17_;
    ::google::protobuf::internal::ArenaStringPtr f_18_;
    ::google::protobuf::internal::ArenaStringPtr f_19_;
    ::google::protobuf::internal::ArenaStringPtr f_23_;
    float f_0_;
    int f_2_;
    int f_3_;
    bool f_5_;
    ::int64_t f_4_;
    ::int64_t f_8_;
    int f_6_;
    float f_9_;
    ::uint64_t f_11_;
    ::int64_t f_15_;
    ::int32_t f_12_;
    float f_20_;
    double f_21_;
    ::uint64_t f_22_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M4 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M4) */ {
 public:
  inline Message9_M4() : Message9_M4(nullptr) {}
  ~Message9_M4() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M4(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M4(const Message9_M4& from) : Message9_M4(nullptr, from) {}
  inline Message9_M4(Message9_M4&& from) noexcept
      : Message9_M4(nullptr, std::move(from)) {}
  inline Message9_M4& operator=(const Message9_M4& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M4& operator=(Message9_M4&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M4& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M4* internal_default_instance() {
    return reinterpret_cast<const Message9_M4*>(
        &_Message9_M4_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(Message9_M4& a, Message9_M4& b) { a.Swap(&b); }
  inline void Swap(Message9_M4* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M4* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M4* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M4>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M4& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M4& from) { Message9_M4::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M4* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M4"; }

 protected:
  explicit Message9_M4(::google::protobuf::Arena* arena);
  Message9_M4(::google::protobuf::Arena* arena, const Message9_M4& from);
  Message9_M4(::google::protobuf::Arena* arena, Message9_M4&& from) noexcept
      : Message9_M4(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M19 = Message9_M4_M19;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      mutable_f_1()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_1()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      mutable_f_1()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_1()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      idx = mutable_f_1()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      idx = mutable_f_1()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF1FieldNumber = 2,
    kF0FieldNumber = 1,
  };
  // optional .fleetbench.proto.Message9.M4.M19 f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  const ::fleetbench::proto::Message9_M4_M19& f_1() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M4_M19* release_f_1();
  ::fleetbench::proto::Message9_M4_M19* mutable_f_1();
  void set_allocated_f_1(::fleetbench::proto::Message9_M4_M19* value);
  void unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M4_M19* value);
  ::fleetbench::proto::Message9_M4_M19* unsafe_arena_release_f_1();

  private:
  const ::fleetbench::proto::Message9_M4_M19& _internal_f_1() const;
  ::fleetbench::proto::Message9_M4_M19* _internal_mutable_f_1();

  public:
  // optional bool f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  bool f_0() const;
  void set_f_0(bool value);

  private:
  bool _internal_f_0() const;
  void _internal_set_f_0(bool value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M4)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M4_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::fleetbench::proto::Message9_M4_M19* f_1_;
    bool f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M3_M13 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M3.M13) */ {
 public:
  inline Message9_M3_M13() : Message9_M3_M13(nullptr) {}
  ~Message9_M3_M13() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M3_M13(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M3_M13(const Message9_M3_M13& from) : Message9_M3_M13(nullptr, from) {}
  inline Message9_M3_M13(Message9_M3_M13&& from) noexcept
      : Message9_M3_M13(nullptr, std::move(from)) {}
  inline Message9_M3_M13& operator=(const Message9_M3_M13& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M3_M13& operator=(Message9_M3_M13&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M3_M13& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M3_M13* internal_default_instance() {
    return reinterpret_cast<const Message9_M3_M13*>(
        &_Message9_M3_M13_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Message9_M3_M13& a, Message9_M3_M13& b) { a.Swap(&b); }
  inline void Swap(Message9_M3_M13* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M3_M13* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M3_M13* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M3_M13>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M3_M13& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M3_M13& from) { Message9_M3_M13::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M3_M13* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M3.M13"; }

 protected:
  explicit Message9_M3_M13(::google::protobuf::Arena* arena);
  Message9_M3_M13(::google::protobuf::Arena* arena, const Message9_M3_M13& from);
  Message9_M3_M13(::google::protobuf::Arena* arena, Message9_M3_M13&& from) noexcept
      : Message9_M3_M13(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M24 = Message9_M3_M13_M24;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
      mutable_f_1()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
      mutable_f_1()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      mutable_f_1()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size());
      mutable_f_1()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      idx = mutable_f_1()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      idx = mutable_f_1()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
    kF1FieldNumber = 2,
  };
  // optional string f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M3.M13.M24 f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  const ::fleetbench::proto::Message9_M3_M13_M24& f_1() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M3_M13_M24* release_f_1();
  ::fleetbench::proto::Message9_M3_M13_M24* mutable_f_1();
  void set_allocated_f_1(::fleetbench::proto::Message9_M3_M13_M24* value);
  void unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M3_M13_M24* value);
  ::fleetbench::proto::Message9_M3_M13_M24* unsafe_arena_release_f_1();

  private:
  const ::fleetbench::proto::Message9_M3_M13_M24& _internal_f_1() const;
  ::fleetbench::proto::Message9_M3_M13_M24* _internal_mutable_f_1();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M3.M13)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M3_M13_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    ::fleetbench::proto::Message9_M3_M13_M24* f_1_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M7 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M7) */ {
 public:
  inline Message9_M7() : Message9_M7(nullptr) {}
  ~Message9_M7() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M7(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M7(const Message9_M7& from) : Message9_M7(nullptr, from) {}
  inline Message9_M7(Message9_M7&& from) noexcept
      : Message9_M7(nullptr, std::move(from)) {}
  inline Message9_M7& operator=(const Message9_M7& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M7& operator=(Message9_M7&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M7& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M7* internal_default_instance() {
    return reinterpret_cast<const Message9_M7*>(
        &_Message9_M7_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 72;
  friend void swap(Message9_M7& a, Message9_M7& b) { a.Swap(&b); }
  inline void Swap(Message9_M7* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M7* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M7* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M7>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M7& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M7& from) { Message9_M7::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M7* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M7"; }

 protected:
  explicit Message9_M7(::google::protobuf::Arena* arena);
  Message9_M7(::google::protobuf::Arena* arena, const Message9_M7& from);
  Message9_M7(::google::protobuf::Arena* arena, Message9_M7&& from) noexcept
      : Message9_M7(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M16 = Message9_M7_M16;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_2_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_2())));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_0().data())), f_0().size() * sizeof(::int32_t)));
      mutable_f_5()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_2_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_2()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_0().data())));
      sizes_list.push_back(f_0().size() * sizeof(::int32_t));
      mutable_f_5()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_2_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_0().data())));
      mutable_f_5()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_2_);
      sizes.push_back(end_addr - start_addr + sizeof(f_2()));
      sizes.push_back(f_0().size() * sizeof(::int32_t));
      mutable_f_5()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_2_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      mutable_f_0()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_0().data())));
      idx = mutable_f_5()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      mutable_f_0()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      idx = mutable_f_5()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
    kF5FieldNumber = 7,
    kF1FieldNumber = 3,
    kF2FieldNumber = 5,
  };
  // repeated int32 f_0 = 2 [packed = true];
  int f_0_size() const;
  private:
  int _internal_f_0_size() const;

  public:
  void clear_f_0() ;
  ::int32_t f_0(int index) const;
  void set_f_0(int index, ::int32_t value);
  void add_f_0(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& f_0() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_f_0();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_f_0() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M7.M16 f_5 = 7;
  bool has_f_5() const;
  void clear_f_5() ;
  const ::fleetbench::proto::Message9_M7_M16& f_5() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M7_M16* release_f_5();
  ::fleetbench::proto::Message9_M7_M16* mutable_f_5();
  void set_allocated_f_5(::fleetbench::proto::Message9_M7_M16* value);
  void unsafe_arena_set_allocated_f_5(::fleetbench::proto::Message9_M7_M16* value);
  ::fleetbench::proto::Message9_M7_M16* unsafe_arena_release_f_5();

  private:
  const ::fleetbench::proto::Message9_M7_M16& _internal_f_5() const;
  ::fleetbench::proto::Message9_M7_M16* _internal_mutable_f_5();

  public:
  // optional int64 f_1 = 3;
  bool has_f_1() const;
  void clear_f_1() ;
  ::int64_t f_1() const;
  void set_f_1(::int64_t value);

  private:
  ::int64_t _internal_f_1() const;
  void _internal_set_f_1(::int64_t value);

  public:
  // optional bool f_2 = 5;
  bool has_f_2() const;
  void clear_f_2() ;
  bool f_2() const;
  void set_f_2(bool value);

  private:
  bool _internal_f_2() const;
  void _internal_set_f_2(bool value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M7)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M7_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> f_0_;
    mutable ::google::protobuf::internal::CachedSize _f_0_cached_byte_size_;
    ::fleetbench::proto::Message9_M7_M16* f_5_;
    ::int64_t f_1_;
    bool f_2_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37_M41 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37_M41() : Message9_M5_M11_M23_M34_M37_M41(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37_M41() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37_M41(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37_M41(const Message9_M5_M11_M23_M34_M37_M41& from) : Message9_M5_M11_M23_M34_M37_M41(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37_M41(Message9_M5_M11_M23_M34_M37_M41&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37_M41& operator=(const Message9_M5_M11_M23_M34_M37_M41& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37_M41& operator=(Message9_M5_M11_M23_M34_M37_M41&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37_M41& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37_M41* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37_M41*>(
        &_Message9_M5_M11_M23_M34_M37_M41_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 54;
  friend void swap(Message9_M5_M11_M23_M34_M37_M41& a, Message9_M5_M11_M23_M34_M37_M41& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37_M41* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37_M41* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37_M41* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37_M41>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37_M41& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37_M41& from) { Message9_M5_M11_M23_M34_M37_M41::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37_M41* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37_M41(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37_M41(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37_M41& from);
  Message9_M5_M11_M23_M34_M37_M41(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37_M41&& from) noexcept
      : Message9_M5_M11_M23_M34_M37_M41(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M42 = Message9_M5_M11_M23_M34_M37_M41_M42;
  using M43 = Message9_M5_M11_M23_M34_M37_M41_M43;
  using M44 = Message9_M5_M11_M23_M34_M37_M41_M44;
  using E32 = Message9_M5_M11_M23_M34_M37_M41_E32;
  static constexpr E32 E32_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_M41_E32_E32_UNSPECIFIED;
  static constexpr E32 E32_CONST_1 = Message9_M5_M11_M23_M34_M37_M41_E32_E32_CONST_1;
  static constexpr E32 E32_CONST_2 = Message9_M5_M11_M23_M34_M37_M41_E32_E32_CONST_2;
  static constexpr E32 E32_CONST_3 = Message9_M5_M11_M23_M34_M37_M41_E32_E32_CONST_3;
  static constexpr E32 E32_CONST_4 = Message9_M5_M11_M23_M34_M37_M41_E32_E32_CONST_4;
  static constexpr E32 E32_CONST_5 = Message9_M5_M11_M23_M34_M37_M41_E32_E32_CONST_5;
  static inline bool E32_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_M41_E32_IsValid(value);
  }
  static constexpr E32 E32_MIN = Message9_M5_M11_M23_M34_M37_M41_E32_E32_MIN;
  static constexpr E32 E32_MAX = Message9_M5_M11_M23_M34_M37_M41_E32_E32_MAX;
  static constexpr int E32_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_M41_E32_E32_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E32_descriptor() {
    return Message9_M5_M11_M23_M34_M37_M41_E32_descriptor();
  }
  template <typename T>
  static inline const std::string& E32_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_M41_E32_Name(value);
  }
  static inline bool E32_Parse(absl::string_view name, E32* value) {
    return Message9_M5_M11_M23_M34_M37_M41_E32_Parse(name, value);
  }
  using E33 = Message9_M5_M11_M23_M34_M37_M41_E33;
  static constexpr E33 E33_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_M41_E33_E33_UNSPECIFIED;
  static constexpr E33 E33_CONST_1 = Message9_M5_M11_M23_M34_M37_M41_E33_E33_CONST_1;
  static constexpr E33 E33_CONST_2 = Message9_M5_M11_M23_M34_M37_M41_E33_E33_CONST_2;
  static constexpr E33 E33_CONST_3 = Message9_M5_M11_M23_M34_M37_M41_E33_E33_CONST_3;
  static constexpr E33 E33_CONST_4 = Message9_M5_M11_M23_M34_M37_M41_E33_E33_CONST_4;
  static constexpr E33 E33_CONST_5 = Message9_M5_M11_M23_M34_M37_M41_E33_E33_CONST_5;
  static inline bool E33_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_M41_E33_IsValid(value);
  }
  static constexpr E33 E33_MIN = Message9_M5_M11_M23_M34_M37_M41_E33_E33_MIN;
  static constexpr E33 E33_MAX = Message9_M5_M11_M23_M34_M37_M41_E33_E33_MAX;
  static constexpr int E33_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_M41_E33_E33_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E33_descriptor() {
    return Message9_M5_M11_M23_M34_M37_M41_E33_descriptor();
  }
  template <typename T>
  static inline const std::string& E33_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_M41_E33_Name(value);
  }
  static inline bool E33_Parse(absl::string_view name, E33* value) {
    return Message9_M5_M11_M23_M34_M37_M41_E33_Parse(name, value);
  }
  using E34 = Message9_M5_M11_M23_M34_M37_M41_E34;
  static constexpr E34 E34_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_M41_E34_E34_UNSPECIFIED;
  static constexpr E34 E34_CONST_1 = Message9_M5_M11_M23_M34_M37_M41_E34_E34_CONST_1;
  static constexpr E34 E34_CONST_2 = Message9_M5_M11_M23_M34_M37_M41_E34_E34_CONST_2;
  static constexpr E34 E34_CONST_3 = Message9_M5_M11_M23_M34_M37_M41_E34_E34_CONST_3;
  static constexpr E34 E34_CONST_4 = Message9_M5_M11_M23_M34_M37_M41_E34_E34_CONST_4;
  static constexpr E34 E34_CONST_5 = Message9_M5_M11_M23_M34_M37_M41_E34_E34_CONST_5;
  static inline bool E34_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_M41_E34_IsValid(value);
  }
  static constexpr E34 E34_MIN = Message9_M5_M11_M23_M34_M37_M41_E34_E34_MIN;
  static constexpr E34 E34_MAX = Message9_M5_M11_M23_M34_M37_M41_E34_E34_MAX;
  static constexpr int E34_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_M41_E34_E34_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E34_descriptor() {
    return Message9_M5_M11_M23_M34_M37_M41_E34_descriptor();
  }
  template <typename T>
  static inline const std::string& E34_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_M41_E34_Name(value);
  }
  static inline bool E34_Parse(absl::string_view name, E34* value) {
    return Message9_M5_M11_M23_M34_M37_M41_E34_Parse(name, value);
  }
  using E35 = Message9_M5_M11_M23_M34_M37_M41_E35;
  static constexpr E35 E35_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_M41_E35_E35_UNSPECIFIED;
  static constexpr E35 E35_CONST_1 = Message9_M5_M11_M23_M34_M37_M41_E35_E35_CONST_1;
  static constexpr E35 E35_CONST_2 = Message9_M5_M11_M23_M34_M37_M41_E35_E35_CONST_2;
  static constexpr E35 E35_CONST_3 = Message9_M5_M11_M23_M34_M37_M41_E35_E35_CONST_3;
  static constexpr E35 E35_CONST_4 = Message9_M5_M11_M23_M34_M37_M41_E35_E35_CONST_4;
  static constexpr E35 E35_CONST_5 = Message9_M5_M11_M23_M34_M37_M41_E35_E35_CONST_5;
  static inline bool E35_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_M41_E35_IsValid(value);
  }
  static constexpr E35 E35_MIN = Message9_M5_M11_M23_M34_M37_M41_E35_E35_MIN;
  static constexpr E35 E35_MAX = Message9_M5_M11_M23_M34_M37_M41_E35_E35_MAX;
  static constexpr int E35_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_M41_E35_E35_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E35_descriptor() {
    return Message9_M5_M11_M23_M34_M37_M41_E35_descriptor();
  }
  template <typename T>
  static inline const std::string& E35_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_M41_E35_Name(value);
  }
  static inline bool E35_Parse(absl::string_view name, E35* value) {
    return Message9_M5_M11_M23_M34_M37_M41_E35_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_26_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_26())));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_6().data())), f_6().size() * sizeof(::int64_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())), f_2().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())), f_5().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())), f_8().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_9().c_str())), f_9().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_23().c_str())), f_23().size()));
      mutable_f_41()->generate_schema(schema);
      mutable_f_42()->generate_schema(schema);
      mutable_f_44()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_26_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_26()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_6().data())));
      sizes_list.push_back(f_6().size() * sizeof(::int64_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      sizes_list.push_back(f_2().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      sizes_list.push_back(f_5().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      sizes_list.push_back(f_8().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_9().c_str())));
      sizes_list.push_back(f_9().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_23().c_str())));
      sizes_list.push_back(f_23().size());
      mutable_f_41()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_42()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_44()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_26_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_6().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_9().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_23().c_str())));
      mutable_f_41()->generate_scatter_ptrs(ptrs);
      mutable_f_42()->generate_scatter_ptrs(ptrs);
      mutable_f_44()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_26_);
      sizes.push_back(end_addr - start_addr + sizeof(f_26()));
      sizes.push_back(f_6().size() * sizeof(::int64_t));
      sizes.push_back(f_0().size());
      sizes.push_back(f_2().size());
      sizes.push_back(f_5().size());
      sizes.push_back(f_8().size());
      sizes.push_back(f_9().size());
      sizes.push_back(f_23().size());
      mutable_f_41()->generate_scatter_sizes(sizes);
      mutable_f_42()->generate_scatter_sizes(sizes);
      mutable_f_44()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_26_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      mutable_f_6()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_6().data())));
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_2(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_5(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_8(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_9(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_9().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_23(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_23().c_str())));
      }
      idx = mutable_f_41()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_42()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_44()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      mutable_f_6()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_2(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_5(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_8(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_9(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_23(std::move(tmp_str));
        }
      }
      idx = mutable_f_41()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_42()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_44()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF6FieldNumber = 13,
    kF0FieldNumber = 2,
    kF2FieldNumber = 5,
    kF5FieldNumber = 11,
    kF8FieldNumber = 15,
    kF9FieldNumber = 16,
    kF23FieldNumber = 37,
    kF41FieldNumber = 42,
    kF42FieldNumber = 44,
    kF44FieldNumber = 45,
    kF1FieldNumber = 4,
    kF4FieldNumber = 9,
    kF3FieldNumber = 7,
    kF7FieldNumber = 14,
    kF10FieldNumber = 18,
    kF11FieldNumber = 20,
    kF12FieldNumber = 21,
    kF13FieldNumber = 22,
    kF14FieldNumber = 23,
    kF15FieldNumber = 25,
    kF16FieldNumber = 27,
    kF17FieldNumber = 28,
    kF18FieldNumber = 29,
    kF19FieldNumber = 30,
    kF20FieldNumber = 32,
    kF21FieldNumber = 33,
    kF22FieldNumber = 35,
    kF24FieldNumber = 38,
    kF25FieldNumber = 40,
    kF26FieldNumber = 41,
  };
  // repeated int64 f_6 = 13 [packed = true];
  int f_6_size() const;
  private:
  int _internal_f_6_size() const;

  public:
  void clear_f_6() ;
  ::int64_t f_6(int index) const;
  void set_f_6(int index, ::int64_t value);
  void add_f_6(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& f_6() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_f_6();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_f_6() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_f_6();

  public:
  // optional string f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional string f_2 = 5;
  bool has_f_2() const;
  void clear_f_2() ;
  const std::string& f_2() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_2(Arg_&& arg, Args_... args);
  std::string* mutable_f_2();
  PROTOBUF_NODISCARD std::string* release_f_2();
  void set_allocated_f_2(std::string* value);

  private:
  const std::string& _internal_f_2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_2(
      const std::string& value);
  std::string* _internal_mutable_f_2();

  public:
  // optional string f_5 = 11;
  bool has_f_5() const;
  void clear_f_5() ;
  const std::string& f_5() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_5(Arg_&& arg, Args_... args);
  std::string* mutable_f_5();
  PROTOBUF_NODISCARD std::string* release_f_5();
  void set_allocated_f_5(std::string* value);

  private:
  const std::string& _internal_f_5() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_5(
      const std::string& value);
  std::string* _internal_mutable_f_5();

  public:
  // optional string f_8 = 15;
  bool has_f_8() const;
  void clear_f_8() ;
  const std::string& f_8() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_8(Arg_&& arg, Args_... args);
  std::string* mutable_f_8();
  PROTOBUF_NODISCARD std::string* release_f_8();
  void set_allocated_f_8(std::string* value);

  private:
  const std::string& _internal_f_8() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_8(
      const std::string& value);
  std::string* _internal_mutable_f_8();

  public:
  // optional bytes f_9 = 16;
  bool has_f_9() const;
  void clear_f_9() ;
  const std::string& f_9() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_9(Arg_&& arg, Args_... args);
  std::string* mutable_f_9();
  PROTOBUF_NODISCARD std::string* release_f_9();
  void set_allocated_f_9(std::string* value);

  private:
  const std::string& _internal_f_9() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_9(
      const std::string& value);
  std::string* _internal_mutable_f_9();

  public:
  // optional string f_23 = 37;
  bool has_f_23() const;
  void clear_f_23() ;
  const std::string& f_23() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_23(Arg_&& arg, Args_... args);
  std::string* mutable_f_23();
  PROTOBUF_NODISCARD std::string* release_f_23();
  void set_allocated_f_23(std::string* value);

  private:
  const std::string& _internal_f_23() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_23(
      const std::string& value);
  std::string* _internal_mutable_f_23();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M42 f_41 = 42;
  bool has_f_41() const;
  void clear_f_41() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42& f_41() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* release_f_41();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* mutable_f_41();
  void set_allocated_f_41(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* value);
  void unsafe_arena_set_allocated_f_41(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* unsafe_arena_release_f_41();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42& _internal_f_41() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* _internal_mutable_f_41();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M43 f_42 = 44;
  bool has_f_42() const;
  void clear_f_42() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43& f_42() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* release_f_42();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* mutable_f_42();
  void set_allocated_f_42(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* value);
  void unsafe_arena_set_allocated_f_42(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* unsafe_arena_release_f_42();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43& _internal_f_42() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* _internal_mutable_f_42();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44 f_44 = 45;
  bool has_f_44() const;
  void clear_f_44() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44& f_44() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* release_f_44();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* mutable_f_44();
  void set_allocated_f_44(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* value);
  void unsafe_arena_set_allocated_f_44(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* unsafe_arena_release_f_44();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44& _internal_f_44() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* _internal_mutable_f_44();

  public:
  // optional uint64 f_1 = 4;
  bool has_f_1() const;
  void clear_f_1() ;
  ::uint64_t f_1() const;
  void set_f_1(::uint64_t value);

  private:
  ::uint64_t _internal_f_1() const;
  void _internal_set_f_1(::uint64_t value);

  public:
  // optional int64 f_4 = 9;
  bool has_f_4() const;
  void clear_f_4() ;
  ::int64_t f_4() const;
  void set_f_4(::int64_t value);

  private:
  ::int64_t _internal_f_4() const;
  void _internal_set_f_4(::int64_t value);

  public:
  // optional int32 f_3 = 7;
  bool has_f_3() const;
  void clear_f_3() ;
  ::int32_t f_3() const;
  void set_f_3(::int32_t value);

  private:
  ::int32_t _internal_f_3() const;
  void _internal_set_f_3(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.E32 f_7 = 14;
  bool has_f_7() const;
  void clear_f_7() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32 f_7() const;
  void set_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32 _internal_f_7() const;
  void _internal_set_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32 value);

  public:
  // optional int64 f_10 = 18;
  bool has_f_10() const;
  void clear_f_10() ;
  ::int64_t f_10() const;
  void set_f_10(::int64_t value);

  private:
  ::int64_t _internal_f_10() const;
  void _internal_set_f_10(::int64_t value);

  public:
  // optional int64 f_11 = 20;
  bool has_f_11() const;
  void clear_f_11() ;
  ::int64_t f_11() const;
  void set_f_11(::int64_t value);

  private:
  ::int64_t _internal_f_11() const;
  void _internal_set_f_11(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.E33 f_12 = 21;
  bool has_f_12() const;
  void clear_f_12() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33 f_12() const;
  void set_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33 _internal_f_12() const;
  void _internal_set_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.E34 f_13 = 22;
  bool has_f_13() const;
  void clear_f_13() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34 f_13() const;
  void set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34 _internal_f_13() const;
  void _internal_set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.E35 f_14 = 23;
  bool has_f_14() const;
  void clear_f_14() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35 f_14() const;
  void set_f_14(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35 _internal_f_14() const;
  void _internal_set_f_14(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35 value);

  public:
  // optional float f_15 = 25;
  bool has_f_15() const;
  void clear_f_15() ;
  float f_15() const;
  void set_f_15(float value);

  private:
  float _internal_f_15() const;
  void _internal_set_f_15(float value);

  public:
  // optional bool f_16 = 27;
  bool has_f_16() const;
  void clear_f_16() ;
  bool f_16() const;
  void set_f_16(bool value);

  private:
  bool _internal_f_16() const;
  void _internal_set_f_16(bool value);

  public:
  // optional int32 f_17 = 28;
  bool has_f_17() const;
  void clear_f_17() ;
  ::int32_t f_17() const;
  void set_f_17(::int32_t value);

  private:
  ::int32_t _internal_f_17() const;
  void _internal_set_f_17(::int32_t value);

  public:
  // optional int64 f_18 = 29;
  bool has_f_18() const;
  void clear_f_18() ;
  ::int64_t f_18() const;
  void set_f_18(::int64_t value);

  private:
  ::int64_t _internal_f_18() const;
  void _internal_set_f_18(::int64_t value);

  public:
  // optional fixed32 f_19 = 30;
  bool has_f_19() const;
  void clear_f_19() ;
  ::uint32_t f_19() const;
  void set_f_19(::uint32_t value);

  private:
  ::uint32_t _internal_f_19() const;
  void _internal_set_f_19(::uint32_t value);

  public:
  // optional float f_20 = 32;
  bool has_f_20() const;
  void clear_f_20() ;
  float f_20() const;
  void set_f_20(float value);

  private:
  float _internal_f_20() const;
  void _internal_set_f_20(float value);

  public:
  // optional int64 f_21 = 33;
  bool has_f_21() const;
  void clear_f_21() ;
  ::int64_t f_21() const;
  void set_f_21(::int64_t value);

  private:
  ::int64_t _internal_f_21() const;
  void _internal_set_f_21(::int64_t value);

  public:
  // optional int64 f_22 = 35;
  bool has_f_22() const;
  void clear_f_22() ;
  ::int64_t f_22() const;
  void set_f_22(::int64_t value);

  private:
  ::int64_t _internal_f_22() const;
  void _internal_set_f_22(::int64_t value);

  public:
  // optional int32 f_24 = 38;
  bool has_f_24() const;
  void clear_f_24() ;
  ::int32_t f_24() const;
  void set_f_24(::int32_t value);

  private:
  ::int32_t _internal_f_24() const;
  void _internal_set_f_24(::int32_t value);

  public:
  // optional int32 f_25 = 40;
  bool has_f_25() const;
  void clear_f_25() ;
  ::int32_t f_25() const;
  void set_f_25(::int32_t value);

  private:
  ::int32_t _internal_f_25() const;
  void _internal_set_f_25(::int32_t value);

  public:
  // optional fixed64 f_26 = 41;
  bool has_f_26() const;
  void clear_f_26() ;
  ::uint64_t f_26() const;
  void set_f_26(::uint64_t value);

  private:
  ::uint64_t _internal_f_26() const;
  void _internal_set_f_26(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 30, 7,
      97, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_M41_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int64_t> f_6_;
    mutable ::google::protobuf::internal::CachedSize _f_6_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    ::google::protobuf::internal::ArenaStringPtr f_2_;
    ::google::protobuf::internal::ArenaStringPtr f_5_;
    ::google::protobuf::internal::ArenaStringPtr f_8_;
    ::google::protobuf::internal::ArenaStringPtr f_9_;
    ::google::protobuf::internal::ArenaStringPtr f_23_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* f_41_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* f_42_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* f_44_;
    ::uint64_t f_1_;
    ::int64_t f_4_;
    ::int32_t f_3_;
    int f_7_;
    ::int64_t f_10_;
    ::int64_t f_11_;
    int f_12_;
    int f_13_;
    int f_14_;
    float f_15_;
    bool f_16_;
    ::int32_t f_17_;
    ::int64_t f_18_;
    ::uint32_t f_19_;
    float f_20_;
    ::int64_t f_21_;
    ::int64_t f_22_;
    ::int32_t f_24_;
    ::int32_t f_25_;
    ::uint64_t f_26_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M72 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_schema(schema);
      }
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_0().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      size_t num_f_2_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_2_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 3,
    kF0FieldNumber = 2,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72 f_2 = 3;
  int f_2_size() const;
  private:
  int _internal_f_2_size() const;

  public:
  void clear_f_2() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72* mutable_f_2(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72>* mutable_f_2();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72>& _internal_f_2() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72>* _internal_mutable_f_2();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& f_2(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72* add_f_2();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72>& f_2() const;
  // optional string f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      96, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72 > f_2_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M3 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M3) */ {
 public:
  inline Message9_M3() : Message9_M3(nullptr) {}
  ~Message9_M3() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M3(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M3(const Message9_M3& from) : Message9_M3(nullptr, from) {}
  inline Message9_M3(Message9_M3&& from) noexcept
      : Message9_M3(nullptr, std::move(from)) {}
  inline Message9_M3& operator=(const Message9_M3& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M3& operator=(Message9_M3&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M3& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M3* internal_default_instance() {
    return reinterpret_cast<const Message9_M3*>(
        &_Message9_M3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(Message9_M3& a, Message9_M3& b) { a.Swap(&b); }
  inline void Swap(Message9_M3* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M3* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M3& from) { Message9_M3::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M3* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M3"; }

 protected:
  explicit Message9_M3(::google::protobuf::Arena* arena);
  Message9_M3(::google::protobuf::Arena* arena, const Message9_M3& from);
  Message9_M3(::google::protobuf::Arena* arena, Message9_M3&& from) noexcept
      : Message9_M3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M10 = Message9_M3_M10;
  using M13 = Message9_M3_M13;
  using M14 = Message9_M3_M14;
  using M20 = Message9_M3_M20;
  using M21 = Message9_M3_M21;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      for (int i = 0; i < f_5_size(); ++i) {
        mutable_f_5(i)->generate_schema(schema);
      }
      for (int i = 0; i < f_8_size(); ++i) {
        mutable_f_8(i)->generate_schema(schema);
      }
      mutable_f_3()->generate_schema(schema);
      mutable_f_7()->generate_schema(schema);
      mutable_f_9()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_5().size());
      for (int i = 0; i < f_5_size(); ++i) {
        mutable_f_5(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_8().size());
      for (int i = 0; i < f_8_size(); ++i) {
        mutable_f_8(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      mutable_f_3()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_7()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_9()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_5_size(); ++i) {
        mutable_f_5(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_8_size(); ++i) {
        mutable_f_8(i)->generate_scatter_ptrs(ptrs);
      }
      mutable_f_3()->generate_scatter_ptrs(ptrs);
      mutable_f_7()->generate_scatter_ptrs(ptrs);
      mutable_f_9()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      sizes.push_back(f_5().size());
      for (int i = 0; i < f_5_size(); ++i) {
        mutable_f_5(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_8().size());
      for (int i = 0; i < f_8_size(); ++i) {
        mutable_f_8(i)->generate_scatter_sizes(sizes);
      }
      mutable_f_3()->generate_scatter_sizes(sizes);
      mutable_f_7()->generate_scatter_sizes(sizes);
      mutable_f_9()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      size_t num_f_5_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_5_entries; ++i) {
        auto* new_msg = add_f_5();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_5(i)->allocate_from_sizes(sizes, idx); 
      }
      size_t num_f_8_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_8_entries; ++i) {
        auto* new_msg = add_f_8();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_8(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_3()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_7()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_9()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_5_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_5_entries; ++i) {
        auto* new_msg = add_f_5();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_5(i)->allocate_from_sizes(sizes, idx); 
      }
      size_t num_f_8_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_8_entries; ++i) {
        auto* new_msg = add_f_8();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_8(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_3()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_7()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_9()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF5FieldNumber = 7,
    kF8FieldNumber = 9,
    kF3FieldNumber = 5,
    kF7FieldNumber = 8,
    kF9FieldNumber = 10,
    kF0FieldNumber = 3,
  };
  // repeated .fleetbench.proto.Message9.M3.M13 f_5 = 7;
  int f_5_size() const;
  private:
  int _internal_f_5_size() const;

  public:
  void clear_f_5() ;
  ::fleetbench::proto::Message9_M3_M13* mutable_f_5(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M13>* mutable_f_5();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M13>& _internal_f_5() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M13>* _internal_mutable_f_5();
  public:
  const ::fleetbench::proto::Message9_M3_M13& f_5(int index) const;
  ::fleetbench::proto::Message9_M3_M13* add_f_5();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M13>& f_5() const;
  // repeated .fleetbench.proto.Message9.M3.M20 f_8 = 9;
  int f_8_size() const;
  private:
  int _internal_f_8_size() const;

  public:
  void clear_f_8() ;
  ::fleetbench::proto::Message9_M3_M20* mutable_f_8(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M20>* mutable_f_8();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M20>& _internal_f_8() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M20>* _internal_mutable_f_8();
  public:
  const ::fleetbench::proto::Message9_M3_M20& f_8(int index) const;
  ::fleetbench::proto::Message9_M3_M20* add_f_8();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M20>& f_8() const;
  // optional .fleetbench.proto.Message9.M3.M10 f_3 = 5;
  bool has_f_3() const;
  void clear_f_3() ;
  const ::fleetbench::proto::Message9_M3_M10& f_3() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M3_M10* release_f_3();
  ::fleetbench::proto::Message9_M3_M10* mutable_f_3();
  void set_allocated_f_3(::fleetbench::proto::Message9_M3_M10* value);
  void unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M3_M10* value);
  ::fleetbench::proto::Message9_M3_M10* unsafe_arena_release_f_3();

  private:
  const ::fleetbench::proto::Message9_M3_M10& _internal_f_3() const;
  ::fleetbench::proto::Message9_M3_M10* _internal_mutable_f_3();

  public:
  // optional .fleetbench.proto.Message9.M3.M14 f_7 = 8;
  bool has_f_7() const;
  void clear_f_7() ;
  const ::fleetbench::proto::Message9_M3_M14& f_7() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M3_M14* release_f_7();
  ::fleetbench::proto::Message9_M3_M14* mutable_f_7();
  void set_allocated_f_7(::fleetbench::proto::Message9_M3_M14* value);
  void unsafe_arena_set_allocated_f_7(::fleetbench::proto::Message9_M3_M14* value);
  ::fleetbench::proto::Message9_M3_M14* unsafe_arena_release_f_7();

  private:
  const ::fleetbench::proto::Message9_M3_M14& _internal_f_7() const;
  ::fleetbench::proto::Message9_M3_M14* _internal_mutable_f_7();

  public:
  // optional .fleetbench.proto.Message9.M3.M21 f_9 = 10;
  bool has_f_9() const;
  void clear_f_9() ;
  const ::fleetbench::proto::Message9_M3_M21& f_9() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M3_M21* release_f_9();
  ::fleetbench::proto::Message9_M3_M21* mutable_f_9();
  void set_allocated_f_9(::fleetbench::proto::Message9_M3_M21* value);
  void unsafe_arena_set_allocated_f_9(::fleetbench::proto::Message9_M3_M21* value);
  ::fleetbench::proto::Message9_M3_M21* unsafe_arena_release_f_9();

  private:
  const ::fleetbench::proto::Message9_M3_M21& _internal_f_9() const;
  ::fleetbench::proto::Message9_M3_M21* _internal_mutable_f_9();

  public:
  // optional double f_0 = 3;
  bool has_f_0() const;
  void clear_f_0() ;
  double f_0() const;
  void set_f_0(double value);

  private:
  double _internal_f_0() const;
  void _internal_set_f_0(double value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 5,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M3_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M3_M13 > f_5_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M3_M20 > f_8_;
    ::fleetbench::proto::Message9_M3_M10* f_3_;
    ::fleetbench::proto::Message9_M3_M14* f_7_;
    ::fleetbench::proto::Message9_M3_M21* f_9_;
    double f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M37 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M37) */ {
 public:
  inline Message9_M5_M11_M23_M34_M37() : Message9_M5_M11_M23_M34_M37(nullptr) {}
  ~Message9_M5_M11_M23_M34_M37() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M37(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M37(const Message9_M5_M11_M23_M34_M37& from) : Message9_M5_M11_M23_M34_M37(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M37(Message9_M5_M11_M23_M34_M37&& from) noexcept
      : Message9_M5_M11_M23_M34_M37(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M37& operator=(const Message9_M5_M11_M23_M34_M37& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M37& operator=(Message9_M5_M11_M23_M34_M37&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M37& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M37* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M37*>(
        &_Message9_M5_M11_M23_M34_M37_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(Message9_M5_M11_M23_M34_M37& a, Message9_M5_M11_M23_M34_M37& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M37* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M37* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M37* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M37>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M37& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M37& from) { Message9_M5_M11_M23_M34_M37::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M37* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M37"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M37(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M37(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M37& from);
  Message9_M5_M11_M23_M34_M37(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M37&& from) noexcept
      : Message9_M5_M11_M23_M34_M37(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M38 = Message9_M5_M11_M23_M34_M37_M38;
  using M39 = Message9_M5_M11_M23_M34_M37_M39;
  using M41 = Message9_M5_M11_M23_M34_M37_M41;
  using E26 = Message9_M5_M11_M23_M34_M37_E26;
  static constexpr E26 E26_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_E26_E26_UNSPECIFIED;
  static constexpr E26 E26_CONST_1 = Message9_M5_M11_M23_M34_M37_E26_E26_CONST_1;
  static constexpr E26 E26_CONST_2 = Message9_M5_M11_M23_M34_M37_E26_E26_CONST_2;
  static constexpr E26 E26_CONST_3 = Message9_M5_M11_M23_M34_M37_E26_E26_CONST_3;
  static constexpr E26 E26_CONST_4 = Message9_M5_M11_M23_M34_M37_E26_E26_CONST_4;
  static constexpr E26 E26_CONST_5 = Message9_M5_M11_M23_M34_M37_E26_E26_CONST_5;
  static inline bool E26_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_E26_IsValid(value);
  }
  static constexpr E26 E26_MIN = Message9_M5_M11_M23_M34_M37_E26_E26_MIN;
  static constexpr E26 E26_MAX = Message9_M5_M11_M23_M34_M37_E26_E26_MAX;
  static constexpr int E26_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_E26_E26_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E26_descriptor() {
    return Message9_M5_M11_M23_M34_M37_E26_descriptor();
  }
  template <typename T>
  static inline const std::string& E26_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_E26_Name(value);
  }
  static inline bool E26_Parse(absl::string_view name, E26* value) {
    return Message9_M5_M11_M23_M34_M37_E26_Parse(name, value);
  }
  using E27 = Message9_M5_M11_M23_M34_M37_E27;
  static constexpr E27 E27_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_E27_E27_UNSPECIFIED;
  static constexpr E27 E27_CONST_1 = Message9_M5_M11_M23_M34_M37_E27_E27_CONST_1;
  static constexpr E27 E27_CONST_2 = Message9_M5_M11_M23_M34_M37_E27_E27_CONST_2;
  static constexpr E27 E27_CONST_3 = Message9_M5_M11_M23_M34_M37_E27_E27_CONST_3;
  static constexpr E27 E27_CONST_4 = Message9_M5_M11_M23_M34_M37_E27_E27_CONST_4;
  static constexpr E27 E27_CONST_5 = Message9_M5_M11_M23_M34_M37_E27_E27_CONST_5;
  static inline bool E27_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_E27_IsValid(value);
  }
  static constexpr E27 E27_MIN = Message9_M5_M11_M23_M34_M37_E27_E27_MIN;
  static constexpr E27 E27_MAX = Message9_M5_M11_M23_M34_M37_E27_E27_MAX;
  static constexpr int E27_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_E27_E27_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E27_descriptor() {
    return Message9_M5_M11_M23_M34_M37_E27_descriptor();
  }
  template <typename T>
  static inline const std::string& E27_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_E27_Name(value);
  }
  static inline bool E27_Parse(absl::string_view name, E27* value) {
    return Message9_M5_M11_M23_M34_M37_E27_Parse(name, value);
  }
  using E28 = Message9_M5_M11_M23_M34_M37_E28;
  static constexpr E28 E28_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_E28_E28_UNSPECIFIED;
  static constexpr E28 E28_CONST_1 = Message9_M5_M11_M23_M34_M37_E28_E28_CONST_1;
  static constexpr E28 E28_CONST_2 = Message9_M5_M11_M23_M34_M37_E28_E28_CONST_2;
  static constexpr E28 E28_CONST_3 = Message9_M5_M11_M23_M34_M37_E28_E28_CONST_3;
  static constexpr E28 E28_CONST_4 = Message9_M5_M11_M23_M34_M37_E28_E28_CONST_4;
  static constexpr E28 E28_CONST_5 = Message9_M5_M11_M23_M34_M37_E28_E28_CONST_5;
  static inline bool E28_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_E28_IsValid(value);
  }
  static constexpr E28 E28_MIN = Message9_M5_M11_M23_M34_M37_E28_E28_MIN;
  static constexpr E28 E28_MAX = Message9_M5_M11_M23_M34_M37_E28_E28_MAX;
  static constexpr int E28_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_E28_E28_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E28_descriptor() {
    return Message9_M5_M11_M23_M34_M37_E28_descriptor();
  }
  template <typename T>
  static inline const std::string& E28_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_E28_Name(value);
  }
  static inline bool E28_Parse(absl::string_view name, E28* value) {
    return Message9_M5_M11_M23_M34_M37_E28_Parse(name, value);
  }
  using E29 = Message9_M5_M11_M23_M34_M37_E29;
  static constexpr E29 E29_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_E29_E29_UNSPECIFIED;
  static constexpr E29 E29_CONST_1 = Message9_M5_M11_M23_M34_M37_E29_E29_CONST_1;
  static constexpr E29 E29_CONST_2 = Message9_M5_M11_M23_M34_M37_E29_E29_CONST_2;
  static constexpr E29 E29_CONST_3 = Message9_M5_M11_M23_M34_M37_E29_E29_CONST_3;
  static constexpr E29 E29_CONST_4 = Message9_M5_M11_M23_M34_M37_E29_E29_CONST_4;
  static constexpr E29 E29_CONST_5 = Message9_M5_M11_M23_M34_M37_E29_E29_CONST_5;
  static inline bool E29_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_E29_IsValid(value);
  }
  static constexpr E29 E29_MIN = Message9_M5_M11_M23_M34_M37_E29_E29_MIN;
  static constexpr E29 E29_MAX = Message9_M5_M11_M23_M34_M37_E29_E29_MAX;
  static constexpr int E29_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_E29_E29_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E29_descriptor() {
    return Message9_M5_M11_M23_M34_M37_E29_descriptor();
  }
  template <typename T>
  static inline const std::string& E29_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_E29_Name(value);
  }
  static inline bool E29_Parse(absl::string_view name, E29* value) {
    return Message9_M5_M11_M23_M34_M37_E29_Parse(name, value);
  }
  using E30 = Message9_M5_M11_M23_M34_M37_E30;
  static constexpr E30 E30_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_E30_E30_UNSPECIFIED;
  static constexpr E30 E30_CONST_1 = Message9_M5_M11_M23_M34_M37_E30_E30_CONST_1;
  static constexpr E30 E30_CONST_2 = Message9_M5_M11_M23_M34_M37_E30_E30_CONST_2;
  static constexpr E30 E30_CONST_3 = Message9_M5_M11_M23_M34_M37_E30_E30_CONST_3;
  static constexpr E30 E30_CONST_4 = Message9_M5_M11_M23_M34_M37_E30_E30_CONST_4;
  static constexpr E30 E30_CONST_5 = Message9_M5_M11_M23_M34_M37_E30_E30_CONST_5;
  static inline bool E30_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_E30_IsValid(value);
  }
  static constexpr E30 E30_MIN = Message9_M5_M11_M23_M34_M37_E30_E30_MIN;
  static constexpr E30 E30_MAX = Message9_M5_M11_M23_M34_M37_E30_E30_MAX;
  static constexpr int E30_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_E30_E30_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E30_descriptor() {
    return Message9_M5_M11_M23_M34_M37_E30_descriptor();
  }
  template <typename T>
  static inline const std::string& E30_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_E30_Name(value);
  }
  static inline bool E30_Parse(absl::string_view name, E30* value) {
    return Message9_M5_M11_M23_M34_M37_E30_Parse(name, value);
  }
  using E31 = Message9_M5_M11_M23_M34_M37_E31;
  static constexpr E31 E31_UNSPECIFIED = Message9_M5_M11_M23_M34_M37_E31_E31_UNSPECIFIED;
  static constexpr E31 E31_CONST_1 = Message9_M5_M11_M23_M34_M37_E31_E31_CONST_1;
  static constexpr E31 E31_CONST_2 = Message9_M5_M11_M23_M34_M37_E31_E31_CONST_2;
  static constexpr E31 E31_CONST_3 = Message9_M5_M11_M23_M34_M37_E31_E31_CONST_3;
  static constexpr E31 E31_CONST_4 = Message9_M5_M11_M23_M34_M37_E31_E31_CONST_4;
  static constexpr E31 E31_CONST_5 = Message9_M5_M11_M23_M34_M37_E31_E31_CONST_5;
  static inline bool E31_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M37_E31_IsValid(value);
  }
  static constexpr E31 E31_MIN = Message9_M5_M11_M23_M34_M37_E31_E31_MIN;
  static constexpr E31 E31_MAX = Message9_M5_M11_M23_M34_M37_E31_E31_MAX;
  static constexpr int E31_ARRAYSIZE = Message9_M5_M11_M23_M34_M37_E31_E31_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E31_descriptor() {
    return Message9_M5_M11_M23_M34_M37_E31_descriptor();
  }
  template <typename T>
  static inline const std::string& E31_Name(T value) {
    return Message9_M5_M11_M23_M34_M37_E31_Name(value);
  }
  static inline bool E31_Parse(absl::string_view name, E31* value) {
    return Message9_M5_M11_M23_M34_M37_E31_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_43_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_43())));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_7().data())), f_7().size() * sizeof(::int32_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_20().data())), f_20().size() * sizeof(::int64_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_24().data())), f_24().size() * sizeof(::int32_t)));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_34().data())), f_34().size() * sizeof(::int32_t)));
      for (int i = 0; i < f_71_size(); ++i) {
        mutable_f_71(i)->generate_schema(schema);
      }
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())), f_8().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())), f_11().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_12().c_str())), f_12().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())), f_16().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_25().c_str())), f_25().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_28().c_str())), f_28().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_29().c_str())), f_29().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_30().c_str())), f_30().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_32().c_str())), f_32().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_39().c_str())), f_39().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_42().c_str())), f_42().size()));
      mutable_f_69()->generate_schema(schema);
      mutable_f_70()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_43_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_43()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_7().data())));
      sizes_list.push_back(f_7().size() * sizeof(::int32_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_20().data())));
      sizes_list.push_back(f_20().size() * sizeof(::int64_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_24().data())));
      sizes_list.push_back(f_24().size() * sizeof(::int32_t));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_34().data())));
      sizes_list.push_back(f_34().size() * sizeof(::int32_t));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_71().size());
      for (int i = 0; i < f_71_size(); ++i) {
        mutable_f_71(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      sizes_list.push_back(f_8().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())));
      sizes_list.push_back(f_11().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_12().c_str())));
      sizes_list.push_back(f_12().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())));
      sizes_list.push_back(f_16().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_25().c_str())));
      sizes_list.push_back(f_25().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_28().c_str())));
      sizes_list.push_back(f_28().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_29().c_str())));
      sizes_list.push_back(f_29().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_30().c_str())));
      sizes_list.push_back(f_30().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_32().c_str())));
      sizes_list.push_back(f_32().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_39().c_str())));
      sizes_list.push_back(f_39().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_42().c_str())));
      sizes_list.push_back(f_42().size());
      mutable_f_69()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_70()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_43_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_7().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_20().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_24().data())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_34().data())));
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_71_size(); ++i) {
        mutable_f_71(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_12().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_25().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_28().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_29().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_30().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_32().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_39().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_42().c_str())));
      mutable_f_69()->generate_scatter_ptrs(ptrs);
      mutable_f_70()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_43_);
      sizes.push_back(end_addr - start_addr + sizeof(f_43()));
      sizes.push_back(f_7().size() * sizeof(::int32_t));
      sizes.push_back(f_20().size() * sizeof(::int64_t));
      sizes.push_back(f_24().size() * sizeof(::int32_t));
      sizes.push_back(f_34().size() * sizeof(::int32_t));
      sizes.push_back(f_71().size());
      for (int i = 0; i < f_71_size(); ++i) {
        mutable_f_71(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_0().size());
      sizes.push_back(f_8().size());
      sizes.push_back(f_11().size());
      sizes.push_back(f_12().size());
      sizes.push_back(f_16().size());
      sizes.push_back(f_25().size());
      sizes.push_back(f_28().size());
      sizes.push_back(f_29().size());
      sizes.push_back(f_30().size());
      sizes.push_back(f_32().size());
      sizes.push_back(f_39().size());
      sizes.push_back(f_42().size());
      mutable_f_69()->generate_scatter_sizes(sizes);
      mutable_f_70()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_43_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      mutable_f_7()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_7().data())));
      mutable_f_20()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int64_t*>(f_20().data())));
      mutable_f_24()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_24().data())));
      mutable_f_34()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<::int32_t*>(f_34().data())));
      size_t num_f_71_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_71_entries; ++i) {
        auto* new_msg = add_f_71();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_71(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_8(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_11(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_11().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_12(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_12().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_16(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_16().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_25(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_25().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_28(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_28().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_29(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_29().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_30(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_30().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_32(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_32().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_39(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_39().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_42(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_42().c_str())));
      }
      idx = mutable_f_69()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_70()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      mutable_f_7()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      mutable_f_20()->Resize(sizes[idx++] / sizeof(::int64_t), 0);
      mutable_f_24()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      mutable_f_34()->Resize(sizes[idx++] / sizeof(::int32_t), 0);
      size_t num_f_71_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_71_entries; ++i) {
        auto* new_msg = add_f_71();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_71(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_8(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_11(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_12(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_16(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_25(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_28(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_29(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_30(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_32(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_39(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_42(std::move(tmp_str));
        }
      }
      idx = mutable_f_69()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_70()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF7FieldNumber = 13,
    kF20FieldNumber = 35,
    kF24FieldNumber = 42,
    kF34FieldNumber = 54,
    kF71FieldNumber = 72,
    kF0FieldNumber = 1,
    kF8FieldNumber = 17,
    kF11FieldNumber = 22,
    kF12FieldNumber = 24,
    kF16FieldNumber = 31,
    kF25FieldNumber = 44,
    kF28FieldNumber = 47,
    kF29FieldNumber = 48,
    kF30FieldNumber = 50,
    kF32FieldNumber = 52,
    kF39FieldNumber = 61,
    kF42FieldNumber = 68,
    kF69FieldNumber = 70,
    kF70FieldNumber = 71,
    kF1FieldNumber = 2,
    kF2FieldNumber = 3,
    kF3FieldNumber = 4,
    kF4FieldNumber = 6,
    kF5FieldNumber = 7,
    kF6FieldNumber = 9,
    kF10FieldNumber = 19,
    kF9FieldNumber = 18,
    kF13FieldNumber = 26,
    kF14FieldNumber = 28,
    kF15FieldNumber = 30,
    kF18FieldNumber = 33,
    kF21FieldNumber = 36,
    kF22FieldNumber = 37,
    kF23FieldNumber = 40,
    kF17FieldNumber = 32,
    kF19FieldNumber = 34,
    kF35FieldNumber = 56,
    kF26FieldNumber = 45,
    kF27FieldNumber = 46,
    kF33FieldNumber = 53,
    kF31FieldNumber = 51,
    kF36FieldNumber = 57,
    kF37FieldNumber = 58,
    kF38FieldNumber = 59,
    kF40FieldNumber = 62,
    kF41FieldNumber = 66,
    kF43FieldNumber = 69,
  };
  // repeated int32 f_7 = 13 [packed = true];
  int f_7_size() const;
  private:
  int _internal_f_7_size() const;

  public:
  void clear_f_7() ;
  ::int32_t f_7(int index) const;
  void set_f_7(int index, ::int32_t value);
  void add_f_7(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& f_7() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_f_7();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_f_7() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_f_7();

  public:
  // repeated int64 f_20 = 35 [packed = true];
  int f_20_size() const;
  private:
  int _internal_f_20_size() const;

  public:
  void clear_f_20() ;
  ::int64_t f_20(int index) const;
  void set_f_20(int index, ::int64_t value);
  void add_f_20(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& f_20() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_f_20();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_f_20() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_f_20();

  public:
  // repeated int32 f_24 = 42 [packed = true];
  int f_24_size() const;
  private:
  int _internal_f_24_size() const;

  public:
  void clear_f_24() ;
  ::int32_t f_24(int index) const;
  void set_f_24(int index, ::int32_t value);
  void add_f_24(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& f_24() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_f_24();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_f_24() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_f_24();

  public:
  // repeated int32 f_34 = 54 [packed = true];
  int f_34_size() const;
  private:
  int _internal_f_34_size() const;

  public:
  void clear_f_34() ;
  ::int32_t f_34(int index) const;
  void set_f_34(int index, ::int32_t value);
  void add_f_34(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& f_34() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_f_34();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_f_34() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_f_34();

  public:
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41 f_71 = 72;
  int f_71_size() const;
  private:
  int _internal_f_71_size() const;

  public:
  void clear_f_71() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41* mutable_f_71(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41>* mutable_f_71();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41>& _internal_f_71() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41>* _internal_mutable_f_71();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41& f_71(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41* add_f_71();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41>& f_71() const;
  // optional string f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional string f_8 = 17;
  bool has_f_8() const;
  void clear_f_8() ;
  const std::string& f_8() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_8(Arg_&& arg, Args_... args);
  std::string* mutable_f_8();
  PROTOBUF_NODISCARD std::string* release_f_8();
  void set_allocated_f_8(std::string* value);

  private:
  const std::string& _internal_f_8() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_8(
      const std::string& value);
  std::string* _internal_mutable_f_8();

  public:
  // optional string f_11 = 22;
  bool has_f_11() const;
  void clear_f_11() ;
  const std::string& f_11() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_11(Arg_&& arg, Args_... args);
  std::string* mutable_f_11();
  PROTOBUF_NODISCARD std::string* release_f_11();
  void set_allocated_f_11(std::string* value);

  private:
  const std::string& _internal_f_11() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_11(
      const std::string& value);
  std::string* _internal_mutable_f_11();

  public:
  // optional string f_12 = 24;
  bool has_f_12() const;
  void clear_f_12() ;
  const std::string& f_12() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_12(Arg_&& arg, Args_... args);
  std::string* mutable_f_12();
  PROTOBUF_NODISCARD std::string* release_f_12();
  void set_allocated_f_12(std::string* value);

  private:
  const std::string& _internal_f_12() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_12(
      const std::string& value);
  std::string* _internal_mutable_f_12();

  public:
  // optional string f_16 = 31;
  bool has_f_16() const;
  void clear_f_16() ;
  const std::string& f_16() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_16(Arg_&& arg, Args_... args);
  std::string* mutable_f_16();
  PROTOBUF_NODISCARD std::string* release_f_16();
  void set_allocated_f_16(std::string* value);

  private:
  const std::string& _internal_f_16() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_16(
      const std::string& value);
  std::string* _internal_mutable_f_16();

  public:
  // optional string f_25 = 44;
  bool has_f_25() const;
  void clear_f_25() ;
  const std::string& f_25() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_25(Arg_&& arg, Args_... args);
  std::string* mutable_f_25();
  PROTOBUF_NODISCARD std::string* release_f_25();
  void set_allocated_f_25(std::string* value);

  private:
  const std::string& _internal_f_25() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_25(
      const std::string& value);
  std::string* _internal_mutable_f_25();

  public:
  // optional string f_28 = 47;
  bool has_f_28() const;
  void clear_f_28() ;
  const std::string& f_28() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_28(Arg_&& arg, Args_... args);
  std::string* mutable_f_28();
  PROTOBUF_NODISCARD std::string* release_f_28();
  void set_allocated_f_28(std::string* value);

  private:
  const std::string& _internal_f_28() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_28(
      const std::string& value);
  std::string* _internal_mutable_f_28();

  public:
  // optional string f_29 = 48;
  bool has_f_29() const;
  void clear_f_29() ;
  const std::string& f_29() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_29(Arg_&& arg, Args_... args);
  std::string* mutable_f_29();
  PROTOBUF_NODISCARD std::string* release_f_29();
  void set_allocated_f_29(std::string* value);

  private:
  const std::string& _internal_f_29() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_29(
      const std::string& value);
  std::string* _internal_mutable_f_29();

  public:
  // optional string f_30 = 50;
  bool has_f_30() const;
  void clear_f_30() ;
  const std::string& f_30() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_30(Arg_&& arg, Args_... args);
  std::string* mutable_f_30();
  PROTOBUF_NODISCARD std::string* release_f_30();
  void set_allocated_f_30(std::string* value);

  private:
  const std::string& _internal_f_30() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_30(
      const std::string& value);
  std::string* _internal_mutable_f_30();

  public:
  // optional string f_32 = 52;
  bool has_f_32() const;
  void clear_f_32() ;
  const std::string& f_32() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_32(Arg_&& arg, Args_... args);
  std::string* mutable_f_32();
  PROTOBUF_NODISCARD std::string* release_f_32();
  void set_allocated_f_32(std::string* value);

  private:
  const std::string& _internal_f_32() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_32(
      const std::string& value);
  std::string* _internal_mutable_f_32();

  public:
  // optional string f_39 = 61;
  bool has_f_39() const;
  void clear_f_39() ;
  const std::string& f_39() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_39(Arg_&& arg, Args_... args);
  std::string* mutable_f_39();
  PROTOBUF_NODISCARD std::string* release_f_39();
  void set_allocated_f_39(std::string* value);

  private:
  const std::string& _internal_f_39() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_39(
      const std::string& value);
  std::string* _internal_mutable_f_39();

  public:
  // optional string f_42 = 68;
  bool has_f_42() const;
  void clear_f_42() ;
  const std::string& f_42() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_42(Arg_&& arg, Args_... args);
  std::string* mutable_f_42();
  PROTOBUF_NODISCARD std::string* release_f_42();
  void set_allocated_f_42(std::string* value);

  private:
  const std::string& _internal_f_42() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_42(
      const std::string& value);
  std::string* _internal_mutable_f_42();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38 f_69 = 70;
  bool has_f_69() const;
  void clear_f_69() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38& f_69() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* release_f_69();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* mutable_f_69();
  void set_allocated_f_69(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* value);
  void unsafe_arena_set_allocated_f_69(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* unsafe_arena_release_f_69();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38& _internal_f_69() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* _internal_mutable_f_69();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39 f_70 = 71;
  bool has_f_70() const;
  void clear_f_70() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39& f_70() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* release_f_70();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* mutable_f_70();
  void set_allocated_f_70(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* value);
  void unsafe_arena_set_allocated_f_70(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* unsafe_arena_release_f_70();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39& _internal_f_70() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* _internal_mutable_f_70();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E26 f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26 f_1() const;
  void set_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26 _internal_f_1() const;
  void _internal_set_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E27 f_2 = 3;
  bool has_f_2() const;
  void clear_f_2() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27 f_2() const;
  void set_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27 _internal_f_2() const;
  void _internal_set_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27 value);

  public:
  // optional int64 f_3 = 4;
  bool has_f_3() const;
  void clear_f_3() ;
  ::int64_t f_3() const;
  void set_f_3(::int64_t value);

  private:
  ::int64_t _internal_f_3() const;
  void _internal_set_f_3(::int64_t value);

  public:
  // optional int32 f_4 = 6;
  bool has_f_4() const;
  void clear_f_4() ;
  ::int32_t f_4() const;
  void set_f_4(::int32_t value);

  private:
  ::int32_t _internal_f_4() const;
  void _internal_set_f_4(::int32_t value);

  public:
  // optional fixed32 f_5 = 7;
  bool has_f_5() const;
  void clear_f_5() ;
  ::uint32_t f_5() const;
  void set_f_5(::uint32_t value);

  private:
  ::uint32_t _internal_f_5() const;
  void _internal_set_f_5(::uint32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E28 f_6 = 9;
  bool has_f_6() const;
  void clear_f_6() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28 f_6() const;
  void set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28 _internal_f_6() const;
  void _internal_set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28 value);

  public:
  // optional int32 f_10 = 19;
  bool has_f_10() const;
  void clear_f_10() ;
  ::int32_t f_10() const;
  void set_f_10(::int32_t value);

  private:
  ::int32_t _internal_f_10() const;
  void _internal_set_f_10(::int32_t value);

  public:
  // optional int64 f_9 = 18;
  bool has_f_9() const;
  void clear_f_9() ;
  ::int64_t f_9() const;
  void set_f_9(::int64_t value);

  private:
  ::int64_t _internal_f_9() const;
  void _internal_set_f_9(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E29 f_13 = 26;
  bool has_f_13() const;
  void clear_f_13() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29 f_13() const;
  void set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29 _internal_f_13() const;
  void _internal_set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29 value);

  public:
  // optional float f_14 = 28;
  bool has_f_14() const;
  void clear_f_14() ;
  float f_14() const;
  void set_f_14(float value);

  private:
  float _internal_f_14() const;
  void _internal_set_f_14(float value);

  public:
  // optional int64 f_15 = 30;
  bool has_f_15() const;
  void clear_f_15() ;
  ::int64_t f_15() const;
  void set_f_15(::int64_t value);

  private:
  ::int64_t _internal_f_15() const;
  void _internal_set_f_15(::int64_t value);

  public:
  // optional fixed32 f_18 = 33;
  bool has_f_18() const;
  void clear_f_18() ;
  ::uint32_t f_18() const;
  void set_f_18(::uint32_t value);

  private:
  ::uint32_t _internal_f_18() const;
  void _internal_set_f_18(::uint32_t value);

  public:
  // optional int32 f_21 = 36;
  bool has_f_21() const;
  void clear_f_21() ;
  ::int32_t f_21() const;
  void set_f_21(::int32_t value);

  private:
  ::int32_t _internal_f_21() const;
  void _internal_set_f_21(::int32_t value);

  public:
  // optional int64 f_22 = 37;
  bool has_f_22() const;
  void clear_f_22() ;
  ::int64_t f_22() const;
  void set_f_22(::int64_t value);

  private:
  ::int64_t _internal_f_22() const;
  void _internal_set_f_22(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E30 f_23 = 40;
  bool has_f_23() const;
  void clear_f_23() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30 f_23() const;
  void set_f_23(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30 _internal_f_23() const;
  void _internal_set_f_23(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30 value);

  public:
  // optional bool f_17 = 32;
  bool has_f_17() const;
  void clear_f_17() ;
  bool f_17() const;
  void set_f_17(bool value);

  private:
  bool _internal_f_17() const;
  void _internal_set_f_17(bool value);

  public:
  // optional bool f_19 = 34;
  bool has_f_19() const;
  void clear_f_19() ;
  bool f_19() const;
  void set_f_19(bool value);

  private:
  bool _internal_f_19() const;
  void _internal_set_f_19(bool value);

  public:
  // optional bool f_35 = 56;
  bool has_f_35() const;
  void clear_f_35() ;
  bool f_35() const;
  void set_f_35(bool value);

  private:
  bool _internal_f_35() const;
  void _internal_set_f_35(bool value);

  public:
  // optional int64 f_26 = 45;
  bool has_f_26() const;
  void clear_f_26() ;
  ::int64_t f_26() const;
  void set_f_26(::int64_t value);

  private:
  ::int64_t _internal_f_26() const;
  void _internal_set_f_26(::int64_t value);

  public:
  // optional fixed32 f_27 = 46;
  bool has_f_27() const;
  void clear_f_27() ;
  ::uint32_t f_27() const;
  void set_f_27(::uint32_t value);

  private:
  ::uint32_t _internal_f_27() const;
  void _internal_set_f_27(::uint32_t value);

  public:
  // optional int32 f_33 = 53;
  bool has_f_33() const;
  void clear_f_33() ;
  ::int32_t f_33() const;
  void set_f_33(::int32_t value);

  private:
  ::int32_t _internal_f_33() const;
  void _internal_set_f_33(::int32_t value);

  public:
  // optional int64 f_31 = 51;
  bool has_f_31() const;
  void clear_f_31() ;
  ::int64_t f_31() const;
  void set_f_31(::int64_t value);

  private:
  ::int64_t _internal_f_31() const;
  void _internal_set_f_31(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E31 f_36 = 57;
  bool has_f_36() const;
  void clear_f_36() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31 f_36() const;
  void set_f_36(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31 _internal_f_36() const;
  void _internal_set_f_36(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31 value);

  public:
  // optional int32 f_37 = 58;
  bool has_f_37() const;
  void clear_f_37() ;
  ::int32_t f_37() const;
  void set_f_37(::int32_t value);

  private:
  ::int32_t _internal_f_37() const;
  void _internal_set_f_37(::int32_t value);

  public:
  // optional int64 f_38 = 59;
  bool has_f_38() const;
  void clear_f_38() ;
  ::int64_t f_38() const;
  void set_f_38(::int64_t value);

  private:
  ::int64_t _internal_f_38() const;
  void _internal_set_f_38(::int64_t value);

  public:
  // optional uint64 f_40 = 62;
  bool has_f_40() const;
  void clear_f_40() ;
  ::uint64_t f_40() const;
  void set_f_40(::uint64_t value);

  private:
  ::uint64_t _internal_f_40() const;
  void _internal_set_f_40(::uint64_t value);

  public:
  // optional int32 f_41 = 66;
  bool has_f_41() const;
  void clear_f_41() ;
  ::int32_t f_41() const;
  void set_f_41(::int32_t value);

  private:
  ::int32_t _internal_f_41() const;
  void _internal_set_f_41(::int32_t value);

  public:
  // optional int32 f_43 = 69;
  bool has_f_43() const;
  void clear_f_43() ;
  ::int32_t f_43() const;
  void set_f_43(::int32_t value);

  private:
  ::int32_t _internal_f_43() const;
  void _internal_set_f_43(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M37)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 47, 9,
      139, 11>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M37_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<2> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> f_7_;
    mutable ::google::protobuf::internal::CachedSize _f_7_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> f_20_;
    mutable ::google::protobuf::internal::CachedSize _f_20_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> f_24_;
    mutable ::google::protobuf::internal::CachedSize _f_24_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> f_34_;
    mutable ::google::protobuf::internal::CachedSize _f_34_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41 > f_71_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    ::google::protobuf::internal::ArenaStringPtr f_8_;
    ::google::protobuf::internal::ArenaStringPtr f_11_;
    ::google::protobuf::internal::ArenaStringPtr f_12_;
    ::google::protobuf::internal::ArenaStringPtr f_16_;
    ::google::protobuf::internal::ArenaStringPtr f_25_;
    ::google::protobuf::internal::ArenaStringPtr f_28_;
    ::google::protobuf::internal::ArenaStringPtr f_29_;
    ::google::protobuf::internal::ArenaStringPtr f_30_;
    ::google::protobuf::internal::ArenaStringPtr f_32_;
    ::google::protobuf::internal::ArenaStringPtr f_39_;
    ::google::protobuf::internal::ArenaStringPtr f_42_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* f_69_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* f_70_;
    int f_1_;
    int f_2_;
    ::int64_t f_3_;
    ::int32_t f_4_;
    ::uint32_t f_5_;
    int f_6_;
    ::int32_t f_10_;
    ::int64_t f_9_;
    int f_13_;
    float f_14_;
    ::int64_t f_15_;
    ::uint32_t f_18_;
    ::int32_t f_21_;
    ::int64_t f_22_;
    int f_23_;
    bool f_17_;
    bool f_19_;
    bool f_35_;
    ::int64_t f_26_;
    ::uint32_t f_27_;
    ::int32_t f_33_;
    ::int64_t f_31_;
    int f_36_;
    ::int32_t f_37_;
    ::int64_t f_38_;
    ::uint64_t f_40_;
    ::int32_t f_41_;
    ::int32_t f_43_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M71 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_schema(schema);
      }
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_ptrs(ptrs);
      }
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      sizes.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_sizes(sizes);
      }
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      size_t num_f_2_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_2_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 3,
    kF0FieldNumber = 2,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71 f_2 = 3;
  int f_2_size() const;
  private:
  int _internal_f_2_size() const;

  public:
  void clear_f_2() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71* mutable_f_2(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71>* mutable_f_2();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71>& _internal_f_2() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71>* _internal_mutable_f_2();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& f_2(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71* add_f_2();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71>& f_2() const;
  // optional uint64 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::uint64_t f_0() const;
  void set_f_0(::uint64_t value);

  private:
  ::uint64_t _internal_f_0() const;
  void _internal_set_f_0(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71 > f_2_;
    ::uint64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M70 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      mutable_f_2()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_2()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      mutable_f_2()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_2()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      idx = mutable_f_2()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      idx = mutable_f_2()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 4,
    kF0FieldNumber = 2,
  };
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70 f_2 = 4;
  bool has_f_2() const;
  void clear_f_2() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& f_2() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* release_f_2();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* mutable_f_2();
  void set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* value);
  void unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* unsafe_arena_release_f_2();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& _internal_f_2() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* _internal_mutable_f_2();

  public:
  // optional int64 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* f_2_;
    ::int64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M69 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_schema(schema);
      }
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_ptrs(ptrs);
      }
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      sizes.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_sizes(sizes);
      }
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      size_t num_f_2_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_2_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 3,
    kF0FieldNumber = 2,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69 f_2 = 3;
  int f_2_size() const;
  private:
  int _internal_f_2_size() const;

  public:
  void clear_f_2() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69* mutable_f_2(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69>* mutable_f_2();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69>& _internal_f_2() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69>* _internal_mutable_f_2();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& f_2(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69* add_f_2();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69>& f_2() const;
  // optional int32 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int32_t f_0() const;
  void set_f_0(::int32_t value);

  private:
  ::int32_t _internal_f_0() const;
  void _internal_set_f_0(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69 > f_2_;
    ::int32_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M67 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      mutable_f_2()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_2()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      mutable_f_2()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      mutable_f_2()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      idx = mutable_f_2()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      idx = mutable_f_2()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 4,
    kF0FieldNumber = 2,
  };
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67 f_2 = 4;
  bool has_f_2() const;
  void clear_f_2() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& f_2() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* release_f_2();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* mutable_f_2();
  void set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* value);
  void unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* unsafe_arena_release_f_2();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& _internal_f_2() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* _internal_mutable_f_2();

  public:
  // optional float f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  float f_0() const;
  void set_f_0(float value);

  private:
  float _internal_f_0() const;
  void _internal_set_f_0(float value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* f_2_;
    float f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M64 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64;
  using M65 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65;
  using M66 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66;
  using E49 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49;
  static constexpr E49 E49_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_UNSPECIFIED;
  static constexpr E49 E49_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_CONST_1;
  static constexpr E49 E49_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_CONST_2;
  static constexpr E49 E49_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_CONST_3;
  static constexpr E49 E49_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_CONST_4;
  static constexpr E49 E49_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_CONST_5;
  static inline bool E49_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_IsValid(value);
  }
  static constexpr E49 E49_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_MIN;
  static constexpr E49 E49_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_MAX;
  static constexpr int E49_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_E49_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E49_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_descriptor();
  }
  template <typename T>
  static inline const std::string& E49_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_Name(value);
  }
  static inline bool E49_Parse(absl::string_view name, E49* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_4())));
      mutable_f_7()->generate_schema(schema);
      mutable_f_8()->generate_schema(schema);
      mutable_f_9()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_4()));
      mutable_f_7()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_8()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_9()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs.push_back(start_addr);
      mutable_f_7()->generate_scatter_ptrs(ptrs);
      mutable_f_8()->generate_scatter_ptrs(ptrs);
      mutable_f_9()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      sizes.push_back(end_addr - start_addr + sizeof(f_4()));
      mutable_f_7()->generate_scatter_sizes(sizes);
      mutable_f_8()->generate_scatter_sizes(sizes);
      mutable_f_9()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      idx = mutable_f_7()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_8()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_9()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      idx = mutable_f_7()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_8()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_9()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF7FieldNumber = 8,
    kF8FieldNumber = 9,
    kF9FieldNumber = 10,
    kF0FieldNumber = 1,
    kF1FieldNumber = 2,
    kF2FieldNumber = 3,
    kF3FieldNumber = 4,
    kF4FieldNumber = 7,
  };
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64 f_7 = 8;
  bool has_f_7() const;
  void clear_f_7() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& f_7() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* release_f_7();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* mutable_f_7();
  void set_allocated_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* value);
  void unsafe_arena_set_allocated_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* unsafe_arena_release_f_7();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& _internal_f_7() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* _internal_mutable_f_7();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65 f_8 = 9;
  bool has_f_8() const;
  void clear_f_8() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& f_8() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* release_f_8();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* mutable_f_8();
  void set_allocated_f_8(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* value);
  void unsafe_arena_set_allocated_f_8(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* unsafe_arena_release_f_8();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& _internal_f_8() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* _internal_mutable_f_8();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M66 f_9 = 10;
  bool has_f_9() const;
  void clear_f_9() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& f_9() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* release_f_9();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* mutable_f_9();
  void set_allocated_f_9(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* value);
  void unsafe_arena_set_allocated_f_9(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* unsafe_arena_release_f_9();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& _internal_f_9() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* _internal_mutable_f_9();

  public:
  // optional int64 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // optional int32 f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  ::int32_t f_1() const;
  void set_f_1(::int32_t value);

  private:
  ::int32_t _internal_f_1() const;
  void _internal_set_f_1(::int32_t value);

  public:
  // optional int32 f_2 = 3;
  bool has_f_2() const;
  void clear_f_2() ;
  ::int32_t f_2() const;
  void set_f_2(::int32_t value);

  private:
  ::int32_t _internal_f_2() const;
  void _internal_set_f_2(::int32_t value);

  public:
  // optional int32 f_3 = 4;
  bool has_f_3() const;
  void clear_f_3() ;
  ::int32_t f_3() const;
  void set_f_3(::int32_t value);

  private:
  ::int32_t _internal_f_3() const;
  void _internal_set_f_3(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.E49 f_4 = 7;
  bool has_f_4() const;
  void clear_f_4() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49 f_4() const;
  void set_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49 _internal_f_4() const;
  void _internal_set_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* f_7_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* f_8_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* f_9_;
    ::int64_t f_0_;
    ::int32_t f_1_;
    ::int32_t f_2_;
    ::int32_t f_3_;
    int f_4_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59() : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M63 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63;
  using E48 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48;
  static constexpr E48 E48_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_UNSPECIFIED;
  static constexpr E48 E48_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_CONST_1;
  static constexpr E48 E48_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_CONST_2;
  static constexpr E48 E48_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_CONST_3;
  static constexpr E48 E48_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_CONST_4;
  static constexpr E48 E48_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_CONST_5;
  static inline bool E48_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_IsValid(value);
  }
  static constexpr E48 E48_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_MIN;
  static constexpr E48 E48_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_MAX;
  static constexpr int E48_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_E48_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E48_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_descriptor();
  }
  template <typename T>
  static inline const std::string& E48_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_Name(value);
  }
  static inline bool E48_Parse(absl::string_view name, E48* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_1())));
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_schema(schema);
      }
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_1()));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      ptrs.push_back(start_addr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      sizes.push_back(end_addr - start_addr + sizeof(f_1()));
      sizes.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_0().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_1_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      size_t num_f_2_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_2_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 3,
    kF0FieldNumber = 1,
    kF1FieldNumber = 2,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63 f_2 = 3;
  int f_2_size() const;
  private:
  int _internal_f_2_size() const;

  public:
  void clear_f_2() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63* mutable_f_2(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63>* mutable_f_2();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63>& _internal_f_2() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63>* _internal_mutable_f_2();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& f_2(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63* add_f_2();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63>& f_2() const;
  // optional string f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.E48 f_1 = 2;
  bool has_f_1() const;
  void clear_f_1() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48 f_1() const;
  void set_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48 _internal_f_1() const;
  void _internal_set_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63 > f_2_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    int f_1_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51_M58 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58() : Message9_M5_M11_M23_M34_M36_M40_M51_M58(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51_M58() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51_M58(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58(const Message9_M5_M11_M23_M34_M36_M40_M51_M58& from) : Message9_M5_M11_M23_M34_M36_M40_M51_M58(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58(Message9_M5_M11_M23_M34_M36_M40_M51_M58&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51_M58& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51_M58& operator=(Message9_M5_M11_M23_M34_M36_M40_M51_M58&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51_M58& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51_M58* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51_M58*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58& a, Message9_M5_M11_M23_M34_M36_M40_M51_M58& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51_M58* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51_M58* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51_M58>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51_M58& from) { Message9_M5_M11_M23_M34_M36_M40_M51_M58::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51_M58* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51_M58(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51_M58& from);
  Message9_M5_M11_M23_M34_M36_M40_M51_M58(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51_M58&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51_M58(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M59 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59;
  using E40 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40;
  static constexpr E40 E40_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_UNSPECIFIED;
  static constexpr E40 E40_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_CONST_1;
  static constexpr E40 E40_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_CONST_2;
  static constexpr E40 E40_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_CONST_3;
  static constexpr E40 E40_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_CONST_4;
  static constexpr E40 E40_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_CONST_5;
  static inline bool E40_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_IsValid(value);
  }
  static constexpr E40 E40_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_MIN;
  static constexpr E40 E40_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_MAX;
  static constexpr int E40_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_E40_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E40_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_descriptor();
  }
  template <typename T>
  static inline const std::string& E40_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_Name(value);
  }
  static inline bool E40_Parse(absl::string_view name, E40* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_Parse(name, value);
  }
  using E41 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41;
  static constexpr E41 E41_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_UNSPECIFIED;
  static constexpr E41 E41_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_CONST_1;
  static constexpr E41 E41_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_CONST_2;
  static constexpr E41 E41_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_CONST_3;
  static constexpr E41 E41_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_CONST_4;
  static constexpr E41 E41_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_CONST_5;
  static inline bool E41_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_IsValid(value);
  }
  static constexpr E41 E41_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_MIN;
  static constexpr E41 E41_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_MAX;
  static constexpr int E41_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_E41_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E41_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_descriptor();
  }
  template <typename T>
  static inline const std::string& E41_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_Name(value);
  }
  static inline bool E41_Parse(absl::string_view name, E41* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_Parse(name, value);
  }
  using E42 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42;
  static constexpr E42 E42_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_UNSPECIFIED;
  static constexpr E42 E42_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_CONST_1;
  static constexpr E42 E42_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_CONST_2;
  static constexpr E42 E42_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_CONST_3;
  static constexpr E42 E42_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_CONST_4;
  static constexpr E42 E42_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_CONST_5;
  static inline bool E42_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_IsValid(value);
  }
  static constexpr E42 E42_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_MIN;
  static constexpr E42 E42_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_MAX;
  static constexpr int E42_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_E42_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E42_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_descriptor();
  }
  template <typename T>
  static inline const std::string& E42_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_Name(value);
  }
  static inline bool E42_Parse(absl::string_view name, E42* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_Parse(name, value);
  }
  using E43 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43;
  static constexpr E43 E43_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_UNSPECIFIED;
  static constexpr E43 E43_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_CONST_1;
  static constexpr E43 E43_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_CONST_2;
  static constexpr E43 E43_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_CONST_3;
  static constexpr E43 E43_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_CONST_4;
  static constexpr E43 E43_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_CONST_5;
  static inline bool E43_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_IsValid(value);
  }
  static constexpr E43 E43_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_MIN;
  static constexpr E43 E43_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_MAX;
  static constexpr int E43_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_E43_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E43_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_descriptor();
  }
  template <typename T>
  static inline const std::string& E43_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_Name(value);
  }
  static inline bool E43_Parse(absl::string_view name, E43* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_Parse(name, value);
  }
  using E44 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44;
  static constexpr E44 E44_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_UNSPECIFIED;
  static constexpr E44 E44_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_CONST_1;
  static constexpr E44 E44_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_CONST_2;
  static constexpr E44 E44_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_CONST_3;
  static constexpr E44 E44_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_CONST_4;
  static constexpr E44 E44_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_CONST_5;
  static inline bool E44_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_IsValid(value);
  }
  static constexpr E44 E44_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_MIN;
  static constexpr E44 E44_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_MAX;
  static constexpr int E44_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_E44_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E44_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_descriptor();
  }
  template <typename T>
  static inline const std::string& E44_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_Name(value);
  }
  static inline bool E44_Parse(absl::string_view name, E44* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_Parse(name, value);
  }
  using E45 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45;
  static constexpr E45 E45_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_UNSPECIFIED;
  static constexpr E45 E45_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_CONST_1;
  static constexpr E45 E45_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_CONST_2;
  static constexpr E45 E45_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_CONST_3;
  static constexpr E45 E45_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_CONST_4;
  static constexpr E45 E45_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_CONST_5;
  static inline bool E45_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_IsValid(value);
  }
  static constexpr E45 E45_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_MIN;
  static constexpr E45 E45_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_MAX;
  static constexpr int E45_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_E45_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E45_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_descriptor();
  }
  template <typename T>
  static inline const std::string& E45_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_Name(value);
  }
  static inline bool E45_Parse(absl::string_view name, E45* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_Parse(name, value);
  }
  using E46 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46;
  static constexpr E46 E46_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_UNSPECIFIED;
  static constexpr E46 E46_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_CONST_1;
  static constexpr E46 E46_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_CONST_2;
  static constexpr E46 E46_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_CONST_3;
  static constexpr E46 E46_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_CONST_4;
  static constexpr E46 E46_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_CONST_5;
  static inline bool E46_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_IsValid(value);
  }
  static constexpr E46 E46_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_MIN;
  static constexpr E46 E46_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_MAX;
  static constexpr int E46_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_E46_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E46_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_descriptor();
  }
  template <typename T>
  static inline const std::string& E46_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_Name(value);
  }
  static inline bool E46_Parse(absl::string_view name, E46* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_Parse(name, value);
  }
  using E47 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47;
  static constexpr E47 E47_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_UNSPECIFIED;
  static constexpr E47 E47_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_CONST_1;
  static constexpr E47 E47_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_CONST_2;
  static constexpr E47 E47_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_CONST_3;
  static constexpr E47 E47_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_CONST_4;
  static constexpr E47 E47_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_CONST_5;
  static inline bool E47_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_IsValid(value);
  }
  static constexpr E47 E47_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_MIN;
  static constexpr E47 E47_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_MAX;
  static constexpr int E47_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_E47_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E47_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_descriptor();
  }
  template <typename T>
  static inline const std::string& E47_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_Name(value);
  }
  static inline bool E47_Parse(absl::string_view name, E47* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_41_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_41())));
      for (int i = 0; i < f_68_size(); ++i) {
        mutable_f_68(i)->generate_schema(schema);
      }
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_6().c_str())), f_6().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())), f_8().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())), f_10().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_15().c_str())), f_15().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_19().c_str())), f_19().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_24().c_str())), f_24().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_28().c_str())), f_28().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_33().c_str())), f_33().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_34().c_str())), f_34().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_42().c_str())), f_42().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_41_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_41()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_1().data())));
      sizes_list.push_back(f_1().size() * sizeof(int));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_68().size());
      for (int i = 0; i < f_68_size(); ++i) {
        mutable_f_68(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_6().c_str())));
      sizes_list.push_back(f_6().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      sizes_list.push_back(f_8().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      sizes_list.push_back(f_10().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_15().c_str())));
      sizes_list.push_back(f_15().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_19().c_str())));
      sizes_list.push_back(f_19().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_24().c_str())));
      sizes_list.push_back(f_24().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_28().c_str())));
      sizes_list.push_back(f_28().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_33().c_str())));
      sizes_list.push_back(f_33().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_34().c_str())));
      sizes_list.push_back(f_34().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_42().c_str())));
      sizes_list.push_back(f_42().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_41_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_1().data())));
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_68_size(); ++i) {
        mutable_f_68(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_6().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_15().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_19().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_24().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_28().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_33().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_34().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_42().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_41_);
      sizes.push_back(end_addr - start_addr + sizeof(f_41()));
      sizes.push_back(f_1().size() * sizeof(int));
      sizes.push_back(f_68().size());
      for (int i = 0; i < f_68_size(); ++i) {
        mutable_f_68(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_6().size());
      sizes.push_back(f_8().size());
      sizes.push_back(f_10().size());
      sizes.push_back(f_15().size());
      sizes.push_back(f_19().size());
      sizes.push_back(f_24().size());
      sizes.push_back(f_28().size());
      sizes.push_back(f_33().size());
      sizes.push_back(f_34().size());
      sizes.push_back(f_42().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_41_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      mutable_f_1()->Resize(sizes[idx++] / sizeof(int), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<int*>(f_1().data())));
      size_t num_f_68_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_68_entries; ++i) {
        auto* new_msg = add_f_68();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_68(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_6(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_6().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_8(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_8().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_10(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_10().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_15(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_15().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_19(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_19().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_24(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_24().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_28(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_28().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_33(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_33().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_34(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_34().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_42(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_42().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      mutable_f_1()->Resize(sizes[idx++] / sizeof(int), 0);
      size_t num_f_68_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_68_entries; ++i) {
        auto* new_msg = add_f_68();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_68(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_6(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_8(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_10(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_15(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_19(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_24(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_28(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_33(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_34(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_42(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF1FieldNumber = 4,
    kF68FieldNumber = 69,
    kF6FieldNumber = 15,
    kF8FieldNumber = 17,
    kF10FieldNumber = 21,
    kF15FieldNumber = 29,
    kF19FieldNumber = 33,
    kF24FieldNumber = 42,
    kF28FieldNumber = 46,
    kF33FieldNumber = 52,
    kF34FieldNumber = 55,
    kF42FieldNumber = 68,
    kF0FieldNumber = 1,
    kF2FieldNumber = 5,
    kF3FieldNumber = 9,
    kF4FieldNumber = 11,
    kF7FieldNumber = 16,
    kF5FieldNumber = 14,
    kF9FieldNumber = 18,
    kF12FieldNumber = 23,
    kF11FieldNumber = 22,
    kF13FieldNumber = 25,
    kF14FieldNumber = 27,
    kF17FieldNumber = 31,
    kF16FieldNumber = 30,
    kF18FieldNumber = 32,
    kF20FieldNumber = 35,
    kF21FieldNumber = 39,
    kF22FieldNumber = 40,
    kF23FieldNumber = 41,
    kF26FieldNumber = 44,
    kF25FieldNumber = 43,
    kF27FieldNumber = 45,
    kF30FieldNumber = 48,
    kF29FieldNumber = 47,
    kF31FieldNumber = 49,
    kF32FieldNumber = 50,
    kF36FieldNumber = 58,
    kF35FieldNumber = 57,
    kF37FieldNumber = 60,
    kF38FieldNumber = 61,
    kF39FieldNumber = 62,
    kF40FieldNumber = 63,
    kF41FieldNumber = 65,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E41 f_1 = 4 [packed = true];
  int f_1_size() const;
  private:
  int _internal_f_1_size() const;

  public:
  void clear_f_1() ;
  public:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41 f_1(int index) const;
  void set_f_1(int index, ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41 value);
  void add_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41 value);
  const ::google::protobuf::RepeatedField<int>& f_1() const;
  ::google::protobuf::RepeatedField<int>* mutable_f_1();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_f_1() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_f_1();

  public:
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59 f_68 = 69;
  int f_68_size() const;
  private:
  int _internal_f_68_size() const;

  public:
  void clear_f_68() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59* mutable_f_68(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59>* mutable_f_68();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59>& _internal_f_68() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59>* _internal_mutable_f_68();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& f_68(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59* add_f_68();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59>& f_68() const;
  // optional string f_6 = 15;
  bool has_f_6() const;
  void clear_f_6() ;
  const std::string& f_6() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_6(Arg_&& arg, Args_... args);
  std::string* mutable_f_6();
  PROTOBUF_NODISCARD std::string* release_f_6();
  void set_allocated_f_6(std::string* value);

  private:
  const std::string& _internal_f_6() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_6(
      const std::string& value);
  std::string* _internal_mutable_f_6();

  public:
  // optional string f_8 = 17;
  bool has_f_8() const;
  void clear_f_8() ;
  const std::string& f_8() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_8(Arg_&& arg, Args_... args);
  std::string* mutable_f_8();
  PROTOBUF_NODISCARD std::string* release_f_8();
  void set_allocated_f_8(std::string* value);

  private:
  const std::string& _internal_f_8() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_8(
      const std::string& value);
  std::string* _internal_mutable_f_8();

  public:
  // optional string f_10 = 21;
  bool has_f_10() const;
  void clear_f_10() ;
  const std::string& f_10() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_10(Arg_&& arg, Args_... args);
  std::string* mutable_f_10();
  PROTOBUF_NODISCARD std::string* release_f_10();
  void set_allocated_f_10(std::string* value);

  private:
  const std::string& _internal_f_10() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_10(
      const std::string& value);
  std::string* _internal_mutable_f_10();

  public:
  // optional bytes f_15 = 29;
  bool has_f_15() const;
  void clear_f_15() ;
  const std::string& f_15() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_15(Arg_&& arg, Args_... args);
  std::string* mutable_f_15();
  PROTOBUF_NODISCARD std::string* release_f_15();
  void set_allocated_f_15(std::string* value);

  private:
  const std::string& _internal_f_15() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_15(
      const std::string& value);
  std::string* _internal_mutable_f_15();

  public:
  // optional string f_19 = 33;
  bool has_f_19() const;
  void clear_f_19() ;
  const std::string& f_19() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_19(Arg_&& arg, Args_... args);
  std::string* mutable_f_19();
  PROTOBUF_NODISCARD std::string* release_f_19();
  void set_allocated_f_19(std::string* value);

  private:
  const std::string& _internal_f_19() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_19(
      const std::string& value);
  std::string* _internal_mutable_f_19();

  public:
  // optional string f_24 = 42;
  bool has_f_24() const;
  void clear_f_24() ;
  const std::string& f_24() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_24(Arg_&& arg, Args_... args);
  std::string* mutable_f_24();
  PROTOBUF_NODISCARD std::string* release_f_24();
  void set_allocated_f_24(std::string* value);

  private:
  const std::string& _internal_f_24() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_24(
      const std::string& value);
  std::string* _internal_mutable_f_24();

  public:
  // optional string f_28 = 46;
  bool has_f_28() const;
  void clear_f_28() ;
  const std::string& f_28() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_28(Arg_&& arg, Args_... args);
  std::string* mutable_f_28();
  PROTOBUF_NODISCARD std::string* release_f_28();
  void set_allocated_f_28(std::string* value);

  private:
  const std::string& _internal_f_28() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_28(
      const std::string& value);
  std::string* _internal_mutable_f_28();

  public:
  // optional string f_33 = 52;
  bool has_f_33() const;
  void clear_f_33() ;
  const std::string& f_33() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_33(Arg_&& arg, Args_... args);
  std::string* mutable_f_33();
  PROTOBUF_NODISCARD std::string* release_f_33();
  void set_allocated_f_33(std::string* value);

  private:
  const std::string& _internal_f_33() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_33(
      const std::string& value);
  std::string* _internal_mutable_f_33();

  public:
  // optional string f_34 = 55;
  bool has_f_34() const;
  void clear_f_34() ;
  const std::string& f_34() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_34(Arg_&& arg, Args_... args);
  std::string* mutable_f_34();
  PROTOBUF_NODISCARD std::string* release_f_34();
  void set_allocated_f_34(std::string* value);

  private:
  const std::string& _internal_f_34() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_34(
      const std::string& value);
  std::string* _internal_mutable_f_34();

  public:
  // optional string f_42 = 68;
  bool has_f_42() const;
  void clear_f_42() ;
  const std::string& f_42() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_42(Arg_&& arg, Args_... args);
  std::string* mutable_f_42();
  PROTOBUF_NODISCARD std::string* release_f_42();
  void set_allocated_f_42(std::string* value);

  private:
  const std::string& _internal_f_42() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_42(
      const std::string& value);
  std::string* _internal_mutable_f_42();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E40 f_0 = 1;
  bool has_f_0() const;
  void clear_f_0() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40 f_0() const;
  void set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40 _internal_f_0() const;
  void _internal_set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40 value);

  public:
  // optional int32 f_2 = 5;
  bool has_f_2() const;
  void clear_f_2() ;
  ::int32_t f_2() const;
  void set_f_2(::int32_t value);

  private:
  ::int32_t _internal_f_2() const;
  void _internal_set_f_2(::int32_t value);

  public:
  // optional int64 f_3 = 9;
  bool has_f_3() const;
  void clear_f_3() ;
  ::int64_t f_3() const;
  void set_f_3(::int64_t value);

  private:
  ::int64_t _internal_f_3() const;
  void _internal_set_f_3(::int64_t value);

  public:
  // optional uint64 f_4 = 11;
  bool has_f_4() const;
  void clear_f_4() ;
  ::uint64_t f_4() const;
  void set_f_4(::uint64_t value);

  private:
  ::uint64_t _internal_f_4() const;
  void _internal_set_f_4(::uint64_t value);

  public:
  // optional int64 f_7 = 16;
  bool has_f_7() const;
  void clear_f_7() ;
  ::int64_t f_7() const;
  void set_f_7(::int64_t value);

  private:
  ::int64_t _internal_f_7() const;
  void _internal_set_f_7(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E42 f_5 = 14;
  bool has_f_5() const;
  void clear_f_5() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42 f_5() const;
  void set_f_5(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42 _internal_f_5() const;
  void _internal_set_f_5(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42 value);

  public:
  // optional int32 f_9 = 18;
  bool has_f_9() const;
  void clear_f_9() ;
  ::int32_t f_9() const;
  void set_f_9(::int32_t value);

  private:
  ::int32_t _internal_f_9() const;
  void _internal_set_f_9(::int32_t value);

  public:
  // optional double f_12 = 23;
  bool has_f_12() const;
  void clear_f_12() ;
  double f_12() const;
  void set_f_12(double value);

  private:
  double _internal_f_12() const;
  void _internal_set_f_12(double value);

  public:
  // optional int32 f_11 = 22;
  bool has_f_11() const;
  void clear_f_11() ;
  ::int32_t f_11() const;
  void set_f_11(::int32_t value);

  private:
  ::int32_t _internal_f_11() const;
  void _internal_set_f_11(::int32_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E43 f_13 = 25;
  bool has_f_13() const;
  void clear_f_13() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43 f_13() const;
  void set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43 _internal_f_13() const;
  void _internal_set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43 value);

  public:
  // optional int64 f_14 = 27;
  bool has_f_14() const;
  void clear_f_14() ;
  ::int64_t f_14() const;
  void set_f_14(::int64_t value);

  private:
  ::int64_t _internal_f_14() const;
  void _internal_set_f_14(::int64_t value);

  public:
  // optional double f_17 = 31;
  bool has_f_17() const;
  void clear_f_17() ;
  double f_17() const;
  void set_f_17(double value);

  private:
  double _internal_f_17() const;
  void _internal_set_f_17(double value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E44 f_16 = 30;
  bool has_f_16() const;
  void clear_f_16() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44 f_16() const;
  void set_f_16(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44 _internal_f_16() const;
  void _internal_set_f_16(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44 value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E45 f_18 = 32;
  bool has_f_18() const;
  void clear_f_18() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45 f_18() const;
  void set_f_18(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45 _internal_f_18() const;
  void _internal_set_f_18(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45 value);

  public:
  // optional float f_20 = 35;
  bool has_f_20() const;
  void clear_f_20() ;
  float f_20() const;
  void set_f_20(float value);

  private:
  float _internal_f_20() const;
  void _internal_set_f_20(float value);

  public:
  // optional uint32 f_21 = 39;
  bool has_f_21() const;
  void clear_f_21() ;
  ::uint32_t f_21() const;
  void set_f_21(::uint32_t value);

  private:
  ::uint32_t _internal_f_21() const;
  void _internal_set_f_21(::uint32_t value);

  public:
  // optional bool f_22 = 40;
  bool has_f_22() const;
  void clear_f_22() ;
  bool f_22() const;
  void set_f_22(bool value);

  private:
  bool _internal_f_22() const;
  void _internal_set_f_22(bool value);

  public:
  // optional bool f_23 = 41;
  bool has_f_23() const;
  void clear_f_23() ;
  bool f_23() const;
  void set_f_23(bool value);

  private:
  bool _internal_f_23() const;
  void _internal_set_f_23(bool value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E46 f_26 = 44;
  bool has_f_26() const;
  void clear_f_26() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46 f_26() const;
  void set_f_26(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46 _internal_f_26() const;
  void _internal_set_f_26(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46 value);

  public:
  // optional int64 f_25 = 43;
  bool has_f_25() const;
  void clear_f_25() ;
  ::int64_t f_25() const;
  void set_f_25(::int64_t value);

  private:
  ::int64_t _internal_f_25() const;
  void _internal_set_f_25(::int64_t value);

  public:
  // optional int64 f_27 = 45;
  bool has_f_27() const;
  void clear_f_27() ;
  ::int64_t f_27() const;
  void set_f_27(::int64_t value);

  private:
  ::int64_t _internal_f_27() const;
  void _internal_set_f_27(::int64_t value);

  public:
  // optional uint64 f_30 = 48;
  bool has_f_30() const;
  void clear_f_30() ;
  ::uint64_t f_30() const;
  void set_f_30(::uint64_t value);

  private:
  ::uint64_t _internal_f_30() const;
  void _internal_set_f_30(::uint64_t value);

  public:
  // optional int32 f_29 = 47;
  bool has_f_29() const;
  void clear_f_29() ;
  ::int32_t f_29() const;
  void set_f_29(::int32_t value);

  private:
  ::int32_t _internal_f_29() const;
  void _internal_set_f_29(::int32_t value);

  public:
  // optional int32 f_31 = 49;
  bool has_f_31() const;
  void clear_f_31() ;
  ::int32_t f_31() const;
  void set_f_31(::int32_t value);

  private:
  ::int32_t _internal_f_31() const;
  void _internal_set_f_31(::int32_t value);

  public:
  // optional int32 f_32 = 50;
  bool has_f_32() const;
  void clear_f_32() ;
  ::int32_t f_32() const;
  void set_f_32(::int32_t value);

  private:
  ::int32_t _internal_f_32() const;
  void _internal_set_f_32(::int32_t value);

  public:
  // optional float f_36 = 58;
  bool has_f_36() const;
  void clear_f_36() ;
  float f_36() const;
  void set_f_36(float value);

  private:
  float _internal_f_36() const;
  void _internal_set_f_36(float value);

  public:
  // optional int64 f_35 = 57;
  bool has_f_35() const;
  void clear_f_35() ;
  ::int64_t f_35() const;
  void set_f_35(::int64_t value);

  private:
  ::int64_t _internal_f_35() const;
  void _internal_set_f_35(::int64_t value);

  public:
  // optional fixed64 f_37 = 60;
  bool has_f_37() const;
  void clear_f_37() ;
  ::uint64_t f_37() const;
  void set_f_37(::uint64_t value);

  private:
  ::uint64_t _internal_f_37() const;
  void _internal_set_f_37(::uint64_t value);

  public:
  // optional uint64 f_38 = 61;
  bool has_f_38() const;
  void clear_f_38() ;
  ::uint64_t f_38() const;
  void set_f_38(::uint64_t value);

  private:
  ::uint64_t _internal_f_38() const;
  void _internal_set_f_38(::uint64_t value);

  public:
  // optional uint64 f_39 = 62;
  bool has_f_39() const;
  void clear_f_39() ;
  ::uint64_t f_39() const;
  void set_f_39(::uint64_t value);

  private:
  ::uint64_t _internal_f_39() const;
  void _internal_set_f_39(::uint64_t value);

  public:
  // optional float f_40 = 63;
  bool has_f_40() const;
  void clear_f_40() ;
  float f_40() const;
  void set_f_40(float value);

  private:
  float _internal_f_40() const;
  void _internal_set_f_40(float value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E47 f_41 = 65;
  bool has_f_41() const;
  void clear_f_41() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47 f_41() const;
  void set_f_41(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47 _internal_f_41() const;
  void _internal_set_f_41(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 44, 9,
      139, 11>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_M58_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<2> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> f_1_;
    mutable ::google::protobuf::internal::CachedSize _f_1_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59 > f_68_;
    ::google::protobuf::internal::ArenaStringPtr f_6_;
    ::google::protobuf::internal::ArenaStringPtr f_8_;
    ::google::protobuf::internal::ArenaStringPtr f_10_;
    ::google::protobuf::internal::ArenaStringPtr f_15_;
    ::google::protobuf::internal::ArenaStringPtr f_19_;
    ::google::protobuf::internal::ArenaStringPtr f_24_;
    ::google::protobuf::internal::ArenaStringPtr f_28_;
    ::google::protobuf::internal::ArenaStringPtr f_33_;
    ::google::protobuf::internal::ArenaStringPtr f_34_;
    ::google::protobuf::internal::ArenaStringPtr f_42_;
    int f_0_;
    ::int32_t f_2_;
    ::int64_t f_3_;
    ::uint64_t f_4_;
    ::int64_t f_7_;
    int f_5_;
    ::int32_t f_9_;
    double f_12_;
    ::int32_t f_11_;
    int f_13_;
    ::int64_t f_14_;
    double f_17_;
    int f_16_;
    int f_18_;
    float f_20_;
    ::uint32_t f_21_;
    bool f_22_;
    bool f_23_;
    int f_26_;
    ::int64_t f_25_;
    ::int64_t f_27_;
    ::uint64_t f_30_;
    ::int32_t f_29_;
    ::int32_t f_31_;
    ::int32_t f_32_;
    float f_36_;
    ::int64_t f_35_;
    ::uint64_t f_37_;
    ::uint64_t f_38_;
    ::uint64_t f_39_;
    float f_40_;
    int f_41_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40_M51 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40_M51() : Message9_M5_M11_M23_M34_M36_M40_M51(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40_M51() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40_M51(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40_M51(const Message9_M5_M11_M23_M34_M36_M40_M51& from) : Message9_M5_M11_M23_M34_M36_M40_M51(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51(Message9_M5_M11_M23_M34_M36_M40_M51&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40_M51& operator=(const Message9_M5_M11_M23_M34_M36_M40_M51& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40_M51& operator=(Message9_M5_M11_M23_M34_M36_M40_M51&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40_M51& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40_M51* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40_M51*>(
        &_Message9_M5_M11_M23_M34_M36_M40_M51_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40_M51& a, Message9_M5_M11_M23_M34_M36_M40_M51& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40_M51* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40_M51* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40_M51* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40_M51>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40_M51& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40_M51& from) { Message9_M5_M11_M23_M34_M36_M40_M51::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40_M51* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40_M51(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40_M51(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40_M51& from);
  Message9_M5_M11_M23_M34_M36_M40_M51(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40_M51&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40_M51(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M58 = Message9_M5_M11_M23_M34_M36_M40_M51_M58;
  using E38 = Message9_M5_M11_M23_M34_M36_M40_M51_E38;
  static constexpr E38 E38_UNSPECIFIED = Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_UNSPECIFIED;
  static constexpr E38 E38_CONST_1 = Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_CONST_1;
  static constexpr E38 E38_CONST_2 = Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_CONST_2;
  static constexpr E38 E38_CONST_3 = Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_CONST_3;
  static constexpr E38 E38_CONST_4 = Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_CONST_4;
  static constexpr E38 E38_CONST_5 = Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_CONST_5;
  static inline bool E38_IsValid(int value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_E38_IsValid(value);
  }
  static constexpr E38 E38_MIN = Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_MIN;
  static constexpr E38 E38_MAX = Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_MAX;
  static constexpr int E38_ARRAYSIZE = Message9_M5_M11_M23_M34_M36_M40_M51_E38_E38_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E38_descriptor() {
    return Message9_M5_M11_M23_M34_M36_M40_M51_E38_descriptor();
  }
  template <typename T>
  static inline const std::string& E38_Name(T value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_E38_Name(value);
  }
  static inline bool E38_Parse(absl::string_view name, E38* value) {
    return Message9_M5_M11_M23_M34_M36_M40_M51_E38_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_6_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_6())));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())), f_2().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_3().c_str())), f_3().size()));
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())), f_5().size()));
      mutable_f_12()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_6_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_6()));
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      sizes_list.push_back(f_2().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_3().c_str())));
      sizes_list.push_back(f_3().size());
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      sizes_list.push_back(f_5().size());
      mutable_f_12()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_6_);
      ptrs.push_back(start_addr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_3().c_str())));
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      mutable_f_12()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_6_);
      sizes.push_back(end_addr - start_addr + sizeof(f_6()));
      sizes.push_back(f_2().size());
      sizes.push_back(f_3().size());
      sizes.push_back(f_5().size());
      mutable_f_12()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_6_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_2(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_2().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_3(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_3().c_str())));
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_5(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_5().c_str())));
      }
      idx = mutable_f_12()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_2(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_3(std::move(tmp_str));
        }
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_5(std::move(tmp_str));
        }
      }
      idx = mutable_f_12()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 6,
    kF3FieldNumber = 7,
    kF5FieldNumber = 9,
    kF12FieldNumber = 13,
    kF0FieldNumber = 2,
    kF1FieldNumber = 4,
    kF4FieldNumber = 8,
    kF6FieldNumber = 12,
  };
  // optional string f_2 = 6;
  bool has_f_2() const;
  void clear_f_2() ;
  const std::string& f_2() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_2(Arg_&& arg, Args_... args);
  std::string* mutable_f_2();
  PROTOBUF_NODISCARD std::string* release_f_2();
  void set_allocated_f_2(std::string* value);

  private:
  const std::string& _internal_f_2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_2(
      const std::string& value);
  std::string* _internal_mutable_f_2();

  public:
  // optional string f_3 = 7;
  bool has_f_3() const;
  void clear_f_3() ;
  const std::string& f_3() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_3(Arg_&& arg, Args_... args);
  std::string* mutable_f_3();
  PROTOBUF_NODISCARD std::string* release_f_3();
  void set_allocated_f_3(std::string* value);

  private:
  const std::string& _internal_f_3() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_3(
      const std::string& value);
  std::string* _internal_mutable_f_3();

  public:
  // optional string f_5 = 9;
  bool has_f_5() const;
  void clear_f_5() ;
  const std::string& f_5() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_5(Arg_&& arg, Args_... args);
  std::string* mutable_f_5();
  PROTOBUF_NODISCARD std::string* release_f_5();
  void set_allocated_f_5(std::string* value);

  private:
  const std::string& _internal_f_5() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_5(
      const std::string& value);
  std::string* _internal_mutable_f_5();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58 f_12 = 13;
  bool has_f_12() const;
  void clear_f_12() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58& f_12() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* release_f_12();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* mutable_f_12();
  void set_allocated_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* value);
  void unsafe_arena_set_allocated_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* unsafe_arena_release_f_12();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58& _internal_f_12() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* _internal_mutable_f_12();

  public:
  // optional float f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  float f_0() const;
  void set_f_0(float value);

  private:
  float _internal_f_0() const;
  void _internal_set_f_0(float value);

  public:
  // optional int32 f_1 = 4;
  bool has_f_1() const;
  void clear_f_1() ;
  ::int32_t f_1() const;
  void set_f_1(::int32_t value);

  private:
  ::int32_t _internal_f_1() const;
  void _internal_set_f_1(::int32_t value);

  public:
  // optional int64 f_4 = 8;
  bool has_f_4() const;
  void clear_f_4() ;
  ::int64_t f_4() const;
  void set_f_4(::int64_t value);

  private:
  ::int64_t _internal_f_4() const;
  void _internal_set_f_4(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.E38 f_6 = 12;
  bool has_f_6() const;
  void clear_f_6() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38 f_6() const;
  void set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38 value);

  private:
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38 _internal_f_6() const;
  void _internal_set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38 value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 2,
      78, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_M51_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_2_;
    ::google::protobuf::internal::ArenaStringPtr f_3_;
    ::google::protobuf::internal::ArenaStringPtr f_5_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* f_12_;
    float f_0_;
    ::int32_t f_1_;
    ::int64_t f_4_;
    int f_6_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36_M40 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36_M40() : Message9_M5_M11_M23_M34_M36_M40(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36_M40() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36_M40(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36_M40(const Message9_M5_M11_M23_M34_M36_M40& from) : Message9_M5_M11_M23_M34_M36_M40(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36_M40(Message9_M5_M11_M23_M34_M36_M40&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36_M40& operator=(const Message9_M5_M11_M23_M34_M36_M40& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36_M40& operator=(Message9_M5_M11_M23_M34_M36_M40&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36_M40& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36_M40* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36_M40*>(
        &_Message9_M5_M11_M23_M34_M36_M40_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(Message9_M5_M11_M23_M34_M36_M40& a, Message9_M5_M11_M23_M34_M36_M40& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36_M40* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36_M40* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36_M40* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36_M40>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36_M40& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36_M40& from) { Message9_M5_M11_M23_M34_M36_M40::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36_M40* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36_M40(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36_M40(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36_M40& from);
  Message9_M5_M11_M23_M34_M36_M40(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36_M40&& from) noexcept
      : Message9_M5_M11_M23_M34_M36_M40(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M48 = Message9_M5_M11_M23_M34_M36_M40_M48;
  using M49 = Message9_M5_M11_M23_M34_M36_M40_M49;
  using M51 = Message9_M5_M11_M23_M34_M36_M40_M51;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<float*>(f_0().data())), f_0().size() * sizeof(float)));
      mutable_f_1()->generate_schema(schema);
      mutable_f_6()->generate_schema(schema);
      mutable_f_7()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<float*>(f_0().data())));
      sizes_list.push_back(f_0().size() * sizeof(float));
      mutable_f_1()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_6()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_7()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<float*>(f_0().data())));
      mutable_f_1()->generate_scatter_ptrs(ptrs);
      mutable_f_6()->generate_scatter_ptrs(ptrs);
      mutable_f_7()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size() * sizeof(float));
      mutable_f_1()->generate_scatter_sizes(sizes);
      mutable_f_6()->generate_scatter_sizes(sizes);
      mutable_f_7()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      mutable_f_0()->Resize(sizes[idx++] / sizeof(float), 0);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<float*>(f_0().data())));
      idx = mutable_f_1()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_6()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_7()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      mutable_f_0()->Resize(sizes[idx++] / sizeof(float), 0);
      idx = mutable_f_1()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_6()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_7()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 1,
    kF1FieldNumber = 6,
    kF6FieldNumber = 7,
    kF7FieldNumber = 8,
  };
  // repeated float f_0 = 1 [packed = true];
  int f_0_size() const;
  private:
  int _internal_f_0_size() const;

  public:
  void clear_f_0() ;
  float f_0(int index) const;
  void set_f_0(int index, float value);
  void add_f_0(float value);
  const ::google::protobuf::RepeatedField<float>& f_0() const;
  ::google::protobuf::RepeatedField<float>* mutable_f_0();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_f_0() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48 f_1 = 6;
  bool has_f_1() const;
  void clear_f_1() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48& f_1() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* release_f_1();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* mutable_f_1();
  void set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* value);
  void unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* unsafe_arena_release_f_1();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48& _internal_f_1() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* _internal_mutable_f_1();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M49 f_6 = 7;
  bool has_f_6() const;
  void clear_f_6() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49& f_6() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* release_f_6();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* mutable_f_6();
  void set_allocated_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* value);
  void unsafe_arena_set_allocated_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* unsafe_arena_release_f_6();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49& _internal_f_6() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* _internal_mutable_f_6();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51 f_7 = 8;
  bool has_f_7() const;
  void clear_f_7() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51& f_7() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* release_f_7();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* mutable_f_7();
  void set_allocated_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* value);
  void unsafe_arena_set_allocated_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* unsafe_arena_release_f_7();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51& _internal_f_7() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* _internal_mutable_f_7();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_M40_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> f_0_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* f_1_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* f_6_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* f_7_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34_M36 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34.M36) */ {
 public:
  inline Message9_M5_M11_M23_M34_M36() : Message9_M5_M11_M23_M34_M36(nullptr) {}
  ~Message9_M5_M11_M23_M34_M36() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34_M36(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34_M36(const Message9_M5_M11_M23_M34_M36& from) : Message9_M5_M11_M23_M34_M36(nullptr, from) {}
  inline Message9_M5_M11_M23_M34_M36(Message9_M5_M11_M23_M34_M36&& from) noexcept
      : Message9_M5_M11_M23_M34_M36(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34_M36& operator=(const Message9_M5_M11_M23_M34_M36& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34_M36& operator=(Message9_M5_M11_M23_M34_M36&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34_M36& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34_M36* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34_M36*>(
        &_Message9_M5_M11_M23_M34_M36_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(Message9_M5_M11_M23_M34_M36& a, Message9_M5_M11_M23_M34_M36& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34_M36* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34_M36* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34_M36* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34_M36>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34_M36& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34_M36& from) { Message9_M5_M11_M23_M34_M36::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34_M36* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34.M36"; }

 protected:
  explicit Message9_M5_M11_M23_M34_M36(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34_M36(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34_M36& from);
  Message9_M5_M11_M23_M34_M36(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34_M36&& from) noexcept
      : Message9_M5_M11_M23_M34_M36(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M40 = Message9_M5_M11_M23_M34_M36_M40;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
      mutable_f_2()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
      mutable_f_2()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      mutable_f_2()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size());
      mutable_f_2()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      idx = mutable_f_2()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      idx = mutable_f_2()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
    kF2FieldNumber = 3,
  };
  // optional string f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40 f_2 = 3;
  bool has_f_2() const;
  void clear_f_2() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40& f_2() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* release_f_2();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* mutable_f_2();
  void set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* value);
  void unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* unsafe_arena_release_f_2();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40& _internal_f_2() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* _internal_mutable_f_2();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34.M36)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_M36_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* f_2_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23_M34 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23.M34) */ {
 public:
  inline Message9_M5_M11_M23_M34() : Message9_M5_M11_M23_M34(nullptr) {}
  ~Message9_M5_M11_M23_M34() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23_M34(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23_M34(const Message9_M5_M11_M23_M34& from) : Message9_M5_M11_M23_M34(nullptr, from) {}
  inline Message9_M5_M11_M23_M34(Message9_M5_M11_M23_M34&& from) noexcept
      : Message9_M5_M11_M23_M34(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23_M34& operator=(const Message9_M5_M11_M23_M34& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23_M34& operator=(Message9_M5_M11_M23_M34&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23_M34& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23_M34* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23_M34*>(
        &_Message9_M5_M11_M23_M34_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(Message9_M5_M11_M23_M34& a, Message9_M5_M11_M23_M34& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23_M34* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23_M34* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23_M34* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23_M34>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23_M34& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23_M34& from) { Message9_M5_M11_M23_M34::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23_M34* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23.M34"; }

 protected:
  explicit Message9_M5_M11_M23_M34(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23_M34(::google::protobuf::Arena* arena, const Message9_M5_M11_M23_M34& from);
  Message9_M5_M11_M23_M34(::google::protobuf::Arena* arena, Message9_M5_M11_M23_M34&& from) noexcept
      : Message9_M5_M11_M23_M34(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M36 = Message9_M5_M11_M23_M34_M36;
  using M37 = Message9_M5_M11_M23_M34_M37;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_schema(schema);
      }
      mutable_f_2()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_3().size());
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      mutable_f_2()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_scatter_ptrs(ptrs);
      }
      mutable_f_2()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      sizes.push_back(f_3().size());
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_scatter_sizes(sizes);
      }
      mutable_f_2()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      size_t num_f_3_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_3_entries; ++i) {
        auto* new_msg = add_f_3();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_3(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_2()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_3_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_3_entries; ++i) {
        auto* new_msg = add_f_3();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_3(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_2()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF3FieldNumber = 5,
    kF2FieldNumber = 3,
    kF0FieldNumber = 2,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37 f_3 = 5;
  int f_3_size() const;
  private:
  int _internal_f_3_size() const;

  public:
  void clear_f_3() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37* mutable_f_3(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37>* mutable_f_3();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37>& _internal_f_3() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37>* _internal_mutable_f_3();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37& f_3(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37* add_f_3();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37>& f_3() const;
  // optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36 f_2 = 3;
  bool has_f_2() const;
  void clear_f_2() ;
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36& f_2() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* release_f_2();
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* mutable_f_2();
  void set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36* value);
  void unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36* value);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* unsafe_arena_release_f_2();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36& _internal_f_2() const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* _internal_mutable_f_2();

  public:
  // optional int32 f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int32_t f_0() const;
  void set_f_0(::int32_t value);

  private:
  ::int32_t _internal_f_0() const;
  void _internal_set_f_0(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23.M34)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_M34_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34_M37 > f_3_;
    ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* f_2_;
    ::int32_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11_M23 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11.M23) */ {
 public:
  inline Message9_M5_M11_M23() : Message9_M5_M11_M23(nullptr) {}
  ~Message9_M5_M11_M23() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11_M23(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11_M23(const Message9_M5_M11_M23& from) : Message9_M5_M11_M23(nullptr, from) {}
  inline Message9_M5_M11_M23(Message9_M5_M11_M23&& from) noexcept
      : Message9_M5_M11_M23(nullptr, std::move(from)) {}
  inline Message9_M5_M11_M23& operator=(const Message9_M5_M11_M23& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11_M23& operator=(Message9_M5_M11_M23&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11_M23& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11_M23* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11_M23*>(
        &_Message9_M5_M11_M23_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(Message9_M5_M11_M23& a, Message9_M5_M11_M23& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11_M23* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11_M23* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11_M23* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11_M23>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11_M23& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11_M23& from) { Message9_M5_M11_M23::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11_M23* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11.M23"; }

 protected:
  explicit Message9_M5_M11_M23(::google::protobuf::Arena* arena);
  Message9_M5_M11_M23(::google::protobuf::Arena* arena, const Message9_M5_M11_M23& from);
  Message9_M5_M11_M23(::google::protobuf::Arena* arena, Message9_M5_M11_M23&& from) noexcept
      : Message9_M5_M11_M23(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M34 = Message9_M5_M11_M23_M34;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_schema(schema);
      }
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_2().size());
      for (int i = 0; i < f_2_size(); ++i) {
        mutable_f_2(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_0().size());
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      size_t num_f_2_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_2_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_2_entries; ++i) {
        auto* new_msg = add_f_2();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_2(i)->allocate_from_sizes(sizes, idx); 
      }
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF2FieldNumber = 3,
    kF0FieldNumber = 2,
  };
  // repeated .fleetbench.proto.Message9.M5.M11.M23.M34 f_2 = 3;
  int f_2_size() const;
  private:
  int _internal_f_2_size() const;

  public:
  void clear_f_2() ;
  ::fleetbench::proto::Message9_M5_M11_M23_M34* mutable_f_2(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34>* mutable_f_2();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34>& _internal_f_2() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34>* _internal_mutable_f_2();
  public:
  const ::fleetbench::proto::Message9_M5_M11_M23_M34& f_2(int index) const;
  ::fleetbench::proto::Message9_M5_M11_M23_M34* add_f_2();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34>& f_2() const;
  // optional bytes f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11.M23)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_M23_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11_M23_M34 > f_2_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5_M11 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5.M11) */ {
 public:
  inline Message9_M5_M11() : Message9_M5_M11(nullptr) {}
  ~Message9_M5_M11() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5_M11(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5_M11(const Message9_M5_M11& from) : Message9_M5_M11(nullptr, from) {}
  inline Message9_M5_M11(Message9_M5_M11&& from) noexcept
      : Message9_M5_M11(nullptr, std::move(from)) {}
  inline Message9_M5_M11& operator=(const Message9_M5_M11& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5_M11& operator=(Message9_M5_M11&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5_M11& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5_M11* internal_default_instance() {
    return reinterpret_cast<const Message9_M5_M11*>(
        &_Message9_M5_M11_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 61;
  friend void swap(Message9_M5_M11& a, Message9_M5_M11& b) { a.Swap(&b); }
  inline void Swap(Message9_M5_M11* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5_M11* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5_M11* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5_M11>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5_M11& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5_M11& from) { Message9_M5_M11::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5_M11* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5.M11"; }

 protected:
  explicit Message9_M5_M11(::google::protobuf::Arena* arena);
  Message9_M5_M11(::google::protobuf::Arena* arena, const Message9_M5_M11& from);
  Message9_M5_M11(::google::protobuf::Arena* arena, Message9_M5_M11&& from) noexcept
      : Message9_M5_M11(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M23 = Message9_M5_M11_M23;
  using M25 = Message9_M5_M11_M25;
  using M30 = Message9_M5_M11_M30;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      schema.push_back(std::make_tuple(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())), f_0().size()));
      mutable_f_2()->generate_schema(schema);
      mutable_f_3()->generate_schema(schema);
      mutable_f_5()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(0);
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      sizes_list.push_back(f_0().size());
      mutable_f_2()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_3()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_5()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      mutable_f_2()->generate_scatter_ptrs(ptrs);
      mutable_f_3()->generate_scatter_ptrs(ptrs);
      mutable_f_5()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      sizes.push_back(0);
      sizes.push_back(f_0().size());
      mutable_f_2()->generate_scatter_sizes(sizes);
      mutable_f_3()->generate_scatter_sizes(sizes);
      mutable_f_5()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      ptrs.push_back(nullptr);
      // recursive fields pointers + allocation
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
        ptrs.push_back(reinterpret_cast<uint8_t*>(const_cast<char*>(f_0().c_str())));
      }
      idx = mutable_f_2()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_3()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_5()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      {
        std::string tmp_str(sizes[idx], 'x');  // Preallocate needed size
        if (sizes[idx++] != 0) {
          set_f_0(std::move(tmp_str));
        }
      }
      idx = mutable_f_2()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_3()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_5()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF0FieldNumber = 2,
    kF2FieldNumber = 3,
    kF3FieldNumber = 5,
    kF5FieldNumber = 6,
  };
  // optional string f_0 = 2;
  bool has_f_0() const;
  void clear_f_0() ;
  const std::string& f_0() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_f_0(Arg_&& arg, Args_... args);
  std::string* mutable_f_0();
  PROTOBUF_NODISCARD std::string* release_f_0();
  void set_allocated_f_0(std::string* value);

  private:
  const std::string& _internal_f_0() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_f_0(
      const std::string& value);
  std::string* _internal_mutable_f_0();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M23 f_2 = 3;
  bool has_f_2() const;
  void clear_f_2() ;
  const ::fleetbench::proto::Message9_M5_M11_M23& f_2() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M23* release_f_2();
  ::fleetbench::proto::Message9_M5_M11_M23* mutable_f_2();
  void set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23* value);
  void unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23* value);
  ::fleetbench::proto::Message9_M5_M11_M23* unsafe_arena_release_f_2();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M23& _internal_f_2() const;
  ::fleetbench::proto::Message9_M5_M11_M23* _internal_mutable_f_2();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M25 f_3 = 5;
  bool has_f_3() const;
  void clear_f_3() ;
  const ::fleetbench::proto::Message9_M5_M11_M25& f_3() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M25* release_f_3();
  ::fleetbench::proto::Message9_M5_M11_M25* mutable_f_3();
  void set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M25* value);
  void unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M25* value);
  ::fleetbench::proto::Message9_M5_M11_M25* unsafe_arena_release_f_3();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M25& _internal_f_3() const;
  ::fleetbench::proto::Message9_M5_M11_M25* _internal_mutable_f_3();

  public:
  // optional .fleetbench.proto.Message9.M5.M11.M30 f_5 = 6;
  bool has_f_5() const;
  void clear_f_5() ;
  const ::fleetbench::proto::Message9_M5_M11_M30& f_5() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M5_M11_M30* release_f_5();
  ::fleetbench::proto::Message9_M5_M11_M30* mutable_f_5();
  void set_allocated_f_5(::fleetbench::proto::Message9_M5_M11_M30* value);
  void unsafe_arena_set_allocated_f_5(::fleetbench::proto::Message9_M5_M11_M30* value);
  ::fleetbench::proto::Message9_M5_M11_M30* unsafe_arena_release_f_5();

  private:
  const ::fleetbench::proto::Message9_M5_M11_M30& _internal_f_5() const;
  ::fleetbench::proto::Message9_M5_M11_M30* _internal_mutable_f_5();

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5.M11)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 3,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_M11_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr f_0_;
    ::fleetbench::proto::Message9_M5_M11_M23* f_2_;
    ::fleetbench::proto::Message9_M5_M11_M25* f_3_;
    ::fleetbench::proto::Message9_M5_M11_M30* f_5_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9_M5 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9.M5) */ {
 public:
  inline Message9_M5() : Message9_M5(nullptr) {}
  ~Message9_M5() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9_M5(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9_M5(const Message9_M5& from) : Message9_M5(nullptr, from) {}
  inline Message9_M5(Message9_M5&& from) noexcept
      : Message9_M5(nullptr, std::move(from)) {}
  inline Message9_M5& operator=(const Message9_M5& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9_M5& operator=(Message9_M5&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9_M5& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9_M5* internal_default_instance() {
    return reinterpret_cast<const Message9_M5*>(
        &_Message9_M5_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 62;
  friend void swap(Message9_M5& a, Message9_M5& b) { a.Swap(&b); }
  inline void Swap(Message9_M5* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9_M5* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9_M5* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9_M5>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9_M5& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9_M5& from) { Message9_M5::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9_M5* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9.M5"; }

 protected:
  explicit Message9_M5(::google::protobuf::Arena* arena);
  Message9_M5(::google::protobuf::Arena* arena, const Message9_M5& from);
  Message9_M5(::google::protobuf::Arena* arena, Message9_M5&& from) noexcept
      : Message9_M5(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M11 = Message9_M5_M11;

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_0())));
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_schema(schema);
      }
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_0()));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_3().size());
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_scatter_ptrs(ptrs);
      }
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      sizes.push_back(end_addr - start_addr + sizeof(f_0()));
      sizes.push_back(f_3().size());
      for (int i = 0; i < f_3_size(); ++i) {
        mutable_f_3(i)->generate_scatter_sizes(sizes);
      }
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      size_t num_f_3_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_3_entries; ++i) {
        auto* new_msg = add_f_3();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_3(i)->allocate_from_sizes(sizes, idx); 
      }
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_3_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_3_entries; ++i) {
        auto* new_msg = add_f_3();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_3(i)->allocate_from_sizes(sizes, idx); 
      }
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF3FieldNumber = 4,
    kF0FieldNumber = 3,
  };
  // repeated .fleetbench.proto.Message9.M5.M11 f_3 = 4;
  int f_3_size() const;
  private:
  int _internal_f_3_size() const;

  public:
  void clear_f_3() ;
  ::fleetbench::proto::Message9_M5_M11* mutable_f_3(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11>* mutable_f_3();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11>& _internal_f_3() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11>* _internal_mutable_f_3();
  public:
  const ::fleetbench::proto::Message9_M5_M11& f_3(int index) const;
  ::fleetbench::proto::Message9_M5_M11* add_f_3();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11>& f_3() const;
  // optional int64 f_0 = 3;
  bool has_f_0() const;
  void clear_f_0() ;
  ::int64_t f_0() const;
  void set_f_0(::int64_t value);

  private:
  ::int64_t _internal_f_0() const;
  void _internal_set_f_0(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9.M5)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_M5_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5_M11 > f_3_;
    ::int64_t f_0_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};
// -------------------------------------------------------------------

class Message9 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:fleetbench.proto.Message9) */ {
 public:
  inline Message9() : Message9(nullptr) {}
  ~Message9() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message9(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message9(const Message9& from) : Message9(nullptr, from) {}
  inline Message9(Message9&& from) noexcept
      : Message9(nullptr, std::move(from)) {}
  inline Message9& operator=(const Message9& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message9& operator=(Message9&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message9& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message9* internal_default_instance() {
    return reinterpret_cast<const Message9*>(
        &_Message9_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 75;
  friend void swap(Message9& a, Message9& b) { a.Swap(&b); }
  inline void Swap(Message9* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message9* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message9* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message9>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message9& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message9& from) { Message9::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message9* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "fleetbench.proto.Message9"; }

 protected:
  explicit Message9(::google::protobuf::Arena* arena);
  Message9(::google::protobuf::Arena* arena, const Message9& from);
  Message9(::google::protobuf::Arena* arena, Message9&& from) noexcept
      : Message9(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using M1 = Message9_M1;
  using M2 = Message9_M2;
  using M3 = Message9_M3;
  using M4 = Message9_M4;
  using M5 = Message9_M5;
  using M6 = Message9_M6;
  using M7 = Message9_M7;
  using M8 = Message9_M8;
  using M9 = Message9_M9;
  using E1 = Message9_E1;
  static constexpr E1 E1_UNSPECIFIED = Message9_E1_E1_UNSPECIFIED;
  static constexpr E1 E1_CONST_1 = Message9_E1_E1_CONST_1;
  static constexpr E1 E1_CONST_2 = Message9_E1_E1_CONST_2;
  static constexpr E1 E1_CONST_3 = Message9_E1_E1_CONST_3;
  static constexpr E1 E1_CONST_4 = Message9_E1_E1_CONST_4;
  static constexpr E1 E1_CONST_5 = Message9_E1_E1_CONST_5;
  static inline bool E1_IsValid(int value) {
    return Message9_E1_IsValid(value);
  }
  static constexpr E1 E1_MIN = Message9_E1_E1_MIN;
  static constexpr E1 E1_MAX = Message9_E1_E1_MAX;
  static constexpr int E1_ARRAYSIZE = Message9_E1_E1_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E1_descriptor() {
    return Message9_E1_descriptor();
  }
  template <typename T>
  static inline const std::string& E1_Name(T value) {
    return Message9_E1_Name(value);
  }
  static inline bool E1_Parse(absl::string_view name, E1* value) {
    return Message9_E1_Parse(name, value);
  }
  using E2 = Message9_E2;
  static constexpr E2 E2_UNSPECIFIED = Message9_E2_E2_UNSPECIFIED;
  static constexpr E2 E2_CONST_1 = Message9_E2_E2_CONST_1;
  static constexpr E2 E2_CONST_2 = Message9_E2_E2_CONST_2;
  static constexpr E2 E2_CONST_3 = Message9_E2_E2_CONST_3;
  static constexpr E2 E2_CONST_4 = Message9_E2_E2_CONST_4;
  static constexpr E2 E2_CONST_5 = Message9_E2_E2_CONST_5;
  static inline bool E2_IsValid(int value) {
    return Message9_E2_IsValid(value);
  }
  static constexpr E2 E2_MIN = Message9_E2_E2_MIN;
  static constexpr E2 E2_MAX = Message9_E2_E2_MAX;
  static constexpr int E2_ARRAYSIZE = Message9_E2_E2_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* E2_descriptor() {
    return Message9_E2_descriptor();
  }
  template <typename T>
  static inline const std::string& E2_Name(T value) {
    return Message9_E2_Name(value);
  }
  static inline bool E2_Parse(absl::string_view name, E2* value) {
    return Message9_E2_Parse(name, value);
  }

  // schemas for IAA/DSA ---------------------------------------------
  void generate_schema(std::vector<std::tuple<uint8_t*, size_t>> &schema) {
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      schema.push_back(std::make_tuple(start_addr, end_addr - start_addr + sizeof(f_4())));
      for (int i = 0; i < f_13_size(); ++i) {
        mutable_f_13(i)->generate_schema(schema);
      }
      for (int i = 0; i < f_16_size(); ++i) {
        mutable_f_16(i)->generate_schema(schema);
      }
      for (int i = 0; i < f_20_size(); ++i) {
        mutable_f_20(i)->generate_schema(schema);
      }
      for (int i = 0; i < f_21_size(); ++i) {
        mutable_f_21(i)->generate_schema(schema);
      }
      mutable_f_18()->generate_schema(schema);
      mutable_f_22()->generate_schema(schema);
      mutable_f_25()->generate_schema(schema);
      mutable_f_27()->generate_schema(schema);
      mutable_f_28()->generate_schema(schema);
  }
  void generate_seperated_schema(std::vector<uint8_t*> &ptrs_list, std::vector<size_t> &sizes_list) {
      // Include _has_bits_ in the schema
      ptrs_list.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      sizes_list.push_back(sizeof(_impl_._has_bits_));
      // Include the primitives in the schema
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs_list.push_back(start_addr);
      sizes_list.push_back(end_addr - start_addr + sizeof(f_4()));
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_13().size());
      for (int i = 0; i < f_13_size(); ++i) {
        mutable_f_13(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_16().size());
      for (int i = 0; i < f_16_size(); ++i) {
        mutable_f_16(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_20().size());
      for (int i = 0; i < f_20_size(); ++i) {
        mutable_f_20(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      ptrs_list.push_back(nullptr);
      sizes_list.push_back(f_21().size());
      for (int i = 0; i < f_21_size(); ++i) {
        mutable_f_21(i)->generate_seperated_schema(ptrs_list, sizes_list);
      }
      mutable_f_18()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_22()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_25()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_27()->generate_seperated_schema(ptrs_list, sizes_list);
      mutable_f_28()->generate_seperated_schema(ptrs_list, sizes_list);
  }
  void generate_scatter_ptrs(std::vector<uint8_t*> &ptrs) {
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      // Include primitives in the pointers
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs.push_back(start_addr);
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_13_size(); ++i) {
        mutable_f_13(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_16_size(); ++i) {
        mutable_f_16(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_20_size(); ++i) {
        mutable_f_20(i)->generate_scatter_ptrs(ptrs);
      }
      ptrs.push_back(nullptr);
      for (int i = 0; i < f_21_size(); ++i) {
        mutable_f_21(i)->generate_scatter_ptrs(ptrs);
      }
      mutable_f_18()->generate_scatter_ptrs(ptrs);
      mutable_f_22()->generate_scatter_ptrs(ptrs);
      mutable_f_25()->generate_scatter_ptrs(ptrs);
      mutable_f_27()->generate_scatter_ptrs(ptrs);
      mutable_f_28()->generate_scatter_ptrs(ptrs);
  }
  void generate_scatter_sizes(std::vector<size_t> &sizes) {
      // Include _has_bits_ in the sizes
      sizes.push_back(sizeof(_impl_._has_bits_));
      // Include primitives in the sizes
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      sizes.push_back(end_addr - start_addr + sizeof(f_4()));
      sizes.push_back(f_13().size());
      for (int i = 0; i < f_13_size(); ++i) {
        mutable_f_13(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_16().size());
      for (int i = 0; i < f_16_size(); ++i) {
        mutable_f_16(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_20().size());
      for (int i = 0; i < f_20_size(); ++i) {
        mutable_f_20(i)->generate_scatter_sizes(sizes);
      }
      sizes.push_back(f_21().size());
      for (int i = 0; i < f_21_size(); ++i) {
        mutable_f_21(i)->generate_scatter_sizes(sizes);
      }
      mutable_f_18()->generate_scatter_sizes(sizes);
      mutable_f_22()->generate_scatter_sizes(sizes);
      mutable_f_25()->generate_scatter_sizes(sizes);
      mutable_f_27()->generate_scatter_sizes(sizes);
      mutable_f_28()->generate_scatter_sizes(sizes);
  }
  size_t generate_scatter_ptrs_and_allocate_from_sizes(std::vector<uint8_t*> &ptrs, std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      // primitive and has_bit field pointers
      // Include _has_bits_ in the ptrs (always included, since this method is used for deserialization)
      ptrs.push_back(reinterpret_cast<uint8_t*>(&_impl_._has_bits_));
      auto start_addr = reinterpret_cast<uint8_t*>(&_impl_.f_0_);
      //auto end_addr = reinterpret_cast<uint8_t*>(&_impl_.f_4_);
      ptrs.push_back(start_addr);
      // recursive fields pointers + allocation
      size_t num_f_13_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_13_entries; ++i) {
        auto* new_msg = add_f_13();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_13(i)->allocate_from_sizes(sizes, idx); 
      }
      size_t num_f_16_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_16_entries; ++i) {
        auto* new_msg = add_f_16();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_16(i)->allocate_from_sizes(sizes, idx); 
      }
      size_t num_f_20_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_20_entries; ++i) {
        auto* new_msg = add_f_20();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_20(i)->allocate_from_sizes(sizes, idx); 
      }
      size_t num_f_21_entries = sizes[idx++];
      ptrs.push_back(nullptr);
      for (size_t i = 0; i < num_f_21_entries; ++i) {
        auto* new_msg = add_f_21();
        idx = new_msg->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
        //idx = mutable_f_21(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_18()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_22()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_25()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_27()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      idx = mutable_f_28()->generate_scatter_ptrs_and_allocate_from_sizes(ptrs, sizes, idx); 
      return idx;
  }
  size_t allocate_from_sizes(std::vector<size_t> &sizes, size_t idx = 0) {
      // skip has_bits array (no allocation is needed)
      idx++;
      // skip primitive fields (no allocation is needed)
      idx++;
      size_t num_f_13_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_13_entries; ++i) {
        auto* new_msg = add_f_13();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_13(i)->allocate_from_sizes(sizes, idx); 
      }
      size_t num_f_16_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_16_entries; ++i) {
        auto* new_msg = add_f_16();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_16(i)->allocate_from_sizes(sizes, idx); 
      }
      size_t num_f_20_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_20_entries; ++i) {
        auto* new_msg = add_f_20();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_20(i)->allocate_from_sizes(sizes, idx); 
      }
      size_t num_f_21_entries = sizes[idx++];
      for (size_t i = 0; i < num_f_21_entries; ++i) {
        auto* new_msg = add_f_21();
        idx = new_msg->allocate_from_sizes(sizes, idx); 
        //idx = mutable_f_21(i)->allocate_from_sizes(sizes, idx); 
      }
      idx = mutable_f_18()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_22()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_25()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_27()->allocate_from_sizes(sizes, idx); 
      idx = mutable_f_28()->allocate_from_sizes(sizes, idx); 
      return idx;
  }

  // accessors -------------------------------------------------------
  enum : int {
    kF13FieldNumber = 16,
    kF16FieldNumber = 18,
    kF20FieldNumber = 21,
    kF21FieldNumber = 22,
    kF18FieldNumber = 20,
    kF22FieldNumber = 25,
    kF25FieldNumber = 27,
    kF27FieldNumber = 28,
    kF28FieldNumber = 29,
    kF0FieldNumber = 3,
    kF1FieldNumber = 4,
    kF2FieldNumber = 6,
    kF3FieldNumber = 9,
    kF5FieldNumber = 13,
    kF4FieldNumber = 12,
  };
  // repeated .fleetbench.proto.Message9.M1 f_13 = 16;
  int f_13_size() const;
  private:
  int _internal_f_13_size() const;

  public:
  void clear_f_13() ;
  ::fleetbench::proto::Message9_M1* mutable_f_13(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M1>* mutable_f_13();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M1>& _internal_f_13() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M1>* _internal_mutable_f_13();
  public:
  const ::fleetbench::proto::Message9_M1& f_13(int index) const;
  ::fleetbench::proto::Message9_M1* add_f_13();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M1>& f_13() const;
  // repeated .fleetbench.proto.Message9.M2 f_16 = 18;
  int f_16_size() const;
  private:
  int _internal_f_16_size() const;

  public:
  void clear_f_16() ;
  ::fleetbench::proto::Message9_M2* mutable_f_16(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M2>* mutable_f_16();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M2>& _internal_f_16() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M2>* _internal_mutable_f_16();
  public:
  const ::fleetbench::proto::Message9_M2& f_16(int index) const;
  ::fleetbench::proto::Message9_M2* add_f_16();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M2>& f_16() const;
  // repeated .fleetbench.proto.Message9.M4 f_20 = 21;
  int f_20_size() const;
  private:
  int _internal_f_20_size() const;

  public:
  void clear_f_20() ;
  ::fleetbench::proto::Message9_M4* mutable_f_20(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M4>* mutable_f_20();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M4>& _internal_f_20() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M4>* _internal_mutable_f_20();
  public:
  const ::fleetbench::proto::Message9_M4& f_20(int index) const;
  ::fleetbench::proto::Message9_M4* add_f_20();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M4>& f_20() const;
  // repeated .fleetbench.proto.Message9.M5 f_21 = 22;
  int f_21_size() const;
  private:
  int _internal_f_21_size() const;

  public:
  void clear_f_21() ;
  ::fleetbench::proto::Message9_M5* mutable_f_21(int index);
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5>* mutable_f_21();

  private:
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5>& _internal_f_21() const;
  ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5>* _internal_mutable_f_21();
  public:
  const ::fleetbench::proto::Message9_M5& f_21(int index) const;
  ::fleetbench::proto::Message9_M5* add_f_21();
  const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5>& f_21() const;
  // optional .fleetbench.proto.Message9.M3 f_18 = 20;
  bool has_f_18() const;
  void clear_f_18() ;
  const ::fleetbench::proto::Message9_M3& f_18() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M3* release_f_18();
  ::fleetbench::proto::Message9_M3* mutable_f_18();
  void set_allocated_f_18(::fleetbench::proto::Message9_M3* value);
  void unsafe_arena_set_allocated_f_18(::fleetbench::proto::Message9_M3* value);
  ::fleetbench::proto::Message9_M3* unsafe_arena_release_f_18();

  private:
  const ::fleetbench::proto::Message9_M3& _internal_f_18() const;
  ::fleetbench::proto::Message9_M3* _internal_mutable_f_18();

  public:
  // optional .fleetbench.proto.Message9.M6 f_22 = 25;
  bool has_f_22() const;
  void clear_f_22() ;
  const ::fleetbench::proto::Message9_M6& f_22() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M6* release_f_22();
  ::fleetbench::proto::Message9_M6* mutable_f_22();
  void set_allocated_f_22(::fleetbench::proto::Message9_M6* value);
  void unsafe_arena_set_allocated_f_22(::fleetbench::proto::Message9_M6* value);
  ::fleetbench::proto::Message9_M6* unsafe_arena_release_f_22();

  private:
  const ::fleetbench::proto::Message9_M6& _internal_f_22() const;
  ::fleetbench::proto::Message9_M6* _internal_mutable_f_22();

  public:
  // optional .fleetbench.proto.Message9.M7 f_25 = 27;
  bool has_f_25() const;
  void clear_f_25() ;
  const ::fleetbench::proto::Message9_M7& f_25() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M7* release_f_25();
  ::fleetbench::proto::Message9_M7* mutable_f_25();
  void set_allocated_f_25(::fleetbench::proto::Message9_M7* value);
  void unsafe_arena_set_allocated_f_25(::fleetbench::proto::Message9_M7* value);
  ::fleetbench::proto::Message9_M7* unsafe_arena_release_f_25();

  private:
  const ::fleetbench::proto::Message9_M7& _internal_f_25() const;
  ::fleetbench::proto::Message9_M7* _internal_mutable_f_25();

  public:
  // optional .fleetbench.proto.Message9.M8 f_27 = 28;
  bool has_f_27() const;
  void clear_f_27() ;
  const ::fleetbench::proto::Message9_M8& f_27() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M8* release_f_27();
  ::fleetbench::proto::Message9_M8* mutable_f_27();
  void set_allocated_f_27(::fleetbench::proto::Message9_M8* value);
  void unsafe_arena_set_allocated_f_27(::fleetbench::proto::Message9_M8* value);
  ::fleetbench::proto::Message9_M8* unsafe_arena_release_f_27();

  private:
  const ::fleetbench::proto::Message9_M8& _internal_f_27() const;
  ::fleetbench::proto::Message9_M8* _internal_mutable_f_27();

  public:
  // optional .fleetbench.proto.Message9.M9 f_28 = 29;
  bool has_f_28() const;
  void clear_f_28() ;
  const ::fleetbench::proto::Message9_M9& f_28() const;
  PROTOBUF_NODISCARD ::fleetbench::proto::Message9_M9* release_f_28();
  ::fleetbench::proto::Message9_M9* mutable_f_28();
  void set_allocated_f_28(::fleetbench::proto::Message9_M9* value);
  void unsafe_arena_set_allocated_f_28(::fleetbench::proto::Message9_M9* value);
  ::fleetbench::proto::Message9_M9* unsafe_arena_release_f_28();

  private:
  const ::fleetbench::proto::Message9_M9& _internal_f_28() const;
  ::fleetbench::proto::Message9_M9* _internal_mutable_f_28();

  public:
  // optional bool f_0 = 3;
  bool has_f_0() const;
  void clear_f_0() ;
  bool f_0() const;
  void set_f_0(bool value);

  private:
  bool _internal_f_0() const;
  void _internal_set_f_0(bool value);

  public:
  // optional .fleetbench.proto.Message9.E1 f_1 = 4;
  bool has_f_1() const;
  void clear_f_1() ;
  ::fleetbench::proto::Message9_E1 f_1() const;
  void set_f_1(::fleetbench::proto::Message9_E1 value);

  private:
  ::fleetbench::proto::Message9_E1 _internal_f_1() const;
  void _internal_set_f_1(::fleetbench::proto::Message9_E1 value);

  public:
  // optional int64 f_2 = 6;
  bool has_f_2() const;
  void clear_f_2() ;
  ::int64_t f_2() const;
  void set_f_2(::int64_t value);

  private:
  ::int64_t _internal_f_2() const;
  void _internal_set_f_2(::int64_t value);

  public:
  // optional .fleetbench.proto.Message9.E2 f_3 = 9;
  bool has_f_3() const;
  void clear_f_3() ;
  ::fleetbench::proto::Message9_E2 f_3() const;
  void set_f_3(::fleetbench::proto::Message9_E2 value);

  private:
  ::fleetbench::proto::Message9_E2 _internal_f_3() const;
  void _internal_set_f_3(::fleetbench::proto::Message9_E2 value);

  public:
  // optional int32 f_5 = 13;
  bool has_f_5() const;
  void clear_f_5() ;
  ::int32_t f_5() const;
  void set_f_5(::int32_t value);

  private:
  ::int32_t _internal_f_5() const;
  void _internal_set_f_5(::int32_t value);

  public:
  // optional int64 f_4 = 12;
  bool has_f_4() const;
  void clear_f_4() ;
  ::int64_t f_4() const;
  void set_f_4(::int64_t value);

  private:
  ::int64_t _internal_f_4() const;
  void _internal_set_f_4(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:fleetbench.proto.Message9)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 15, 11,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message9_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M1 > f_13_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M2 > f_16_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M4 > f_20_;
    ::google::protobuf::RepeatedPtrField< ::fleetbench::proto::Message9_M5 > f_21_;
    ::fleetbench::proto::Message9_M3* f_18_;
    ::fleetbench::proto::Message9_M6* f_22_;
    ::fleetbench::proto::Message9_M7* f_25_;
    ::fleetbench::proto::Message9_M8* f_27_;
    ::fleetbench::proto::Message9_M9* f_28_;
    bool f_0_;
    int f_1_;
    ::int64_t f_2_;
    int f_3_;
    ::int32_t f_5_;
    ::int64_t f_4_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_protos_2fMessage9_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Message9_M1_M18

// optional .fleetbench.proto.Message9.M1.M18.E6 f_0 = 1;
inline bool Message9_M1_M18::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M1_M18::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::fleetbench::proto::Message9_M1_M18_E6 Message9_M1_M18::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M1.M18.f_0)
  return _internal_f_0();
}
inline void Message9_M1_M18::set_f_0(::fleetbench::proto::Message9_M1_M18_E6 value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M1.M18.f_0)
}
inline ::fleetbench::proto::Message9_M1_M18_E6 Message9_M1_M18::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M1_M18_E6>(_impl_.f_0_);
}
inline void Message9_M1_M18::_internal_set_f_0(::fleetbench::proto::Message9_M1_M18_E6 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M1_M18_E6_IsValid(value));
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M1

// optional int64 f_0 = 2;
inline bool Message9_M1::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M1::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t Message9_M1::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M1.f_0)
  return _internal_f_0();
}
inline void Message9_M1::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M1.f_0)
}
inline ::int64_t Message9_M1::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M1::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M1.M18 f_2 = 3;
inline bool Message9_M1::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_2_ != nullptr);
  return value;
}
inline void Message9_M1::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ != nullptr) _impl_.f_2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M1_M18& Message9_M1::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M1_M18* p = _impl_.f_2_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M1_M18&>(::fleetbench::proto::_Message9_M1_M18_default_instance_);
}
inline const ::fleetbench::proto::Message9_M1_M18& Message9_M1::f_2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M1.f_2)
  return _internal_f_2();
}
inline void Message9_M1::unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M1_M18* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_2_);
  }
  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M1_M18*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M1.f_2)
}
inline ::fleetbench::proto::Message9_M1_M18* Message9_M1::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M1_M18* released = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M1_M18* Message9_M1::unsafe_arena_release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M1.f_2)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M1_M18* temp = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M1_M18* Message9_M1::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M1_M18>(GetArena());
    _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M1_M18*>(p);
  }
  return _impl_.f_2_;
}
inline ::fleetbench::proto::Message9_M1_M18* Message9_M1::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M1_M18* _msg = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M1.f_2)
  return _msg;
}
inline void Message9_M1::set_allocated_f_2(::fleetbench::proto::Message9_M1_M18* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M1_M18*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M1.f_2)
}

// -------------------------------------------------------------------

// Message9_M2

// optional .fleetbench.proto.Message9.M2.E3 f_0 = 2;
inline bool Message9_M2::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M2::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::fleetbench::proto::Message9_M2_E3 Message9_M2::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M2.f_0)
  return _internal_f_0();
}
inline void Message9_M2::set_f_0(::fleetbench::proto::Message9_M2_E3 value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M2.f_0)
}
inline ::fleetbench::proto::Message9_M2_E3 Message9_M2::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M2_E3>(_impl_.f_0_);
}
inline void Message9_M2::_internal_set_f_0(::fleetbench::proto::Message9_M2_E3 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M2_E3_IsValid(value));
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M3_M10

// optional int64 f_0 = 1;
inline bool Message9_M3_M10::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M3_M10::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Message9_M3_M10::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M10.f_0)
  return _internal_f_0();
}
inline void Message9_M3_M10::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M10.f_0)
}
inline ::int64_t Message9_M3_M10::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M3_M10::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M3_M13_M24_M35

// optional int64 f_0 = 2;
inline bool Message9_M3_M13_M24_M35::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_0)
  return _internal_f_0();
}
inline void Message9_M3_M13_M24_M35::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_0)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M3.M13.M24.M35.E19 f_1 = 3;
inline bool Message9_M3_M13_M24_M35::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E19 Message9_M3_M13_M24_M35::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_1)
  return _internal_f_1();
}
inline void Message9_M3_M13_M24_M35::set_f_1(::fleetbench::proto::Message9_M3_M13_M24_M35_E19 value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_1)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E19 Message9_M3_M13_M24_M35::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_M35_E19>(_impl_.f_1_);
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_1(::fleetbench::proto::Message9_M3_M13_M24_M35_E19 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_M35_E19_IsValid(value));
  _impl_.f_1_ = value;
}

// optional int64 f_2 = 4;
inline bool Message9_M3_M13_M24_M35::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_2)
  return _internal_f_2();
}
inline void Message9_M3_M13_M24_M35::set_f_2(::int64_t value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_2)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_2(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = value;
}

// optional int64 f_3 = 5;
inline bool Message9_M3_M13_M24_M35::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_3)
  return _internal_f_3();
}
inline void Message9_M3_M13_M24_M35::set_f_3(::int64_t value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_3)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_3(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional fixed32 f_4 = 6;
inline bool Message9_M3_M13_M24_M35::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = 0u;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::uint32_t Message9_M3_M13_M24_M35::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_4)
  return _internal_f_4();
}
inline void Message9_M3_M13_M24_M35::set_f_4(::uint32_t value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_4)
}
inline ::uint32_t Message9_M3_M13_M24_M35::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_4(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional bytes f_5 = 7;
inline bool Message9_M3_M13_M24_M35::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_5)
  return _internal_f_5();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_5(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_5_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_5)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_5();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_5)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_5(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_5_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_5_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_5)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_5_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_5_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_5(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_5_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_5_.IsDefault()) {
          _impl_.f_5_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_5)
}

// optional bytes f_6 = 9;
inline bool Message9_M3_M13_M24_M35::has_f_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_6() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_6)
  return _internal_f_6();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_6(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_6_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_6)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_6() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_6();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_6)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_6_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_6(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_6_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.f_6_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_6)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.f_6_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_6_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_6(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.f_6_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_6_.IsDefault()) {
          _impl_.f_6_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_6)
}

// optional float f_7 = 11;
inline bool Message9_M3_M13_M24_M35::has_f_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_ = 0;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline float Message9_M3_M13_M24_M35::f_7() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_7)
  return _internal_f_7();
}
inline void Message9_M3_M13_M24_M35::set_f_7(float value) {
  _internal_set_f_7(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_7)
}
inline float Message9_M3_M13_M24_M35::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_7_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_7(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_ = value;
}

// optional fixed64 f_8 = 12;
inline bool Message9_M3_M13_M24_M35::has_f_8() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::uint64_t Message9_M3_M13_M24_M35::f_8() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_8)
  return _internal_f_8();
}
inline void Message9_M3_M13_M24_M35::set_f_8(::uint64_t value) {
  _internal_set_f_8(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_8)
}
inline ::uint64_t Message9_M3_M13_M24_M35::_internal_f_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_8_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_8(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_ = value;
}

// optional float f_9 = 14;
inline bool Message9_M3_M13_M24_M35::has_f_9() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline float Message9_M3_M13_M24_M35::f_9() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_9)
  return _internal_f_9();
}
inline void Message9_M3_M13_M24_M35::set_f_9(float value) {
  _internal_set_f_9(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_9)
}
inline float Message9_M3_M13_M24_M35::_internal_f_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_9_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_9(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = value;
}

// optional string f_10 = 15;
inline bool Message9_M3_M13_M24_M35::has_f_10() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_10() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_10)
  return _internal_f_10();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_10(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_10_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_10)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_10() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_10();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_10)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_10_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_10(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_10_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.f_10_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_10)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.f_10_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_10_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_10(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.f_10_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_10_.IsDefault()) {
          _impl_.f_10_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_10)
}

// optional bytes f_11 = 16;
inline bool Message9_M3_M13_M24_M35::has_f_11() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_11_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_11() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_11)
  return _internal_f_11();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_11(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_11_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_11)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_11() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_11();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_11)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_11_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_11(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_11_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.f_11_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_11)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.f_11_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_11_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_11(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.f_11_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_11_.IsDefault()) {
          _impl_.f_11_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_11)
}

// optional fixed32 f_12 = 17;
inline bool Message9_M3_M13_M24_M35::has_f_12() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = 0u;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::uint32_t Message9_M3_M13_M24_M35::f_12() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_12)
  return _internal_f_12();
}
inline void Message9_M3_M13_M24_M35::set_f_12(::uint32_t value) {
  _internal_set_f_12(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_12)
}
inline ::uint32_t Message9_M3_M13_M24_M35::_internal_f_12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_12_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_12(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = value;
}

// optional int32 f_13 = 18;
inline bool Message9_M3_M13_M24_M35::has_f_13() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_ = 0;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline ::int32_t Message9_M3_M13_M24_M35::f_13() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_13)
  return _internal_f_13();
}
inline void Message9_M3_M13_M24_M35::set_f_13(::int32_t value) {
  _internal_set_f_13(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_13)
}
inline ::int32_t Message9_M3_M13_M24_M35::_internal_f_13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_13_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_13(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_ = value;
}

// optional double f_14 = 20;
inline bool Message9_M3_M13_M24_M35::has_f_14() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = 0;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline double Message9_M3_M13_M24_M35::f_14() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_14)
  return _internal_f_14();
}
inline void Message9_M3_M13_M24_M35::set_f_14(double value) {
  _internal_set_f_14(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_14)
}
inline double Message9_M3_M13_M24_M35::_internal_f_14() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_14_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_14(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = value;
}

// optional string f_15 = 21;
inline bool Message9_M3_M13_M24_M35::has_f_15() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_15() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_15)
  return _internal_f_15();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_15(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_15_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_15)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_15() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_15();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_15)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_15() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_15_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_15(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_15_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.f_15_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_15)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.f_15_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_15_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_15(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.f_15_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_15_.IsDefault()) {
          _impl_.f_15_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_15)
}

// optional int64 f_16 = 22;
inline bool Message9_M3_M13_M24_M35::has_f_16() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_16() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_16)
  return _internal_f_16();
}
inline void Message9_M3_M13_M24_M35::set_f_16(::int64_t value) {
  _internal_set_f_16(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_16)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_16_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_16(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_ = value;
}

// optional string f_17 = 23;
inline bool Message9_M3_M13_M24_M35::has_f_17() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_17() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_17)
  return _internal_f_17();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_17(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_17_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_17)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_17() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_17();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_17)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_17() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_17_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_17(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_17_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.f_17_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_17)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.f_17_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_17_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_17(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.f_17_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_17_.IsDefault()) {
          _impl_.f_17_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_17)
}

// optional uint64 f_18 = 26;
inline bool Message9_M3_M13_M24_M35::has_f_18() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline ::uint64_t Message9_M3_M13_M24_M35::f_18() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_18)
  return _internal_f_18();
}
inline void Message9_M3_M13_M24_M35::set_f_18(::uint64_t value) {
  _internal_set_f_18(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_18)
}
inline ::uint64_t Message9_M3_M13_M24_M35::_internal_f_18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_18_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_18(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_ = value;
}

// optional uint64 f_19 = 29;
inline bool Message9_M3_M13_M24_M35::has_f_19() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline ::uint64_t Message9_M3_M13_M24_M35::f_19() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_19)
  return _internal_f_19();
}
inline void Message9_M3_M13_M24_M35::set_f_19(::uint64_t value) {
  _internal_set_f_19(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_19)
}
inline ::uint64_t Message9_M3_M13_M24_M35::_internal_f_19() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_19_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_19(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = value;
}

// optional .fleetbench.proto.Message9.M3.M13.M24.M35.E20 f_20 = 33;
inline bool Message9_M3_M13_M24_M35::has_f_20() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_20() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_ = 0;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E20 Message9_M3_M13_M24_M35::f_20() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_20)
  return _internal_f_20();
}
inline void Message9_M3_M13_M24_M35::set_f_20(::fleetbench::proto::Message9_M3_M13_M24_M35_E20 value) {
  _internal_set_f_20(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_20)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E20 Message9_M3_M13_M24_M35::_internal_f_20() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_M35_E20>(_impl_.f_20_);
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_20(::fleetbench::proto::Message9_M3_M13_M24_M35_E20 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_M35_E20_IsValid(value));
  _impl_.f_20_ = value;
}

// optional double f_21 = 35;
inline bool Message9_M3_M13_M24_M35::has_f_21() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = 0;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline double Message9_M3_M13_M24_M35::f_21() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_21)
  return _internal_f_21();
}
inline void Message9_M3_M13_M24_M35::set_f_21(double value) {
  _internal_set_f_21(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_21)
}
inline double Message9_M3_M13_M24_M35::_internal_f_21() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_21_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_21(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = value;
}

// optional .fleetbench.proto.Message9.M3.M13.M24.M35.E21 f_22 = 37;
inline bool Message9_M3_M13_M24_M35::has_f_22() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = 0;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E21 Message9_M3_M13_M24_M35::f_22() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_22)
  return _internal_f_22();
}
inline void Message9_M3_M13_M24_M35::set_f_22(::fleetbench::proto::Message9_M3_M13_M24_M35_E21 value) {
  _internal_set_f_22(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_22)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E21 Message9_M3_M13_M24_M35::_internal_f_22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_M35_E21>(_impl_.f_22_);
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_22(::fleetbench::proto::Message9_M3_M13_M24_M35_E21 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_M35_E21_IsValid(value));
  _impl_.f_22_ = value;
}

// optional int64 f_23 = 38;
inline bool Message9_M3_M13_M24_M35::has_f_23() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_23_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_23() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_23)
  return _internal_f_23();
}
inline void Message9_M3_M13_M24_M35::set_f_23(::int64_t value) {
  _internal_set_f_23(value);
  _impl_._has_bits_[0] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_23)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_23() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_23_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_23(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_23_ = value;
}

// optional int32 f_24 = 40;
inline bool Message9_M3_M13_M24_M35::has_f_24() const {
  bool value = (_impl_._has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_24() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_24_ = 0;
  _impl_._has_bits_[0] &= ~0x40000000u;
}
inline ::int32_t Message9_M3_M13_M24_M35::f_24() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_24)
  return _internal_f_24();
}
inline void Message9_M3_M13_M24_M35::set_f_24(::int32_t value) {
  _internal_set_f_24(value);
  _impl_._has_bits_[0] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_24)
}
inline ::int32_t Message9_M3_M13_M24_M35::_internal_f_24() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_24_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_24(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_24_ = value;
}

// optional string f_25 = 41;
inline bool Message9_M3_M13_M24_M35::has_f_25() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_25_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_25() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_25)
  return _internal_f_25();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_25(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_25_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_25)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_25() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_25();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_25)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_25() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_25_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_25(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_25_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.f_25_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_25)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.f_25_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_25_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_25(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.f_25_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_25_.IsDefault()) {
          _impl_.f_25_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_25)
}

// repeated int32 f_26 = 44 [packed = true];
inline int Message9_M3_M13_M24_M35::_internal_f_26_size() const {
  return _internal_f_26().size();
}
inline int Message9_M3_M13_M24_M35::f_26_size() const {
  return _internal_f_26_size();
}
inline void Message9_M3_M13_M24_M35::clear_f_26() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_26_.Clear();
}
inline ::int32_t Message9_M3_M13_M24_M35::f_26(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_26)
  return _internal_f_26().Get(index);
}
inline void Message9_M3_M13_M24_M35::set_f_26(int index, ::int32_t value) {
  _internal_mutable_f_26()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_26)
}
inline void Message9_M3_M13_M24_M35::add_f_26(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_26()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M3.M13.M24.M35.f_26)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Message9_M3_M13_M24_M35::f_26() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M3.M13.M24.M35.f_26)
  return _internal_f_26();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M3_M13_M24_M35::mutable_f_26()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M3.M13.M24.M35.f_26)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_26();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Message9_M3_M13_M24_M35::_internal_f_26() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_26_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M3_M13_M24_M35::_internal_mutable_f_26() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_26_;
}

// optional bytes f_27 = 46;
inline bool Message9_M3_M13_M24_M35::has_f_27() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_27_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_27() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_27)
  return _internal_f_27();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_27(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.f_27_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_27)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_27() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_27();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_27)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_27() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_27_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_27(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.f_27_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.f_27_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_27)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.f_27_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_27_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_27(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.f_27_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_27_.IsDefault()) {
          _impl_.f_27_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_27)
}

// optional .fleetbench.proto.Message9.M3.M13.M24.M35.E22 f_28 = 47;
inline bool Message9_M3_M13_M24_M35::has_f_28() const {
  bool value = (_impl_._has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_28_ = 0;
  _impl_._has_bits_[0] &= ~0x80000000u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E22 Message9_M3_M13_M24_M35::f_28() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_28)
  return _internal_f_28();
}
inline void Message9_M3_M13_M24_M35::set_f_28(::fleetbench::proto::Message9_M3_M13_M24_M35_E22 value) {
  _internal_set_f_28(value);
  _impl_._has_bits_[0] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_28)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E22 Message9_M3_M13_M24_M35::_internal_f_28() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_M35_E22>(_impl_.f_28_);
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_28(::fleetbench::proto::Message9_M3_M13_M24_M35_E22 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_M35_E22_IsValid(value));
  _impl_.f_28_ = value;
}

// optional int32 f_29 = 49;
inline bool Message9_M3_M13_M24_M35::has_f_29() const {
  bool value = (_impl_._has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_29() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_29_ = 0;
  _impl_._has_bits_[1] &= ~0x00000001u;
}
inline ::int32_t Message9_M3_M13_M24_M35::f_29() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_29)
  return _internal_f_29();
}
inline void Message9_M3_M13_M24_M35::set_f_29(::int32_t value) {
  _internal_set_f_29(value);
  _impl_._has_bits_[1] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_29)
}
inline ::int32_t Message9_M3_M13_M24_M35::_internal_f_29() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_29_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_29(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_29_ = value;
}

// optional bytes f_30 = 51;
inline bool Message9_M3_M13_M24_M35::has_f_30() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_30_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_30() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_30)
  return _internal_f_30();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_30(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.f_30_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_30)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_30() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_30();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_30)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_30() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_30_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_30(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.f_30_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  return _impl_.f_30_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_30)
  if ((_impl_._has_bits_[0] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000100u;
  auto* released = _impl_.f_30_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_30_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_30(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.f_30_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_30_.IsDefault()) {
          _impl_.f_30_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_30)
}

// optional .fleetbench.proto.Message9.M3.M13.M24.M35.E23 f_31 = 52;
inline bool Message9_M3_M13_M24_M35::has_f_31() const {
  bool value = (_impl_._has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_31() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_31_ = 0;
  _impl_._has_bits_[1] &= ~0x00000002u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E23 Message9_M3_M13_M24_M35::f_31() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_31)
  return _internal_f_31();
}
inline void Message9_M3_M13_M24_M35::set_f_31(::fleetbench::proto::Message9_M3_M13_M24_M35_E23 value) {
  _internal_set_f_31(value);
  _impl_._has_bits_[1] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_31)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E23 Message9_M3_M13_M24_M35::_internal_f_31() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_M35_E23>(_impl_.f_31_);
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_31(::fleetbench::proto::Message9_M3_M13_M24_M35_E23 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_M35_E23_IsValid(value));
  _impl_.f_31_ = value;
}

// repeated int64 f_32 = 53 [packed = true];
inline int Message9_M3_M13_M24_M35::_internal_f_32_size() const {
  return _internal_f_32().size();
}
inline int Message9_M3_M13_M24_M35::f_32_size() const {
  return _internal_f_32_size();
}
inline void Message9_M3_M13_M24_M35::clear_f_32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_32_.Clear();
}
inline ::int64_t Message9_M3_M13_M24_M35::f_32(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_32)
  return _internal_f_32().Get(index);
}
inline void Message9_M3_M13_M24_M35::set_f_32(int index, ::int64_t value) {
  _internal_mutable_f_32()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_32)
}
inline void Message9_M3_M13_M24_M35::add_f_32(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_32()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M3.M13.M24.M35.f_32)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Message9_M3_M13_M24_M35::f_32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M3.M13.M24.M35.f_32)
  return _internal_f_32();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M3_M13_M24_M35::mutable_f_32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M3.M13.M24.M35.f_32)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_32();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Message9_M3_M13_M24_M35::_internal_f_32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_32_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M3_M13_M24_M35::_internal_mutable_f_32() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_32_;
}

// optional int32 f_33 = 54;
inline bool Message9_M3_M13_M24_M35::has_f_33() const {
  bool value = (_impl_._has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_33() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_33_ = 0;
  _impl_._has_bits_[1] &= ~0x00000008u;
}
inline ::int32_t Message9_M3_M13_M24_M35::f_33() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_33)
  return _internal_f_33();
}
inline void Message9_M3_M13_M24_M35::set_f_33(::int32_t value) {
  _internal_set_f_33(value);
  _impl_._has_bits_[1] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_33)
}
inline ::int32_t Message9_M3_M13_M24_M35::_internal_f_33() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_33_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_33(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_33_ = value;
}

// optional int64 f_34 = 56;
inline bool Message9_M3_M13_M24_M35::has_f_34() const {
  bool value = (_impl_._has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_34() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_34_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x00000004u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_34() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_34)
  return _internal_f_34();
}
inline void Message9_M3_M13_M24_M35::set_f_34(::int64_t value) {
  _internal_set_f_34(value);
  _impl_._has_bits_[1] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_34)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_34() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_34_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_34(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_34_ = value;
}

// optional fixed32 f_35 = 58;
inline bool Message9_M3_M13_M24_M35::has_f_35() const {
  bool value = (_impl_._has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_35() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_35_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000010u;
}
inline ::uint32_t Message9_M3_M13_M24_M35::f_35() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_35)
  return _internal_f_35();
}
inline void Message9_M3_M13_M24_M35::set_f_35(::uint32_t value) {
  _internal_set_f_35(value);
  _impl_._has_bits_[1] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_35)
}
inline ::uint32_t Message9_M3_M13_M24_M35::_internal_f_35() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_35_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_35(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_35_ = value;
}

// optional float f_36 = 59;
inline bool Message9_M3_M13_M24_M35::has_f_36() const {
  bool value = (_impl_._has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_36() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_36_ = 0;
  _impl_._has_bits_[1] &= ~0x00000040u;
}
inline float Message9_M3_M13_M24_M35::f_36() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_36)
  return _internal_f_36();
}
inline void Message9_M3_M13_M24_M35::set_f_36(float value) {
  _internal_set_f_36(value);
  _impl_._has_bits_[1] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_36)
}
inline float Message9_M3_M13_M24_M35::_internal_f_36() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_36_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_36(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_36_ = value;
}

// optional int64 f_37 = 60;
inline bool Message9_M3_M13_M24_M35::has_f_37() const {
  bool value = (_impl_._has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_37() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_37_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x00000020u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_37() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_37)
  return _internal_f_37();
}
inline void Message9_M3_M13_M24_M35::set_f_37(::int64_t value) {
  _internal_set_f_37(value);
  _impl_._has_bits_[1] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_37)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_37() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_37_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_37(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_37_ = value;
}

// optional int32 f_38 = 64;
inline bool Message9_M3_M13_M24_M35::has_f_38() const {
  bool value = (_impl_._has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_38() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_38_ = 0;
  _impl_._has_bits_[1] &= ~0x00000080u;
}
inline ::int32_t Message9_M3_M13_M24_M35::f_38() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_38)
  return _internal_f_38();
}
inline void Message9_M3_M13_M24_M35::set_f_38(::int32_t value) {
  _internal_set_f_38(value);
  _impl_._has_bits_[1] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_38)
}
inline ::int32_t Message9_M3_M13_M24_M35::_internal_f_38() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_38_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_38(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_38_ = value;
}

// optional float f_39 = 65;
inline bool Message9_M3_M13_M24_M35::has_f_39() const {
  bool value = (_impl_._has_bits_[1] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_39() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_39_ = 0;
  _impl_._has_bits_[1] &= ~0x00000100u;
}
inline float Message9_M3_M13_M24_M35::f_39() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_39)
  return _internal_f_39();
}
inline void Message9_M3_M13_M24_M35::set_f_39(float value) {
  _internal_set_f_39(value);
  _impl_._has_bits_[1] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_39)
}
inline float Message9_M3_M13_M24_M35::_internal_f_39() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_39_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_39(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_39_ = value;
}

// optional bool f_40 = 68;
inline bool Message9_M3_M13_M24_M35::has_f_40() const {
  bool value = (_impl_._has_bits_[1] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_40() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_40_ = false;
  _impl_._has_bits_[1] &= ~0x00000200u;
}
inline bool Message9_M3_M13_M24_M35::f_40() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_40)
  return _internal_f_40();
}
inline void Message9_M3_M13_M24_M35::set_f_40(bool value) {
  _internal_set_f_40(value);
  _impl_._has_bits_[1] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_40)
}
inline bool Message9_M3_M13_M24_M35::_internal_f_40() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_40_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_40(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_40_ = value;
}

// optional bool f_41 = 69;
inline bool Message9_M3_M13_M24_M35::has_f_41() const {
  bool value = (_impl_._has_bits_[1] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_41() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_41_ = false;
  _impl_._has_bits_[1] &= ~0x00000400u;
}
inline bool Message9_M3_M13_M24_M35::f_41() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_41)
  return _internal_f_41();
}
inline void Message9_M3_M13_M24_M35::set_f_41(bool value) {
  _internal_set_f_41(value);
  _impl_._has_bits_[1] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_41)
}
inline bool Message9_M3_M13_M24_M35::_internal_f_41() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_41_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_41(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_41_ = value;
}

// optional bool f_42 = 71;
inline bool Message9_M3_M13_M24_M35::has_f_42() const {
  bool value = (_impl_._has_bits_[1] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_42_ = false;
  _impl_._has_bits_[1] &= ~0x00000800u;
}
inline bool Message9_M3_M13_M24_M35::f_42() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_42)
  return _internal_f_42();
}
inline void Message9_M3_M13_M24_M35::set_f_42(bool value) {
  _internal_set_f_42(value);
  _impl_._has_bits_[1] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_42)
}
inline bool Message9_M3_M13_M24_M35::_internal_f_42() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_42_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_42(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_42_ = value;
}

// optional int64 f_43 = 72;
inline bool Message9_M3_M13_M24_M35::has_f_43() const {
  bool value = (_impl_._has_bits_[1] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_43() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_43_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x00002000u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_43() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_43)
  return _internal_f_43();
}
inline void Message9_M3_M13_M24_M35::set_f_43(::int64_t value) {
  _internal_set_f_43(value);
  _impl_._has_bits_[1] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_43)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_43() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_43_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_43(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_43_ = value;
}

// optional string f_44 = 74;
inline bool Message9_M3_M13_M24_M35::has_f_44() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_44() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_44_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_44() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_44)
  return _internal_f_44();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_44(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.f_44_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_44)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_44() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_44();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_44)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_44() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_44_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_44(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.f_44_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_44() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  return _impl_.f_44_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_44() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_44)
  if ((_impl_._has_bits_[0] & 0x00000200u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000200u;
  auto* released = _impl_.f_44_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_44_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_44(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  _impl_.f_44_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_44_.IsDefault()) {
          _impl_.f_44_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_44)
}

// optional float f_45 = 75;
inline bool Message9_M3_M13_M24_M35::has_f_45() const {
  bool value = (_impl_._has_bits_[1] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_45() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_45_ = 0;
  _impl_._has_bits_[1] &= ~0x00004000u;
}
inline float Message9_M3_M13_M24_M35::f_45() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_45)
  return _internal_f_45();
}
inline void Message9_M3_M13_M24_M35::set_f_45(float value) {
  _internal_set_f_45(value);
  _impl_._has_bits_[1] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_45)
}
inline float Message9_M3_M13_M24_M35::_internal_f_45() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_45_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_45(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_45_ = value;
}

// optional string f_46 = 77;
inline bool Message9_M3_M13_M24_M35::has_f_46() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_46() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_46_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_46() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_46)
  return _internal_f_46();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_46(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.f_46_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_46)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_46() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_46();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_46)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_46() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_46_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_46(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.f_46_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_46() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  return _impl_.f_46_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_46() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_46)
  if ((_impl_._has_bits_[0] & 0x00000400u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000400u;
  auto* released = _impl_.f_46_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_46_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_46(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  _impl_.f_46_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_46_.IsDefault()) {
          _impl_.f_46_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_46)
}

// optional int32 f_47 = 79;
inline bool Message9_M3_M13_M24_M35::has_f_47() const {
  bool value = (_impl_._has_bits_[1] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_47() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_47_ = 0;
  _impl_._has_bits_[1] &= ~0x00008000u;
}
inline ::int32_t Message9_M3_M13_M24_M35::f_47() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_47)
  return _internal_f_47();
}
inline void Message9_M3_M13_M24_M35::set_f_47(::int32_t value) {
  _internal_set_f_47(value);
  _impl_._has_bits_[1] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_47)
}
inline ::int32_t Message9_M3_M13_M24_M35::_internal_f_47() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_47_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_47(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_47_ = value;
}

// optional .fleetbench.proto.Message9.M3.M13.M24.M35.E24 f_48 = 80;
inline bool Message9_M3_M13_M24_M35::has_f_48() const {
  bool value = (_impl_._has_bits_[1] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_48() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_48_ = 0;
  _impl_._has_bits_[1] &= ~0x00010000u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E24 Message9_M3_M13_M24_M35::f_48() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_48)
  return _internal_f_48();
}
inline void Message9_M3_M13_M24_M35::set_f_48(::fleetbench::proto::Message9_M3_M13_M24_M35_E24 value) {
  _internal_set_f_48(value);
  _impl_._has_bits_[1] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_48)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E24 Message9_M3_M13_M24_M35::_internal_f_48() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_M35_E24>(_impl_.f_48_);
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_48(::fleetbench::proto::Message9_M3_M13_M24_M35_E24 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_M35_E24_IsValid(value));
  _impl_.f_48_ = value;
}

// optional bool f_49 = 83;
inline bool Message9_M3_M13_M24_M35::has_f_49() const {
  bool value = (_impl_._has_bits_[1] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_49() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_49_ = false;
  _impl_._has_bits_[1] &= ~0x00001000u;
}
inline bool Message9_M3_M13_M24_M35::f_49() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_49)
  return _internal_f_49();
}
inline void Message9_M3_M13_M24_M35::set_f_49(bool value) {
  _internal_set_f_49(value);
  _impl_._has_bits_[1] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_49)
}
inline bool Message9_M3_M13_M24_M35::_internal_f_49() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_49_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_49(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_49_ = value;
}

// optional fixed32 f_50 = 84;
inline bool Message9_M3_M13_M24_M35::has_f_50() const {
  bool value = (_impl_._has_bits_[1] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_50() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_50_ = 0u;
  _impl_._has_bits_[1] &= ~0x00020000u;
}
inline ::uint32_t Message9_M3_M13_M24_M35::f_50() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_50)
  return _internal_f_50();
}
inline void Message9_M3_M13_M24_M35::set_f_50(::uint32_t value) {
  _internal_set_f_50(value);
  _impl_._has_bits_[1] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_50)
}
inline ::uint32_t Message9_M3_M13_M24_M35::_internal_f_50() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_50_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_50(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_50_ = value;
}

// optional float f_51 = 85;
inline bool Message9_M3_M13_M24_M35::has_f_51() const {
  bool value = (_impl_._has_bits_[1] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_51() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_51_ = 0;
  _impl_._has_bits_[1] &= ~0x00040000u;
}
inline float Message9_M3_M13_M24_M35::f_51() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_51)
  return _internal_f_51();
}
inline void Message9_M3_M13_M24_M35::set_f_51(float value) {
  _internal_set_f_51(value);
  _impl_._has_bits_[1] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_51)
}
inline float Message9_M3_M13_M24_M35::_internal_f_51() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_51_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_51(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_51_ = value;
}

// optional .fleetbench.proto.Message9.M3.M13.M24.M35.E25 f_52 = 86;
inline bool Message9_M3_M13_M24_M35::has_f_52() const {
  bool value = (_impl_._has_bits_[1] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_52() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_52_ = 0;
  _impl_._has_bits_[1] &= ~0x00080000u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E25 Message9_M3_M13_M24_M35::f_52() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_52)
  return _internal_f_52();
}
inline void Message9_M3_M13_M24_M35::set_f_52(::fleetbench::proto::Message9_M3_M13_M24_M35_E25 value) {
  _internal_set_f_52(value);
  _impl_._has_bits_[1] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_52)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35_E25 Message9_M3_M13_M24_M35::_internal_f_52() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_M35_E25>(_impl_.f_52_);
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_52(::fleetbench::proto::Message9_M3_M13_M24_M35_E25 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_M35_E25_IsValid(value));
  _impl_.f_52_ = value;
}

// optional int64 f_53 = 87;
inline bool Message9_M3_M13_M24_M35::has_f_53() const {
  bool value = (_impl_._has_bits_[1] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_53() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_53_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x00100000u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_53() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_53)
  return _internal_f_53();
}
inline void Message9_M3_M13_M24_M35::set_f_53(::int64_t value) {
  _internal_set_f_53(value);
  _impl_._has_bits_[1] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_53)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_53() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_53_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_53(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_53_ = value;
}

// optional int32 f_54 = 88;
inline bool Message9_M3_M13_M24_M35::has_f_54() const {
  bool value = (_impl_._has_bits_[1] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_54() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_54_ = 0;
  _impl_._has_bits_[1] &= ~0x00400000u;
}
inline ::int32_t Message9_M3_M13_M24_M35::f_54() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_54)
  return _internal_f_54();
}
inline void Message9_M3_M13_M24_M35::set_f_54(::int32_t value) {
  _internal_set_f_54(value);
  _impl_._has_bits_[1] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_54)
}
inline ::int32_t Message9_M3_M13_M24_M35::_internal_f_54() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_54_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_54(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_54_ = value;
}

// optional string f_55 = 89;
inline bool Message9_M3_M13_M24_M35::has_f_55() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_55() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_55_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline const std::string& Message9_M3_M13_M24_M35::f_55() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_55)
  return _internal_f_55();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24_M35::set_f_55(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.f_55_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_55)
}
inline std::string* Message9_M3_M13_M24_M35::mutable_f_55() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_55();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.M35.f_55)
  return _s;
}
inline const std::string& Message9_M3_M13_M24_M35::_internal_f_55() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_55_.Get();
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_55(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.f_55_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::_internal_mutable_f_55() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  return _impl_.f_55_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24_M35::release_f_55() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.M35.f_55)
  if ((_impl_._has_bits_[0] & 0x00000800u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000800u;
  auto* released = _impl_.f_55_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_55_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24_M35::set_allocated_f_55(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  _impl_.f_55_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_55_.IsDefault()) {
          _impl_.f_55_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.M35.f_55)
}

// optional int64 f_56 = 91;
inline bool Message9_M3_M13_M24_M35::has_f_56() const {
  bool value = (_impl_._has_bits_[1] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_56() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_56_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x00200000u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_56() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_56)
  return _internal_f_56();
}
inline void Message9_M3_M13_M24_M35::set_f_56(::int64_t value) {
  _internal_set_f_56(value);
  _impl_._has_bits_[1] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_56)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_56() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_56_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_56(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_56_ = value;
}

// optional float f_57 = 94;
inline bool Message9_M3_M13_M24_M35::has_f_57() const {
  bool value = (_impl_._has_bits_[1] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_57() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_57_ = 0;
  _impl_._has_bits_[1] &= ~0x00800000u;
}
inline float Message9_M3_M13_M24_M35::f_57() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_57)
  return _internal_f_57();
}
inline void Message9_M3_M13_M24_M35::set_f_57(float value) {
  _internal_set_f_57(value);
  _impl_._has_bits_[1] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_57)
}
inline float Message9_M3_M13_M24_M35::_internal_f_57() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_57_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_57(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_57_ = value;
}

// optional int64 f_58 = 95;
inline bool Message9_M3_M13_M24_M35::has_f_58() const {
  bool value = (_impl_._has_bits_[1] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_58() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_58_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x01000000u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_58() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_58)
  return _internal_f_58();
}
inline void Message9_M3_M13_M24_M35::set_f_58(::int64_t value) {
  _internal_set_f_58(value);
  _impl_._has_bits_[1] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_58)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_58() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_58_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_58(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_58_ = value;
}

// optional int64 f_59 = 96;
inline bool Message9_M3_M13_M24_M35::has_f_59() const {
  bool value = (_impl_._has_bits_[1] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_59() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_59_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x02000000u;
}
inline ::int64_t Message9_M3_M13_M24_M35::f_59() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_59)
  return _internal_f_59();
}
inline void Message9_M3_M13_M24_M35::set_f_59(::int64_t value) {
  _internal_set_f_59(value);
  _impl_._has_bits_[1] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_59)
}
inline ::int64_t Message9_M3_M13_M24_M35::_internal_f_59() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_59_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_59(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_59_ = value;
}

// optional float f_60 = 97;
inline bool Message9_M3_M13_M24_M35::has_f_60() const {
  bool value = (_impl_._has_bits_[1] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_60() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_60_ = 0;
  _impl_._has_bits_[1] &= ~0x08000000u;
}
inline float Message9_M3_M13_M24_M35::f_60() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_60)
  return _internal_f_60();
}
inline void Message9_M3_M13_M24_M35::set_f_60(float value) {
  _internal_set_f_60(value);
  _impl_._has_bits_[1] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_60)
}
inline float Message9_M3_M13_M24_M35::_internal_f_60() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_60_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_60(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_60_ = value;
}

// optional fixed64 f_61 = 98;
inline bool Message9_M3_M13_M24_M35::has_f_61() const {
  bool value = (_impl_._has_bits_[1] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24_M35::clear_f_61() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_61_ = ::uint64_t{0u};
  _impl_._has_bits_[1] &= ~0x04000000u;
}
inline ::uint64_t Message9_M3_M13_M24_M35::f_61() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.M35.f_61)
  return _internal_f_61();
}
inline void Message9_M3_M13_M24_M35::set_f_61(::uint64_t value) {
  _internal_set_f_61(value);
  _impl_._has_bits_[1] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.M35.f_61)
}
inline ::uint64_t Message9_M3_M13_M24_M35::_internal_f_61() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_61_;
}
inline void Message9_M3_M13_M24_M35::_internal_set_f_61(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_61_ = value;
}

// -------------------------------------------------------------------

// Message9_M3_M13_M24

// optional bytes f_0 = 2;
inline bool Message9_M3_M13_M24::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M3_M13_M24::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_0)
}
inline std::string* Message9_M3_M13_M24::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.f_0)
  return _s;
}
inline const std::string& Message9_M3_M13_M24::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M3_M13_M24::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.f_0)
}

// optional fixed64 f_1 = 3;
inline bool Message9_M3_M13_M24::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t Message9_M3_M13_M24::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_1)
  return _internal_f_1();
}
inline void Message9_M3_M13_M24::set_f_1(::uint64_t value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_1)
}
inline ::uint64_t Message9_M3_M13_M24::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M3_M13_M24::_internal_set_f_1(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// optional int64 f_2 = 5;
inline bool Message9_M3_M13_M24::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t Message9_M3_M13_M24::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_2)
  return _internal_f_2();
}
inline void Message9_M3_M13_M24::set_f_2(::int64_t value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_2)
}
inline ::int64_t Message9_M3_M13_M24::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline void Message9_M3_M13_M24::_internal_set_f_2(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = value;
}

// optional int32 f_3 = 7;
inline bool Message9_M3_M13_M24::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t Message9_M3_M13_M24::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_3)
  return _internal_f_3();
}
inline void Message9_M3_M13_M24::set_f_3(::int32_t value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_3)
}
inline ::int32_t Message9_M3_M13_M24::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M3_M13_M24::_internal_set_f_3(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional int64 f_4 = 9;
inline bool Message9_M3_M13_M24::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int64_t Message9_M3_M13_M24::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_4)
  return _internal_f_4();
}
inline void Message9_M3_M13_M24::set_f_4(::int64_t value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_4)
}
inline ::int64_t Message9_M3_M13_M24::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M3_M13_M24::_internal_set_f_4(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional bytes f_5 = 10;
inline bool Message9_M3_M13_M24::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Message9_M3_M13_M24::f_5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_5)
  return _internal_f_5();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24::set_f_5(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_5_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_5)
}
inline std::string* Message9_M3_M13_M24::mutable_f_5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_5();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.f_5)
  return _s;
}
inline const std::string& Message9_M3_M13_M24::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_.Get();
}
inline void Message9_M3_M13_M24::_internal_set_f_5(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_5_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24::_internal_mutable_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.f_5_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24::release_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.f_5)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.f_5_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_5_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24::set_allocated_f_5(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.f_5_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_5_.IsDefault()) {
          _impl_.f_5_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.f_5)
}

// optional .fleetbench.proto.Message9.M3.M13.M24.E8 f_6 = 11;
inline bool Message9_M3_M13_M24::has_f_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_E8 Message9_M3_M13_M24::f_6() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_6)
  return _internal_f_6();
}
inline void Message9_M3_M13_M24::set_f_6(::fleetbench::proto::Message9_M3_M13_M24_E8 value) {
  _internal_set_f_6(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_6)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_E8 Message9_M3_M13_M24::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_E8>(_impl_.f_6_);
}
inline void Message9_M3_M13_M24::_internal_set_f_6(::fleetbench::proto::Message9_M3_M13_M24_E8 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_E8_IsValid(value));
  _impl_.f_6_ = value;
}

// optional .fleetbench.proto.Message9.M3.M13.M24.E9 f_7 = 12;
inline bool Message9_M3_M13_M24::has_f_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_E9 Message9_M3_M13_M24::f_7() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_7)
  return _internal_f_7();
}
inline void Message9_M3_M13_M24::set_f_7(::fleetbench::proto::Message9_M3_M13_M24_E9 value) {
  _internal_set_f_7(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_7)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_E9 Message9_M3_M13_M24::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_E9>(_impl_.f_7_);
}
inline void Message9_M3_M13_M24::_internal_set_f_7(::fleetbench::proto::Message9_M3_M13_M24_E9 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_E9_IsValid(value));
  _impl_.f_7_ = value;
}

// optional string f_8 = 13;
inline bool Message9_M3_M13_M24::has_f_8() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Message9_M3_M13_M24::f_8() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_8)
  return _internal_f_8();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24::set_f_8(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_8_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_8)
}
inline std::string* Message9_M3_M13_M24::mutable_f_8() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_8();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.f_8)
  return _s;
}
inline const std::string& Message9_M3_M13_M24::_internal_f_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_8_.Get();
}
inline void Message9_M3_M13_M24::_internal_set_f_8(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_8_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24::_internal_mutable_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.f_8_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24::release_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.f_8)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.f_8_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_8_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24::set_allocated_f_8(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.f_8_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_8_.IsDefault()) {
          _impl_.f_8_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.f_8)
}

// optional .fleetbench.proto.Message9.M3.M13.M24.E10 f_9 = 15;
inline bool Message9_M3_M13_M24::has_f_9() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_E10 Message9_M3_M13_M24::f_9() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_9)
  return _internal_f_9();
}
inline void Message9_M3_M13_M24::set_f_9(::fleetbench::proto::Message9_M3_M13_M24_E10 value) {
  _internal_set_f_9(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_9)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_E10 Message9_M3_M13_M24::_internal_f_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_E10>(_impl_.f_9_);
}
inline void Message9_M3_M13_M24::_internal_set_f_9(::fleetbench::proto::Message9_M3_M13_M24_E10 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_E10_IsValid(value));
  _impl_.f_9_ = value;
}

// optional bytes f_10 = 16;
inline bool Message9_M3_M13_M24::has_f_10() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Message9_M3_M13_M24::f_10() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_10)
  return _internal_f_10();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13_M24::set_f_10(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_10_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_10)
}
inline std::string* Message9_M3_M13_M24::mutable_f_10() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_10();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.f_10)
  return _s;
}
inline const std::string& Message9_M3_M13_M24::_internal_f_10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_10_.Get();
}
inline void Message9_M3_M13_M24::_internal_set_f_10(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_10_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13_M24::_internal_mutable_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.f_10_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13_M24::release_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.f_10)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.f_10_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_10_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13_M24::set_allocated_f_10(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.f_10_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_10_.IsDefault()) {
          _impl_.f_10_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.f_10)
}

// optional .fleetbench.proto.Message9.M3.M13.M24.E11 f_11 = 17;
inline bool Message9_M3_M13_M24::has_f_11() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_11_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_E11 Message9_M3_M13_M24::f_11() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_11)
  return _internal_f_11();
}
inline void Message9_M3_M13_M24::set_f_11(::fleetbench::proto::Message9_M3_M13_M24_E11 value) {
  _internal_set_f_11(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_11)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_E11 Message9_M3_M13_M24::_internal_f_11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_E11>(_impl_.f_11_);
}
inline void Message9_M3_M13_M24::_internal_set_f_11(::fleetbench::proto::Message9_M3_M13_M24_E11 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_E11_IsValid(value));
  _impl_.f_11_ = value;
}

// optional bool f_12 = 18;
inline bool Message9_M3_M13_M24::has_f_12() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = false;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline bool Message9_M3_M13_M24::f_12() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_12)
  return _internal_f_12();
}
inline void Message9_M3_M13_M24::set_f_12(bool value) {
  _internal_set_f_12(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_12)
}
inline bool Message9_M3_M13_M24::_internal_f_12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_12_;
}
inline void Message9_M3_M13_M24::_internal_set_f_12(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = value;
}

// repeated .fleetbench.proto.Message9.M3.M13.M24.E12 f_13 = 20 [packed = true];
inline int Message9_M3_M13_M24::_internal_f_13_size() const {
  return _internal_f_13().size();
}
inline int Message9_M3_M13_M24::f_13_size() const {
  return _internal_f_13_size();
}
inline void Message9_M3_M13_M24::clear_f_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_.Clear();
}
inline ::fleetbench::proto::Message9_M3_M13_M24_E12 Message9_M3_M13_M24::f_13(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_13)
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_E12>(_internal_f_13().Get(index));
}
inline void Message9_M3_M13_M24::set_f_13(int index, ::fleetbench::proto::Message9_M3_M13_M24_E12 value) {
  assert(::fleetbench::proto::Message9_M3_M13_M24_E12_IsValid(value));
  _internal_mutable_f_13()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_13)
}
inline void Message9_M3_M13_M24::add_f_13(::fleetbench::proto::Message9_M3_M13_M24_E12 value) {
  assert(::fleetbench::proto::Message9_M3_M13_M24_E12_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_13()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M3.M13.M24.f_13)
}
inline const ::google::protobuf::RepeatedField<int>& Message9_M3_M13_M24::f_13() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M3.M13.M24.f_13)
  return _internal_f_13();
}
inline ::google::protobuf::RepeatedField<int>* Message9_M3_M13_M24::mutable_f_13()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M3.M13.M24.f_13)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_13();
}
inline const ::google::protobuf::RepeatedField<int>& Message9_M3_M13_M24::_internal_f_13()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_13_;
}
inline ::google::protobuf::RepeatedField<int>* Message9_M3_M13_M24::_internal_mutable_f_13() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_13_;
}

// optional int32 f_14 = 21;
inline bool Message9_M3_M13_M24::has_f_14() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int32_t Message9_M3_M13_M24::f_14() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_14)
  return _internal_f_14();
}
inline void Message9_M3_M13_M24::set_f_14(::int32_t value) {
  _internal_set_f_14(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_14)
}
inline ::int32_t Message9_M3_M13_M24::_internal_f_14() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_14_;
}
inline void Message9_M3_M13_M24::_internal_set_f_14(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = value;
}

// optional float f_15 = 22;
inline bool Message9_M3_M13_M24::has_f_15() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline float Message9_M3_M13_M24::f_15() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_15)
  return _internal_f_15();
}
inline void Message9_M3_M13_M24::set_f_15(float value) {
  _internal_set_f_15(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_15)
}
inline float Message9_M3_M13_M24::_internal_f_15() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_15_;
}
inline void Message9_M3_M13_M24::_internal_set_f_15(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = value;
}

// optional int64 f_16 = 24;
inline bool Message9_M3_M13_M24::has_f_16() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int64_t Message9_M3_M13_M24::f_16() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_16)
  return _internal_f_16();
}
inline void Message9_M3_M13_M24::set_f_16(::int64_t value) {
  _internal_set_f_16(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_16)
}
inline ::int64_t Message9_M3_M13_M24::_internal_f_16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_16_;
}
inline void Message9_M3_M13_M24::_internal_set_f_16(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_ = value;
}

// optional .fleetbench.proto.Message9.M3.M13.M24.E13 f_17 = 25;
inline bool Message9_M3_M13_M24::has_f_17() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_ = 0;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_E13 Message9_M3_M13_M24::f_17() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_17)
  return _internal_f_17();
}
inline void Message9_M3_M13_M24::set_f_17(::fleetbench::proto::Message9_M3_M13_M24_E13 value) {
  _internal_set_f_17(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_17)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_E13 Message9_M3_M13_M24::_internal_f_17() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M13_M24_E13>(_impl_.f_17_);
}
inline void Message9_M3_M13_M24::_internal_set_f_17(::fleetbench::proto::Message9_M3_M13_M24_E13 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M13_M24_E13_IsValid(value));
  _impl_.f_17_ = value;
}

// optional float f_18 = 26;
inline bool Message9_M3_M13_M24::has_f_18() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_ = 0;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline float Message9_M3_M13_M24::f_18() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_18)
  return _internal_f_18();
}
inline void Message9_M3_M13_M24::set_f_18(float value) {
  _internal_set_f_18(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_18)
}
inline float Message9_M3_M13_M24::_internal_f_18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_18_;
}
inline void Message9_M3_M13_M24::_internal_set_f_18(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_ = value;
}

// optional int32 f_19 = 27;
inline bool Message9_M3_M13_M24::has_f_19() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M3_M13_M24::clear_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::int32_t Message9_M3_M13_M24::f_19() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_19)
  return _internal_f_19();
}
inline void Message9_M3_M13_M24::set_f_19(::int32_t value) {
  _internal_set_f_19(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.M24.f_19)
}
inline ::int32_t Message9_M3_M13_M24::_internal_f_19() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_19_;
}
inline void Message9_M3_M13_M24::_internal_set_f_19(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = value;
}

// optional .fleetbench.proto.Message9.M3.M13.M24.M35 f_27 = 28;
inline bool Message9_M3_M13_M24::has_f_27() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_27_ != nullptr);
  return value;
}
inline void Message9_M3_M13_M24::clear_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_27_ != nullptr) _impl_.f_27_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::fleetbench::proto::Message9_M3_M13_M24_M35& Message9_M3_M13_M24::_internal_f_27() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M3_M13_M24_M35* p = _impl_.f_27_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M3_M13_M24_M35&>(::fleetbench::proto::_Message9_M3_M13_M24_M35_default_instance_);
}
inline const ::fleetbench::proto::Message9_M3_M13_M24_M35& Message9_M3_M13_M24::f_27() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.M24.f_27)
  return _internal_f_27();
}
inline void Message9_M3_M13_M24::unsafe_arena_set_allocated_f_27(::fleetbench::proto::Message9_M3_M13_M24_M35* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_27_);
  }
  _impl_.f_27_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M13_M24_M35*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M3.M13.M24.f_27)
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35* Message9_M3_M13_M24::release_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::fleetbench::proto::Message9_M3_M13_M24_M35* released = _impl_.f_27_;
  _impl_.f_27_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35* Message9_M3_M13_M24::unsafe_arena_release_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.M24.f_27)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::fleetbench::proto::Message9_M3_M13_M24_M35* temp = _impl_.f_27_;
  _impl_.f_27_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35* Message9_M3_M13_M24::_internal_mutable_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_27_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M3_M13_M24_M35>(GetArena());
    _impl_.f_27_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M13_M24_M35*>(p);
  }
  return _impl_.f_27_;
}
inline ::fleetbench::proto::Message9_M3_M13_M24_M35* Message9_M3_M13_M24::mutable_f_27() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::fleetbench::proto::Message9_M3_M13_M24_M35* _msg = _internal_mutable_f_27();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.M24.f_27)
  return _msg;
}
inline void Message9_M3_M13_M24::set_allocated_f_27(::fleetbench::proto::Message9_M3_M13_M24_M35* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_27_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.f_27_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M13_M24_M35*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.M24.f_27)
}

// -------------------------------------------------------------------

// Message9_M3_M13

// optional string f_0 = 1;
inline bool Message9_M3_M13::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M3_M13::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M3_M13::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M13::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M13.f_0)
}
inline std::string* Message9_M3_M13::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.f_0)
  return _s;
}
inline const std::string& Message9_M3_M13::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M3_M13::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M3_M13::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M3_M13::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M13::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.f_0)
}

// optional .fleetbench.proto.Message9.M3.M13.M24 f_1 = 2;
inline bool Message9_M3_M13::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_1_ != nullptr);
  return value;
}
inline void Message9_M3_M13::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ != nullptr) _impl_.f_1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M3_M13_M24& Message9_M3_M13::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M3_M13_M24* p = _impl_.f_1_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M3_M13_M24&>(::fleetbench::proto::_Message9_M3_M13_M24_default_instance_);
}
inline const ::fleetbench::proto::Message9_M3_M13_M24& Message9_M3_M13::f_1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M13.f_1)
  return _internal_f_1();
}
inline void Message9_M3_M13::unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M3_M13_M24* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_1_);
  }
  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M13_M24*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M3.M13.f_1)
}
inline ::fleetbench::proto::Message9_M3_M13_M24* Message9_M3_M13::release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M3_M13_M24* released = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M3_M13_M24* Message9_M3_M13::unsafe_arena_release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M13.f_1)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M3_M13_M24* temp = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M3_M13_M24* Message9_M3_M13::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M3_M13_M24>(GetArena());
    _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M13_M24*>(p);
  }
  return _impl_.f_1_;
}
inline ::fleetbench::proto::Message9_M3_M13_M24* Message9_M3_M13::mutable_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M3_M13_M24* _msg = _internal_mutable_f_1();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M13.f_1)
  return _msg;
}
inline void Message9_M3_M13::set_allocated_f_1(::fleetbench::proto::Message9_M3_M13_M24* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M13_M24*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M13.f_1)
}

// -------------------------------------------------------------------

// Message9_M3_M14_M27

// optional bool f_0 = 1;
inline bool Message9_M3_M14_M27::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M3_M14_M27::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool Message9_M3_M14_M27::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M14.M27.f_0)
  return _internal_f_0();
}
inline void Message9_M3_M14_M27::set_f_0(bool value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M14.M27.f_0)
}
inline bool Message9_M3_M14_M27::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M3_M14_M27::_internal_set_f_0(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M3_M14

// optional string f_0 = 2;
inline bool Message9_M3_M14::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M3_M14::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M3_M14::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M14.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M14::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M14.f_0)
}
inline std::string* Message9_M3_M14::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M14.f_0)
  return _s;
}
inline const std::string& Message9_M3_M14::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M3_M14::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M3_M14::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M3_M14::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M14.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M14::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M14.f_0)
}

// optional .fleetbench.proto.Message9.M3.M14.M27 f_2 = 3;
inline bool Message9_M3_M14::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_2_ != nullptr);
  return value;
}
inline void Message9_M3_M14::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ != nullptr) _impl_.f_2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M3_M14_M27& Message9_M3_M14::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M3_M14_M27* p = _impl_.f_2_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M3_M14_M27&>(::fleetbench::proto::_Message9_M3_M14_M27_default_instance_);
}
inline const ::fleetbench::proto::Message9_M3_M14_M27& Message9_M3_M14::f_2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M14.f_2)
  return _internal_f_2();
}
inline void Message9_M3_M14::unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M3_M14_M27* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_2_);
  }
  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M14_M27*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M3.M14.f_2)
}
inline ::fleetbench::proto::Message9_M3_M14_M27* Message9_M3_M14::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M3_M14_M27* released = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M3_M14_M27* Message9_M3_M14::unsafe_arena_release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M14.f_2)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M3_M14_M27* temp = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M3_M14_M27* Message9_M3_M14::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M3_M14_M27>(GetArena());
    _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M14_M27*>(p);
  }
  return _impl_.f_2_;
}
inline ::fleetbench::proto::Message9_M3_M14_M27* Message9_M3_M14::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M3_M14_M27* _msg = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M14.f_2)
  return _msg;
}
inline void Message9_M3_M14::set_allocated_f_2(::fleetbench::proto::Message9_M3_M14_M27* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M14_M27*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M14.f_2)
}

// -------------------------------------------------------------------

// Message9_M3_M20_M29

// optional .fleetbench.proto.Message9.M3.M20.M29.E15 f_0 = 2;
inline bool Message9_M3_M20_M29::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M3_M20_M29::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::fleetbench::proto::Message9_M3_M20_M29_E15 Message9_M3_M20_M29::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M20.M29.f_0)
  return _internal_f_0();
}
inline void Message9_M3_M20_M29::set_f_0(::fleetbench::proto::Message9_M3_M20_M29_E15 value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M20.M29.f_0)
}
inline ::fleetbench::proto::Message9_M3_M20_M29_E15 Message9_M3_M20_M29::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M3_M20_M29_E15>(_impl_.f_0_);
}
inline void Message9_M3_M20_M29::_internal_set_f_0(::fleetbench::proto::Message9_M3_M20_M29_E15 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M3_M20_M29_E15_IsValid(value));
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M3_M20

// repeated int32 f_0 = 1 [packed = true];
inline int Message9_M3_M20::_internal_f_0_size() const {
  return _internal_f_0().size();
}
inline int Message9_M3_M20::f_0_size() const {
  return _internal_f_0_size();
}
inline void Message9_M3_M20::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.Clear();
}
inline ::int32_t Message9_M3_M20::f_0(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M20.f_0)
  return _internal_f_0().Get(index);
}
inline void Message9_M3_M20::set_f_0(int index, ::int32_t value) {
  _internal_mutable_f_0()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M20.f_0)
}
inline void Message9_M3_M20::add_f_0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_0()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M3.M20.f_0)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Message9_M3_M20::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M3.M20.f_0)
  return _internal_f_0();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M3_M20::mutable_f_0()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M3.M20.f_0)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_0();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Message9_M3_M20::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M3_M20::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_0_;
}

// optional .fleetbench.proto.Message9.M3.M20.M29 f_1 = 3;
inline bool Message9_M3_M20::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_1_ != nullptr);
  return value;
}
inline void Message9_M3_M20::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ != nullptr) _impl_.f_1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M3_M20_M29& Message9_M3_M20::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M3_M20_M29* p = _impl_.f_1_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M3_M20_M29&>(::fleetbench::proto::_Message9_M3_M20_M29_default_instance_);
}
inline const ::fleetbench::proto::Message9_M3_M20_M29& Message9_M3_M20::f_1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M20.f_1)
  return _internal_f_1();
}
inline void Message9_M3_M20::unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M3_M20_M29* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_1_);
  }
  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M20_M29*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M3.M20.f_1)
}
inline ::fleetbench::proto::Message9_M3_M20_M29* Message9_M3_M20::release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M3_M20_M29* released = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M3_M20_M29* Message9_M3_M20::unsafe_arena_release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M20.f_1)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M3_M20_M29* temp = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M3_M20_M29* Message9_M3_M20::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M3_M20_M29>(GetArena());
    _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M20_M29*>(p);
  }
  return _impl_.f_1_;
}
inline ::fleetbench::proto::Message9_M3_M20_M29* Message9_M3_M20::mutable_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M3_M20_M29* _msg = _internal_mutable_f_1();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M20.f_1)
  return _msg;
}
inline void Message9_M3_M20::set_allocated_f_1(::fleetbench::proto::Message9_M3_M20_M29* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M20_M29*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M20.f_1)
}

// -------------------------------------------------------------------

// Message9_M3_M21

// optional int64 f_0 = 1;
inline bool Message9_M3_M21::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M3_M21::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t Message9_M3_M21::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M21.f_0)
  return _internal_f_0();
}
inline void Message9_M3_M21::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M21.f_0)
}
inline ::int64_t Message9_M3_M21::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M3_M21::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional double f_1 = 2;
inline bool Message9_M3_M21::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M3_M21::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double Message9_M3_M21::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M21.f_1)
  return _internal_f_1();
}
inline void Message9_M3_M21::set_f_1(double value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M21.f_1)
}
inline double Message9_M3_M21::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M3_M21::_internal_set_f_1(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// optional bytes f_2 = 3;
inline bool Message9_M3_M21::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M3_M21::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M3_M21::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M21.f_2)
  return _internal_f_2();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M21::set_f_2(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_2_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M21.f_2)
}
inline std::string* Message9_M3_M21::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M21.f_2)
  return _s;
}
inline const std::string& Message9_M3_M21::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_.Get();
}
inline void Message9_M3_M21::_internal_set_f_2(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_2_.Set(value, GetArena());
}
inline std::string* Message9_M3_M21::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_2_.Mutable( GetArena());
}
inline std::string* Message9_M3_M21::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M21.f_2)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_2_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_2_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M21::set_allocated_f_2(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_2_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_2_.IsDefault()) {
          _impl_.f_2_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M21.f_2)
}

// optional fixed64 f_3 = 5;
inline bool Message9_M3_M21::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M3_M21::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t Message9_M3_M21::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M21.f_3)
  return _internal_f_3();
}
inline void Message9_M3_M21::set_f_3(::uint64_t value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M21.f_3)
}
inline ::uint64_t Message9_M3_M21::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M3_M21::_internal_set_f_3(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional bool f_4 = 6;
inline bool Message9_M3_M21::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M3_M21::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool Message9_M3_M21::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M21.f_4)
  return _internal_f_4();
}
inline void Message9_M3_M21::set_f_4(bool value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M21.f_4)
}
inline bool Message9_M3_M21::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M3_M21::_internal_set_f_4(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional string f_5 = 8;
inline bool Message9_M3_M21::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M3_M21::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Message9_M3_M21::f_5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.M21.f_5)
  return _internal_f_5();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M3_M21::set_f_5(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_5_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.M21.f_5)
}
inline std::string* Message9_M3_M21::mutable_f_5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_5();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.M21.f_5)
  return _s;
}
inline const std::string& Message9_M3_M21::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_.Get();
}
inline void Message9_M3_M21::_internal_set_f_5(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_5_.Set(value, GetArena());
}
inline std::string* Message9_M3_M21::_internal_mutable_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.f_5_.Mutable( GetArena());
}
inline std::string* Message9_M3_M21::release_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.M21.f_5)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.f_5_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_5_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M3_M21::set_allocated_f_5(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.f_5_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_5_.IsDefault()) {
          _impl_.f_5_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.M21.f_5)
}

// -------------------------------------------------------------------

// Message9_M3

// optional double f_0 = 3;
inline bool Message9_M3::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M3::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double Message9_M3::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.f_0)
  return _internal_f_0();
}
inline void Message9_M3::set_f_0(double value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M3.f_0)
}
inline double Message9_M3::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M3::_internal_set_f_0(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M3.M10 f_3 = 5;
inline bool Message9_M3::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_3_ != nullptr);
  return value;
}
inline void Message9_M3::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ != nullptr) _impl_.f_3_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M3_M10& Message9_M3::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M3_M10* p = _impl_.f_3_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M3_M10&>(::fleetbench::proto::_Message9_M3_M10_default_instance_);
}
inline const ::fleetbench::proto::Message9_M3_M10& Message9_M3::f_3() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.f_3)
  return _internal_f_3();
}
inline void Message9_M3::unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M3_M10* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_3_);
  }
  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M10*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M3.f_3)
}
inline ::fleetbench::proto::Message9_M3_M10* Message9_M3::release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M3_M10* released = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M3_M10* Message9_M3::unsafe_arena_release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.f_3)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M3_M10* temp = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M3_M10* Message9_M3::_internal_mutable_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M3_M10>(GetArena());
    _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M10*>(p);
  }
  return _impl_.f_3_;
}
inline ::fleetbench::proto::Message9_M3_M10* Message9_M3::mutable_f_3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M3_M10* _msg = _internal_mutable_f_3();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.f_3)
  return _msg;
}
inline void Message9_M3::set_allocated_f_3(::fleetbench::proto::Message9_M3_M10* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_3_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M10*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.f_3)
}

// repeated .fleetbench.proto.Message9.M3.M13 f_5 = 7;
inline int Message9_M3::_internal_f_5_size() const {
  return _internal_f_5().size();
}
inline int Message9_M3::f_5_size() const {
  return _internal_f_5_size();
}
inline void Message9_M3::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_.Clear();
}
inline ::fleetbench::proto::Message9_M3_M13* Message9_M3::mutable_f_5(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.f_5)
  return _internal_mutable_f_5()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M13>* Message9_M3::mutable_f_5()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M3.f_5)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_5();
}
inline const ::fleetbench::proto::Message9_M3_M13& Message9_M3::f_5(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.f_5)
  return _internal_f_5().Get(index);
}
inline ::fleetbench::proto::Message9_M3_M13* Message9_M3::add_f_5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M3_M13* _add = _internal_mutable_f_5()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M3.f_5)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M13>& Message9_M3::f_5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M3.f_5)
  return _internal_f_5();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M13>&
Message9_M3::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M13>*
Message9_M3::_internal_mutable_f_5() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_5_;
}

// optional .fleetbench.proto.Message9.M3.M14 f_7 = 8;
inline bool Message9_M3::has_f_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_7_ != nullptr);
  return value;
}
inline void Message9_M3::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_7_ != nullptr) _impl_.f_7_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M3_M14& Message9_M3::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M3_M14* p = _impl_.f_7_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M3_M14&>(::fleetbench::proto::_Message9_M3_M14_default_instance_);
}
inline const ::fleetbench::proto::Message9_M3_M14& Message9_M3::f_7() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.f_7)
  return _internal_f_7();
}
inline void Message9_M3::unsafe_arena_set_allocated_f_7(::fleetbench::proto::Message9_M3_M14* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_7_);
  }
  _impl_.f_7_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M14*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M3.f_7)
}
inline ::fleetbench::proto::Message9_M3_M14* Message9_M3::release_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M3_M14* released = _impl_.f_7_;
  _impl_.f_7_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M3_M14* Message9_M3::unsafe_arena_release_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.f_7)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M3_M14* temp = _impl_.f_7_;
  _impl_.f_7_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M3_M14* Message9_M3::_internal_mutable_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_7_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M3_M14>(GetArena());
    _impl_.f_7_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M14*>(p);
  }
  return _impl_.f_7_;
}
inline ::fleetbench::proto::Message9_M3_M14* Message9_M3::mutable_f_7() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M3_M14* _msg = _internal_mutable_f_7();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.f_7)
  return _msg;
}
inline void Message9_M3::set_allocated_f_7(::fleetbench::proto::Message9_M3_M14* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_7_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_7_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M14*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.f_7)
}

// repeated .fleetbench.proto.Message9.M3.M20 f_8 = 9;
inline int Message9_M3::_internal_f_8_size() const {
  return _internal_f_8().size();
}
inline int Message9_M3::f_8_size() const {
  return _internal_f_8_size();
}
inline void Message9_M3::clear_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_.Clear();
}
inline ::fleetbench::proto::Message9_M3_M20* Message9_M3::mutable_f_8(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.f_8)
  return _internal_mutable_f_8()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M20>* Message9_M3::mutable_f_8()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M3.f_8)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_8();
}
inline const ::fleetbench::proto::Message9_M3_M20& Message9_M3::f_8(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.f_8)
  return _internal_f_8().Get(index);
}
inline ::fleetbench::proto::Message9_M3_M20* Message9_M3::add_f_8() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M3_M20* _add = _internal_mutable_f_8()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M3.f_8)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M20>& Message9_M3::f_8() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M3.f_8)
  return _internal_f_8();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M20>&
Message9_M3::_internal_f_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_8_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M3_M20>*
Message9_M3::_internal_mutable_f_8() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_8_;
}

// optional .fleetbench.proto.Message9.M3.M21 f_9 = 10;
inline bool Message9_M3::has_f_9() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_9_ != nullptr);
  return value;
}
inline void Message9_M3::clear_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_9_ != nullptr) _impl_.f_9_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::fleetbench::proto::Message9_M3_M21& Message9_M3::_internal_f_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M3_M21* p = _impl_.f_9_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M3_M21&>(::fleetbench::proto::_Message9_M3_M21_default_instance_);
}
inline const ::fleetbench::proto::Message9_M3_M21& Message9_M3::f_9() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M3.f_9)
  return _internal_f_9();
}
inline void Message9_M3::unsafe_arena_set_allocated_f_9(::fleetbench::proto::Message9_M3_M21* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_9_);
  }
  _impl_.f_9_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M21*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M3.f_9)
}
inline ::fleetbench::proto::Message9_M3_M21* Message9_M3::release_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M3_M21* released = _impl_.f_9_;
  _impl_.f_9_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M3_M21* Message9_M3::unsafe_arena_release_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M3.f_9)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M3_M21* temp = _impl_.f_9_;
  _impl_.f_9_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M3_M21* Message9_M3::_internal_mutable_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_9_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M3_M21>(GetArena());
    _impl_.f_9_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M21*>(p);
  }
  return _impl_.f_9_;
}
inline ::fleetbench::proto::Message9_M3_M21* Message9_M3::mutable_f_9() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::fleetbench::proto::Message9_M3_M21* _msg = _internal_mutable_f_9();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M3.f_9)
  return _msg;
}
inline void Message9_M3::set_allocated_f_9(::fleetbench::proto::Message9_M3_M21* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_9_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.f_9_ = reinterpret_cast<::fleetbench::proto::Message9_M3_M21*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M3.f_9)
}

// -------------------------------------------------------------------

// Message9_M4_M19_M28

// optional uint32 f_0 = 1;
inline bool Message9_M4_M19_M28::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M4_M19_M28::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Message9_M4_M19_M28::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M4.M19.M28.f_0)
  return _internal_f_0();
}
inline void Message9_M4_M19_M28::set_f_0(::uint32_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M4.M19.M28.f_0)
}
inline ::uint32_t Message9_M4_M19_M28::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M4_M19_M28::_internal_set_f_0(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M4_M19

// repeated int64 f_0 = 2 [packed = true];
inline int Message9_M4_M19::_internal_f_0_size() const {
  return _internal_f_0().size();
}
inline int Message9_M4_M19::f_0_size() const {
  return _internal_f_0_size();
}
inline void Message9_M4_M19::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.Clear();
}
inline ::int64_t Message9_M4_M19::f_0(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M4.M19.f_0)
  return _internal_f_0().Get(index);
}
inline void Message9_M4_M19::set_f_0(int index, ::int64_t value) {
  _internal_mutable_f_0()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M4.M19.f_0)
}
inline void Message9_M4_M19::add_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_0()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M4.M19.f_0)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Message9_M4_M19::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M4.M19.f_0)
  return _internal_f_0();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M4_M19::mutable_f_0()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M4.M19.f_0)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_0();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Message9_M4_M19::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M4_M19::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_0_;
}

// optional .fleetbench.proto.Message9.M4.M19.M28 f_2 = 4;
inline bool Message9_M4_M19::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_2_ != nullptr);
  return value;
}
inline void Message9_M4_M19::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ != nullptr) _impl_.f_2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M4_M19_M28& Message9_M4_M19::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M4_M19_M28* p = _impl_.f_2_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M4_M19_M28&>(::fleetbench::proto::_Message9_M4_M19_M28_default_instance_);
}
inline const ::fleetbench::proto::Message9_M4_M19_M28& Message9_M4_M19::f_2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M4.M19.f_2)
  return _internal_f_2();
}
inline void Message9_M4_M19::unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M4_M19_M28* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_2_);
  }
  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M4_M19_M28*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M4.M19.f_2)
}
inline ::fleetbench::proto::Message9_M4_M19_M28* Message9_M4_M19::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M4_M19_M28* released = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M4_M19_M28* Message9_M4_M19::unsafe_arena_release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M4.M19.f_2)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M4_M19_M28* temp = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M4_M19_M28* Message9_M4_M19::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M4_M19_M28>(GetArena());
    _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M4_M19_M28*>(p);
  }
  return _impl_.f_2_;
}
inline ::fleetbench::proto::Message9_M4_M19_M28* Message9_M4_M19::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M4_M19_M28* _msg = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M4.M19.f_2)
  return _msg;
}
inline void Message9_M4_M19::set_allocated_f_2(::fleetbench::proto::Message9_M4_M19_M28* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M4_M19_M28*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M4.M19.f_2)
}

// -------------------------------------------------------------------

// Message9_M4

// optional bool f_0 = 1;
inline bool Message9_M4::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M4::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool Message9_M4::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M4.f_0)
  return _internal_f_0();
}
inline void Message9_M4::set_f_0(bool value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M4.f_0)
}
inline bool Message9_M4::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M4::_internal_set_f_0(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M4.M19 f_1 = 2;
inline bool Message9_M4::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_1_ != nullptr);
  return value;
}
inline void Message9_M4::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ != nullptr) _impl_.f_1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M4_M19& Message9_M4::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M4_M19* p = _impl_.f_1_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M4_M19&>(::fleetbench::proto::_Message9_M4_M19_default_instance_);
}
inline const ::fleetbench::proto::Message9_M4_M19& Message9_M4::f_1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M4.f_1)
  return _internal_f_1();
}
inline void Message9_M4::unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M4_M19* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_1_);
  }
  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M4_M19*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M4.f_1)
}
inline ::fleetbench::proto::Message9_M4_M19* Message9_M4::release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M4_M19* released = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M4_M19* Message9_M4::unsafe_arena_release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M4.f_1)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M4_M19* temp = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M4_M19* Message9_M4::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M4_M19>(GetArena());
    _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M4_M19*>(p);
  }
  return _impl_.f_1_;
}
inline ::fleetbench::proto::Message9_M4_M19* Message9_M4::mutable_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M4_M19* _msg = _internal_mutable_f_1();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M4.f_1)
  return _msg;
}
inline void Message9_M4::set_allocated_f_1(::fleetbench::proto::Message9_M4_M19* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M4_M19*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M4.f_1)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M48_M54

// optional double f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M36_M40_M48_M54::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M48_M54::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Message9_M5_M11_M23_M34_M36_M40_M48_M54::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.M54.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M48_M54::set_f_0(double value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.M54.f_0)
}
inline double Message9_M5_M11_M23_M34_M36_M40_M48_M54::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M48_M54::_internal_set_f_0(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M48

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.E37 f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M36_M40_M48::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M48::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37 Message9_M5_M11_M23_M34_M36_M40_M48::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M48::set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37 value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.f_0)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37 Message9_M5_M11_M23_M34_M36_M40_M48::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37>(_impl_.f_0_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M48::_internal_set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37_IsValid(value));
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.M54 f_1 = 2;
inline bool Message9_M5_M11_M23_M34_M36_M40_M48::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_1_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M48::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ != nullptr) _impl_.f_1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54& Message9_M5_M11_M23_M34_M36_M40_M48::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* p = _impl_.f_1_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_M48_M54_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54& Message9_M5_M11_M23_M34_M36_M40_M48::f_1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M48::unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_1_);
  }
  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.f_1)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* Message9_M5_M11_M23_M34_M36_M40_M48::release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* released = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* Message9_M5_M11_M23_M34_M36_M40_M48::unsafe_arena_release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.f_1)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* temp = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* Message9_M5_M11_M23_M34_M36_M40_M48::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54>(GetArena());
    _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54*>(p);
  }
  return _impl_.f_1_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* Message9_M5_M11_M23_M34_M36_M40_M48::mutable_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* _msg = _internal_mutable_f_1();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.f_1)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M48::set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_M54*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48.f_1)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M49

// optional string f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M36_M40_M49::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M49::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M49::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M49.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M49::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M49.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M49::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M49.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M49::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M49::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M49::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M49::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M49.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M49::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M49.f_0)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68

// optional fixed64 f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.M68.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68::set_f_0(::uint64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.M68.f_0)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68::_internal_set_f_0(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64

// optional string f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.f_0)
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.M68 f_1 = 2;
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::_internal_f_1_size() const {
  return _internal_f_1().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::f_1_size() const {
  return _internal_f_1_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::mutable_f_1(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.f_1)
  return _internal_mutable_f_1()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::mutable_f_1()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.f_1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_1();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::f_1(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.f_1)
  return _internal_f_1().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::add_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68* _add = _internal_mutable_f_1()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.f_1)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::f_1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64.f_1)
  return _internal_f_1();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_M68>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_1_;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74

// optional int32 f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M74.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74::set_f_0(::int32_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M74.f_0)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74::_internal_set_f_0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75

// optional string f_0 = 4;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M75.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M75.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M75.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M75.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M75.f_0)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73

// optional uint64 f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_0() const {
  bool value = (_impl_._has_bits_[1] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::uint64_t{0u};
  _impl_._has_bits_[1] &= ~0x08000000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_0(::uint64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[1] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_0)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_0(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional bytes f_1 = 4;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_1)
  return _internal_f_1();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_1(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_1_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_1)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_1();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_1)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_1(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_1_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_1_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_1)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_1_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_1_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_1(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_1_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_1_.IsDefault()) {
          _impl_.f_1_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_1)
}

// optional string f_2 = 5;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_2)
  return _internal_f_2();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_2(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_2_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_2)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_2)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_2(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_2_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.f_2_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_2)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.f_2_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_2_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_2(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.f_2_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_2_.IsDefault()) {
          _impl_.f_2_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_2)
}

// optional int64 f_3 = 7;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_3() const {
  bool value = (_impl_._has_bits_[1] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x10000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_3(::int64_t value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[1] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_3)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_3(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional float f_4 = 8;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_4() const {
  bool value = (_impl_._has_bits_[1] & 0x40000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = 0;
  _impl_._has_bits_[1] &= ~0x40000000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_4)
  return _internal_f_4();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_4(float value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[1] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_4)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_4(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// repeated int32 f_5 = 9 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_5_size() const {
  return _internal_f_5().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_5_size() const {
  return _internal_f_5_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_.Clear();
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_5(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_5)
  return _internal_f_5().Get(index);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_5(int index, ::int32_t value) {
  _internal_mutable_f_5()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_5)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_5(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_5()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_5)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_5)
  return _internal_f_5();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_5()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_5)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_5();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_5() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_5_;
}

// optional int64 f_6 = 10;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_6() const {
  bool value = (_impl_._has_bits_[1] & 0x20000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x20000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_6() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_6)
  return _internal_f_6();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_6(::int64_t value) {
  _internal_set_f_6(value);
  _impl_._has_bits_[1] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_6)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_6_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_6(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = value;
}

// optional string f_7 = 11;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_7() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_7)
  return _internal_f_7();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_7(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_7_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_7)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_7() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_7();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_7)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_7_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_7(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_7_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.f_7_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_7)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.f_7_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_7_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_7(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.f_7_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_7_.IsDefault()) {
          _impl_.f_7_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_7)
}

// optional int64 f_8 = 12;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_8() const {
  bool value = (_impl_._has_bits_[2] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_ = ::int64_t{0};
  _impl_._has_bits_[2] &= ~0x00000001u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_8() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_8)
  return _internal_f_8();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_8(::int64_t value) {
  _internal_set_f_8(value);
  _impl_._has_bits_[2] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_8)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_8_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_8(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_ = value;
}

// optional uint32 f_9 = 13;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_9() const {
  bool value = (_impl_._has_bits_[1] & 0x80000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = 0u;
  _impl_._has_bits_[1] &= ~0x80000000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_9() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_9)
  return _internal_f_9();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_9(::uint32_t value) {
  _internal_set_f_9(value);
  _impl_._has_bits_[1] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_9)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_9_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_9(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = value;
}

// optional int64 f_10 = 14;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_10() const {
  bool value = (_impl_._has_bits_[2] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_ = ::int64_t{0};
  _impl_._has_bits_[2] &= ~0x00000002u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_10() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_10)
  return _internal_f_10();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_10(::int64_t value) {
  _internal_set_f_10(value);
  _impl_._has_bits_[2] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_10)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_10_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_10(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E54 f_11 = 16;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_11() const {
  bool value = (_impl_._has_bits_[2] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_11_ = 0;
  _impl_._has_bits_[2] &= ~0x00000004u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_11() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_11)
  return _internal_f_11();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_11(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54 value) {
  _internal_set_f_11(value);
  _impl_._has_bits_[2] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_11)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54>(_impl_.f_11_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_11(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_IsValid(value));
  _impl_.f_11_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E55 f_12 = 18;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_12() const {
  bool value = (_impl_._has_bits_[2] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = 0;
  _impl_._has_bits_[2] &= ~0x00000008u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_12() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_12)
  return _internal_f_12();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55 value) {
  _internal_set_f_12(value);
  _impl_._has_bits_[2] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_12)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55>(_impl_.f_12_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_IsValid(value));
  _impl_.f_12_ = value;
}

// optional fixed64 f_13 = 19;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_13() const {
  bool value = (_impl_._has_bits_[2] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_ = ::uint64_t{0u};
  _impl_._has_bits_[2] &= ~0x00000010u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_13() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_13)
  return _internal_f_13();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_13(::uint64_t value) {
  _internal_set_f_13(value);
  _impl_._has_bits_[2] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_13)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_13_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_13(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_ = value;
}

// optional int64 f_14 = 20;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_14() const {
  bool value = (_impl_._has_bits_[2] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = ::int64_t{0};
  _impl_._has_bits_[2] &= ~0x00000020u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_14() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_14)
  return _internal_f_14();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_14(::int64_t value) {
  _internal_set_f_14(value);
  _impl_._has_bits_[2] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_14)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_14() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_14_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_14(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = value;
}

// optional uint64 f_15 = 21;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_15() const {
  bool value = (_impl_._has_bits_[2] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = ::uint64_t{0u};
  _impl_._has_bits_[2] &= ~0x00000040u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_15() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_15)
  return _internal_f_15();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_15(::uint64_t value) {
  _internal_set_f_15(value);
  _impl_._has_bits_[2] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_15)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_15() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_15_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_15(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = value;
}

// optional string f_16 = 23;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_16() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_16() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_16)
  return _internal_f_16();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_16(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_16_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_16)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_16() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_16();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_16)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_16_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_16(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_16_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.f_16_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_16)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.f_16_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_16_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_16(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.f_16_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_16_.IsDefault()) {
          _impl_.f_16_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_16)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E56 f_17 = 26;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_17() const {
  bool value = (_impl_._has_bits_[2] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_ = 0;
  _impl_._has_bits_[2] &= ~0x00000200u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_17() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_17)
  return _internal_f_17();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_17(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56 value) {
  _internal_set_f_17(value);
  _impl_._has_bits_[2] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_17)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_17() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56>(_impl_.f_17_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_17(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_IsValid(value));
  _impl_.f_17_ = value;
}

// optional int64 f_18 = 27;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_18() const {
  bool value = (_impl_._has_bits_[2] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_ = ::int64_t{0};
  _impl_._has_bits_[2] &= ~0x00000080u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_18() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_18)
  return _internal_f_18();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_18(::int64_t value) {
  _internal_set_f_18(value);
  _impl_._has_bits_[2] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_18)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_18_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_18(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_ = value;
}

// optional uint64 f_19 = 28;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_19() const {
  bool value = (_impl_._has_bits_[2] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = ::uint64_t{0u};
  _impl_._has_bits_[2] &= ~0x00000100u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_19() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_19)
  return _internal_f_19();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_19(::uint64_t value) {
  _internal_set_f_19(value);
  _impl_._has_bits_[2] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_19)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_19() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_19_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_19(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = value;
}

// optional int32 f_20 = 31;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_20() const {
  bool value = (_impl_._has_bits_[2] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_20() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_ = 0;
  _impl_._has_bits_[2] &= ~0x00000400u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_20() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_20)
  return _internal_f_20();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_20(::int32_t value) {
  _internal_set_f_20(value);
  _impl_._has_bits_[2] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_20)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_20() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_20_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_20(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_ = value;
}

// optional int64 f_21 = 34;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_21() const {
  bool value = (_impl_._has_bits_[2] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = ::int64_t{0};
  _impl_._has_bits_[2] &= ~0x00000800u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_21() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_21)
  return _internal_f_21();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_21(::int64_t value) {
  _internal_set_f_21(value);
  _impl_._has_bits_[2] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_21)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_21() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_21_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_21(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = value;
}

// optional uint64 f_22 = 37;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_22() const {
  bool value = (_impl_._has_bits_[2] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = ::uint64_t{0u};
  _impl_._has_bits_[2] &= ~0x00001000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_22() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_22)
  return _internal_f_22();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_22(::uint64_t value) {
  _internal_set_f_22(value);
  _impl_._has_bits_[2] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_22)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_22_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_22(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = value;
}

// optional bool f_23 = 39;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_23() const {
  bool value = (_impl_._has_bits_[3] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_23_ = false;
  _impl_._has_bits_[3] &= ~0x08000000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_23() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_23)
  return _internal_f_23();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_23(bool value) {
  _internal_set_f_23(value);
  _impl_._has_bits_[3] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_23)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_23() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_23_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_23(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_23_ = value;
}

// optional int32 f_24 = 41;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_24() const {
  bool value = (_impl_._has_bits_[2] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_24() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_24_ = 0;
  _impl_._has_bits_[2] &= ~0x00004000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_24() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_24)
  return _internal_f_24();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_24(::int32_t value) {
  _internal_set_f_24(value);
  _impl_._has_bits_[2] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_24)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_24() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_24_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_24(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_24_ = value;
}

// optional fixed64 f_25 = 42;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_25() const {
  bool value = (_impl_._has_bits_[2] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_25_ = ::uint64_t{0u};
  _impl_._has_bits_[2] &= ~0x00002000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_25() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_25)
  return _internal_f_25();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_25(::uint64_t value) {
  _internal_set_f_25(value);
  _impl_._has_bits_[2] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_25)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_25() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_25_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_25(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_25_ = value;
}

// optional int32 f_26 = 43;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_26() const {
  bool value = (_impl_._has_bits_[2] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_26() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_26_ = 0;
  _impl_._has_bits_[2] &= ~0x00008000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_26() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_26)
  return _internal_f_26();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_26(::int32_t value) {
  _internal_set_f_26(value);
  _impl_._has_bits_[2] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_26)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_26() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_26_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_26(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_26_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E57 f_27 = 45;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_27() const {
  bool value = (_impl_._has_bits_[2] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_27_ = 0;
  _impl_._has_bits_[2] &= ~0x00010000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_27() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_27)
  return _internal_f_27();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_27(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57 value) {
  _internal_set_f_27(value);
  _impl_._has_bits_[2] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_27)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_27() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57>(_impl_.f_27_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_27(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_IsValid(value));
  _impl_.f_27_ = value;
}

// optional int32 f_28 = 46;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_28() const {
  bool value = (_impl_._has_bits_[2] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_28_ = 0;
  _impl_._has_bits_[2] &= ~0x00020000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_28() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_28)
  return _internal_f_28();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_28(::int32_t value) {
  _internal_set_f_28(value);
  _impl_._has_bits_[2] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_28)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_28() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_28_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_28(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_28_ = value;
}

// optional bytes f_29 = 47;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_29() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_29() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_29_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_29() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_29)
  return _internal_f_29();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_29(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_29_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_29)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_29() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_29();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_29)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_29() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_29_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_29(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_29_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_29() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.f_29_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_29() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_29)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.f_29_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_29_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_29(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.f_29_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_29_.IsDefault()) {
          _impl_.f_29_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_29)
}

// optional fixed32 f_30 = 49;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_30() const {
  bool value = (_impl_._has_bits_[2] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_30_ = 0u;
  _impl_._has_bits_[2] &= ~0x00040000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_30() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_30)
  return _internal_f_30();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_30(::uint32_t value) {
  _internal_set_f_30(value);
  _impl_._has_bits_[2] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_30)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_30() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_30_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_30(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_30_ = value;
}

// optional fixed64 f_31 = 51;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_31() const {
  bool value = (_impl_._has_bits_[2] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_31() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_31_ = ::uint64_t{0u};
  _impl_._has_bits_[2] &= ~0x00100000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_31() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_31)
  return _internal_f_31();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_31(::uint64_t value) {
  _internal_set_f_31(value);
  _impl_._has_bits_[2] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_31)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_31() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_31_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_31(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_31_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E58 f_32 = 52;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_32() const {
  bool value = (_impl_._has_bits_[2] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_32_ = 0;
  _impl_._has_bits_[2] &= ~0x00080000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_32() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_32)
  return _internal_f_32();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_32(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58 value) {
  _internal_set_f_32(value);
  _impl_._has_bits_[2] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_32)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58>(_impl_.f_32_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_32(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_IsValid(value));
  _impl_.f_32_ = value;
}

// optional int64 f_33 = 53;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_33() const {
  bool value = (_impl_._has_bits_[2] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_33() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_33_ = ::int64_t{0};
  _impl_._has_bits_[2] &= ~0x00200000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_33() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_33)
  return _internal_f_33();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_33(::int64_t value) {
  _internal_set_f_33(value);
  _impl_._has_bits_[2] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_33)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_33() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_33_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_33(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_33_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E59 f_34 = 54;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_34() const {
  bool value = (_impl_._has_bits_[2] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_34() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_34_ = 0;
  _impl_._has_bits_[2] &= ~0x00400000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_34() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_34)
  return _internal_f_34();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_34(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59 value) {
  _internal_set_f_34(value);
  _impl_._has_bits_[2] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_34)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_34() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59>(_impl_.f_34_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_34(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_IsValid(value));
  _impl_.f_34_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E60 f_35 = 55;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_35() const {
  bool value = (_impl_._has_bits_[2] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_35() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_35_ = 0;
  _impl_._has_bits_[2] &= ~0x00800000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_35() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_35)
  return _internal_f_35();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_35(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60 value) {
  _internal_set_f_35(value);
  _impl_._has_bits_[2] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_35)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_35() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60>(_impl_.f_35_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_35(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_IsValid(value));
  _impl_.f_35_ = value;
}

// optional int32 f_36 = 57;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_36() const {
  bool value = (_impl_._has_bits_[2] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_36() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_36_ = 0;
  _impl_._has_bits_[2] &= ~0x01000000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_36() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_36)
  return _internal_f_36();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_36(::int32_t value) {
  _internal_set_f_36(value);
  _impl_._has_bits_[2] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_36)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_36() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_36_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_36(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_36_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E61 f_37 = 58;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_37() const {
  bool value = (_impl_._has_bits_[2] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_37() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_37_ = 0;
  _impl_._has_bits_[2] &= ~0x02000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_37() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_37)
  return _internal_f_37();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_37(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61 value) {
  _internal_set_f_37(value);
  _impl_._has_bits_[2] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_37)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_37() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61>(_impl_.f_37_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_37(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_IsValid(value));
  _impl_.f_37_ = value;
}

// optional fixed64 f_38 = 59;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_38() const {
  bool value = (_impl_._has_bits_[2] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_38() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_38_ = ::uint64_t{0u};
  _impl_._has_bits_[2] &= ~0x04000000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_38() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_38)
  return _internal_f_38();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_38(::uint64_t value) {
  _internal_set_f_38(value);
  _impl_._has_bits_[2] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_38)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_38() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_38_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_38(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_38_ = value;
}

// optional int32 f_39 = 60;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_39() const {
  bool value = (_impl_._has_bits_[2] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_39() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_39_ = 0;
  _impl_._has_bits_[2] &= ~0x10000000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_39() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_39)
  return _internal_f_39();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_39(::int32_t value) {
  _internal_set_f_39(value);
  _impl_._has_bits_[2] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_39)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_39() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_39_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_39(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_39_ = value;
}

// optional uint64 f_40 = 62;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_40() const {
  bool value = (_impl_._has_bits_[2] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_40() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_40_ = ::uint64_t{0u};
  _impl_._has_bits_[2] &= ~0x08000000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_40() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_40)
  return _internal_f_40();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_40(::uint64_t value) {
  _internal_set_f_40(value);
  _impl_._has_bits_[2] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_40)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_40() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_40_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_40(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_40_ = value;
}

// optional int32 f_41 = 64;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_41() const {
  bool value = (_impl_._has_bits_[2] & 0x20000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_41() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_41_ = 0;
  _impl_._has_bits_[2] &= ~0x20000000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_41() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_41)
  return _internal_f_41();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_41(::int32_t value) {
  _internal_set_f_41(value);
  _impl_._has_bits_[2] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_41)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_41() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_41_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_41(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_41_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E62 f_42 = 66;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_42() const {
  bool value = (_impl_._has_bits_[2] & 0x40000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_42_ = 0;
  _impl_._has_bits_[2] &= ~0x40000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_42() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_42)
  return _internal_f_42();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_42(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62 value) {
  _internal_set_f_42(value);
  _impl_._has_bits_[2] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_42)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_42() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62>(_impl_.f_42_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_42(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_IsValid(value));
  _impl_.f_42_ = value;
}

// optional string f_43 = 69;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_43() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_43() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_43_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_43() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_43)
  return _internal_f_43();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_43(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_43_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_43)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_43() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_43();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_43)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_43() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_43_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_43(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_43_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_43() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.f_43_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_43() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_43)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.f_43_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_43_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_43(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.f_43_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_43_.IsDefault()) {
          _impl_.f_43_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_43)
}

// optional int32 f_44 = 71;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_44() const {
  bool value = (_impl_._has_bits_[2] & 0x80000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_44() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_44_ = 0;
  _impl_._has_bits_[2] &= ~0x80000000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_44() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_44)
  return _internal_f_44();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_44(::int32_t value) {
  _internal_set_f_44(value);
  _impl_._has_bits_[2] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_44)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_44() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_44_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_44(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_44_ = value;
}

// optional string f_45 = 73;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_45() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_45() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_45_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_45() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_45)
  return _internal_f_45();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_45(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_45_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_45)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_45() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_45();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_45)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_45() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_45_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_45(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_45_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_45() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.f_45_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_45() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_45)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.f_45_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_45_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_45(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.f_45_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_45_.IsDefault()) {
          _impl_.f_45_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_45)
}

// optional float f_46 = 74;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_46() const {
  bool value = (_impl_._has_bits_[3] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_46() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_46_ = 0;
  _impl_._has_bits_[3] &= ~0x00000002u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_46() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_46)
  return _internal_f_46();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_46(float value) {
  _internal_set_f_46(value);
  _impl_._has_bits_[3] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_46)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_46() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_46_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_46(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_46_ = value;
}

// optional int64 f_47 = 75;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_47() const {
  bool value = (_impl_._has_bits_[3] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_47() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_47_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00000001u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_47() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_47)
  return _internal_f_47();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_47(::int64_t value) {
  _internal_set_f_47(value);
  _impl_._has_bits_[3] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_47)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_47() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_47_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_47(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_47_ = value;
}

// optional int32 f_48 = 76;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_48() const {
  bool value = (_impl_._has_bits_[3] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_48() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_48_ = 0;
  _impl_._has_bits_[3] &= ~0x00000004u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_48() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_48)
  return _internal_f_48();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_48(::int32_t value) {
  _internal_set_f_48(value);
  _impl_._has_bits_[3] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_48)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_48() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_48_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_48(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_48_ = value;
}

// optional int64 f_49 = 77;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_49() const {
  bool value = (_impl_._has_bits_[3] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_49() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_49_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00000008u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_49() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_49)
  return _internal_f_49();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_49(::int64_t value) {
  _internal_set_f_49(value);
  _impl_._has_bits_[3] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_49)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_49() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_49_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_49(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_49_ = value;
}

// optional string f_50 = 78;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_50() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_50() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_50_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_50() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_50)
  return _internal_f_50();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_50(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.f_50_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_50)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_50() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_50();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_50)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_50() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_50_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_50(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.f_50_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_50() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.f_50_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_50() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_50)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.f_50_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_50_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_50(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.f_50_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_50_.IsDefault()) {
          _impl_.f_50_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_50)
}

// optional int64 f_51 = 80;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_51() const {
  bool value = (_impl_._has_bits_[3] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_51() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_51_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00000010u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_51() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_51)
  return _internal_f_51();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_51(::int64_t value) {
  _internal_set_f_51(value);
  _impl_._has_bits_[3] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_51)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_51() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_51_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_51(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_51_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E63 f_52 = 81;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_52() const {
  bool value = (_impl_._has_bits_[3] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_52() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_52_ = 0;
  _impl_._has_bits_[3] &= ~0x00000020u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_52() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_52)
  return _internal_f_52();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_52(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63 value) {
  _internal_set_f_52(value);
  _impl_._has_bits_[3] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_52)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_52() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63>(_impl_.f_52_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_52(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_IsValid(value));
  _impl_.f_52_ = value;
}

// optional int64 f_53 = 83;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_53() const {
  bool value = (_impl_._has_bits_[3] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_53() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_53_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00000080u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_53() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_53)
  return _internal_f_53();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_53(::int64_t value) {
  _internal_set_f_53(value);
  _impl_._has_bits_[3] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_53)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_53() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_53_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_53(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_53_ = value;
}

// optional int32 f_54 = 84;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_54() const {
  bool value = (_impl_._has_bits_[3] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_54() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_54_ = 0;
  _impl_._has_bits_[3] &= ~0x00000040u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_54() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_54)
  return _internal_f_54();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_54(::int32_t value) {
  _internal_set_f_54(value);
  _impl_._has_bits_[3] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_54)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_54() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_54_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_54(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_54_ = value;
}

// optional string f_55 = 85;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_55() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_55() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_55_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_55() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_55)
  return _internal_f_55();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_55(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.f_55_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_55)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_55() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_55();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_55)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_55() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_55_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_55(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.f_55_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_55() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  return _impl_.f_55_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_55() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_55)
  if ((_impl_._has_bits_[0] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000100u;
  auto* released = _impl_.f_55_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_55_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_55(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.f_55_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_55_.IsDefault()) {
          _impl_.f_55_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_55)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E64 f_56 = 86;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_56() const {
  bool value = (_impl_._has_bits_[3] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_56() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_56_ = 0;
  _impl_._has_bits_[3] &= ~0x00000100u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_56() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_56)
  return _internal_f_56();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_56(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64 value) {
  _internal_set_f_56(value);
  _impl_._has_bits_[3] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_56)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_56() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64>(_impl_.f_56_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_56(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_IsValid(value));
  _impl_.f_56_ = value;
}

// repeated int32 f_57 = 87 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_57_size() const {
  return _internal_f_57().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_57_size() const {
  return _internal_f_57_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_57() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_57_.Clear();
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_57(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_57)
  return _internal_f_57().Get(index);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_57(int index, ::int32_t value) {
  _internal_mutable_f_57()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_57)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_57(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_57()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_57)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_57() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_57)
  return _internal_f_57();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_57()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_57)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_57();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_57() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_57_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_57() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_57_;
}

// optional string f_58 = 88;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_58() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_58() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_58_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_58() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_58)
  return _internal_f_58();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_58(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.f_58_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_58)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_58() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_58();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_58)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_58() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_58_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_58(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.f_58_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_58() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  return _impl_.f_58_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_58() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_58)
  if ((_impl_._has_bits_[0] & 0x00000200u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000200u;
  auto* released = _impl_.f_58_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_58_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_58(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  _impl_.f_58_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_58_.IsDefault()) {
          _impl_.f_58_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_58)
}

// optional int64 f_59 = 90;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_59() const {
  bool value = (_impl_._has_bits_[3] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_59() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_59_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00000400u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_59() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_59)
  return _internal_f_59();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_59(::int64_t value) {
  _internal_set_f_59(value);
  _impl_._has_bits_[3] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_59)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_59() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_59_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_59(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_59_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E65 f_60 = 91;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_60() const {
  bool value = (_impl_._has_bits_[3] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_60() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_60_ = 0;
  _impl_._has_bits_[3] &= ~0x00000200u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_60() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_60)
  return _internal_f_60();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_60(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65 value) {
  _internal_set_f_60(value);
  _impl_._has_bits_[3] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_60)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_60() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65>(_impl_.f_60_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_60(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_IsValid(value));
  _impl_.f_60_ = value;
}

// optional int64 f_61 = 94;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_61() const {
  bool value = (_impl_._has_bits_[3] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_61() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_61_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00000800u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_61() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_61)
  return _internal_f_61();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_61(::int64_t value) {
  _internal_set_f_61(value);
  _impl_._has_bits_[3] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_61)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_61() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_61_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_61(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_61_ = value;
}

// optional int64 f_62 = 95;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_62() const {
  bool value = (_impl_._has_bits_[3] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_62() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_62_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00001000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_62() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_62)
  return _internal_f_62();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_62(::int64_t value) {
  _internal_set_f_62(value);
  _impl_._has_bits_[3] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_62)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_62() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_62_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_62(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_62_ = value;
}

// optional int64 f_63 = 97;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_63() const {
  bool value = (_impl_._has_bits_[3] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_63() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_63_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00002000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_63() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_63)
  return _internal_f_63();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_63(::int64_t value) {
  _internal_set_f_63(value);
  _impl_._has_bits_[3] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_63)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_63() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_63_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_63(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_63_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E66 f_64 = 99;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_64() const {
  bool value = (_impl_._has_bits_[3] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_64() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_64_ = 0;
  _impl_._has_bits_[3] &= ~0x00008000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_64() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_64)
  return _internal_f_64();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_64(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66 value) {
  _internal_set_f_64(value);
  _impl_._has_bits_[3] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_64)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_64() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66>(_impl_.f_64_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_64(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_IsValid(value));
  _impl_.f_64_ = value;
}

// optional double f_65 = 100;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_65() const {
  bool value = (_impl_._has_bits_[3] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_65() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_65_ = 0;
  _impl_._has_bits_[3] &= ~0x00004000u;
}
inline double Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_65() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_65)
  return _internal_f_65();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_65(double value) {
  _internal_set_f_65(value);
  _impl_._has_bits_[3] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_65)
}
inline double Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_65() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_65_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_65(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_65_ = value;
}

// optional float f_66 = 101;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_66() const {
  bool value = (_impl_._has_bits_[3] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_66() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_66_ = 0;
  _impl_._has_bits_[3] &= ~0x00010000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_66() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_66)
  return _internal_f_66();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_66(float value) {
  _internal_set_f_66(value);
  _impl_._has_bits_[3] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_66)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_66() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_66_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_66(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_66_ = value;
}

// optional float f_67 = 102;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_67() const {
  bool value = (_impl_._has_bits_[3] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_67() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_67_ = 0;
  _impl_._has_bits_[3] &= ~0x00080000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_67() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_67)
  return _internal_f_67();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_67(float value) {
  _internal_set_f_67(value);
  _impl_._has_bits_[3] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_67)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_67() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_67_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_67(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_67_ = value;
}

// optional string f_68 = 103;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_68() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_68() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_68_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_68() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_68)
  return _internal_f_68();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_68(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.f_68_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_68)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_68() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_68();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_68)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_68() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_68_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_68(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.f_68_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_68() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  return _impl_.f_68_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_68() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_68)
  if ((_impl_._has_bits_[0] & 0x00000400u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000400u;
  auto* released = _impl_.f_68_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_68_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_68(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  _impl_.f_68_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_68_.IsDefault()) {
          _impl_.f_68_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_68)
}

// optional int64 f_69 = 104;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_69() const {
  bool value = (_impl_._has_bits_[3] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_69() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_69_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00020000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_69() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_69)
  return _internal_f_69();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_69(::int64_t value) {
  _internal_set_f_69(value);
  _impl_._has_bits_[3] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_69)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_69() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_69_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_69(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_69_ = value;
}

// optional bytes f_70 = 105;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_70() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_70() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_70_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_70() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_70)
  return _internal_f_70();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_70(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.f_70_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_70)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_70() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_70();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_70)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_70() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_70_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_70(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.f_70_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_70() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  return _impl_.f_70_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_70() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_70)
  if ((_impl_._has_bits_[0] & 0x00000800u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000800u;
  auto* released = _impl_.f_70_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_70_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_70(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  _impl_.f_70_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_70_.IsDefault()) {
          _impl_.f_70_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_70)
}

// optional fixed64 f_71 = 106;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_71() const {
  bool value = (_impl_._has_bits_[3] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_71() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_71_ = ::uint64_t{0u};
  _impl_._has_bits_[3] &= ~0x00040000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_71() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_71)
  return _internal_f_71();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_71(::uint64_t value) {
  _internal_set_f_71(value);
  _impl_._has_bits_[3] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_71)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_71() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_71_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_71(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_71_ = value;
}

// optional int64 f_72 = 109;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_72() const {
  bool value = (_impl_._has_bits_[3] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_72() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_72_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00200000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_72() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_72)
  return _internal_f_72();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_72(::int64_t value) {
  _internal_set_f_72(value);
  _impl_._has_bits_[3] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_72)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_72() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_72_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_72(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_72_ = value;
}

// optional int64 f_73 = 111;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_73() const {
  bool value = (_impl_._has_bits_[3] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_73() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_73_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00400000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_73() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_73)
  return _internal_f_73();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_73(::int64_t value) {
  _internal_set_f_73(value);
  _impl_._has_bits_[3] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_73)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_73() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_73_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_73(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_73_ = value;
}

// optional int64 f_74 = 112;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_74() const {
  bool value = (_impl_._has_bits_[3] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_74() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_74_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x00800000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_74() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_74)
  return _internal_f_74();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_74(::int64_t value) {
  _internal_set_f_74(value);
  _impl_._has_bits_[3] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_74)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_74() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_74_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_74(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_74_ = value;
}

// optional int64 f_75 = 113;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_75() const {
  bool value = (_impl_._has_bits_[3] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_75() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_75_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x01000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_75() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_75)
  return _internal_f_75();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_75(::int64_t value) {
  _internal_set_f_75(value);
  _impl_._has_bits_[3] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_75)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_75() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_75_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_75(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_75_ = value;
}

// optional fixed32 f_76 = 114;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_76() const {
  bool value = (_impl_._has_bits_[3] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_76() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_76_ = 0u;
  _impl_._has_bits_[3] &= ~0x00100000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_76() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_76)
  return _internal_f_76();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_76(::uint32_t value) {
  _internal_set_f_76(value);
  _impl_._has_bits_[3] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_76)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_76() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_76_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_76(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_76_ = value;
}

// optional int64 f_77 = 115;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_77() const {
  bool value = (_impl_._has_bits_[3] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_77() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_77_ = ::int64_t{0};
  _impl_._has_bits_[3] &= ~0x02000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_77() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_77)
  return _internal_f_77();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_77(::int64_t value) {
  _internal_set_f_77(value);
  _impl_._has_bits_[3] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_77)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_77() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_77_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_77(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_77_ = value;
}

// optional int32 f_78 = 116;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_78() const {
  bool value = (_impl_._has_bits_[3] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_78() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_78_ = 0;
  _impl_._has_bits_[3] &= ~0x04000000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_78() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_78)
  return _internal_f_78();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_78(::int32_t value) {
  _internal_set_f_78(value);
  _impl_._has_bits_[3] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_78)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_78() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_78_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_78(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_78_ = value;
}

// repeated int64 f_79 = 117 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_79_size() const {
  return _internal_f_79().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_79_size() const {
  return _internal_f_79_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_79() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_79_.Clear();
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_79(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_79)
  return _internal_f_79().Get(index);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_79(int index, ::int64_t value) {
  _internal_mutable_f_79()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_79)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_79(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_79()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_79)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_79() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_79)
  return _internal_f_79();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_79()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_79)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_79();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_79() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_79_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_79() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_79_;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E67 f_80 = 118;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_80() const {
  bool value = (_impl_._has_bits_[3] & 0x80000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_80() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_80_ = 0;
  _impl_._has_bits_[3] &= ~0x80000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_80() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_80)
  return _internal_f_80();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_80(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67 value) {
  _internal_set_f_80(value);
  _impl_._has_bits_[3] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_80)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_80() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67>(_impl_.f_80_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_80(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_IsValid(value));
  _impl_.f_80_ = value;
}

// repeated int32 f_81 = 119 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_81_size() const {
  return _internal_f_81().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_81_size() const {
  return _internal_f_81_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_81() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_81_.Clear();
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_81(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_81)
  return _internal_f_81().Get(index);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_81(int index, ::int32_t value) {
  _internal_mutable_f_81()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_81)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_81(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_81()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_81)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_81() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_81)
  return _internal_f_81();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_81()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_81)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_81();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_81() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_81_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_81() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_81_;
}

// optional fixed32 f_82 = 120;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_82() const {
  bool value = (_impl_._has_bits_[4] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_82() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_82_ = 0u;
  _impl_._has_bits_[4] &= ~0x00000001u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_82() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_82)
  return _internal_f_82();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_82(::uint32_t value) {
  _internal_set_f_82(value);
  _impl_._has_bits_[4] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_82)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_82() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_82_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_82(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_82_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E68 f_83 = 122;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_83() const {
  bool value = (_impl_._has_bits_[4] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_83() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_83_ = 0;
  _impl_._has_bits_[4] &= ~0x00000002u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_83() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_83)
  return _internal_f_83();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_83(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68 value) {
  _internal_set_f_83(value);
  _impl_._has_bits_[4] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_83)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_83() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68>(_impl_.f_83_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_83(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_IsValid(value));
  _impl_.f_83_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E69 f_84 = 124;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_84() const {
  bool value = (_impl_._has_bits_[4] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_84() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_84_ = 0;
  _impl_._has_bits_[4] &= ~0x00000004u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_84() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_84)
  return _internal_f_84();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_84(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69 value) {
  _internal_set_f_84(value);
  _impl_._has_bits_[4] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_84)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_84() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69>(_impl_.f_84_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_84(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_IsValid(value));
  _impl_.f_84_ = value;
}

// optional float f_85 = 126;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_85() const {
  bool value = (_impl_._has_bits_[4] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_85() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_85_ = 0;
  _impl_._has_bits_[4] &= ~0x00000010u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_85() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_85)
  return _internal_f_85();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_85(float value) {
  _internal_set_f_85(value);
  _impl_._has_bits_[4] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_85)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_85() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_85_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_85(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_85_ = value;
}

// optional int64 f_86 = 127;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_86() const {
  bool value = (_impl_._has_bits_[4] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_86() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_86_ = ::int64_t{0};
  _impl_._has_bits_[4] &= ~0x00000008u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_86() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_86)
  return _internal_f_86();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_86(::int64_t value) {
  _internal_set_f_86(value);
  _impl_._has_bits_[4] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_86)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_86() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_86_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_86(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_86_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E70 f_87 = 128;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_87() const {
  bool value = (_impl_._has_bits_[4] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_87() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_87_ = 0;
  _impl_._has_bits_[4] &= ~0x00000020u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_87() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_87)
  return _internal_f_87();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_87(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70 value) {
  _internal_set_f_87(value);
  _impl_._has_bits_[4] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_87)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_87() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70>(_impl_.f_87_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_87(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_IsValid(value));
  _impl_.f_87_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E71 f_88 = 130;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_88() const {
  bool value = (_impl_._has_bits_[4] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_88() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_88_ = 0;
  _impl_._has_bits_[4] &= ~0x00000040u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_88() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_88)
  return _internal_f_88();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_88(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71 value) {
  _internal_set_f_88(value);
  _impl_._has_bits_[4] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_88)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_88() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71>(_impl_.f_88_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_88(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_IsValid(value));
  _impl_.f_88_ = value;
}

// optional int32 f_89 = 132;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_89() const {
  bool value = (_impl_._has_bits_[4] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_89() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_89_ = 0;
  _impl_._has_bits_[4] &= ~0x00000080u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_89() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_89)
  return _internal_f_89();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_89(::int32_t value) {
  _internal_set_f_89(value);
  _impl_._has_bits_[4] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_89)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_89() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_89_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_89(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_89_ = value;
}

// optional bool f_90 = 134;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_90() const {
  bool value = (_impl_._has_bits_[3] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_90() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_90_ = false;
  _impl_._has_bits_[3] &= ~0x10000000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_90() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_90)
  return _internal_f_90();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_90(bool value) {
  _internal_set_f_90(value);
  _impl_._has_bits_[3] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_90)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_90() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_90_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_90(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_90_ = value;
}

// optional string f_91 = 137;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_91() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_91() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_91_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_91() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_91)
  return _internal_f_91();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_91(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.f_91_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_91)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_91() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_91();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_91)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_91() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_91_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_91(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00001000u;
  _impl_.f_91_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_91() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00001000u;
  return _impl_.f_91_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_91() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_91)
  if ((_impl_._has_bits_[0] & 0x00001000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00001000u;
  auto* released = _impl_.f_91_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_91_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_91(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  _impl_.f_91_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_91_.IsDefault()) {
          _impl_.f_91_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_91)
}

// optional int32 f_92 = 138;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_92() const {
  bool value = (_impl_._has_bits_[4] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_92() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_92_ = 0;
  _impl_._has_bits_[4] &= ~0x00000200u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_92() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_92)
  return _internal_f_92();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_92(::int32_t value) {
  _internal_set_f_92(value);
  _impl_._has_bits_[4] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_92)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_92() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_92_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_92(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_92_ = value;
}

// optional int64 f_93 = 139;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_93() const {
  bool value = (_impl_._has_bits_[4] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_93() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_93_ = ::int64_t{0};
  _impl_._has_bits_[4] &= ~0x00000100u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_93() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_93)
  return _internal_f_93();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_93(::int64_t value) {
  _internal_set_f_93(value);
  _impl_._has_bits_[4] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_93)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_93() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_93_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_93(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_93_ = value;
}

// optional bool f_94 = 140;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_94() const {
  bool value = (_impl_._has_bits_[3] & 0x20000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_94() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_94_ = false;
  _impl_._has_bits_[3] &= ~0x20000000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_94() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_94)
  return _internal_f_94();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_94(bool value) {
  _internal_set_f_94(value);
  _impl_._has_bits_[3] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_94)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_94() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_94_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_94(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_94_ = value;
}

// optional float f_95 = 142;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_95() const {
  bool value = (_impl_._has_bits_[4] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_95() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_95_ = 0;
  _impl_._has_bits_[4] &= ~0x00000400u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_95() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_95)
  return _internal_f_95();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_95(float value) {
  _internal_set_f_95(value);
  _impl_._has_bits_[4] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_95)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_95() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_95_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_95(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_95_ = value;
}

// optional int32 f_96 = 143;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_96() const {
  bool value = (_impl_._has_bits_[4] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_96() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_96_ = 0;
  _impl_._has_bits_[4] &= ~0x00001000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_96() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_96)
  return _internal_f_96();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_96(::int32_t value) {
  _internal_set_f_96(value);
  _impl_._has_bits_[4] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_96)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_96() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_96_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_96(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_96_ = value;
}

// optional string f_97 = 144;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_97() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_97() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_97_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_97() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_97)
  return _internal_f_97();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_97(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.f_97_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_97)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_97() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_97();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_97)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_97() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_97_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_97(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00002000u;
  _impl_.f_97_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_97() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00002000u;
  return _impl_.f_97_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_97() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_97)
  if ((_impl_._has_bits_[0] & 0x00002000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00002000u;
  auto* released = _impl_.f_97_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_97_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_97(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  _impl_.f_97_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_97_.IsDefault()) {
          _impl_.f_97_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_97)
}

// optional int64 f_98 = 147;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_98() const {
  bool value = (_impl_._has_bits_[4] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_98() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_98_ = ::int64_t{0};
  _impl_._has_bits_[4] &= ~0x00000800u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_98() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_98)
  return _internal_f_98();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_98(::int64_t value) {
  _internal_set_f_98(value);
  _impl_._has_bits_[4] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_98)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_98() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_98_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_98(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_98_ = value;
}

// optional int64 f_99 = 149;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_99() const {
  bool value = (_impl_._has_bits_[4] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_99() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_99_ = ::int64_t{0};
  _impl_._has_bits_[4] &= ~0x00004000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_99() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_99)
  return _internal_f_99();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_99(::int64_t value) {
  _internal_set_f_99(value);
  _impl_._has_bits_[4] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_99)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_99() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_99_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_99(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_99_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E72 f_100 = 151;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_100() const {
  bool value = (_impl_._has_bits_[4] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_100() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_100_ = 0;
  _impl_._has_bits_[4] &= ~0x00002000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_100() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_100)
  return _internal_f_100();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_100(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72 value) {
  _internal_set_f_100(value);
  _impl_._has_bits_[4] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_100)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_100() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72>(_impl_.f_100_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_100(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_IsValid(value));
  _impl_.f_100_ = value;
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E73 f_101 = 153 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_101_size() const {
  return _internal_f_101().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_101_size() const {
  return _internal_f_101_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_101() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_101_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_101(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_101)
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73>(_internal_f_101().Get(index));
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_101(int index, ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73 value) {
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_IsValid(value));
  _internal_mutable_f_101()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_101)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_101(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73 value) {
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_101()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_101)
}
inline const ::google::protobuf::RepeatedField<int>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_101() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_101)
  return _internal_f_101();
}
inline ::google::protobuf::RepeatedField<int>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_101()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_101)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_101();
}
inline const ::google::protobuf::RepeatedField<int>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_101()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_101_;
}
inline ::google::protobuf::RepeatedField<int>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_101() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_101_;
}

// optional bool f_102 = 154;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_102() const {
  bool value = (_impl_._has_bits_[3] & 0x40000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_102() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_102_ = false;
  _impl_._has_bits_[3] &= ~0x40000000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_102() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_102)
  return _internal_f_102();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_102(bool value) {
  _internal_set_f_102(value);
  _impl_._has_bits_[3] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_102)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_102() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_102_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_102(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_102_ = value;
}

// optional double f_103 = 155;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_103() const {
  bool value = (_impl_._has_bits_[4] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_103() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_103_ = 0;
  _impl_._has_bits_[4] &= ~0x00008000u;
}
inline double Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_103() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_103)
  return _internal_f_103();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_103(double value) {
  _internal_set_f_103(value);
  _impl_._has_bits_[4] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_103)
}
inline double Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_103() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_103_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_103(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_103_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E74 f_104 = 156;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_104() const {
  bool value = (_impl_._has_bits_[4] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_104() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_104_ = 0;
  _impl_._has_bits_[4] &= ~0x00010000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_104() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_104)
  return _internal_f_104();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_104(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74 value) {
  _internal_set_f_104(value);
  _impl_._has_bits_[4] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_104)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_104() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74>(_impl_.f_104_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_104(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_IsValid(value));
  _impl_.f_104_ = value;
}

// optional int32 f_105 = 158;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_105() const {
  bool value = (_impl_._has_bits_[4] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_105() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_105_ = 0;
  _impl_._has_bits_[4] &= ~0x00020000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_105() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_105)
  return _internal_f_105();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_105(::int32_t value) {
  _internal_set_f_105(value);
  _impl_._has_bits_[4] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_105)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_105() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_105_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_105(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_105_ = value;
}

// optional string f_106 = 159;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_106() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_106() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_106_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_106() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_106)
  return _internal_f_106();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_106(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.f_106_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_106)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_106() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_106();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_106)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_106() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_106_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_106(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00004000u;
  _impl_.f_106_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_106() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00004000u;
  return _impl_.f_106_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_106() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_106)
  if ((_impl_._has_bits_[0] & 0x00004000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00004000u;
  auto* released = _impl_.f_106_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_106_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_106(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  _impl_.f_106_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_106_.IsDefault()) {
          _impl_.f_106_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_106)
}

// optional bytes f_107 = 161;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_107() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_107() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_107_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_107() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_107)
  return _internal_f_107();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_107(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.f_107_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_107)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_107() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_107();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_107)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_107() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_107_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_107(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00008000u;
  _impl_.f_107_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_107() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00008000u;
  return _impl_.f_107_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_107() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_107)
  if ((_impl_._has_bits_[0] & 0x00008000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00008000u;
  auto* released = _impl_.f_107_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_107_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_107(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }
  _impl_.f_107_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_107_.IsDefault()) {
          _impl_.f_107_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_107)
}

// optional string f_108 = 162;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_108() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_108() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_108_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_108() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_108)
  return _internal_f_108();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_108(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.f_108_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_108)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_108() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_108();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_108)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_108() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_108_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_108(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00010000u;
  _impl_.f_108_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_108() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00010000u;
  return _impl_.f_108_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_108() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_108)
  if ((_impl_._has_bits_[0] & 0x00010000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00010000u;
  auto* released = _impl_.f_108_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_108_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_108(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }
  _impl_.f_108_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_108_.IsDefault()) {
          _impl_.f_108_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_108)
}

// optional string f_109 = 163;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_109() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_109() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_109_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_109() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_109)
  return _internal_f_109();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_109(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00020000u;
  _impl_.f_109_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_109)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_109() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_109();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_109)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_109() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_109_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_109(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00020000u;
  _impl_.f_109_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_109() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00020000u;
  return _impl_.f_109_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_109() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_109)
  if ((_impl_._has_bits_[0] & 0x00020000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00020000u;
  auto* released = _impl_.f_109_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_109_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_109(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }
  _impl_.f_109_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_109_.IsDefault()) {
          _impl_.f_109_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_109)
}

// optional string f_110 = 165;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_110() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_110() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_110_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_110() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_110)
  return _internal_f_110();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_110(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00040000u;
  _impl_.f_110_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_110)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_110() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_110();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_110)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_110() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_110_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_110(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00040000u;
  _impl_.f_110_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_110() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00040000u;
  return _impl_.f_110_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_110() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_110)
  if ((_impl_._has_bits_[0] & 0x00040000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00040000u;
  auto* released = _impl_.f_110_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_110_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_110(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00040000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00040000u;
  }
  _impl_.f_110_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_110_.IsDefault()) {
          _impl_.f_110_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_110)
}

// optional int64 f_111 = 166;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_111() const {
  bool value = (_impl_._has_bits_[4] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_111() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_111_ = ::int64_t{0};
  _impl_._has_bits_[4] &= ~0x00040000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_111() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_111)
  return _internal_f_111();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_111(::int64_t value) {
  _internal_set_f_111(value);
  _impl_._has_bits_[4] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_111)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_111() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_111_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_111(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_111_ = value;
}

// optional int32 f_112 = 167;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_112() const {
  bool value = (_impl_._has_bits_[4] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_112() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_112_ = 0;
  _impl_._has_bits_[4] &= ~0x00080000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_112() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_112)
  return _internal_f_112();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_112(::int32_t value) {
  _internal_set_f_112(value);
  _impl_._has_bits_[4] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_112)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_112() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_112_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_112(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_112_ = value;
}

// optional string f_113 = 169;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_113() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_113() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_113_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_113() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_113)
  return _internal_f_113();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_113(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00080000u;
  _impl_.f_113_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_113)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_113() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_113();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_113)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_113() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_113_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_113(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00080000u;
  _impl_.f_113_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_113() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00080000u;
  return _impl_.f_113_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_113() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_113)
  if ((_impl_._has_bits_[0] & 0x00080000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00080000u;
  auto* released = _impl_.f_113_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_113_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_113(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00080000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00080000u;
  }
  _impl_.f_113_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_113_.IsDefault()) {
          _impl_.f_113_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_113)
}

// optional int32 f_114 = 170;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_114() const {
  bool value = (_impl_._has_bits_[4] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_114() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_114_ = 0;
  _impl_._has_bits_[4] &= ~0x00100000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_114() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_114)
  return _internal_f_114();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_114(::int32_t value) {
  _internal_set_f_114(value);
  _impl_._has_bits_[4] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_114)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_114() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_114_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_114(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_114_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E75 f_115 = 171;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_115() const {
  bool value = (_impl_._has_bits_[4] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_115() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_115_ = 0;
  _impl_._has_bits_[4] &= ~0x00400000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_115() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_115)
  return _internal_f_115();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_115(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75 value) {
  _internal_set_f_115(value);
  _impl_._has_bits_[4] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_115)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_115() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75>(_impl_.f_115_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_115(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_IsValid(value));
  _impl_.f_115_ = value;
}

// optional string f_116 = 172;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_116() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_116() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_116_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_116() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_116)
  return _internal_f_116();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_116(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00100000u;
  _impl_.f_116_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_116)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_116() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_116();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_116)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_116() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_116_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_116(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00100000u;
  _impl_.f_116_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_116() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00100000u;
  return _impl_.f_116_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_116() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_116)
  if ((_impl_._has_bits_[0] & 0x00100000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00100000u;
  auto* released = _impl_.f_116_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_116_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_116(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00100000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00100000u;
  }
  _impl_.f_116_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_116_.IsDefault()) {
          _impl_.f_116_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_116)
}

// optional int64 f_117 = 173;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_117() const {
  bool value = (_impl_._has_bits_[4] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_117() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_117_ = ::int64_t{0};
  _impl_._has_bits_[4] &= ~0x00200000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_117() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_117)
  return _internal_f_117();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_117(::int64_t value) {
  _internal_set_f_117(value);
  _impl_._has_bits_[4] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_117)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_117() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_117_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_117(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_117_ = value;
}

// optional string f_118 = 176;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_118() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_118() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_118_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_118() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_118)
  return _internal_f_118();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_118(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00200000u;
  _impl_.f_118_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_118)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_118() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_118();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_118)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_118() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_118_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_118(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00200000u;
  _impl_.f_118_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_118() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00200000u;
  return _impl_.f_118_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_118() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_118)
  if ((_impl_._has_bits_[0] & 0x00200000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00200000u;
  auto* released = _impl_.f_118_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_118_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_118(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00200000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00200000u;
  }
  _impl_.f_118_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_118_.IsDefault()) {
          _impl_.f_118_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_118)
}

// optional string f_119 = 177;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_119() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_119() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_119_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_119() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_119)
  return _internal_f_119();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_119(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00400000u;
  _impl_.f_119_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_119)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_119() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_119();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_119)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_119() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_119_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_119(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00400000u;
  _impl_.f_119_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_119() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00400000u;
  return _impl_.f_119_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_119() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_119)
  if ((_impl_._has_bits_[0] & 0x00400000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00400000u;
  auto* released = _impl_.f_119_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_119_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_119(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00400000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00400000u;
  }
  _impl_.f_119_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_119_.IsDefault()) {
          _impl_.f_119_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_119)
}

// optional int32 f_120 = 178;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_120() const {
  bool value = (_impl_._has_bits_[4] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_120() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_120_ = 0;
  _impl_._has_bits_[4] &= ~0x00800000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_120() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_120)
  return _internal_f_120();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_120(::int32_t value) {
  _internal_set_f_120(value);
  _impl_._has_bits_[4] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_120)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_120() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_120_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_120(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_120_ = value;
}

// optional string f_121 = 179;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_121() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_121() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_121_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_121() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_121)
  return _internal_f_121();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_121(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00800000u;
  _impl_.f_121_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_121)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_121() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_121();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_121)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_121() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_121_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_121(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00800000u;
  _impl_.f_121_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_121() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00800000u;
  return _impl_.f_121_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_121() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_121)
  if ((_impl_._has_bits_[0] & 0x00800000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00800000u;
  auto* released = _impl_.f_121_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_121_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_121(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00800000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00800000u;
  }
  _impl_.f_121_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_121_.IsDefault()) {
          _impl_.f_121_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_121)
}

// optional fixed32 f_122 = 180;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_122() const {
  bool value = (_impl_._has_bits_[4] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_122() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_122_ = 0u;
  _impl_._has_bits_[4] &= ~0x02000000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_122() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_122)
  return _internal_f_122();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_122(::uint32_t value) {
  _internal_set_f_122(value);
  _impl_._has_bits_[4] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_122)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_122() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_122_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_122(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_122_ = value;
}

// optional bool f_123 = 181;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_123() const {
  bool value = (_impl_._has_bits_[5] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_123() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_123_ = false;
  _impl_._has_bits_[5] &= ~0x00000004u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_123() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_123)
  return _internal_f_123();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_123(bool value) {
  _internal_set_f_123(value);
  _impl_._has_bits_[5] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_123)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_123() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_123_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_123(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_123_ = value;
}

// optional int64 f_124 = 182;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_124() const {
  bool value = (_impl_._has_bits_[4] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_124() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_124_ = ::int64_t{0};
  _impl_._has_bits_[4] &= ~0x01000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_124() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_124)
  return _internal_f_124();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_124(::int64_t value) {
  _internal_set_f_124(value);
  _impl_._has_bits_[4] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_124)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_124() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_124_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_124(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_124_ = value;
}

// optional string f_125 = 183;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_125() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_125() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_125_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_125() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_125)
  return _internal_f_125();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_125(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x01000000u;
  _impl_.f_125_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_125)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_125() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_125();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_125)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_125() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_125_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_125(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x01000000u;
  _impl_.f_125_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_125() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x01000000u;
  return _impl_.f_125_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_125() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_125)
  if ((_impl_._has_bits_[0] & 0x01000000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x01000000u;
  auto* released = _impl_.f_125_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_125_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_125(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x01000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x01000000u;
  }
  _impl_.f_125_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_125_.IsDefault()) {
          _impl_.f_125_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_125)
}

// optional fixed32 f_126 = 184;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_126() const {
  bool value = (_impl_._has_bits_[4] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_126() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_126_ = 0u;
  _impl_._has_bits_[4] &= ~0x04000000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_126() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_126)
  return _internal_f_126();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_126(::uint32_t value) {
  _internal_set_f_126(value);
  _impl_._has_bits_[4] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_126)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_126() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_126_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_126(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_126_ = value;
}

// optional fixed32 f_127 = 185;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_127() const {
  bool value = (_impl_._has_bits_[4] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_127() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_127_ = 0u;
  _impl_._has_bits_[4] &= ~0x08000000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_127() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_127)
  return _internal_f_127();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_127(::uint32_t value) {
  _internal_set_f_127(value);
  _impl_._has_bits_[4] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_127)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_127() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_127_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_127(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_127_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E76 f_128 = 186;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_128() const {
  bool value = (_impl_._has_bits_[4] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_128() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_128_ = 0;
  _impl_._has_bits_[4] &= ~0x10000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_128() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_128)
  return _internal_f_128();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_128(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76 value) {
  _internal_set_f_128(value);
  _impl_._has_bits_[4] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_128)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_128() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76>(_impl_.f_128_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_128(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_IsValid(value));
  _impl_.f_128_ = value;
}

// optional string f_129 = 188;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_129() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_129() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_129_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_129() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_129)
  return _internal_f_129();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_129(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x02000000u;
  _impl_.f_129_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_129)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_129() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_129();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_129)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_129() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_129_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_129(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x02000000u;
  _impl_.f_129_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_129() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x02000000u;
  return _impl_.f_129_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_129() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_129)
  if ((_impl_._has_bits_[0] & 0x02000000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x02000000u;
  auto* released = _impl_.f_129_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_129_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_129(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x02000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x02000000u;
  }
  _impl_.f_129_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_129_.IsDefault()) {
          _impl_.f_129_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_129)
}

// optional int32 f_130 = 189;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_130() const {
  bool value = (_impl_._has_bits_[4] & 0x20000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_130() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_130_ = 0;
  _impl_._has_bits_[4] &= ~0x20000000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_130() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_130)
  return _internal_f_130();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_130(::int32_t value) {
  _internal_set_f_130(value);
  _impl_._has_bits_[4] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_130)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_130() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_130_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_130(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_130_ = value;
}

// optional string f_131 = 190;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_131() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_131() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_131_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_131() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_131)
  return _internal_f_131();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_131(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x04000000u;
  _impl_.f_131_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_131)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_131() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_131();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_131)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_131() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_131_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_131(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x04000000u;
  _impl_.f_131_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_131() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x04000000u;
  return _impl_.f_131_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_131() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_131)
  if ((_impl_._has_bits_[0] & 0x04000000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x04000000u;
  auto* released = _impl_.f_131_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_131_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_131(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x04000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x04000000u;
  }
  _impl_.f_131_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_131_.IsDefault()) {
          _impl_.f_131_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_131)
}

// optional string f_132 = 191;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_132() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_132() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_132_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_132() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_132)
  return _internal_f_132();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_132(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x08000000u;
  _impl_.f_132_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_132)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_132() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_132();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_132)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_132() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_132_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_132(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x08000000u;
  _impl_.f_132_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_132() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x08000000u;
  return _impl_.f_132_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_132() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_132)
  if ((_impl_._has_bits_[0] & 0x08000000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x08000000u;
  auto* released = _impl_.f_132_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_132_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_132(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x08000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x08000000u;
  }
  _impl_.f_132_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_132_.IsDefault()) {
          _impl_.f_132_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_132)
}

// optional string f_133 = 193;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_133() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_133() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_133_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_133() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_133)
  return _internal_f_133();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_133(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x10000000u;
  _impl_.f_133_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_133)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_133() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_133();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_133)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_133() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_133_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_133(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x10000000u;
  _impl_.f_133_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_133() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x10000000u;
  return _impl_.f_133_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_133() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_133)
  if ((_impl_._has_bits_[0] & 0x10000000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x10000000u;
  auto* released = _impl_.f_133_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_133_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_133(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x10000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x10000000u;
  }
  _impl_.f_133_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_133_.IsDefault()) {
          _impl_.f_133_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_133)
}

// optional string f_134 = 195;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_134() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_134() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_134_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_134() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_134)
  return _internal_f_134();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_134(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x20000000u;
  _impl_.f_134_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_134)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_134() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_134();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_134)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_134() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_134_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_134(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x20000000u;
  _impl_.f_134_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_134() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x20000000u;
  return _impl_.f_134_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_134() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_134)
  if ((_impl_._has_bits_[0] & 0x20000000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x20000000u;
  auto* released = _impl_.f_134_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_134_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_134(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x20000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x20000000u;
  }
  _impl_.f_134_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_134_.IsDefault()) {
          _impl_.f_134_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_134)
}

// optional string f_135 = 196;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_135() const {
  bool value = (_impl_._has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_135() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_135_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x40000000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_135() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_135)
  return _internal_f_135();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_135(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x40000000u;
  _impl_.f_135_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_135)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_135() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_135();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_135)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_135() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_135_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_135(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x40000000u;
  _impl_.f_135_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_135() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x40000000u;
  return _impl_.f_135_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_135() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_135)
  if ((_impl_._has_bits_[0] & 0x40000000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x40000000u;
  auto* released = _impl_.f_135_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_135_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_135(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x40000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x40000000u;
  }
  _impl_.f_135_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_135_.IsDefault()) {
          _impl_.f_135_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_135)
}

// optional fixed64 f_136 = 198;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_136() const {
  bool value = (_impl_._has_bits_[4] & 0x80000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_136() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_136_ = ::uint64_t{0u};
  _impl_._has_bits_[4] &= ~0x80000000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_136() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_136)
  return _internal_f_136();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_136(::uint64_t value) {
  _internal_set_f_136(value);
  _impl_._has_bits_[4] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_136)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_136() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_136_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_136(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_136_ = value;
}

// optional float f_137 = 199;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_137() const {
  bool value = (_impl_._has_bits_[4] & 0x40000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_137() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_137_ = 0;
  _impl_._has_bits_[4] &= ~0x40000000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_137() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_137)
  return _internal_f_137();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_137(float value) {
  _internal_set_f_137(value);
  _impl_._has_bits_[4] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_137)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_137() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_137_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_137(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_137_ = value;
}

// optional uint64 f_138 = 200;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_138() const {
  bool value = (_impl_._has_bits_[5] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_138() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_138_ = ::uint64_t{0u};
  _impl_._has_bits_[5] &= ~0x00000001u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_138() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_138)
  return _internal_f_138();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_138(::uint64_t value) {
  _internal_set_f_138(value);
  _impl_._has_bits_[5] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_138)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_138() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_138_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_138(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_138_ = value;
}

// optional int64 f_139 = 201;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_139() const {
  bool value = (_impl_._has_bits_[5] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_139() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_139_ = ::int64_t{0};
  _impl_._has_bits_[5] &= ~0x00000002u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_139() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_139)
  return _internal_f_139();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_139(::int64_t value) {
  _internal_set_f_139(value);
  _impl_._has_bits_[5] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_139)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_139() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_139_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_139(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_139_ = value;
}

// optional int32 f_140 = 202;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_140() const {
  bool value = (_impl_._has_bits_[5] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_140() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_140_ = 0;
  _impl_._has_bits_[5] &= ~0x00000040u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_140() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_140)
  return _internal_f_140();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_140(::int32_t value) {
  _internal_set_f_140(value);
  _impl_._has_bits_[5] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_140)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_140() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_140_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_140(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_140_ = value;
}

// optional bool f_141 = 203;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_141() const {
  bool value = (_impl_._has_bits_[5] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_141() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_141_ = false;
  _impl_._has_bits_[5] &= ~0x00000008u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_141() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_141)
  return _internal_f_141();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_141(bool value) {
  _internal_set_f_141(value);
  _impl_._has_bits_[5] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_141)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_141() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_141_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_141(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_141_ = value;
}

// optional string f_142 = 205;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_142() const {
  bool value = (_impl_._has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_142() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_142_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x80000000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_142() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_142)
  return _internal_f_142();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_142(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x80000000u;
  _impl_.f_142_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_142)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_142() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_142();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_142)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_142() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_142_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_142(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x80000000u;
  _impl_.f_142_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_142() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x80000000u;
  return _impl_.f_142_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_142() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_142)
  if ((_impl_._has_bits_[0] & 0x80000000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x80000000u;
  auto* released = _impl_.f_142_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_142_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_142(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x80000000u;
  } else {
    _impl_._has_bits_[0] &= ~0x80000000u;
  }
  _impl_.f_142_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_142_.IsDefault()) {
          _impl_.f_142_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_142)
}

// optional string f_143 = 206;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_143() const {
  bool value = (_impl_._has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_143() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_143_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_143() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_143)
  return _internal_f_143();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_143(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000001u;
  _impl_.f_143_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_143)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_143() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_143();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_143)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_143() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_143_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_143(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000001u;
  _impl_.f_143_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_143() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000001u;
  return _impl_.f_143_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_143() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_143)
  if ((_impl_._has_bits_[1] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000001u;
  auto* released = _impl_.f_143_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_143_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_143(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000001u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000001u;
  }
  _impl_.f_143_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_143_.IsDefault()) {
          _impl_.f_143_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_143)
}

// optional bool f_144 = 209;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_144() const {
  bool value = (_impl_._has_bits_[5] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_144() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_144_ = false;
  _impl_._has_bits_[5] &= ~0x00000010u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_144() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_144)
  return _internal_f_144();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_144(bool value) {
  _internal_set_f_144(value);
  _impl_._has_bits_[5] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_144)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_144() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_144_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_144(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_144_ = value;
}

// optional uint64 f_145 = 210;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_145() const {
  bool value = (_impl_._has_bits_[5] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_145() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_145_ = ::uint64_t{0u};
  _impl_._has_bits_[5] &= ~0x00000080u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_145() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_145)
  return _internal_f_145();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_145(::uint64_t value) {
  _internal_set_f_145(value);
  _impl_._has_bits_[5] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_145)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_145() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_145_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_145(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_145_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E77 f_146 = 213;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_146() const {
  bool value = (_impl_._has_bits_[5] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_146() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_146_ = 0;
  _impl_._has_bits_[5] &= ~0x00000100u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_146() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_146)
  return _internal_f_146();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_146(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77 value) {
  _internal_set_f_146(value);
  _impl_._has_bits_[5] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_146)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_146() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77>(_impl_.f_146_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_146(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_IsValid(value));
  _impl_.f_146_ = value;
}

// optional bool f_147 = 214;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_147() const {
  bool value = (_impl_._has_bits_[5] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_147() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_147_ = false;
  _impl_._has_bits_[5] &= ~0x00000020u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_147() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_147)
  return _internal_f_147();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_147(bool value) {
  _internal_set_f_147(value);
  _impl_._has_bits_[5] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_147)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_147() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_147_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_147(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_147_ = value;
}

// optional string f_148 = 215;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_148() const {
  bool value = (_impl_._has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_148() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_148_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000002u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_148() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_148)
  return _internal_f_148();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_148(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000002u;
  _impl_.f_148_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_148)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_148() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_148();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_148)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_148() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_148_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_148(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000002u;
  _impl_.f_148_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_148() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000002u;
  return _impl_.f_148_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_148() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_148)
  if ((_impl_._has_bits_[1] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000002u;
  auto* released = _impl_.f_148_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_148_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_148(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000002u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000002u;
  }
  _impl_.f_148_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_148_.IsDefault()) {
          _impl_.f_148_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_148)
}

// optional string f_149 = 218;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_149() const {
  bool value = (_impl_._has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_149() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_149_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000004u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_149() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_149)
  return _internal_f_149();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_149(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000004u;
  _impl_.f_149_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_149)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_149() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_149();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_149)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_149() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_149_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_149(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000004u;
  _impl_.f_149_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_149() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000004u;
  return _impl_.f_149_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_149() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_149)
  if ((_impl_._has_bits_[1] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000004u;
  auto* released = _impl_.f_149_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_149_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_149(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000004u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000004u;
  }
  _impl_.f_149_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_149_.IsDefault()) {
          _impl_.f_149_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_149)
}

// optional uint64 f_150 = 219;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_150() const {
  bool value = (_impl_._has_bits_[5] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_150() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_150_ = ::uint64_t{0u};
  _impl_._has_bits_[5] &= ~0x00000400u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_150() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_150)
  return _internal_f_150();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_150(::uint64_t value) {
  _internal_set_f_150(value);
  _impl_._has_bits_[5] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_150)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_150() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_150_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_150(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_150_ = value;
}

// optional bytes f_151 = 220;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_151() const {
  bool value = (_impl_._has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_151() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_151_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000008u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_151() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_151)
  return _internal_f_151();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_151(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000008u;
  _impl_.f_151_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_151)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_151() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_151();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_151)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_151() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_151_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_151(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000008u;
  _impl_.f_151_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_151() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000008u;
  return _impl_.f_151_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_151() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_151)
  if ((_impl_._has_bits_[1] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000008u;
  auto* released = _impl_.f_151_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_151_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_151(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000008u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000008u;
  }
  _impl_.f_151_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_151_.IsDefault()) {
          _impl_.f_151_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_151)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E78 f_152 = 222;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_152() const {
  bool value = (_impl_._has_bits_[5] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_152() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_152_ = 0;
  _impl_._has_bits_[5] &= ~0x00000200u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_152() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_152)
  return _internal_f_152();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_152(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78 value) {
  _internal_set_f_152(value);
  _impl_._has_bits_[5] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_152)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_152() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78>(_impl_.f_152_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_152(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_IsValid(value));
  _impl_.f_152_ = value;
}

// optional string f_153 = 224;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_153() const {
  bool value = (_impl_._has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_153() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_153_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000010u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_153() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_153)
  return _internal_f_153();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_153(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000010u;
  _impl_.f_153_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_153)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_153() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_153();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_153)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_153() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_153_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_153(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000010u;
  _impl_.f_153_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_153() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000010u;
  return _impl_.f_153_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_153() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_153)
  if ((_impl_._has_bits_[1] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000010u;
  auto* released = _impl_.f_153_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_153_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_153(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000010u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000010u;
  }
  _impl_.f_153_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_153_.IsDefault()) {
          _impl_.f_153_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_153)
}

// optional uint32 f_154 = 226;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_154() const {
  bool value = (_impl_._has_bits_[5] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_154() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_154_ = 0u;
  _impl_._has_bits_[5] &= ~0x00000800u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_154() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_154)
  return _internal_f_154();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_154(::uint32_t value) {
  _internal_set_f_154(value);
  _impl_._has_bits_[5] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_154)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_154() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_154_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_154(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_154_ = value;
}

// optional string f_155 = 228;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_155() const {
  bool value = (_impl_._has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_155() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_155_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000020u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_155() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_155)
  return _internal_f_155();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_155(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000020u;
  _impl_.f_155_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_155)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_155() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_155();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_155)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_155() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_155_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_155(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000020u;
  _impl_.f_155_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_155() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000020u;
  return _impl_.f_155_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_155() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_155)
  if ((_impl_._has_bits_[1] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000020u;
  auto* released = _impl_.f_155_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_155_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_155(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000020u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000020u;
  }
  _impl_.f_155_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_155_.IsDefault()) {
          _impl_.f_155_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_155)
}

// optional int64 f_156 = 229;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_156() const {
  bool value = (_impl_._has_bits_[5] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_156() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_156_ = ::int64_t{0};
  _impl_._has_bits_[5] &= ~0x00002000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_156() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_156)
  return _internal_f_156();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_156(::int64_t value) {
  _internal_set_f_156(value);
  _impl_._has_bits_[5] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_156)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_156() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_156_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_156(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_156_ = value;
}

// optional int32 f_157 = 230;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_157() const {
  bool value = (_impl_._has_bits_[5] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_157() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_157_ = 0;
  _impl_._has_bits_[5] &= ~0x00001000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_157() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_157)
  return _internal_f_157();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_157(::int32_t value) {
  _internal_set_f_157(value);
  _impl_._has_bits_[5] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_157)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_157() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_157_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_157(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_157_ = value;
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E79 f_158 = 231 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_158_size() const {
  return _internal_f_158().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_158_size() const {
  return _internal_f_158_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_158() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_158_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_158(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_158)
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79>(_internal_f_158().Get(index));
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_158(int index, ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79 value) {
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_IsValid(value));
  _internal_mutable_f_158()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_158)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_158(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79 value) {
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_158()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_158)
}
inline const ::google::protobuf::RepeatedField<int>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_158() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_158)
  return _internal_f_158();
}
inline ::google::protobuf::RepeatedField<int>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_158()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_158)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_158();
}
inline const ::google::protobuf::RepeatedField<int>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_158()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_158_;
}
inline ::google::protobuf::RepeatedField<int>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_158() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_158_;
}

// optional int64 f_159 = 232;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_159() const {
  bool value = (_impl_._has_bits_[5] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_159() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_159_ = ::int64_t{0};
  _impl_._has_bits_[5] &= ~0x00004000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_159() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_159)
  return _internal_f_159();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_159(::int64_t value) {
  _internal_set_f_159(value);
  _impl_._has_bits_[5] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_159)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_159() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_159_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_159(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_159_ = value;
}

// optional int64 f_160 = 234;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_160() const {
  bool value = (_impl_._has_bits_[5] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_160() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_160_ = ::int64_t{0};
  _impl_._has_bits_[5] &= ~0x00008000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_160() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_160)
  return _internal_f_160();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_160(::int64_t value) {
  _internal_set_f_160(value);
  _impl_._has_bits_[5] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_160)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_160() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_160_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_160(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_160_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E80 f_161 = 235;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_161() const {
  bool value = (_impl_._has_bits_[5] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_161() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_161_ = 0;
  _impl_._has_bits_[5] &= ~0x00010000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_161() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_161)
  return _internal_f_161();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_161(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80 value) {
  _internal_set_f_161(value);
  _impl_._has_bits_[5] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_161)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_161() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80>(_impl_.f_161_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_161(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_IsValid(value));
  _impl_.f_161_ = value;
}

// optional int32 f_162 = 236;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_162() const {
  bool value = (_impl_._has_bits_[5] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_162() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_162_ = 0;
  _impl_._has_bits_[5] &= ~0x00020000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_162() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_162)
  return _internal_f_162();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_162(::int32_t value) {
  _internal_set_f_162(value);
  _impl_._has_bits_[5] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_162)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_162() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_162_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_162(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_162_ = value;
}

// optional int32 f_163 = 237;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_163() const {
  bool value = (_impl_._has_bits_[5] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_163() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_163_ = 0;
  _impl_._has_bits_[5] &= ~0x00040000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_163() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_163)
  return _internal_f_163();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_163(::int32_t value) {
  _internal_set_f_163(value);
  _impl_._has_bits_[5] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_163)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_163() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_163_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_163(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_163_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E81 f_164 = 239;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_164() const {
  bool value = (_impl_._has_bits_[5] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_164() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_164_ = 0;
  _impl_._has_bits_[5] &= ~0x00080000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_164() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_164)
  return _internal_f_164();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_164(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81 value) {
  _internal_set_f_164(value);
  _impl_._has_bits_[5] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_164)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_164() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81>(_impl_.f_164_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_164(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_IsValid(value));
  _impl_.f_164_ = value;
}

// repeated int64 f_165 = 240 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_165_size() const {
  return _internal_f_165().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_165_size() const {
  return _internal_f_165_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_165() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_165_.Clear();
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_165(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_165)
  return _internal_f_165().Get(index);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_165(int index, ::int64_t value) {
  _internal_mutable_f_165()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_165)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_165(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_165()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_165)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_165() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_165)
  return _internal_f_165();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_165()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_165)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_165();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_165() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_165_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_165() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_165_;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E82 f_166 = 242;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_166() const {
  bool value = (_impl_._has_bits_[5] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_166() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_166_ = 0;
  _impl_._has_bits_[5] &= ~0x00100000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_166() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_166)
  return _internal_f_166();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_166(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82 value) {
  _internal_set_f_166(value);
  _impl_._has_bits_[5] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_166)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_166() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82>(_impl_.f_166_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_166(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_IsValid(value));
  _impl_.f_166_ = value;
}

// optional bool f_167 = 245;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_167() const {
  bool value = (_impl_._has_bits_[6] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_167() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_167_ = false;
  _impl_._has_bits_[6] &= ~0x00000800u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_167() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_167)
  return _internal_f_167();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_167(bool value) {
  _internal_set_f_167(value);
  _impl_._has_bits_[6] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_167)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_167() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_167_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_167(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_167_ = value;
}

// optional uint32 f_168 = 247;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_168() const {
  bool value = (_impl_._has_bits_[5] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_168() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_168_ = 0u;
  _impl_._has_bits_[5] &= ~0x00200000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_168() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_168)
  return _internal_f_168();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_168(::uint32_t value) {
  _internal_set_f_168(value);
  _impl_._has_bits_[5] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_168)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_168() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_168_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_168(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_168_ = value;
}

// optional int64 f_169 = 248;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_169() const {
  bool value = (_impl_._has_bits_[5] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_169() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_169_ = ::int64_t{0};
  _impl_._has_bits_[5] &= ~0x00400000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_169() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_169)
  return _internal_f_169();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_169(::int64_t value) {
  _internal_set_f_169(value);
  _impl_._has_bits_[5] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_169)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_169() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_169_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_169(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_169_ = value;
}

// optional int32 f_170 = 249;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_170() const {
  bool value = (_impl_._has_bits_[5] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_170() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_170_ = 0;
  _impl_._has_bits_[5] &= ~0x00800000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_170() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_170)
  return _internal_f_170();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_170(::int32_t value) {
  _internal_set_f_170(value);
  _impl_._has_bits_[5] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_170)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_170() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_170_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_170(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_170_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E83 f_171 = 250;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_171() const {
  bool value = (_impl_._has_bits_[5] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_171() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_171_ = 0;
  _impl_._has_bits_[5] &= ~0x01000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_171() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_171)
  return _internal_f_171();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_171(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83 value) {
  _internal_set_f_171(value);
  _impl_._has_bits_[5] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_171)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_171() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83>(_impl_.f_171_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_171(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_IsValid(value));
  _impl_.f_171_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E84 f_172 = 252;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_172() const {
  bool value = (_impl_._has_bits_[5] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_172() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_172_ = 0;
  _impl_._has_bits_[5] &= ~0x02000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_172() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_172)
  return _internal_f_172();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_172(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84 value) {
  _internal_set_f_172(value);
  _impl_._has_bits_[5] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_172)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_172() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84>(_impl_.f_172_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_172(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_IsValid(value));
  _impl_.f_172_ = value;
}

// repeated int64 f_173 = 253 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_173_size() const {
  return _internal_f_173().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_173_size() const {
  return _internal_f_173_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_173() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_173_.Clear();
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_173(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_173)
  return _internal_f_173().Get(index);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_173(int index, ::int64_t value) {
  _internal_mutable_f_173()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_173)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_173(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_173()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_173)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_173() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_173)
  return _internal_f_173();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_173()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_173)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_173();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_173() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_173_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_173() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_173_;
}

// optional int32 f_174 = 255;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_174() const {
  bool value = (_impl_._has_bits_[5] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_174() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_174_ = 0;
  _impl_._has_bits_[5] &= ~0x04000000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_174() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_174)
  return _internal_f_174();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_174(::int32_t value) {
  _internal_set_f_174(value);
  _impl_._has_bits_[5] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_174)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_174() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_174_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_174(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_174_ = value;
}

// optional int64 f_175 = 256;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_175() const {
  bool value = (_impl_._has_bits_[5] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_175() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_175_ = ::int64_t{0};
  _impl_._has_bits_[5] &= ~0x08000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_175() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_175)
  return _internal_f_175();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_175(::int64_t value) {
  _internal_set_f_175(value);
  _impl_._has_bits_[5] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_175)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_175() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_175_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_175(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_175_ = value;
}

// optional bytes f_176 = 257;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_176() const {
  bool value = (_impl_._has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_176() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_176_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000040u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_176() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_176)
  return _internal_f_176();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_176(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000040u;
  _impl_.f_176_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_176)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_176() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_176();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_176)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_176() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_176_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_176(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000040u;
  _impl_.f_176_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_176() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000040u;
  return _impl_.f_176_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_176() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_176)
  if ((_impl_._has_bits_[1] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000040u;
  auto* released = _impl_.f_176_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_176_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_176(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000040u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000040u;
  }
  _impl_.f_176_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_176_.IsDefault()) {
          _impl_.f_176_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_176)
}

// optional string f_177 = 258;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_177() const {
  bool value = (_impl_._has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_177() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_177_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000080u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_177() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_177)
  return _internal_f_177();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_177(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000080u;
  _impl_.f_177_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_177)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_177() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_177();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_177)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_177() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_177_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_177(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000080u;
  _impl_.f_177_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_177() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000080u;
  return _impl_.f_177_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_177() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_177)
  if ((_impl_._has_bits_[1] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000080u;
  auto* released = _impl_.f_177_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_177_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_177(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000080u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000080u;
  }
  _impl_.f_177_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_177_.IsDefault()) {
          _impl_.f_177_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_177)
}

// optional string f_178 = 259;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_178() const {
  bool value = (_impl_._has_bits_[1] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_178() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_178_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000100u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_178() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_178)
  return _internal_f_178();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_178(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000100u;
  _impl_.f_178_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_178)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_178() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_178();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_178)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_178() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_178_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_178(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000100u;
  _impl_.f_178_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_178() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000100u;
  return _impl_.f_178_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_178() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_178)
  if ((_impl_._has_bits_[1] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000100u;
  auto* released = _impl_.f_178_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_178_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_178(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000100u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000100u;
  }
  _impl_.f_178_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_178_.IsDefault()) {
          _impl_.f_178_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_178)
}

// optional string f_179 = 260;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_179() const {
  bool value = (_impl_._has_bits_[1] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_179() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_179_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000200u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_179() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_179)
  return _internal_f_179();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_179(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000200u;
  _impl_.f_179_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_179)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_179() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_179();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_179)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_179() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_179_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_179(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000200u;
  _impl_.f_179_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_179() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000200u;
  return _impl_.f_179_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_179() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_179)
  if ((_impl_._has_bits_[1] & 0x00000200u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000200u;
  auto* released = _impl_.f_179_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_179_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_179(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000200u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000200u;
  }
  _impl_.f_179_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_179_.IsDefault()) {
          _impl_.f_179_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_179)
}

// optional string f_180 = 261;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_180() const {
  bool value = (_impl_._has_bits_[1] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_180() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_180_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000400u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_180() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_180)
  return _internal_f_180();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_180(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000400u;
  _impl_.f_180_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_180)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_180() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_180();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_180)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_180() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_180_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_180(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000400u;
  _impl_.f_180_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_180() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000400u;
  return _impl_.f_180_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_180() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_180)
  if ((_impl_._has_bits_[1] & 0x00000400u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000400u;
  auto* released = _impl_.f_180_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_180_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_180(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000400u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000400u;
  }
  _impl_.f_180_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_180_.IsDefault()) {
          _impl_.f_180_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_180)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E85 f_181 = 262;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_181() const {
  bool value = (_impl_._has_bits_[5] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_181() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_181_ = 0;
  _impl_._has_bits_[5] &= ~0x10000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_181() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_181)
  return _internal_f_181();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_181(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85 value) {
  _internal_set_f_181(value);
  _impl_._has_bits_[5] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_181)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_181() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85>(_impl_.f_181_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_181(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_IsValid(value));
  _impl_.f_181_ = value;
}

// optional float f_182 = 263;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_182() const {
  bool value = (_impl_._has_bits_[5] & 0x20000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_182() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_182_ = 0;
  _impl_._has_bits_[5] &= ~0x20000000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_182() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_182)
  return _internal_f_182();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_182(float value) {
  _internal_set_f_182(value);
  _impl_._has_bits_[5] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_182)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_182() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_182_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_182(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_182_ = value;
}

// optional int32 f_183 = 264;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_183() const {
  bool value = (_impl_._has_bits_[5] & 0x80000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_183() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_183_ = 0;
  _impl_._has_bits_[5] &= ~0x80000000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_183() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_183)
  return _internal_f_183();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_183(::int32_t value) {
  _internal_set_f_183(value);
  _impl_._has_bits_[5] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_183)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_183() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_183_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_183(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_183_ = value;
}

// optional uint64 f_184 = 265;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_184() const {
  bool value = (_impl_._has_bits_[5] & 0x40000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_184() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_184_ = ::uint64_t{0u};
  _impl_._has_bits_[5] &= ~0x40000000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_184() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_184)
  return _internal_f_184();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_184(::uint64_t value) {
  _internal_set_f_184(value);
  _impl_._has_bits_[5] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_184)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_184() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_184_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_184(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_184_ = value;
}

// optional int32 f_185 = 266;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_185() const {
  bool value = (_impl_._has_bits_[6] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_185() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_185_ = 0;
  _impl_._has_bits_[6] &= ~0x00000001u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_185() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_185)
  return _internal_f_185();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_185(::int32_t value) {
  _internal_set_f_185(value);
  _impl_._has_bits_[6] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_185)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_185() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_185_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_185(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_185_ = value;
}

// optional string f_186 = 267;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_186() const {
  bool value = (_impl_._has_bits_[1] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_186() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_186_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00000800u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_186() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_186)
  return _internal_f_186();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_186(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000800u;
  _impl_.f_186_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_186)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_186() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_186();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_186)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_186() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_186_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_186(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000800u;
  _impl_.f_186_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_186() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00000800u;
  return _impl_.f_186_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_186() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_186)
  if ((_impl_._has_bits_[1] & 0x00000800u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00000800u;
  auto* released = _impl_.f_186_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_186_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_186(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00000800u;
  } else {
    _impl_._has_bits_[1] &= ~0x00000800u;
  }
  _impl_.f_186_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_186_.IsDefault()) {
          _impl_.f_186_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_186)
}

// optional bool f_187 = 270;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_187() const {
  bool value = (_impl_._has_bits_[6] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_187() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_187_ = false;
  _impl_._has_bits_[6] &= ~0x00001000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_187() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_187)
  return _internal_f_187();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_187(bool value) {
  _internal_set_f_187(value);
  _impl_._has_bits_[6] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_187)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_187() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_187_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_187(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_187_ = value;
}

// optional int64 f_188 = 271;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_188() const {
  bool value = (_impl_._has_bits_[6] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_188() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_188_ = ::int64_t{0};
  _impl_._has_bits_[6] &= ~0x00000002u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_188() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_188)
  return _internal_f_188();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_188(::int64_t value) {
  _internal_set_f_188(value);
  _impl_._has_bits_[6] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_188)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_188() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_188_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_188(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_188_ = value;
}

// optional int64 f_189 = 272;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_189() const {
  bool value = (_impl_._has_bits_[6] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_189() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_189_ = ::int64_t{0};
  _impl_._has_bits_[6] &= ~0x00000004u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_189() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_189)
  return _internal_f_189();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_189(::int64_t value) {
  _internal_set_f_189(value);
  _impl_._has_bits_[6] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_189)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_189() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_189_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_189(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_189_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E86 f_190 = 273;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_190() const {
  bool value = (_impl_._has_bits_[6] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_190() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_190_ = 0;
  _impl_._has_bits_[6] &= ~0x00000020u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_190() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_190)
  return _internal_f_190();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_190(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86 value) {
  _internal_set_f_190(value);
  _impl_._has_bits_[6] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_190)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_190() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86>(_impl_.f_190_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_190(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_IsValid(value));
  _impl_.f_190_ = value;
}

// optional uint64 f_191 = 274;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_191() const {
  bool value = (_impl_._has_bits_[6] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_191() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_191_ = ::uint64_t{0u};
  _impl_._has_bits_[6] &= ~0x00000008u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_191() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_191)
  return _internal_f_191();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_191(::uint64_t value) {
  _internal_set_f_191(value);
  _impl_._has_bits_[6] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_191)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_191() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_191_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_191(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_191_ = value;
}

// optional int64 f_192 = 275;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_192() const {
  bool value = (_impl_._has_bits_[6] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_192() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_192_ = ::int64_t{0};
  _impl_._has_bits_[6] &= ~0x00000010u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_192() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_192)
  return _internal_f_192();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_192(::int64_t value) {
  _internal_set_f_192(value);
  _impl_._has_bits_[6] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_192)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_192() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_192_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_192(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_192_ = value;
}

// optional fixed32 f_193 = 277;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_193() const {
  bool value = (_impl_._has_bits_[6] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_193() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_193_ = 0u;
  _impl_._has_bits_[6] &= ~0x00000040u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_193() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_193)
  return _internal_f_193();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_193(::uint32_t value) {
  _internal_set_f_193(value);
  _impl_._has_bits_[6] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_193)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_193() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_193_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_193(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_193_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E87 f_194 = 278;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_194() const {
  bool value = (_impl_._has_bits_[6] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_194() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_194_ = 0;
  _impl_._has_bits_[6] &= ~0x00000080u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_194() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_194)
  return _internal_f_194();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_194(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87 value) {
  _internal_set_f_194(value);
  _impl_._has_bits_[6] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_194)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_194() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87>(_impl_.f_194_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_194(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_IsValid(value));
  _impl_.f_194_ = value;
}

// optional fixed32 f_195 = 279;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_195() const {
  bool value = (_impl_._has_bits_[6] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_195() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_195_ = 0u;
  _impl_._has_bits_[6] &= ~0x00000100u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_195() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_195)
  return _internal_f_195();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_195(::uint32_t value) {
  _internal_set_f_195(value);
  _impl_._has_bits_[6] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_195)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_195() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_195_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_195(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_195_ = value;
}

// optional float f_196 = 280;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_196() const {
  bool value = (_impl_._has_bits_[6] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_196() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_196_ = 0;
  _impl_._has_bits_[6] &= ~0x00000400u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_196() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_196)
  return _internal_f_196();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_196(float value) {
  _internal_set_f_196(value);
  _impl_._has_bits_[6] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_196)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_196() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_196_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_196(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_196_ = value;
}

// optional int64 f_197 = 281;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_197() const {
  bool value = (_impl_._has_bits_[6] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_197() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_197_ = ::int64_t{0};
  _impl_._has_bits_[6] &= ~0x00000200u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_197() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_197)
  return _internal_f_197();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_197(::int64_t value) {
  _internal_set_f_197(value);
  _impl_._has_bits_[6] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_197)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_197() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_197_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_197(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_197_ = value;
}

// optional string f_198 = 283;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_198() const {
  bool value = (_impl_._has_bits_[1] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_198() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_198_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00001000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_198() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_198)
  return _internal_f_198();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_198(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00001000u;
  _impl_.f_198_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_198)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_198() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_198();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_198)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_198() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_198_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_198(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00001000u;
  _impl_.f_198_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_198() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00001000u;
  return _impl_.f_198_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_198() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_198)
  if ((_impl_._has_bits_[1] & 0x00001000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00001000u;
  auto* released = _impl_.f_198_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_198_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_198(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00001000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00001000u;
  }
  _impl_.f_198_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_198_.IsDefault()) {
          _impl_.f_198_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_198)
}

// optional int32 f_199 = 284;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_199() const {
  bool value = (_impl_._has_bits_[6] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_199() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_199_ = 0;
  _impl_._has_bits_[6] &= ~0x00008000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_199() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_199)
  return _internal_f_199();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_199(::int32_t value) {
  _internal_set_f_199(value);
  _impl_._has_bits_[6] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_199)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_199() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_199_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_199(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_199_ = value;
}

// optional int32 f_200 = 286;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_200() const {
  bool value = (_impl_._has_bits_[6] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_200() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_200_ = 0;
  _impl_._has_bits_[6] &= ~0x00010000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_200() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_200)
  return _internal_f_200();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_200(::int32_t value) {
  _internal_set_f_200(value);
  _impl_._has_bits_[6] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_200)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_200() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_200_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_200(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_200_ = value;
}

// optional int32 f_201 = 288;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_201() const {
  bool value = (_impl_._has_bits_[6] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_201() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_201_ = 0;
  _impl_._has_bits_[6] &= ~0x00020000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_201() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_201)
  return _internal_f_201();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_201(::int32_t value) {
  _internal_set_f_201(value);
  _impl_._has_bits_[6] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_201)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_201() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_201_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_201(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_201_ = value;
}

// optional bool f_202 = 289;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_202() const {
  bool value = (_impl_._has_bits_[6] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_202() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_202_ = false;
  _impl_._has_bits_[6] &= ~0x00002000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_202() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_202)
  return _internal_f_202();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_202(bool value) {
  _internal_set_f_202(value);
  _impl_._has_bits_[6] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_202)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_202() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_202_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_202(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_202_ = value;
}

// optional fixed32 f_203 = 290;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_203() const {
  bool value = (_impl_._has_bits_[6] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_203() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_203_ = 0u;
  _impl_._has_bits_[6] &= ~0x00040000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_203() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_203)
  return _internal_f_203();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_203(::uint32_t value) {
  _internal_set_f_203(value);
  _impl_._has_bits_[6] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_203)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_203() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_203_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_203(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_203_ = value;
}

// optional string f_204 = 291;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_204() const {
  bool value = (_impl_._has_bits_[1] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_204() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_204_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00002000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_204() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_204)
  return _internal_f_204();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_204(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00002000u;
  _impl_.f_204_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_204)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_204() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_204();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_204)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_204() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_204_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_204(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00002000u;
  _impl_.f_204_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_204() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00002000u;
  return _impl_.f_204_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_204() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_204)
  if ((_impl_._has_bits_[1] & 0x00002000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00002000u;
  auto* released = _impl_.f_204_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_204_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_204(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00002000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00002000u;
  }
  _impl_.f_204_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_204_.IsDefault()) {
          _impl_.f_204_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_204)
}

// optional int32 f_205 = 294;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_205() const {
  bool value = (_impl_._has_bits_[6] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_205() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_205_ = 0;
  _impl_._has_bits_[6] &= ~0x00080000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_205() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_205)
  return _internal_f_205();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_205(::int32_t value) {
  _internal_set_f_205(value);
  _impl_._has_bits_[6] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_205)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_205() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_205_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_205(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_205_ = value;
}

// repeated int32 f_206 = 296 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_206_size() const {
  return _internal_f_206().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_206_size() const {
  return _internal_f_206_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_206() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_206_.Clear();
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_206(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_206)
  return _internal_f_206().Get(index);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_206(int index, ::int32_t value) {
  _internal_mutable_f_206()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_206)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_206(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_206()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_206)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_206() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_206)
  return _internal_f_206();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_206()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_206)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_206();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_206() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_206_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_206() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_206_;
}

// optional int32 f_207 = 297;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_207() const {
  bool value = (_impl_._has_bits_[6] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_207() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_207_ = 0;
  _impl_._has_bits_[6] &= ~0x00100000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_207() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_207)
  return _internal_f_207();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_207(::int32_t value) {
  _internal_set_f_207(value);
  _impl_._has_bits_[6] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_207)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_207() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_207_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_207(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_207_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E88 f_208 = 298;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_208() const {
  bool value = (_impl_._has_bits_[6] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_208() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_208_ = 0;
  _impl_._has_bits_[6] &= ~0x00200000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_208() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_208)
  return _internal_f_208();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_208(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88 value) {
  _internal_set_f_208(value);
  _impl_._has_bits_[6] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_208)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_208() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88>(_impl_.f_208_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_208(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_IsValid(value));
  _impl_.f_208_ = value;
}

// optional int32 f_209 = 301;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_209() const {
  bool value = (_impl_._has_bits_[6] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_209() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_209_ = 0;
  _impl_._has_bits_[6] &= ~0x00400000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_209() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_209)
  return _internal_f_209();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_209(::int32_t value) {
  _internal_set_f_209(value);
  _impl_._has_bits_[6] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_209)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_209() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_209_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_209(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_209_ = value;
}

// optional int64 f_210 = 302;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_210() const {
  bool value = (_impl_._has_bits_[6] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_210() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_210_ = ::int64_t{0};
  _impl_._has_bits_[6] &= ~0x00800000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_210() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_210)
  return _internal_f_210();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_210(::int64_t value) {
  _internal_set_f_210(value);
  _impl_._has_bits_[6] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_210)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_210() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_210_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_210(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_210_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E89 f_211 = 304;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_211() const {
  bool value = (_impl_._has_bits_[6] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_211() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_211_ = 0;
  _impl_._has_bits_[6] &= ~0x04000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_211() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_211)
  return _internal_f_211();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_211(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89 value) {
  _internal_set_f_211(value);
  _impl_._has_bits_[6] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_211)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_211() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89>(_impl_.f_211_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_211(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_IsValid(value));
  _impl_.f_211_ = value;
}

// optional int64 f_212 = 305;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_212() const {
  bool value = (_impl_._has_bits_[6] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_212() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_212_ = ::int64_t{0};
  _impl_._has_bits_[6] &= ~0x01000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_212() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_212)
  return _internal_f_212();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_212(::int64_t value) {
  _internal_set_f_212(value);
  _impl_._has_bits_[6] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_212)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_212() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_212_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_212(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_212_ = value;
}

// optional int64 f_213 = 306;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_213() const {
  bool value = (_impl_._has_bits_[6] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_213() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_213_ = ::int64_t{0};
  _impl_._has_bits_[6] &= ~0x02000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_213() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_213)
  return _internal_f_213();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_213(::int64_t value) {
  _internal_set_f_213(value);
  _impl_._has_bits_[6] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_213)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_213() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_213_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_213(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_213_ = value;
}

// optional float f_214 = 308;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_214() const {
  bool value = (_impl_._has_bits_[6] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_214() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_214_ = 0;
  _impl_._has_bits_[6] &= ~0x08000000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_214() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_214)
  return _internal_f_214();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_214(float value) {
  _internal_set_f_214(value);
  _impl_._has_bits_[6] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_214)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_214() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_214_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_214(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_214_ = value;
}

// optional int64 f_215 = 309;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_215() const {
  bool value = (_impl_._has_bits_[6] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_215() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_215_ = ::int64_t{0};
  _impl_._has_bits_[6] &= ~0x10000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_215() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_215)
  return _internal_f_215();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_215(::int64_t value) {
  _internal_set_f_215(value);
  _impl_._has_bits_[6] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_215)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_215() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_215_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_215(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_215_ = value;
}

// optional string f_216 = 310;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_216() const {
  bool value = (_impl_._has_bits_[1] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_216() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_216_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00004000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_216() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_216)
  return _internal_f_216();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_216(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00004000u;
  _impl_.f_216_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_216)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_216() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_216();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_216)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_216() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_216_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_216(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00004000u;
  _impl_.f_216_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_216() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00004000u;
  return _impl_.f_216_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_216() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_216)
  if ((_impl_._has_bits_[1] & 0x00004000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00004000u;
  auto* released = _impl_.f_216_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_216_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_216(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00004000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00004000u;
  }
  _impl_.f_216_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_216_.IsDefault()) {
          _impl_.f_216_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_216)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E90 f_217 = 312;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_217() const {
  bool value = (_impl_._has_bits_[6] & 0x40000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_217() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_217_ = 0;
  _impl_._has_bits_[6] &= ~0x40000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_217() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_217)
  return _internal_f_217();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_217(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90 value) {
  _internal_set_f_217(value);
  _impl_._has_bits_[6] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_217)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_217() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90>(_impl_.f_217_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_217(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_IsValid(value));
  _impl_.f_217_ = value;
}

// optional int64 f_218 = 313;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_218() const {
  bool value = (_impl_._has_bits_[6] & 0x20000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_218() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_218_ = ::int64_t{0};
  _impl_._has_bits_[6] &= ~0x20000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_218() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_218)
  return _internal_f_218();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_218(::int64_t value) {
  _internal_set_f_218(value);
  _impl_._has_bits_[6] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_218)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_218() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_218_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_218(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_218_ = value;
}

// repeated string f_219 = 315;
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_219_size() const {
  return _internal_f_219().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_219_size() const {
  return _internal_f_219_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_219() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_219_.Clear();
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_219()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_f_219()->Add();
  // @@protoc_insertion_point(field_add_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_219(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
  return _internal_f_219().Get(index);
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_219(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
  return _internal_mutable_f_219()->Mutable(index);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_219(int index, const std::string& value) {
  _internal_mutable_f_219()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_219(int index, std::string&& value) {
  _internal_mutable_f_219()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_219(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_f_219()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_219(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_f_219()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_219(int index, absl::string_view value) {
  _internal_mutable_f_219()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_219(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_219()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_219(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_219()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_219(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_219()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_219(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_219()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_219(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_219()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_219() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
  return _internal_f_219();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_219() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_219)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_219();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_219() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_219_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_219() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_219_;
}

// optional fixed32 f_220 = 316;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_220() const {
  bool value = (_impl_._has_bits_[6] & 0x80000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_220() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_220_ = 0u;
  _impl_._has_bits_[6] &= ~0x80000000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_220() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_220)
  return _internal_f_220();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_220(::uint32_t value) {
  _internal_set_f_220(value);
  _impl_._has_bits_[6] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_220)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_220() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_220_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_220(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_220_ = value;
}

// optional int64 f_221 = 317;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_221() const {
  bool value = (_impl_._has_bits_[7] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_221() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_221_ = ::int64_t{0};
  _impl_._has_bits_[7] &= ~0x00000001u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_221() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_221)
  return _internal_f_221();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_221(::int64_t value) {
  _internal_set_f_221(value);
  _impl_._has_bits_[7] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_221)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_221() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_221_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_221(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_221_ = value;
}

// optional bytes f_222 = 319;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_222() const {
  bool value = (_impl_._has_bits_[1] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_222() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_222_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00008000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_222() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_222)
  return _internal_f_222();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_222(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00008000u;
  _impl_.f_222_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_222)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_222() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_222();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_222)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_222() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_222_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_222(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00008000u;
  _impl_.f_222_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_222() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00008000u;
  return _impl_.f_222_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_222() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_222)
  if ((_impl_._has_bits_[1] & 0x00008000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00008000u;
  auto* released = _impl_.f_222_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_222_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_222(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00008000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00008000u;
  }
  _impl_.f_222_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_222_.IsDefault()) {
          _impl_.f_222_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_222)
}

// optional float f_223 = 321;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_223() const {
  bool value = (_impl_._has_bits_[7] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_223() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_223_ = 0;
  _impl_._has_bits_[7] &= ~0x00000004u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_223() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_223)
  return _internal_f_223();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_223(float value) {
  _internal_set_f_223(value);
  _impl_._has_bits_[7] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_223)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_223() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_223_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_223(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_223_ = value;
}

// optional int64 f_224 = 322;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_224() const {
  bool value = (_impl_._has_bits_[7] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_224() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_224_ = ::int64_t{0};
  _impl_._has_bits_[7] &= ~0x00000002u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_224() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_224)
  return _internal_f_224();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_224(::int64_t value) {
  _internal_set_f_224(value);
  _impl_._has_bits_[7] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_224)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_224() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_224_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_224(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_224_ = value;
}

// optional bool f_225 = 323;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_225() const {
  bool value = (_impl_._has_bits_[6] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_225() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_225_ = false;
  _impl_._has_bits_[6] &= ~0x00004000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_225() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_225)
  return _internal_f_225();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_225(bool value) {
  _internal_set_f_225(value);
  _impl_._has_bits_[6] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_225)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_225() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_225_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_225(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_225_ = value;
}

// optional fixed64 f_226 = 324;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_226() const {
  bool value = (_impl_._has_bits_[7] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_226() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_226_ = ::uint64_t{0u};
  _impl_._has_bits_[7] &= ~0x00000010u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_226() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_226)
  return _internal_f_226();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_226(::uint64_t value) {
  _internal_set_f_226(value);
  _impl_._has_bits_[7] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_226)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_226() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_226_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_226(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_226_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E91 f_227 = 326;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_227() const {
  bool value = (_impl_._has_bits_[7] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_227() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_227_ = 0;
  _impl_._has_bits_[7] &= ~0x00000008u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_227() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_227)
  return _internal_f_227();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_227(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91 value) {
  _internal_set_f_227(value);
  _impl_._has_bits_[7] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_227)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_227() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91>(_impl_.f_227_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_227(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_IsValid(value));
  _impl_.f_227_ = value;
}

// optional bool f_228 = 328;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_228() const {
  bool value = (_impl_._has_bits_[7] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_228() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_228_ = false;
  _impl_._has_bits_[7] &= ~0x00100000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_228() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_228)
  return _internal_f_228();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_228(bool value) {
  _internal_set_f_228(value);
  _impl_._has_bits_[7] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_228)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_228() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_228_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_228(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_228_ = value;
}

// optional int32 f_229 = 332;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_229() const {
  bool value = (_impl_._has_bits_[7] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_229() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_229_ = 0;
  _impl_._has_bits_[7] &= ~0x00000020u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_229() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_229)
  return _internal_f_229();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_229(::int32_t value) {
  _internal_set_f_229(value);
  _impl_._has_bits_[7] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_229)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_229() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_229_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_229(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_229_ = value;
}

// repeated int32 f_230 = 333 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_230_size() const {
  return _internal_f_230().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_230_size() const {
  return _internal_f_230_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_230() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_230_.Clear();
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_230(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_230)
  return _internal_f_230().Get(index);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_230(int index, ::int32_t value) {
  _internal_mutable_f_230()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_230)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_230(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_230()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_230)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_230() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_230)
  return _internal_f_230();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_230()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_230)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_230();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_230() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_230_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_230() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_230_;
}

// optional bytes f_231 = 334;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_231() const {
  bool value = (_impl_._has_bits_[1] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_231() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_231_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00010000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_231() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_231)
  return _internal_f_231();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_231(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00010000u;
  _impl_.f_231_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_231)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_231() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_231();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_231)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_231() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_231_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_231(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00010000u;
  _impl_.f_231_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_231() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00010000u;
  return _impl_.f_231_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_231() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_231)
  if ((_impl_._has_bits_[1] & 0x00010000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00010000u;
  auto* released = _impl_.f_231_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_231_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_231(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00010000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00010000u;
  }
  _impl_.f_231_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_231_.IsDefault()) {
          _impl_.f_231_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_231)
}

// optional string f_232 = 335;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_232() const {
  bool value = (_impl_._has_bits_[1] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_232() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_232_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00020000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_232() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_232)
  return _internal_f_232();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_232(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00020000u;
  _impl_.f_232_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_232)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_232() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_232();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_232)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_232() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_232_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_232(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00020000u;
  _impl_.f_232_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_232() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00020000u;
  return _impl_.f_232_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_232() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_232)
  if ((_impl_._has_bits_[1] & 0x00020000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00020000u;
  auto* released = _impl_.f_232_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_232_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_232(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00020000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00020000u;
  }
  _impl_.f_232_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_232_.IsDefault()) {
          _impl_.f_232_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_232)
}

// optional int64 f_233 = 337;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_233() const {
  bool value = (_impl_._has_bits_[7] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_233() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_233_ = ::int64_t{0};
  _impl_._has_bits_[7] &= ~0x00000080u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_233() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_233)
  return _internal_f_233();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_233(::int64_t value) {
  _internal_set_f_233(value);
  _impl_._has_bits_[7] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_233)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_233() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_233_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_233(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_233_ = value;
}

// optional int32 f_234 = 338;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_234() const {
  bool value = (_impl_._has_bits_[7] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_234() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_234_ = 0;
  _impl_._has_bits_[7] &= ~0x00000040u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_234() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_234)
  return _internal_f_234();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_234(::int32_t value) {
  _internal_set_f_234(value);
  _impl_._has_bits_[7] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_234)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_234() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_234_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_234(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_234_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E92 f_235 = 339;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_235() const {
  bool value = (_impl_._has_bits_[7] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_235() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_235_ = 0;
  _impl_._has_bits_[7] &= ~0x00000100u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_235() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_235)
  return _internal_f_235();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_235(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92 value) {
  _internal_set_f_235(value);
  _impl_._has_bits_[7] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_235)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_235() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92>(_impl_.f_235_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_235(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_IsValid(value));
  _impl_.f_235_ = value;
}

// optional float f_236 = 341;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_236() const {
  bool value = (_impl_._has_bits_[7] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_236() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_236_ = 0;
  _impl_._has_bits_[7] &= ~0x00000200u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_236() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_236)
  return _internal_f_236();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_236(float value) {
  _internal_set_f_236(value);
  _impl_._has_bits_[7] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_236)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_236() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_236_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_236(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_236_ = value;
}

// repeated string f_237 = 342;
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_237_size() const {
  return _internal_f_237().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_237_size() const {
  return _internal_f_237_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_237() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_237_.Clear();
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_237()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_f_237()->Add();
  // @@protoc_insertion_point(field_add_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_237(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
  return _internal_f_237().Get(index);
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_237(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
  return _internal_mutable_f_237()->Mutable(index);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_237(int index, const std::string& value) {
  _internal_mutable_f_237()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_237(int index, std::string&& value) {
  _internal_mutable_f_237()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_237(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_f_237()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_237(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_f_237()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_237(int index, absl::string_view value) {
  _internal_mutable_f_237()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_237(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_237()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_237(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_237()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_237(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_237()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_237(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_237()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_237(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_237()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_237() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
  return _internal_f_237();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_237() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_237)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_237();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_237() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_237_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_237() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_237_;
}

// optional float f_238 = 345;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_238() const {
  bool value = (_impl_._has_bits_[7] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_238() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_238_ = 0;
  _impl_._has_bits_[7] &= ~0x00000800u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_238() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_238)
  return _internal_f_238();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_238(float value) {
  _internal_set_f_238(value);
  _impl_._has_bits_[7] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_238)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_238() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_238_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_238(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_238_ = value;
}

// optional int64 f_239 = 346;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_239() const {
  bool value = (_impl_._has_bits_[7] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_239() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_239_ = ::int64_t{0};
  _impl_._has_bits_[7] &= ~0x00000400u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_239() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_239)
  return _internal_f_239();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_239(::int64_t value) {
  _internal_set_f_239(value);
  _impl_._has_bits_[7] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_239)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_239() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_239_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_239(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_239_ = value;
}

// optional float f_240 = 349;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_240() const {
  bool value = (_impl_._has_bits_[7] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_240() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_240_ = 0;
  _impl_._has_bits_[7] &= ~0x00001000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_240() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_240)
  return _internal_f_240();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_240(float value) {
  _internal_set_f_240(value);
  _impl_._has_bits_[7] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_240)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_240() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_240_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_240(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_240_ = value;
}

// optional int32 f_241 = 351;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_241() const {
  bool value = (_impl_._has_bits_[7] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_241() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_241_ = 0;
  _impl_._has_bits_[7] &= ~0x00002000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_241() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_241)
  return _internal_f_241();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_241(::int32_t value) {
  _internal_set_f_241(value);
  _impl_._has_bits_[7] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_241)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_241() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_241_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_241(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_241_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E93 f_242 = 352;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_242() const {
  bool value = (_impl_._has_bits_[7] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_242() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_242_ = 0;
  _impl_._has_bits_[7] &= ~0x00004000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_242() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_242)
  return _internal_f_242();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_242(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93 value) {
  _internal_set_f_242(value);
  _impl_._has_bits_[7] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_242)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_242() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93>(_impl_.f_242_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_242(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_IsValid(value));
  _impl_.f_242_ = value;
}

// optional int64 f_243 = 353;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_243() const {
  bool value = (_impl_._has_bits_[7] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_243() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_243_ = ::int64_t{0};
  _impl_._has_bits_[7] &= ~0x00008000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_243() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_243)
  return _internal_f_243();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_243(::int64_t value) {
  _internal_set_f_243(value);
  _impl_._has_bits_[7] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_243)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_243() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_243_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_243(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_243_ = value;
}

// optional uint32 f_244 = 354;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_244() const {
  bool value = (_impl_._has_bits_[7] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_244() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_244_ = 0u;
  _impl_._has_bits_[7] &= ~0x00010000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_244() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_244)
  return _internal_f_244();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_244(::uint32_t value) {
  _internal_set_f_244(value);
  _impl_._has_bits_[7] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_244)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_244() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_244_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_244(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_244_ = value;
}

// optional int32 f_245 = 355;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_245() const {
  bool value = (_impl_._has_bits_[7] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_245() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_245_ = 0;
  _impl_._has_bits_[7] &= ~0x00020000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_245() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_245)
  return _internal_f_245();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_245(::int32_t value) {
  _internal_set_f_245(value);
  _impl_._has_bits_[7] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_245)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_245() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_245_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_245(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_245_ = value;
}

// optional string f_246 = 357;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_246() const {
  bool value = (_impl_._has_bits_[1] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_246() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_246_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00040000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_246() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_246)
  return _internal_f_246();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_246(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00040000u;
  _impl_.f_246_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_246)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_246() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_246();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_246)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_246() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_246_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_246(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00040000u;
  _impl_.f_246_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_246() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00040000u;
  return _impl_.f_246_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_246() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_246)
  if ((_impl_._has_bits_[1] & 0x00040000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00040000u;
  auto* released = _impl_.f_246_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_246_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_246(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00040000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00040000u;
  }
  _impl_.f_246_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_246_.IsDefault()) {
          _impl_.f_246_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_246)
}

// optional string f_247 = 358;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_247() const {
  bool value = (_impl_._has_bits_[1] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_247() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_247_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00080000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_247() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_247)
  return _internal_f_247();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_247(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00080000u;
  _impl_.f_247_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_247)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_247() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_247();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_247)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_247() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_247_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_247(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00080000u;
  _impl_.f_247_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_247() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00080000u;
  return _impl_.f_247_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_247() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_247)
  if ((_impl_._has_bits_[1] & 0x00080000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00080000u;
  auto* released = _impl_.f_247_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_247_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_247(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00080000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00080000u;
  }
  _impl_.f_247_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_247_.IsDefault()) {
          _impl_.f_247_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_247)
}

// optional string f_248 = 360;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_248() const {
  bool value = (_impl_._has_bits_[1] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_248() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_248_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00100000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_248() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_248)
  return _internal_f_248();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_248(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00100000u;
  _impl_.f_248_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_248)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_248() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_248();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_248)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_248() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_248_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_248(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00100000u;
  _impl_.f_248_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_248() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00100000u;
  return _impl_.f_248_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_248() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_248)
  if ((_impl_._has_bits_[1] & 0x00100000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00100000u;
  auto* released = _impl_.f_248_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_248_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_248(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00100000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00100000u;
  }
  _impl_.f_248_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_248_.IsDefault()) {
          _impl_.f_248_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_248)
}

// optional uint32 f_249 = 361;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_249() const {
  bool value = (_impl_._has_bits_[7] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_249() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_249_ = 0u;
  _impl_._has_bits_[7] &= ~0x00040000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_249() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_249)
  return _internal_f_249();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_249(::uint32_t value) {
  _internal_set_f_249(value);
  _impl_._has_bits_[7] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_249)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_249() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_249_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_249(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_249_ = value;
}

// optional uint32 f_250 = 363;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_250() const {
  bool value = (_impl_._has_bits_[7] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_250() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_250_ = 0u;
  _impl_._has_bits_[7] &= ~0x00080000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_250() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_250)
  return _internal_f_250();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_250(::uint32_t value) {
  _internal_set_f_250(value);
  _impl_._has_bits_[7] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_250)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_250() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_250_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_250(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_250_ = value;
}

// optional uint64 f_251 = 364;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_251() const {
  bool value = (_impl_._has_bits_[7] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_251() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_251_ = ::uint64_t{0u};
  _impl_._has_bits_[7] &= ~0x02000000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_251() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_251)
  return _internal_f_251();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_251(::uint64_t value) {
  _internal_set_f_251(value);
  _impl_._has_bits_[7] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_251)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_251() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_251_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_251(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_251_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E94 f_252 = 365;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_252() const {
  bool value = (_impl_._has_bits_[7] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_252() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_252_ = 0;
  _impl_._has_bits_[7] &= ~0x01000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_252() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_252)
  return _internal_f_252();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_252(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94 value) {
  _internal_set_f_252(value);
  _impl_._has_bits_[7] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_252)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_252() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94>(_impl_.f_252_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_252(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_IsValid(value));
  _impl_.f_252_ = value;
}

// optional string f_253 = 366;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_253() const {
  bool value = (_impl_._has_bits_[1] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_253() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_253_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00200000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_253() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_253)
  return _internal_f_253();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_253(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00200000u;
  _impl_.f_253_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_253)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_253() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_253();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_253)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_253() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_253_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_253(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00200000u;
  _impl_.f_253_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_253() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00200000u;
  return _impl_.f_253_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_253() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_253)
  if ((_impl_._has_bits_[1] & 0x00200000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00200000u;
  auto* released = _impl_.f_253_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_253_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_253(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00200000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00200000u;
  }
  _impl_.f_253_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_253_.IsDefault()) {
          _impl_.f_253_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_253)
}

// optional int64 f_254 = 368;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_254() const {
  bool value = (_impl_._has_bits_[7] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_254() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_254_ = ::int64_t{0};
  _impl_._has_bits_[7] &= ~0x04000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_254() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_254)
  return _internal_f_254();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_254(::int64_t value) {
  _internal_set_f_254(value);
  _impl_._has_bits_[7] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_254)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_254() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_254_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_254(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_254_ = value;
}

// optional float f_255 = 369;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_255() const {
  bool value = (_impl_._has_bits_[7] & 0x20000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_255() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_255_ = 0;
  _impl_._has_bits_[7] &= ~0x20000000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_255() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_255)
  return _internal_f_255();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_255(float value) {
  _internal_set_f_255(value);
  _impl_._has_bits_[7] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_255)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_255() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_255_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_255(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_255_ = value;
}

// optional bool f_256 = 370;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_256() const {
  bool value = (_impl_._has_bits_[7] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_256() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_256_ = false;
  _impl_._has_bits_[7] &= ~0x00200000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_256() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_256)
  return _internal_f_256();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_256(bool value) {
  _internal_set_f_256(value);
  _impl_._has_bits_[7] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_256)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_256() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_256_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_256(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_256_ = value;
}

// optional int64 f_257 = 372;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_257() const {
  bool value = (_impl_._has_bits_[7] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_257() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_257_ = ::int64_t{0};
  _impl_._has_bits_[7] &= ~0x08000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_257() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_257)
  return _internal_f_257();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_257(::int64_t value) {
  _internal_set_f_257(value);
  _impl_._has_bits_[7] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_257)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_257() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_257_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_257(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_257_ = value;
}

// optional fixed64 f_258 = 373;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_258() const {
  bool value = (_impl_._has_bits_[7] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_258() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_258_ = ::uint64_t{0u};
  _impl_._has_bits_[7] &= ~0x10000000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_258() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_258)
  return _internal_f_258();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_258(::uint64_t value) {
  _internal_set_f_258(value);
  _impl_._has_bits_[7] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_258)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_258() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_258_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_258(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_258_ = value;
}

// optional bool f_259 = 375;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_259() const {
  bool value = (_impl_._has_bits_[7] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_259() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_259_ = false;
  _impl_._has_bits_[7] &= ~0x00400000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_259() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_259)
  return _internal_f_259();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_259(bool value) {
  _internal_set_f_259(value);
  _impl_._has_bits_[7] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_259)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_259() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_259_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_259(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_259_ = value;
}

// optional int64 f_260 = 376;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_260() const {
  bool value = (_impl_._has_bits_[7] & 0x80000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_260() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_260_ = ::int64_t{0};
  _impl_._has_bits_[7] &= ~0x80000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_260() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_260)
  return _internal_f_260();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_260(::int64_t value) {
  _internal_set_f_260(value);
  _impl_._has_bits_[7] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_260)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_260() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_260_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_260(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_260_ = value;
}

// optional string f_261 = 378;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_261() const {
  bool value = (_impl_._has_bits_[1] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_261() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_261_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00400000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_261() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_261)
  return _internal_f_261();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_261(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00400000u;
  _impl_.f_261_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_261)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_261() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_261();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_261)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_261() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_261_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_261(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00400000u;
  _impl_.f_261_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_261() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00400000u;
  return _impl_.f_261_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_261() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_261)
  if ((_impl_._has_bits_[1] & 0x00400000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00400000u;
  auto* released = _impl_.f_261_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_261_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_261(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00400000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00400000u;
  }
  _impl_.f_261_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_261_.IsDefault()) {
          _impl_.f_261_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_261)
}

// optional bool f_262 = 379;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_262() const {
  bool value = (_impl_._has_bits_[7] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_262() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_262_ = false;
  _impl_._has_bits_[7] &= ~0x00800000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_262() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_262)
  return _internal_f_262();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_262(bool value) {
  _internal_set_f_262(value);
  _impl_._has_bits_[7] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_262)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_262() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_262_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_262(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_262_ = value;
}

// optional uint64 f_263 = 381;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_263() const {
  bool value = (_impl_._has_bits_[8] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_263() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_263_ = ::uint64_t{0u};
  _impl_._has_bits_[8] &= ~0x00000001u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_263() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_263)
  return _internal_f_263();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_263(::uint64_t value) {
  _internal_set_f_263(value);
  _impl_._has_bits_[8] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_263)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_263() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_263_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_263(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_263_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E95 f_264 = 382;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_264() const {
  bool value = (_impl_._has_bits_[7] & 0x40000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_264() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_264_ = 0;
  _impl_._has_bits_[7] &= ~0x40000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_264() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_264)
  return _internal_f_264();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_264(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95 value) {
  _internal_set_f_264(value);
  _impl_._has_bits_[7] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_264)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_264() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95>(_impl_.f_264_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_264(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_IsValid(value));
  _impl_.f_264_ = value;
}

// optional fixed32 f_265 = 383;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_265() const {
  bool value = (_impl_._has_bits_[8] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_265() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_265_ = 0u;
  _impl_._has_bits_[8] &= ~0x00000004u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_265() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_265)
  return _internal_f_265();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_265(::uint32_t value) {
  _internal_set_f_265(value);
  _impl_._has_bits_[8] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_265)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_265() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_265_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_265(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_265_ = value;
}

// optional int64 f_266 = 386;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_266() const {
  bool value = (_impl_._has_bits_[8] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_266() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_266_ = ::int64_t{0};
  _impl_._has_bits_[8] &= ~0x00000002u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_266() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_266)
  return _internal_f_266();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_266(::int64_t value) {
  _internal_set_f_266(value);
  _impl_._has_bits_[8] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_266)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_266() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_266_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_266(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_266_ = value;
}

// optional bool f_267 = 388;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_267() const {
  bool value = (_impl_._has_bits_[8] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_267() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_267_ = false;
  _impl_._has_bits_[8] &= ~0x00000400u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_267() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_267)
  return _internal_f_267();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_267(bool value) {
  _internal_set_f_267(value);
  _impl_._has_bits_[8] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_267)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_267() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_267_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_267(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_267_ = value;
}

// optional string f_268 = 389;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_268() const {
  bool value = (_impl_._has_bits_[1] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_268() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_268_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x00800000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_268() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_268)
  return _internal_f_268();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_268(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00800000u;
  _impl_.f_268_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_268)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_268() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_268();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_268)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_268() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_268_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_268(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00800000u;
  _impl_.f_268_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_268() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x00800000u;
  return _impl_.f_268_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_268() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_268)
  if ((_impl_._has_bits_[1] & 0x00800000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x00800000u;
  auto* released = _impl_.f_268_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_268_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_268(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x00800000u;
  } else {
    _impl_._has_bits_[1] &= ~0x00800000u;
  }
  _impl_.f_268_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_268_.IsDefault()) {
          _impl_.f_268_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_268)
}

// optional int32 f_269 = 393;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_269() const {
  bool value = (_impl_._has_bits_[8] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_269() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_269_ = 0;
  _impl_._has_bits_[8] &= ~0x00000008u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_269() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_269)
  return _internal_f_269();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_269(::int32_t value) {
  _internal_set_f_269(value);
  _impl_._has_bits_[8] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_269)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_269() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_269_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_269(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_269_ = value;
}

// optional int64 f_270 = 394;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_270() const {
  bool value = (_impl_._has_bits_[8] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_270() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_270_ = ::int64_t{0};
  _impl_._has_bits_[8] &= ~0x00000010u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_270() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_270)
  return _internal_f_270();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_270(::int64_t value) {
  _internal_set_f_270(value);
  _impl_._has_bits_[8] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_270)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_270() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_270_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_270(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_270_ = value;
}

// optional fixed64 f_271 = 395;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_271() const {
  bool value = (_impl_._has_bits_[8] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_271() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_271_ = ::uint64_t{0u};
  _impl_._has_bits_[8] &= ~0x00000020u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_271() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_271)
  return _internal_f_271();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_271(::uint64_t value) {
  _internal_set_f_271(value);
  _impl_._has_bits_[8] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_271)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_271() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_271_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_271(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_271_ = value;
}

// optional int32 f_272 = 396;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_272() const {
  bool value = (_impl_._has_bits_[8] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_272() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_272_ = 0;
  _impl_._has_bits_[8] &= ~0x00000080u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_272() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_272)
  return _internal_f_272();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_272(::int32_t value) {
  _internal_set_f_272(value);
  _impl_._has_bits_[8] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_272)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_272() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_272_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_272(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_272_ = value;
}

// optional bool f_273 = 397;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_273() const {
  bool value = (_impl_._has_bits_[8] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_273() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_273_ = false;
  _impl_._has_bits_[8] &= ~0x00000800u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_273() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_273)
  return _internal_f_273();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_273(bool value) {
  _internal_set_f_273(value);
  _impl_._has_bits_[8] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_273)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_273() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_273_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_273(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_273_ = value;
}

// optional int64 f_274 = 398;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_274() const {
  bool value = (_impl_._has_bits_[8] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_274() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_274_ = ::int64_t{0};
  _impl_._has_bits_[8] &= ~0x00000040u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_274() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_274)
  return _internal_f_274();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_274(::int64_t value) {
  _internal_set_f_274(value);
  _impl_._has_bits_[8] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_274)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_274() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_274_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_274(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_274_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E96 f_275 = 400;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_275() const {
  bool value = (_impl_._has_bits_[8] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_275() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_275_ = 0;
  _impl_._has_bits_[8] &= ~0x00000100u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_275() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_275)
  return _internal_f_275();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_275(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96 value) {
  _internal_set_f_275(value);
  _impl_._has_bits_[8] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_275)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_275() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96>(_impl_.f_275_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_275(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_IsValid(value));
  _impl_.f_275_ = value;
}

// optional int64 f_276 = 401;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_276() const {
  bool value = (_impl_._has_bits_[8] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_276() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_276_ = ::int64_t{0};
  _impl_._has_bits_[8] &= ~0x00000200u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_276() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_276)
  return _internal_f_276();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_276(::int64_t value) {
  _internal_set_f_276(value);
  _impl_._has_bits_[8] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_276)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_276() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_276_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_276(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_276_ = value;
}

// optional int32 f_277 = 403;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_277() const {
  bool value = (_impl_._has_bits_[8] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_277() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_277_ = 0;
  _impl_._has_bits_[8] &= ~0x00004000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_277() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_277)
  return _internal_f_277();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_277(::int32_t value) {
  _internal_set_f_277(value);
  _impl_._has_bits_[8] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_277)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_277() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_277_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_277(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_277_ = value;
}

// optional uint64 f_278 = 406;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_278() const {
  bool value = (_impl_._has_bits_[8] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_278() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_278_ = ::uint64_t{0u};
  _impl_._has_bits_[8] &= ~0x00008000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_278() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_278)
  return _internal_f_278();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_278(::uint64_t value) {
  _internal_set_f_278(value);
  _impl_._has_bits_[8] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_278)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_278() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_278_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_278(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_278_ = value;
}

// optional bool f_279 = 407;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_279() const {
  bool value = (_impl_._has_bits_[8] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_279() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_279_ = false;
  _impl_._has_bits_[8] &= ~0x00001000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_279() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_279)
  return _internal_f_279();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_279(bool value) {
  _internal_set_f_279(value);
  _impl_._has_bits_[8] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_279)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_279() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_279_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_279(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_279_ = value;
}

// optional float f_280 = 408;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_280() const {
  bool value = (_impl_._has_bits_[8] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_280() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_280_ = 0;
  _impl_._has_bits_[8] &= ~0x00020000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_280() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_280)
  return _internal_f_280();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_280(float value) {
  _internal_set_f_280(value);
  _impl_._has_bits_[8] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_280)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_280() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_280_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_280(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_280_ = value;
}

// optional int64 f_281 = 409;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_281() const {
  bool value = (_impl_._has_bits_[8] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_281() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_281_ = ::int64_t{0};
  _impl_._has_bits_[8] &= ~0x00010000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_281() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_281)
  return _internal_f_281();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_281(::int64_t value) {
  _internal_set_f_281(value);
  _impl_._has_bits_[8] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_281)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_281() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_281_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_281(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_281_ = value;
}

// optional int32 f_282 = 410;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_282() const {
  bool value = (_impl_._has_bits_[8] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_282() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_282_ = 0;
  _impl_._has_bits_[8] &= ~0x00040000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_282() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_282)
  return _internal_f_282();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_282(::int32_t value) {
  _internal_set_f_282(value);
  _impl_._has_bits_[8] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_282)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_282() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_282_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_282(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_282_ = value;
}

// optional string f_283 = 412;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_283() const {
  bool value = (_impl_._has_bits_[1] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_283() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_283_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x01000000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_283() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_283)
  return _internal_f_283();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_283(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x01000000u;
  _impl_.f_283_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_283)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_283() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_283();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_283)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_283() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_283_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_283(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x01000000u;
  _impl_.f_283_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_283() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x01000000u;
  return _impl_.f_283_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_283() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_283)
  if ((_impl_._has_bits_[1] & 0x01000000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x01000000u;
  auto* released = _impl_.f_283_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_283_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_283(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x01000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x01000000u;
  }
  _impl_.f_283_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_283_.IsDefault()) {
          _impl_.f_283_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_283)
}

// optional int32 f_284 = 414;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_284() const {
  bool value = (_impl_._has_bits_[8] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_284() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_284_ = 0;
  _impl_._has_bits_[8] &= ~0x00080000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_284() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_284)
  return _internal_f_284();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_284(::int32_t value) {
  _internal_set_f_284(value);
  _impl_._has_bits_[8] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_284)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_284() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_284_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_284(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_284_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.E97 f_285 = 415;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_285() const {
  bool value = (_impl_._has_bits_[8] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_285() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_285_ = 0;
  _impl_._has_bits_[8] &= ~0x00100000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_285() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_285)
  return _internal_f_285();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_285(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97 value) {
  _internal_set_f_285(value);
  _impl_._has_bits_[8] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_285)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_285() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97>(_impl_.f_285_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_285(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_IsValid(value));
  _impl_.f_285_ = value;
}

// optional int32 f_286 = 416;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_286() const {
  bool value = (_impl_._has_bits_[8] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_286() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_286_ = 0;
  _impl_._has_bits_[8] &= ~0x00400000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_286() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_286)
  return _internal_f_286();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_286(::int32_t value) {
  _internal_set_f_286(value);
  _impl_._has_bits_[8] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_286)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_286() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_286_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_286(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_286_ = value;
}

// optional int64 f_287 = 417;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_287() const {
  bool value = (_impl_._has_bits_[8] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_287() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_287_ = ::int64_t{0};
  _impl_._has_bits_[8] &= ~0x00200000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_287() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_287)
  return _internal_f_287();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_287(::int64_t value) {
  _internal_set_f_287(value);
  _impl_._has_bits_[8] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_287)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_287() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_287_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_287(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_287_ = value;
}

// optional bool f_288 = 419;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_288() const {
  bool value = (_impl_._has_bits_[8] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_288() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_288_ = false;
  _impl_._has_bits_[8] &= ~0x00002000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_288() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_288)
  return _internal_f_288();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_288(bool value) {
  _internal_set_f_288(value);
  _impl_._has_bits_[8] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_288)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_288() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_288_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_288(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_288_ = value;
}

// optional string f_289 = 420;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_289() const {
  bool value = (_impl_._has_bits_[1] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_289() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_289_.ClearToEmpty();
  _impl_._has_bits_[1] &= ~0x02000000u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_289() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_289)
  return _internal_f_289();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_f_289(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x02000000u;
  _impl_.f_289_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_289)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_289() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_289();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_289)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_289() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_289_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_set_f_289(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x02000000u;
  _impl_.f_289_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_289() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[1] |= 0x02000000u;
  return _impl_.f_289_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_289() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_289)
  if ((_impl_._has_bits_[1] & 0x02000000u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[1] &= ~0x02000000u;
  auto* released = _impl_.f_289_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_289_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_289(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x02000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x02000000u;
  }
  _impl_.f_289_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_289_.IsDefault()) {
          _impl_.f_289_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_289)
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M74 f_420 = 421;
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_420_size() const {
  return _internal_f_420().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_420_size() const {
  return _internal_f_420_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_420() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_420_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_420(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_420)
  return _internal_mutable_f_420()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_420()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_420)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_420();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_420(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_420)
  return _internal_f_420().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::add_f_420() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74* _add = _internal_mutable_f_420()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_420)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_420() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_420)
  return _internal_f_420();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_420() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_420_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M74>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_420() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_420_;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.M75 f_421 = 422;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::has_f_421() const {
  bool value = (_impl_._has_bits_[1] & 0x04000000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_421_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::clear_f_421() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_421_ != nullptr) _impl_.f_421_->Clear();
  _impl_._has_bits_[1] &= ~0x04000000u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_f_421() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* p = _impl_.f_421_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::f_421() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_421)
  return _internal_f_421();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::unsafe_arena_set_allocated_f_421(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_421_);
  }
  _impl_.f_421_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[1] |= 0x04000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x04000000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_421)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::release_f_421() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[1] &= ~0x04000000u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* released = _impl_.f_421_;
  _impl_.f_421_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::unsafe_arena_release_f_421() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_421)

  _impl_._has_bits_[1] &= ~0x04000000u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* temp = _impl_.f_421_;
  _impl_.f_421_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::_internal_mutable_f_421() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_421_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75>(GetArena());
    _impl_.f_421_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75*>(p);
  }
  return _impl_.f_421_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::mutable_f_421() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[1] |= 0x04000000u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* _msg = _internal_mutable_f_421();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_421)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73::set_allocated_f_421(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_421_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[1] |= 0x04000000u;
  } else {
    _impl_._has_bits_[1] &= ~0x04000000u;
  }

  _impl_.f_421_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_M75*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73.f_421)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72

// optional float f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_0(float value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_0)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_0(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional string f_1 = 3;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_1)
  return _internal_f_1();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_1(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_1_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_1)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_1();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_1)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_1(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_1_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_1_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_1)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_1_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_1_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_allocated_f_1(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_1_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_1_.IsDefault()) {
          _impl_.f_1_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_1)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.E50 f_2 = 4;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50 value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_2)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50>(_impl_.f_2_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_IsValid(value));
  _impl_.f_2_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.E51 f_3 = 5;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51 value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_3)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51>(_impl_.f_3_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_IsValid(value));
  _impl_.f_3_ = value;
}

// optional int64 f_4 = 9;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_4)
  return _internal_f_4();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_4(::int64_t value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_4)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_4(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional bool f_5 = 10;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = false;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_5() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_5)
  return _internal_f_5();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_5(bool value) {
  _internal_set_f_5(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_5)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_5(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.E52 f_6 = 11;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_6() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_6)
  return _internal_f_6();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52 value) {
  _internal_set_f_6(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_6)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52>(_impl_.f_6_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_IsValid(value));
  _impl_.f_6_ = value;
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.E53 f_7 = 12 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_7_size() const {
  return _internal_f_7().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_7_size() const {
  return _internal_f_7_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_7(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_7)
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53>(_internal_f_7().Get(index));
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_7(int index, ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53 value) {
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_IsValid(value));
  _internal_mutable_f_7()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_7)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::add_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53 value) {
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_7()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_7)
}
inline const ::google::protobuf::RepeatedField<int>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_7() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_7)
  return _internal_f_7();
}
inline ::google::protobuf::RepeatedField<int>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_7()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_7)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_7();
}
inline const ::google::protobuf::RepeatedField<int>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_7()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_7_;
}
inline ::google::protobuf::RepeatedField<int>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_mutable_f_7() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_7_;
}

// optional int64 f_8 = 13;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_8() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_8() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_8)
  return _internal_f_8();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_8(::int64_t value) {
  _internal_set_f_8(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_8)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_8_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_8(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_ = value;
}

// optional float f_9 = 15;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_9() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_9() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_9)
  return _internal_f_9();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_9(float value) {
  _internal_set_f_9(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_9)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_9_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_9(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = value;
}

// optional bytes f_10 = 16;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_10() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_10() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_10)
  return _internal_f_10();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_10(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_10_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_10)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_10() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_10();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_10)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_10_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_10(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_10_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_mutable_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.f_10_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::release_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_10)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.f_10_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_10_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_allocated_f_10(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.f_10_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_10_.IsDefault()) {
          _impl_.f_10_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_10)
}

// optional uint64 f_11 = 18;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_11() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_11_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_11() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_11)
  return _internal_f_11();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_11(::uint64_t value) {
  _internal_set_f_11(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_11)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_11_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_11(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_11_ = value;
}

// optional int32 f_12 = 19;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_12() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_12() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_12)
  return _internal_f_12();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_12(::int32_t value) {
  _internal_set_f_12(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_12)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_12_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_12(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = value;
}

// optional string f_13 = 20;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_13() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_13() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_13)
  return _internal_f_13();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_13(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_13_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_13)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_13() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_13();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_13)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_13_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_13(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_13_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_mutable_f_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.f_13_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::release_f_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_13)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.f_13_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_13_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_allocated_f_13(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.f_13_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_13_.IsDefault()) {
          _impl_.f_13_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_13)
}

// optional string f_14 = 21;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_14() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_14() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_14)
  return _internal_f_14();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_14(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_14_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_14)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_14() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_14();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_14)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_14() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_14_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_14(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_14_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_mutable_f_14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.f_14_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::release_f_14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_14)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.f_14_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_14_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_allocated_f_14(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.f_14_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_14_.IsDefault()) {
          _impl_.f_14_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_14)
}

// optional int64 f_15 = 22;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_15() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_15() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_15)
  return _internal_f_15();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_15(::int64_t value) {
  _internal_set_f_15(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_15)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_15() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_15_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_15(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = value;
}

// optional string f_16 = 23;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_16() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_16() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_16)
  return _internal_f_16();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_16(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_16_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_16)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_16() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_16();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_16)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_16_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_16(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_16_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_mutable_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.f_16_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::release_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_16)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.f_16_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_16_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_allocated_f_16(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.f_16_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_16_.IsDefault()) {
          _impl_.f_16_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_16)
}

// optional string f_17 = 24;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_17() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_17() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_17)
  return _internal_f_17();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_17(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_17_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_17)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_17() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_17();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_17)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_17() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_17_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_17(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_17_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_mutable_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.f_17_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::release_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_17)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.f_17_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_17_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_allocated_f_17(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.f_17_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_17_.IsDefault()) {
          _impl_.f_17_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_17)
}

// optional string f_18 = 25;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_18() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_18() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_18)
  return _internal_f_18();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_18(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_18_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_18)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_18() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_18();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_18)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_18_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_18(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_18_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_mutable_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.f_18_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::release_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_18)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.f_18_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_18_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_allocated_f_18(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.f_18_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_18_.IsDefault()) {
          _impl_.f_18_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_18)
}

// optional string f_19 = 26;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_19() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_19() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_19)
  return _internal_f_19();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_19(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.f_19_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_19)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_19() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_19();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_19)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_19() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_19_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_19(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.f_19_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_mutable_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.f_19_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::release_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_19)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.f_19_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_19_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_allocated_f_19(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.f_19_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_19_.IsDefault()) {
          _impl_.f_19_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_19)
}

// optional float f_20 = 27;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_20() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_20() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_ = 0;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_20() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_20)
  return _internal_f_20();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_20(float value) {
  _internal_set_f_20(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_20)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_20() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_20_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_20(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_ = value;
}

// optional double f_21 = 28;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_21() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = 0;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline double Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_21() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_21)
  return _internal_f_21();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_21(double value) {
  _internal_set_f_21(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_21)
}
inline double Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_21() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_21_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_21(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = value;
}

// optional uint64 f_22 = 29;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_22() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_22() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_22)
  return _internal_f_22();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_22(::uint64_t value) {
  _internal_set_f_22(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_22)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_22_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_22(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = value;
}

// optional bytes f_23 = 31;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::has_f_23() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_23_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_23() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_23)
  return _internal_f_23();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_f_23(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.f_23_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_23)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_23() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_23();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_23)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_23() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_23_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_set_f_23(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.f_23_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_mutable_f_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  return _impl_.f_23_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::release_f_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_23)
  if ((_impl_._has_bits_[0] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000100u;
  auto* released = _impl_.f_23_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_23_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::set_allocated_f_23(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.f_23_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_23_.IsDefault()) {
          _impl_.f_23_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_23)
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.M73 f_31 = 32;
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_31_size() const {
  return _internal_f_31().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_31_size() const {
  return _internal_f_31_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::clear_f_31() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_31_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_31(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_31)
  return _internal_mutable_f_31()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::mutable_f_31()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_31)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_31();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_31(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_31)
  return _internal_f_31().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::add_f_31() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73* _add = _internal_mutable_f_31()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_31)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::f_31() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72.f_31)
  return _internal_f_31();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_f_31() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_31_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72::_internal_mutable_f_31() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_31_;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71

// optional string f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.f_0)
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.M72 f_2 = 3;
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::_internal_f_2_size() const {
  return _internal_f_2().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::f_2_size() const {
  return _internal_f_2_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::mutable_f_2(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.f_2)
  return _internal_mutable_f_2()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::mutable_f_2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.f_2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_2();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::f_2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.f_2)
  return _internal_f_2().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::add_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72* _add = _internal_mutable_f_2()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.f_2)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71.f_2)
  return _internal_f_2();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_2_;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70

// optional uint64 f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::set_f_0(::uint64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.f_0)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::_internal_set_f_0(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.M71 f_2 = 3;
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::_internal_f_2_size() const {
  return _internal_f_2().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::f_2_size() const {
  return _internal_f_2_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::mutable_f_2(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.f_2)
  return _internal_mutable_f_2()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::mutable_f_2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.f_2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_2();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::f_2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.f_2)
  return _internal_f_2().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::add_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71* _add = _internal_mutable_f_2()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.f_2)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70.f_2)
  return _internal_f_2();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_2_;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69

// optional int64 f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.f_0)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.M70 f_2 = 4;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_2_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ != nullptr) _impl_.f_2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* p = _impl_.f_2_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::f_2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_2_);
  }
  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.f_2)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* released = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::unsafe_arena_release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.f_2)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* temp = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70>(GetArena());
    _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70*>(p);
  }
  return _impl_.f_2_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* _msg = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.f_2)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69::set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69.f_2)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67

// optional int32 f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::set_f_0(::int32_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.f_0)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::_internal_set_f_0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.M69 f_2 = 3;
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::_internal_f_2_size() const {
  return _internal_f_2().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::f_2_size() const {
  return _internal_f_2_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::mutable_f_2(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.f_2)
  return _internal_mutable_f_2()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::mutable_f_2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.f_2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_2();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::f_2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.f_2)
  return _internal_f_2().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::add_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69* _add = _internal_mutable_f_2()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.f_2)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67.f_2)
  return _internal_f_2();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_2_;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65

// optional float f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::set_f_0(float value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.f_0)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::_internal_set_f_0(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.M67 f_2 = 4;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_2_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ != nullptr) _impl_.f_2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* p = _impl_.f_2_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::f_2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_2_);
  }
  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.f_2)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* released = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::unsafe_arena_release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.f_2)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* temp = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67>(GetArena());
    _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67*>(p);
  }
  return _impl_.f_2_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* _msg = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.f_2)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65::set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65.f_2)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66

// optional float f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M66.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66::set_f_0(float value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M66.f_0)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66::_internal_set_f_0(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63

// optional int64 f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_0)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional int32 f_1 = 2;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::set_f_1(::int32_t value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_1)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_set_f_1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// optional int32 f_2 = 3;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::set_f_2(::int32_t value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_2)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_set_f_2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = value;
}

// optional int32 f_3 = 4;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::set_f_3(::int32_t value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_3)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_set_f_3(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.E49 f_4 = 7;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_4)
  return _internal_f_4();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::set_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49 value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_4)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49>(_impl_.f_4_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_set_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_IsValid(value));
  _impl_.f_4_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M64 f_7 = 8;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::has_f_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_7_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_7_ != nullptr) _impl_.f_7_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* p = _impl_.f_7_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::f_7() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_7)
  return _internal_f_7();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::unsafe_arena_set_allocated_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_7_);
  }
  _impl_.f_7_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_7)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::release_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* released = _impl_.f_7_;
  _impl_.f_7_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::unsafe_arena_release_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_7)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* temp = _impl_.f_7_;
  _impl_.f_7_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_mutable_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_7_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64>(GetArena());
    _impl_.f_7_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64*>(p);
  }
  return _impl_.f_7_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::mutable_f_7() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* _msg = _internal_mutable_f_7();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_7)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::set_allocated_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_7_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_7_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M64*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_7)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M65 f_8 = 9;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::has_f_8() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_8_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::clear_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_8_ != nullptr) _impl_.f_8_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_f_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* p = _impl_.f_8_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::f_8() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_8)
  return _internal_f_8();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::unsafe_arena_set_allocated_f_8(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_8_);
  }
  _impl_.f_8_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_8)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::release_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* released = _impl_.f_8_;
  _impl_.f_8_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::unsafe_arena_release_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_8)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* temp = _impl_.f_8_;
  _impl_.f_8_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_mutable_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_8_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65>(GetArena());
    _impl_.f_8_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65*>(p);
  }
  return _impl_.f_8_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::mutable_f_8() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* _msg = _internal_mutable_f_8();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_8)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::set_allocated_f_8(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_8_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_8_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_8)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.M66 f_9 = 10;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::has_f_9() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_9_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::clear_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_9_ != nullptr) _impl_.f_9_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_f_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* p = _impl_.f_9_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::f_9() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_9)
  return _internal_f_9();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::unsafe_arena_set_allocated_f_9(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_9_);
  }
  _impl_.f_9_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_9)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::release_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* released = _impl_.f_9_;
  _impl_.f_9_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::unsafe_arena_release_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_9)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* temp = _impl_.f_9_;
  _impl_.f_9_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::_internal_mutable_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_9_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66>(GetArena());
    _impl_.f_9_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66*>(p);
  }
  return _impl_.f_9_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::mutable_f_9() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* _msg = _internal_mutable_f_9();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_9)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63::set_allocated_f_9(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_9_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.f_9_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M66*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63.f_9)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59

// optional string f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_0)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.E48 f_1 = 2;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::set_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48 value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_1)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48 Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48>(_impl_.f_1_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::_internal_set_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_IsValid(value));
  _impl_.f_1_ = value;
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.M63 f_2 = 3;
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::_internal_f_2_size() const {
  return _internal_f_2().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::f_2_size() const {
  return _internal_f_2_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::mutable_f_2(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_2)
  return _internal_mutable_f_2()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63>* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::mutable_f_2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_2();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::f_2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_2)
  return _internal_f_2().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63* Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::add_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63* _add = _internal_mutable_f_2()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_2)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63>& Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59.f_2)
  return _internal_f_2();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_2_;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51_M58

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E40 f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40 Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40 value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_0)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40 Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40>(_impl_.f_0_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_IsValid(value));
  _impl_.f_0_ = value;
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E41 f_1 = 4 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_1_size() const {
  return _internal_f_1().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_1_size() const {
  return _internal_f_1_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41 Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_1(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_1)
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41>(_internal_f_1().Get(index));
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_1(int index, ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41 value) {
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_IsValid(value));
  _internal_mutable_f_1()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_1)
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::add_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41 value) {
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_IsValid(value));
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_1()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_1)
}
inline const ::google::protobuf::RepeatedField<int>& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_1)
  return _internal_f_1();
}
inline ::google::protobuf::RepeatedField<int>* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_1()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_1();
}
inline const ::google::protobuf::RepeatedField<int>& Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_1()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline ::google::protobuf::RepeatedField<int>* Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_1_;
}

// optional int32 f_2 = 5;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_2(::int32_t value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_2)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_2(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = value;
}

// optional int64 f_3 = 9;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_3(::int64_t value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_3)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_3(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional uint64 f_4 = 11;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_4)
  return _internal_f_4();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_4(::uint64_t value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_4)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_4(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E42 f_5 = 14;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42 Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_5() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_5)
  return _internal_f_5();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_5(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42 value) {
  _internal_set_f_5(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_5)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42 Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42>(_impl_.f_5_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_5(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_IsValid(value));
  _impl_.f_5_ = value;
}

// optional string f_6 = 15;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_6() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_6)
  return _internal_f_6();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_6(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_6_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_6)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_6() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_6();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_6)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_6_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_6(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_6_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_6_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::release_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_6)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_6_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_6_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_allocated_f_6(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_6_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_6_.IsDefault()) {
          _impl_.f_6_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_6)
}

// optional int64 f_7 = 16;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_7() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_7)
  return _internal_f_7();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_7(::int64_t value) {
  _internal_set_f_7(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_7)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_7_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_7(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_ = value;
}

// optional string f_8 = 17;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_8() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_8() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_8)
  return _internal_f_8();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_8(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_8_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_8)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_8() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_8();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_8)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_8_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_8(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_8_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.f_8_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::release_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_8)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.f_8_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_8_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_allocated_f_8(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.f_8_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_8_.IsDefault()) {
          _impl_.f_8_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_8)
}

// optional int32 f_9 = 18;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_9() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_9() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_9)
  return _internal_f_9();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_9(::int32_t value) {
  _internal_set_f_9(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_9)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_9_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_9(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = value;
}

// optional string f_10 = 21;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_10() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_10() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_10)
  return _internal_f_10();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_10(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_10_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_10)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_10() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_10();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_10)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_10_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_10(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_10_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.f_10_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::release_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_10)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.f_10_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_10_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_allocated_f_10(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.f_10_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_10_.IsDefault()) {
          _impl_.f_10_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_10)
}

// optional int32 f_11 = 22;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_11() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_11_ = 0;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_11() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_11)
  return _internal_f_11();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_11(::int32_t value) {
  _internal_set_f_11(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_11)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_11_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_11(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_11_ = value;
}

// optional double f_12 = 23;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_12() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = 0;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline double Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_12() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_12)
  return _internal_f_12();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_12(double value) {
  _internal_set_f_12(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_12)
}
inline double Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_12_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_12(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E43 f_13 = 25;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_13() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43 Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_13() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_13)
  return _internal_f_13();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43 value) {
  _internal_set_f_13(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_13)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43 Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43>(_impl_.f_13_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_IsValid(value));
  _impl_.f_13_ = value;
}

// optional int64 f_14 = 27;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_14() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_14() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_14)
  return _internal_f_14();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_14(::int64_t value) {
  _internal_set_f_14(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_14)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_14() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_14_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_14(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = value;
}

// optional bytes f_15 = 29;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_15() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_15() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_15)
  return _internal_f_15();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_15(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_15_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_15)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_15() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_15();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_15)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_15() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_15_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_15(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_15_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.f_15_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::release_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_15)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.f_15_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_15_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_allocated_f_15(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.f_15_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_15_.IsDefault()) {
          _impl_.f_15_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_15)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E44 f_16 = 30;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_16() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_ = 0;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44 Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_16() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_16)
  return _internal_f_16();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_16(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44 value) {
  _internal_set_f_16(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_16)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44 Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44>(_impl_.f_16_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_16(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_IsValid(value));
  _impl_.f_16_ = value;
}

// optional double f_17 = 31;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_17() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_ = 0;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline double Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_17() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_17)
  return _internal_f_17();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_17(double value) {
  _internal_set_f_17(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_17)
}
inline double Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_17() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_17_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_17(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E45 f_18 = 32;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_18() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_ = 0;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45 Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_18() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_18)
  return _internal_f_18();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_18(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45 value) {
  _internal_set_f_18(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_18)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45 Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45>(_impl_.f_18_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_18(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_IsValid(value));
  _impl_.f_18_ = value;
}

// optional string f_19 = 33;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_19() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_19() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_19)
  return _internal_f_19();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_19(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_19_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_19)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_19() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_19();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_19)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_19() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_19_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_19(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_19_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.f_19_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::release_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_19)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.f_19_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_19_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_allocated_f_19(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.f_19_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_19_.IsDefault()) {
          _impl_.f_19_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_19)
}

// optional float f_20 = 35;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_20() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_20() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_ = 0;
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_20() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_20)
  return _internal_f_20();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_20(float value) {
  _internal_set_f_20(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_20)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_20() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_20_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_20(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_ = value;
}

// optional uint32 f_21 = 39;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_21() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = 0u;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_21() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_21)
  return _internal_f_21();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_21(::uint32_t value) {
  _internal_set_f_21(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_21)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_21() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_21_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_21(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = value;
}

// optional bool f_22 = 40;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_22() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = false;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_22() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_22)
  return _internal_f_22();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_22(bool value) {
  _internal_set_f_22(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_22)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_22_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_22(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = value;
}

// optional bool f_23 = 41;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_23() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_23_ = false;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_23() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_23)
  return _internal_f_23();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_23(bool value) {
  _internal_set_f_23(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_23)
}
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_23() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_23_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_23(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_23_ = value;
}

// optional string f_24 = 42;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_24() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_24() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_24_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_24() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_24)
  return _internal_f_24();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_24(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_24_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_24)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_24() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_24();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_24)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_24() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_24_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_24(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_24_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_24() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.f_24_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::release_f_24() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_24)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.f_24_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_24_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_allocated_f_24(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.f_24_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_24_.IsDefault()) {
          _impl_.f_24_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_24)
}

// optional int64 f_25 = 43;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_25() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_25_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_25() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_25)
  return _internal_f_25();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_25(::int64_t value) {
  _internal_set_f_25(value);
  _impl_._has_bits_[0] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_25)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_25() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_25_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_25(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_25_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E46 f_26 = 44;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_26() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_26() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_26_ = 0;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46 Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_26() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_26)
  return _internal_f_26();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_26(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46 value) {
  _internal_set_f_26(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_26)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46 Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_26() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46>(_impl_.f_26_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_26(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_IsValid(value));
  _impl_.f_26_ = value;
}

// optional int64 f_27 = 45;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_27() const {
  bool value = (_impl_._has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_27_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x40000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_27() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_27)
  return _internal_f_27();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_27(::int64_t value) {
  _internal_set_f_27(value);
  _impl_._has_bits_[0] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_27)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_27() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_27_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_27(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_27_ = value;
}

// optional string f_28 = 46;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_28() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_28_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_28() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_28)
  return _internal_f_28();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_28(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_28_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_28)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_28() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_28();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_28)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_28() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_28_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_28(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_28_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.f_28_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::release_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_28)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.f_28_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_28_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_allocated_f_28(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.f_28_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_28_.IsDefault()) {
          _impl_.f_28_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_28)
}

// optional int32 f_29 = 47;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_29() const {
  bool value = (_impl_._has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_29() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_29_ = 0;
  _impl_._has_bits_[1] &= ~0x00000001u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_29() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_29)
  return _internal_f_29();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_29(::int32_t value) {
  _internal_set_f_29(value);
  _impl_._has_bits_[1] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_29)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_29() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_29_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_29(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_29_ = value;
}

// optional uint64 f_30 = 48;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_30() const {
  bool value = (_impl_._has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_30_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x80000000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_30() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_30)
  return _internal_f_30();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_30(::uint64_t value) {
  _internal_set_f_30(value);
  _impl_._has_bits_[0] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_30)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_30() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_30_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_30(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_30_ = value;
}

// optional int32 f_31 = 49;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_31() const {
  bool value = (_impl_._has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_31() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_31_ = 0;
  _impl_._has_bits_[1] &= ~0x00000002u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_31() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_31)
  return _internal_f_31();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_31(::int32_t value) {
  _internal_set_f_31(value);
  _impl_._has_bits_[1] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_31)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_31() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_31_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_31(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_31_ = value;
}

// optional int32 f_32 = 50;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_32() const {
  bool value = (_impl_._has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_32_ = 0;
  _impl_._has_bits_[1] &= ~0x00000004u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_32() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_32)
  return _internal_f_32();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_32(::int32_t value) {
  _internal_set_f_32(value);
  _impl_._has_bits_[1] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_32)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_32_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_32(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_32_ = value;
}

// optional string f_33 = 52;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_33() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_33() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_33_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_33() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_33)
  return _internal_f_33();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_33(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.f_33_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_33)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_33() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_33();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_33)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_33() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_33_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_33(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.f_33_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_33() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.f_33_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::release_f_33() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_33)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.f_33_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_33_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_allocated_f_33(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.f_33_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_33_.IsDefault()) {
          _impl_.f_33_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_33)
}

// optional string f_34 = 55;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_34() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_34() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_34_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_34() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_34)
  return _internal_f_34();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_34(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.f_34_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_34)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_34() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_34();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_34)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_34() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_34_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_34(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.f_34_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_34() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  return _impl_.f_34_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::release_f_34() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_34)
  if ((_impl_._has_bits_[0] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000100u;
  auto* released = _impl_.f_34_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_34_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_allocated_f_34(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.f_34_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_34_.IsDefault()) {
          _impl_.f_34_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_34)
}

// optional int64 f_35 = 57;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_35() const {
  bool value = (_impl_._has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_35() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_35_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x00000010u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_35() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_35)
  return _internal_f_35();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_35(::int64_t value) {
  _internal_set_f_35(value);
  _impl_._has_bits_[1] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_35)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_35() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_35_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_35(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_35_ = value;
}

// optional float f_36 = 58;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_36() const {
  bool value = (_impl_._has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_36() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_36_ = 0;
  _impl_._has_bits_[1] &= ~0x00000008u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_36() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_36)
  return _internal_f_36();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_36(float value) {
  _internal_set_f_36(value);
  _impl_._has_bits_[1] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_36)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_36() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_36_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_36(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_36_ = value;
}

// optional fixed64 f_37 = 60;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_37() const {
  bool value = (_impl_._has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_37() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_37_ = ::uint64_t{0u};
  _impl_._has_bits_[1] &= ~0x00000020u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_37() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_37)
  return _internal_f_37();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_37(::uint64_t value) {
  _internal_set_f_37(value);
  _impl_._has_bits_[1] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_37)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_37() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_37_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_37(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_37_ = value;
}

// optional uint64 f_38 = 61;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_38() const {
  bool value = (_impl_._has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_38() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_38_ = ::uint64_t{0u};
  _impl_._has_bits_[1] &= ~0x00000040u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_38() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_38)
  return _internal_f_38();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_38(::uint64_t value) {
  _internal_set_f_38(value);
  _impl_._has_bits_[1] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_38)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_38() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_38_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_38(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_38_ = value;
}

// optional uint64 f_39 = 62;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_39() const {
  bool value = (_impl_._has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_39() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_39_ = ::uint64_t{0u};
  _impl_._has_bits_[1] &= ~0x00000080u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_39() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_39)
  return _internal_f_39();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_39(::uint64_t value) {
  _internal_set_f_39(value);
  _impl_._has_bits_[1] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_39)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_39() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_39_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_39(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_39_ = value;
}

// optional float f_40 = 63;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_40() const {
  bool value = (_impl_._has_bits_[1] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_40() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_40_ = 0;
  _impl_._has_bits_[1] &= ~0x00000100u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_40() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_40)
  return _internal_f_40();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_40(float value) {
  _internal_set_f_40(value);
  _impl_._has_bits_[1] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_40)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_40() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_40_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_40(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_40_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.E47 f_41 = 65;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_41() const {
  bool value = (_impl_._has_bits_[1] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_41() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_41_ = 0;
  _impl_._has_bits_[1] &= ~0x00000200u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47 Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_41() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_41)
  return _internal_f_41();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_41(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47 value) {
  _internal_set_f_41(value);
  _impl_._has_bits_[1] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_41)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47 Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_41() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47>(_impl_.f_41_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_41(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_IsValid(value));
  _impl_.f_41_ = value;
}

// optional string f_42 = 68;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51_M58::has_f_42() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_42_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_42() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_42)
  return _internal_f_42();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_f_42(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.f_42_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_42)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_42() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_42();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_42)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_42() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_42_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_set_f_42(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.f_42_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  return _impl_.f_42_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51_M58::release_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_42)
  if ((_impl_._has_bits_[0] & 0x00000200u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000200u;
  auto* released = _impl_.f_42_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_42_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::set_allocated_f_42(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  _impl_.f_42_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_42_.IsDefault()) {
          _impl_.f_42_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_42)
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.M59 f_68 = 69;
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_68_size() const {
  return _internal_f_68().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_68_size() const {
  return _internal_f_68_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51_M58::clear_f_68() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_68_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_68(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_68)
  return _internal_mutable_f_68()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59>* Message9_M5_M11_M23_M34_M36_M40_M51_M58::mutable_f_68()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_68)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_68();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_68(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_68)
  return _internal_f_68().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59* Message9_M5_M11_M23_M34_M36_M40_M51_M58::add_f_68() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59* _add = _internal_mutable_f_68()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_68)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59>& Message9_M5_M11_M23_M34_M36_M40_M51_M58::f_68() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58.f_68)
  return _internal_f_68();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59>&
Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_f_68() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_68_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59>*
Message9_M5_M11_M23_M34_M36_M40_M51_M58::_internal_mutable_f_68() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_68_;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40_M51

// optional float f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::set_f_0(float value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_0)
}
inline float Message9_M5_M11_M23_M34_M36_M40_M51::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::_internal_set_f_0(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional int32 f_1 = 4;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::set_f_1(::int32_t value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_1)
}
inline ::int32_t Message9_M5_M11_M23_M34_M36_M40_M51::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::_internal_set_f_1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// optional string f_2 = 6;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_2)
  return _internal_f_2();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51::set_f_2(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_2_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_2)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_2)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::_internal_set_f_2(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_2_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_2_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_2)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_2_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_2_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::set_allocated_f_2(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_2_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_2_.IsDefault()) {
          _impl_.f_2_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_2)
}

// optional string f_3 = 7;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51::f_3() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_3)
  return _internal_f_3();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51::set_f_3(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_3_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_3)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51::mutable_f_3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_3();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_3)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::_internal_set_f_3(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_3_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51::_internal_mutable_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.f_3_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51::release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_3)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.f_3_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_3_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::set_allocated_f_3(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.f_3_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_3_.IsDefault()) {
          _impl_.f_3_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_3)
}

// optional int64 f_4 = 8;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_4)
  return _internal_f_4();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::set_f_4(::int64_t value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_4)
}
inline ::int64_t Message9_M5_M11_M23_M34_M36_M40_M51::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::_internal_set_f_4(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional string f_5 = 9;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51::f_5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_5)
  return _internal_f_5();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36_M40_M51::set_f_5(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_5_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_5)
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51::mutable_f_5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_5();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_5)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36_M40_M51::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_.Get();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::_internal_set_f_5(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_5_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51::_internal_mutable_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.f_5_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36_M40_M51::release_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_5)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.f_5_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_5_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::set_allocated_f_5(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.f_5_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_5_.IsDefault()) {
          _impl_.f_5_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_5)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.E38 f_6 = 12;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51::has_f_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38 Message9_M5_M11_M23_M34_M36_M40_M51::f_6() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_6)
  return _internal_f_6();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38 value) {
  _internal_set_f_6(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_6)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38 Message9_M5_M11_M23_M34_M36_M40_M51::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38>(_impl_.f_6_);
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::_internal_set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38_IsValid(value));
  _impl_.f_6_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.M58 f_12 = 13;
inline bool Message9_M5_M11_M23_M34_M36_M40_M51::has_f_12() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_12_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::clear_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_12_ != nullptr) _impl_.f_12_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58& Message9_M5_M11_M23_M34_M36_M40_M51::_internal_f_12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* p = _impl_.f_12_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_M51_M58_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58& Message9_M5_M11_M23_M34_M36_M40_M51::f_12() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_12)
  return _internal_f_12();
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::unsafe_arena_set_allocated_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_12_);
  }
  _impl_.f_12_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_12)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* Message9_M5_M11_M23_M34_M36_M40_M51::release_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* released = _impl_.f_12_;
  _impl_.f_12_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* Message9_M5_M11_M23_M34_M36_M40_M51::unsafe_arena_release_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_12)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* temp = _impl_.f_12_;
  _impl_.f_12_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* Message9_M5_M11_M23_M34_M36_M40_M51::_internal_mutable_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_12_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58>(GetArena());
    _impl_.f_12_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58*>(p);
  }
  return _impl_.f_12_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* Message9_M5_M11_M23_M34_M36_M40_M51::mutable_f_12() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* _msg = _internal_mutable_f_12();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_12)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36_M40_M51::set_allocated_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_12_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.f_12_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51.f_12)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36_M40

// repeated float f_0 = 1 [packed = true];
inline int Message9_M5_M11_M23_M34_M36_M40::_internal_f_0_size() const {
  return _internal_f_0().size();
}
inline int Message9_M5_M11_M23_M34_M36_M40::f_0_size() const {
  return _internal_f_0_size();
}
inline void Message9_M5_M11_M23_M34_M36_M40::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.Clear();
}
inline float Message9_M5_M11_M23_M34_M36_M40::f_0(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_0)
  return _internal_f_0().Get(index);
}
inline void Message9_M5_M11_M23_M34_M36_M40::set_f_0(int index, float value) {
  _internal_mutable_f_0()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_0)
}
inline void Message9_M5_M11_M23_M34_M36_M40::add_f_0(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_0()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_0)
}
inline const ::google::protobuf::RepeatedField<float>& Message9_M5_M11_M23_M34_M36_M40::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_0)
  return _internal_f_0();
}
inline ::google::protobuf::RepeatedField<float>* Message9_M5_M11_M23_M34_M36_M40::mutable_f_0()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_0)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_0();
}
inline const ::google::protobuf::RepeatedField<float>&
Message9_M5_M11_M23_M34_M36_M40::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline ::google::protobuf::RepeatedField<float>* Message9_M5_M11_M23_M34_M36_M40::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_0_;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M48 f_1 = 6;
inline bool Message9_M5_M11_M23_M34_M36_M40::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_1_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ != nullptr) _impl_.f_1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48& Message9_M5_M11_M23_M34_M36_M40::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* p = _impl_.f_1_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_M48_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48& Message9_M5_M11_M23_M34_M36_M40::f_1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M23_M34_M36_M40::unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_1_);
  }
  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_1)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* Message9_M5_M11_M23_M34_M36_M40::release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* released = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* Message9_M5_M11_M23_M34_M36_M40::unsafe_arena_release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_1)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* temp = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* Message9_M5_M11_M23_M34_M36_M40::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48>(GetArena());
    _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48*>(p);
  }
  return _impl_.f_1_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* Message9_M5_M11_M23_M34_M36_M40::mutable_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* _msg = _internal_mutable_f_1();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_1)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36_M40::set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_1)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M49 f_6 = 7;
inline bool Message9_M5_M11_M23_M34_M36_M40::has_f_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_6_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_6_ != nullptr) _impl_.f_6_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49& Message9_M5_M11_M23_M34_M36_M40::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* p = _impl_.f_6_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_M49_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49& Message9_M5_M11_M23_M34_M36_M40::f_6() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_6)
  return _internal_f_6();
}
inline void Message9_M5_M11_M23_M34_M36_M40::unsafe_arena_set_allocated_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_6_);
  }
  _impl_.f_6_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_6)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* Message9_M5_M11_M23_M34_M36_M40::release_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* released = _impl_.f_6_;
  _impl_.f_6_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* Message9_M5_M11_M23_M34_M36_M40::unsafe_arena_release_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_6)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* temp = _impl_.f_6_;
  _impl_.f_6_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* Message9_M5_M11_M23_M34_M36_M40::_internal_mutable_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_6_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49>(GetArena());
    _impl_.f_6_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49*>(p);
  }
  return _impl_.f_6_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* Message9_M5_M11_M23_M34_M36_M40::mutable_f_6() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* _msg = _internal_mutable_f_6();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_6)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36_M40::set_allocated_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_6_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_6_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M49*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_6)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.M51 f_7 = 8;
inline bool Message9_M5_M11_M23_M34_M36_M40::has_f_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_7_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36_M40::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_7_ != nullptr) _impl_.f_7_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51& Message9_M5_M11_M23_M34_M36_M40::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* p = _impl_.f_7_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_M51_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51& Message9_M5_M11_M23_M34_M36_M40::f_7() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_7)
  return _internal_f_7();
}
inline void Message9_M5_M11_M23_M34_M36_M40::unsafe_arena_set_allocated_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_7_);
  }
  _impl_.f_7_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_7)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* Message9_M5_M11_M23_M34_M36_M40::release_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* released = _impl_.f_7_;
  _impl_.f_7_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* Message9_M5_M11_M23_M34_M36_M40::unsafe_arena_release_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_7)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* temp = _impl_.f_7_;
  _impl_.f_7_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* Message9_M5_M11_M23_M34_M36_M40::_internal_mutable_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_7_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51>(GetArena());
    _impl_.f_7_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51*>(p);
  }
  return _impl_.f_7_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* Message9_M5_M11_M23_M34_M36_M40::mutable_f_7() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* _msg = _internal_mutable_f_7();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_7)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36_M40::set_allocated_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_7_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.f_7_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40.f_7)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M36

// optional string f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M36::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M36::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M36::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M36::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M36.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M36::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M36::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M36::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M36::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M36::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.f_0)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36.M40 f_2 = 3;
inline bool Message9_M5_M11_M23_M34_M36::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_2_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M36::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ != nullptr) _impl_.f_2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40& Message9_M5_M11_M23_M34_M36::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* p = _impl_.f_2_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_M40_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40& Message9_M5_M11_M23_M34_M36::f_2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M36.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11_M23_M34_M36::unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_2_);
  }
  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.f_2)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* Message9_M5_M11_M23_M34_M36::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* released = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* Message9_M5_M11_M23_M34_M36::unsafe_arena_release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M36.f_2)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* temp = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* Message9_M5_M11_M23_M34_M36::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40>(GetArena());
    _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40*>(p);
  }
  return _impl_.f_2_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* Message9_M5_M11_M23_M34_M36::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* _msg = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M36.f_2)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M36::set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M36.f_2)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M38_M46_M52

// optional bytes f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M37_M38_M46_M52::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46_M52::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M38_M46_M52::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M52.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37_M38_M46_M52::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M52.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M37_M38_M46_M52::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M52.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M38_M46_M52::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46_M52::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M38_M46_M52::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M38_M46_M52::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M52.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46_M52::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M52.f_0)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M38_M46_M56

// optional int64 f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M37_M38_M46_M56::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46_M56::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M38_M46_M56::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M56.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46_M56::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M56.f_0)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M38_M46_M56::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46_M56::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M38_M46

// optional string f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M37_M38_M46::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M38_M46::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37_M38_M46::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M37_M38_M46::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M38_M46::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M38_M46::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M38_M46::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_0)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M52 f_2 = 3;
inline bool Message9_M5_M11_M23_M34_M37_M38_M46::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_2_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ != nullptr) _impl_.f_2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52& Message9_M5_M11_M23_M34_M37_M38_M46::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* p = _impl_.f_2_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M38_M46_M52_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52& Message9_M5_M11_M23_M34_M37_M38_M46::f_2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46::unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_2_);
  }
  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_2)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* Message9_M5_M11_M23_M34_M37_M38_M46::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* released = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* Message9_M5_M11_M23_M34_M37_M38_M46::unsafe_arena_release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_2)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* temp = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* Message9_M5_M11_M23_M34_M37_M38_M46::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52>(GetArena());
    _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52*>(p);
  }
  return _impl_.f_2_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* Message9_M5_M11_M23_M34_M37_M38_M46::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* _msg = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_2)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46::set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M52*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_2)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.M56 f_3 = 4;
inline bool Message9_M5_M11_M23_M34_M37_M38_M46::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_3_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ != nullptr) _impl_.f_3_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56& Message9_M5_M11_M23_M34_M37_M38_M46::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* p = _impl_.f_3_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M38_M46_M56_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56& Message9_M5_M11_M23_M34_M37_M38_M46::f_3() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46::unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_3_);
  }
  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_3)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* Message9_M5_M11_M23_M34_M37_M38_M46::release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* released = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* Message9_M5_M11_M23_M34_M37_M38_M46::unsafe_arena_release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_3)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* temp = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* Message9_M5_M11_M23_M34_M37_M38_M46::_internal_mutable_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56>(GetArena());
    _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56*>(p);
  }
  return _impl_.f_3_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* Message9_M5_M11_M23_M34_M37_M38_M46::mutable_f_3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* _msg = _internal_mutable_f_3();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_3)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M46::set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_3_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46_M56*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46.f_3)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M38_M47

// optional int64 f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M37_M38_M47::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M47::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M38_M47::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M47.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M38_M47::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M47.f_0)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M38_M47::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M37_M38_M47::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M38

// optional string f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M37_M38::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M38::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M38::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37_M38::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M37_M38::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M38::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M37_M38::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M38::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M38::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37_M38::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_0)
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M46 f_2 = 4;
inline int Message9_M5_M11_M23_M34_M37_M38::_internal_f_2_size() const {
  return _internal_f_2().size();
}
inline int Message9_M5_M11_M23_M34_M37_M38::f_2_size() const {
  return _internal_f_2_size();
}
inline void Message9_M5_M11_M23_M34_M37_M38::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46* Message9_M5_M11_M23_M34_M37_M38::mutable_f_2(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_2)
  return _internal_mutable_f_2()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46>* Message9_M5_M11_M23_M34_M37_M38::mutable_f_2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_2();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46& Message9_M5_M11_M23_M34_M37_M38::f_2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_2)
  return _internal_f_2().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46* Message9_M5_M11_M23_M34_M37_M38::add_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46* _add = _internal_mutable_f_2()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_2)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46>& Message9_M5_M11_M23_M34_M37_M38::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_2)
  return _internal_f_2();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46>&
Message9_M5_M11_M23_M34_M37_M38::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M46>*
Message9_M5_M11_M23_M34_M37_M38::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_2_;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.M47 f_4 = 6;
inline bool Message9_M5_M11_M23_M34_M37_M38::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_4_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M38::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_4_ != nullptr) _impl_.f_4_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47& Message9_M5_M11_M23_M34_M37_M38::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* p = _impl_.f_4_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M38_M47_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47& Message9_M5_M11_M23_M34_M37_M38::f_4() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_4)
  return _internal_f_4();
}
inline void Message9_M5_M11_M23_M34_M37_M38::unsafe_arena_set_allocated_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_4_);
  }
  _impl_.f_4_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_4)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* Message9_M5_M11_M23_M34_M37_M38::release_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* released = _impl_.f_4_;
  _impl_.f_4_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* Message9_M5_M11_M23_M34_M37_M38::unsafe_arena_release_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_4)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* temp = _impl_.f_4_;
  _impl_.f_4_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* Message9_M5_M11_M23_M34_M37_M38::_internal_mutable_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_4_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47>(GetArena());
    _impl_.f_4_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47*>(p);
  }
  return _impl_.f_4_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* Message9_M5_M11_M23_M34_M37_M38::mutable_f_4() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* _msg = _internal_mutable_f_4();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_4)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37_M38::set_allocated_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_4_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_4_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38_M47*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38.f_4)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M39_M45

// optional float f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M37_M39_M45::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M39_M45::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Message9_M5_M11_M23_M34_M37_M39_M45::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M45.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M39_M45::set_f_0(float value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M45.f_0)
}
inline float Message9_M5_M11_M23_M34_M37_M39_M45::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M37_M39_M45::_internal_set_f_0(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M39_M50

// optional int64 f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M37_M39_M50::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M39_M50::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M39_M50::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M50.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M39_M50::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M50.f_0)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M39_M50::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M37_M39_M50::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M39

// optional uint32 f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M37_M39::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M39::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37_M39::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M39::set_f_0(::uint32_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_0)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37_M39::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M37_M39::_internal_set_f_0(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M45 f_2 = 3;
inline int Message9_M5_M11_M23_M34_M37_M39::_internal_f_2_size() const {
  return _internal_f_2().size();
}
inline int Message9_M5_M11_M23_M34_M37_M39::f_2_size() const {
  return _internal_f_2_size();
}
inline void Message9_M5_M11_M23_M34_M37_M39::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45* Message9_M5_M11_M23_M34_M37_M39::mutable_f_2(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_2)
  return _internal_mutable_f_2()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45>* Message9_M5_M11_M23_M34_M37_M39::mutable_f_2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_2();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45& Message9_M5_M11_M23_M34_M37_M39::f_2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_2)
  return _internal_f_2().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45* Message9_M5_M11_M23_M34_M37_M39::add_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45* _add = _internal_mutable_f_2()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_2)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45>& Message9_M5_M11_M23_M34_M37_M39::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_2)
  return _internal_f_2();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45>&
Message9_M5_M11_M23_M34_M37_M39::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M45>*
Message9_M5_M11_M23_M34_M37_M39::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_2_;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.M50 f_3 = 4;
inline bool Message9_M5_M11_M23_M34_M37_M39::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_3_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M39::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ != nullptr) _impl_.f_3_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50& Message9_M5_M11_M23_M34_M37_M39::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* p = _impl_.f_3_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M39_M50_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50& Message9_M5_M11_M23_M34_M37_M39::f_3() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11_M23_M34_M37_M39::unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_3_);
  }
  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_3)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* Message9_M5_M11_M23_M34_M37_M39::release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* released = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* Message9_M5_M11_M23_M34_M37_M39::unsafe_arena_release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_3)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* temp = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* Message9_M5_M11_M23_M34_M37_M39::_internal_mutable_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50>(GetArena());
    _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50*>(p);
  }
  return _impl_.f_3_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* Message9_M5_M11_M23_M34_M37_M39::mutable_f_3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* _msg = _internal_mutable_f_3();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_3)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37_M39::set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_3_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39_M50*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39.f_3)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M41_M42

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M42.E36 f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M37_M41_M42::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M42::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36 Message9_M5_M11_M23_M34_M37_M41_M42::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M42.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M42::set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36 value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M42.f_0)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36 Message9_M5_M11_M23_M34_M37_M41_M42::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36>(_impl_.f_0_);
}
inline void Message9_M5_M11_M23_M34_M37_M41_M42::_internal_set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36_IsValid(value));
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M41_M43

// optional uint64 f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M37_M41_M43::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M43::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M37_M41_M43::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M43.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M43::set_f_0(::uint64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M43.f_0)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M37_M41_M43::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M43::_internal_set_f_0(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60

// optional string f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M60.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M60.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M60.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M60.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M60.f_0)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61

// optional float f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M61.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61::set_f_0(float value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M61.f_0)
}
inline float Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61::_internal_set_f_0(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62

// optional bool f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_f_0(bool value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_0)
}
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_set_f_0(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional bool f_1 = 3;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_f_1(bool value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_1)
}
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_set_f_1(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// optional fixed32 f_2 = 4;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_f_2(::uint32_t value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_2)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_set_f_2(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = value;
}

// optional int64 f_3 = 5;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_f_3(::int64_t value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_3)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_set_f_3(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional bool f_4 = 6;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_4)
  return _internal_f_4();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_f_4(bool value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_4)
}
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_set_f_4(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional int32 f_5 = 7;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::f_5() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_5)
  return _internal_f_5();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_f_5(::int32_t value) {
  _internal_set_f_5(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_5)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_set_f_5(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = value;
}

// optional int32 f_6 = 8;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::has_f_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::f_6() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_6)
  return _internal_f_6();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_f_6(::int32_t value) {
  _internal_set_f_6(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_6)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_6_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_set_f_6(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = value;
}

// optional int32 f_7 = 9;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::has_f_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::f_7() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_7)
  return _internal_f_7();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_f_7(::int32_t value) {
  _internal_set_f_7(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_7)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_7_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_set_f_7(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_ = value;
}

// optional string f_8 = 10;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::has_f_8() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::clear_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::f_8() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_8)
  return _internal_f_8();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_f_8(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_8_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_8)
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::mutable_f_8() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_8();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_8)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_f_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_8_.Get();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_set_f_8(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_8_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_mutable_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_8_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::release_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_8)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_8_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_8_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_allocated_f_8(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_8_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_8_.IsDefault()) {
          _impl_.f_8_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_8)
}

// optional uint64 f_9 = 12;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::has_f_9() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::clear_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::f_9() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_9)
  return _internal_f_9();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_f_9(::uint64_t value) {
  _internal_set_f_9(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_9)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_f_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_9_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_set_f_9(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = value;
}

// optional uint32 f_10 = 13;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::has_f_10() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::clear_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::f_10() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_10)
  return _internal_f_10();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::set_f_10(::uint32_t value) {
  _internal_set_f_10(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62.f_10)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_f_10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_10_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62::_internal_set_f_10(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M41_M44_M53

// optional double f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double Message9_M5_M11_M23_M34_M37_M41_M44_M53::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53::set_f_0(double value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_0)
}
inline double Message9_M5_M11_M23_M34_M37_M41_M44_M53::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53::_internal_set_f_0(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M60 f_1 = 3;
inline int Message9_M5_M11_M23_M34_M37_M41_M44_M53::_internal_f_1_size() const {
  return _internal_f_1().size();
}
inline int Message9_M5_M11_M23_M34_M37_M41_M44_M53::f_1_size() const {
  return _internal_f_1_size();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60* Message9_M5_M11_M23_M34_M37_M41_M44_M53::mutable_f_1(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_1)
  return _internal_mutable_f_1()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60>* Message9_M5_M11_M23_M34_M37_M41_M44_M53::mutable_f_1()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_1();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60& Message9_M5_M11_M23_M34_M37_M41_M44_M53::f_1(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_1)
  return _internal_f_1().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60* Message9_M5_M11_M23_M34_M37_M41_M44_M53::add_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60* _add = _internal_mutable_f_1()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_1)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60>& Message9_M5_M11_M23_M34_M37_M41_M44_M53::f_1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_1)
  return _internal_f_1();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60>&
Message9_M5_M11_M23_M34_M37_M41_M44_M53::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M60>*
Message9_M5_M11_M23_M34_M37_M41_M44_M53::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_1_;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M61 f_3 = 6;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M53::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_3_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ != nullptr) _impl_.f_3_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& Message9_M5_M11_M23_M34_M37_M41_M44_M53::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* p = _impl_.f_3_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61& Message9_M5_M11_M23_M34_M37_M41_M44_M53::f_3() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53::unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_3_);
  }
  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_3)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* Message9_M5_M11_M23_M34_M37_M41_M44_M53::release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* released = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* Message9_M5_M11_M23_M34_M37_M41_M44_M53::unsafe_arena_release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_3)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* temp = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* Message9_M5_M11_M23_M34_M37_M41_M44_M53::_internal_mutable_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61>(GetArena());
    _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61*>(p);
  }
  return _impl_.f_3_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* Message9_M5_M11_M23_M34_M37_M41_M44_M53::mutable_f_3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* _msg = _internal_mutable_f_3();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_3)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53::set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_3_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M61*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_3)
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.M62 f_6 = 7;
inline int Message9_M5_M11_M23_M34_M37_M41_M44_M53::_internal_f_6_size() const {
  return _internal_f_6().size();
}
inline int Message9_M5_M11_M23_M34_M37_M41_M44_M53::f_6_size() const {
  return _internal_f_6_size();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M53::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62* Message9_M5_M11_M23_M34_M37_M41_M44_M53::mutable_f_6(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_6)
  return _internal_mutable_f_6()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62>* Message9_M5_M11_M23_M34_M37_M41_M44_M53::mutable_f_6()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_6)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_6();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62& Message9_M5_M11_M23_M34_M37_M41_M44_M53::f_6(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_6)
  return _internal_f_6().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62* Message9_M5_M11_M23_M34_M37_M41_M44_M53::add_f_6() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62* _add = _internal_mutable_f_6()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_6)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62>& Message9_M5_M11_M23_M34_M37_M41_M44_M53::f_6() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53.f_6)
  return _internal_f_6();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62>&
Message9_M5_M11_M23_M34_M37_M41_M44_M53::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_6_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53_M62>*
Message9_M5_M11_M23_M34_M37_M41_M44_M53::_internal_mutable_f_6() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_6_;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M41_M44_M55

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M55.E39 f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M55::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M55::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39 Message9_M5_M11_M23_M34_M37_M41_M44_M55::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M55.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M55::set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39 value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M55.f_0)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39 Message9_M5_M11_M23_M34_M37_M41_M44_M55::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39>(_impl_.f_0_);
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M55::_internal_set_f_0(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_IsValid(value));
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M41_M44_M57

// optional float f_0 = 4;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44_M57::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M57::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Message9_M5_M11_M23_M34_M37_M41_M44_M57::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M57.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M57::set_f_0(float value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M57.f_0)
}
inline float Message9_M5_M11_M23_M34_M37_M41_M44_M57::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44_M57::_internal_set_f_0(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M41_M44

// optional int64 f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41_M44::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_0)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41_M44::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M53 f_1 = 2;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_1_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ != nullptr) _impl_.f_1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53& Message9_M5_M11_M23_M34_M37_M41_M44::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* p = _impl_.f_1_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M41_M44_M53_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53& Message9_M5_M11_M23_M34_M37_M41_M44::f_1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_1_);
  }
  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_1)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* Message9_M5_M11_M23_M34_M37_M41_M44::release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* released = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* Message9_M5_M11_M23_M34_M37_M41_M44::unsafe_arena_release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_1)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* temp = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* Message9_M5_M11_M23_M34_M37_M41_M44::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53>(GetArena());
    _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53*>(p);
  }
  return _impl_.f_1_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* Message9_M5_M11_M23_M34_M37_M41_M44::mutable_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* _msg = _internal_mutable_f_1();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_1)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M53*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_1)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M55 f_2 = 4;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_2_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ != nullptr) _impl_.f_2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55& Message9_M5_M11_M23_M34_M37_M41_M44::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* p = _impl_.f_2_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M41_M44_M55_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55& Message9_M5_M11_M23_M34_M37_M41_M44::f_2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_2_);
  }
  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_2)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* Message9_M5_M11_M23_M34_M37_M41_M44::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* released = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* Message9_M5_M11_M23_M34_M37_M41_M44::unsafe_arena_release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_2)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* temp = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* Message9_M5_M11_M23_M34_M37_M41_M44::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55>(GetArena());
    _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55*>(p);
  }
  return _impl_.f_2_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* Message9_M5_M11_M23_M34_M37_M41_M44::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* _msg = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_2)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_2)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.M57 f_4 = 6;
inline bool Message9_M5_M11_M23_M34_M37_M41_M44::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_4_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_4_ != nullptr) _impl_.f_4_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57& Message9_M5_M11_M23_M34_M37_M41_M44::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* p = _impl_.f_4_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M41_M44_M57_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57& Message9_M5_M11_M23_M34_M37_M41_M44::f_4() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_4)
  return _internal_f_4();
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::unsafe_arena_set_allocated_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_4_);
  }
  _impl_.f_4_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_4)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* Message9_M5_M11_M23_M34_M37_M41_M44::release_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* released = _impl_.f_4_;
  _impl_.f_4_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* Message9_M5_M11_M23_M34_M37_M41_M44::unsafe_arena_release_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_4)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* temp = _impl_.f_4_;
  _impl_.f_4_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* Message9_M5_M11_M23_M34_M37_M41_M44::_internal_mutable_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_4_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57>(GetArena());
    _impl_.f_4_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57*>(p);
  }
  return _impl_.f_4_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* Message9_M5_M11_M23_M34_M37_M41_M44::mutable_f_4() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* _msg = _internal_mutable_f_4();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_4)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37_M41_M44::set_allocated_f_4(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_4_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.f_4_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M57*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44.f_4)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37_M41

// optional string f_0 = 2;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37_M41::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_0)
}

// optional uint64 f_1 = 4;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M37_M41::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_1(::uint64_t value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_1)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_1(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// optional string f_2 = 5;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_2)
  return _internal_f_2();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37_M41::set_f_2(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_2_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_2)
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_2)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_.Get();
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_2(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_2_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.f_2_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_2)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.f_2_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_2_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_allocated_f_2(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.f_2_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_2_.IsDefault()) {
          _impl_.f_2_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_2)
}

// optional int32 f_3 = 7;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_3(::int32_t value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_3)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_3(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional int64 f_4 = 9;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_4)
  return _internal_f_4();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_4(::int64_t value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_4)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_4(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional string f_5 = 11;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::f_5() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_5)
  return _internal_f_5();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37_M41::set_f_5(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_5_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_5)
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::mutable_f_5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_5();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_5)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_.Get();
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_5(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_5_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::_internal_mutable_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.f_5_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::release_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_5)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.f_5_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_5_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_allocated_f_5(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.f_5_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_5_.IsDefault()) {
          _impl_.f_5_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_5)
}

// repeated int64 f_6 = 13 [packed = true];
inline int Message9_M5_M11_M23_M34_M37_M41::_internal_f_6_size() const {
  return _internal_f_6().size();
}
inline int Message9_M5_M11_M23_M34_M37_M41::f_6_size() const {
  return _internal_f_6_size();
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_.Clear();
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::f_6(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_6)
  return _internal_f_6().Get(index);
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_6(int index, ::int64_t value) {
  _internal_mutable_f_6()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_6)
}
inline void Message9_M5_M11_M23_M34_M37_M41::add_f_6(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_6()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_6)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Message9_M5_M11_M23_M34_M37_M41::f_6() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_6)
  return _internal_f_6();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M5_M11_M23_M34_M37_M41::mutable_f_6()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_6)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_6();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Message9_M5_M11_M23_M34_M37_M41::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_6_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M5_M11_M23_M34_M37_M41::_internal_mutable_f_6() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_6_;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.E32 f_7 = 14;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32 Message9_M5_M11_M23_M34_M37_M41::f_7() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_7)
  return _internal_f_7();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32 value) {
  _internal_set_f_7(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_7)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32 Message9_M5_M11_M23_M34_M37_M41::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32>(_impl_.f_7_);
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_7(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32_IsValid(value));
  _impl_.f_7_ = value;
}

// optional string f_8 = 15;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_8() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::f_8() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_8)
  return _internal_f_8();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37_M41::set_f_8(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_8_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_8)
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::mutable_f_8() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_8();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_8)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::_internal_f_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_8_.Get();
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_8(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_8_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::_internal_mutable_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.f_8_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::release_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_8)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.f_8_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_8_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_allocated_f_8(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.f_8_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_8_.IsDefault()) {
          _impl_.f_8_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_8)
}

// optional bytes f_9 = 16;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_9() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::f_9() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_9)
  return _internal_f_9();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37_M41::set_f_9(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_9_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_9)
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::mutable_f_9() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_9();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_9)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::_internal_f_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_9_.Get();
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_9(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_9_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::_internal_mutable_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.f_9_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::release_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_9)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.f_9_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_9_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_allocated_f_9(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.f_9_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_9_.IsDefault()) {
          _impl_.f_9_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_9)
}

// optional int64 f_10 = 18;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_10() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::f_10() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_10)
  return _internal_f_10();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_10(::int64_t value) {
  _internal_set_f_10(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_10)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_10_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_10(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_ = value;
}

// optional int64 f_11 = 20;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_11() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_11_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::f_11() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_11)
  return _internal_f_11();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_11(::int64_t value) {
  _internal_set_f_11(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_11)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_11_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_11(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_11_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.E33 f_12 = 21;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_12() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33 Message9_M5_M11_M23_M34_M37_M41::f_12() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_12)
  return _internal_f_12();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33 value) {
  _internal_set_f_12(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_12)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33 Message9_M5_M11_M23_M34_M37_M41::_internal_f_12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33>(_impl_.f_12_);
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_12(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33_IsValid(value));
  _impl_.f_12_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.E34 f_13 = 22;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_13() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34 Message9_M5_M11_M23_M34_M37_M41::f_13() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_13)
  return _internal_f_13();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34 value) {
  _internal_set_f_13(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_13)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34 Message9_M5_M11_M23_M34_M37_M41::_internal_f_13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34>(_impl_.f_13_);
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34_IsValid(value));
  _impl_.f_13_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.E35 f_14 = 23;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_14() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = 0;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35 Message9_M5_M11_M23_M34_M37_M41::f_14() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_14)
  return _internal_f_14();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_14(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35 value) {
  _internal_set_f_14(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_14)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35 Message9_M5_M11_M23_M34_M37_M41::_internal_f_14() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35>(_impl_.f_14_);
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_14(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35_IsValid(value));
  _impl_.f_14_ = value;
}

// optional float f_15 = 25;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_15() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = 0;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline float Message9_M5_M11_M23_M34_M37_M41::f_15() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_15)
  return _internal_f_15();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_15(float value) {
  _internal_set_f_15(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_15)
}
inline float Message9_M5_M11_M23_M34_M37_M41::_internal_f_15() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_15_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_15(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = value;
}

// optional bool f_16 = 27;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_16() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_ = false;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline bool Message9_M5_M11_M23_M34_M37_M41::f_16() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_16)
  return _internal_f_16();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_16(bool value) {
  _internal_set_f_16(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_16)
}
inline bool Message9_M5_M11_M23_M34_M37_M41::_internal_f_16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_16_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_16(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_ = value;
}

// optional int32 f_17 = 28;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_17() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_ = 0;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41::f_17() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_17)
  return _internal_f_17();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_17(::int32_t value) {
  _internal_set_f_17(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_17)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_17() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_17_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_17(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_ = value;
}

// optional int64 f_18 = 29;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_18() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::f_18() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_18)
  return _internal_f_18();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_18(::int64_t value) {
  _internal_set_f_18(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_18)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_18_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_18(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_ = value;
}

// optional fixed32 f_19 = 30;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_19() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = 0u;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37_M41::f_19() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_19)
  return _internal_f_19();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_19(::uint32_t value) {
  _internal_set_f_19(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_19)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_19() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_19_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_19(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = value;
}

// optional float f_20 = 32;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_20() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_20() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_ = 0;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline float Message9_M5_M11_M23_M34_M37_M41::f_20() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_20)
  return _internal_f_20();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_20(float value) {
  _internal_set_f_20(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_20)
}
inline float Message9_M5_M11_M23_M34_M37_M41::_internal_f_20() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_20_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_20(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_ = value;
}

// optional int64 f_21 = 33;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_21() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::f_21() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_21)
  return _internal_f_21();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_21(::int64_t value) {
  _internal_set_f_21(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_21)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_21() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_21_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_21(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = value;
}

// optional int64 f_22 = 35;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_22() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::f_22() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_22)
  return _internal_f_22();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_22(::int64_t value) {
  _internal_set_f_22(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_22)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_22_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_22(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = value;
}

// optional string f_23 = 37;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_23() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_23_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::f_23() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_23)
  return _internal_f_23();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37_M41::set_f_23(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_23_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_23)
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::mutable_f_23() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_23();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_23)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37_M41::_internal_f_23() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_23_.Get();
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_23(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_23_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::_internal_mutable_f_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.f_23_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37_M41::release_f_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_23)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.f_23_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_23_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_allocated_f_23(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.f_23_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_23_.IsDefault()) {
          _impl_.f_23_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_23)
}

// optional int32 f_24 = 38;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_24() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_24() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_24_ = 0;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41::f_24() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_24)
  return _internal_f_24();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_24(::int32_t value) {
  _internal_set_f_24(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_24)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_24() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_24_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_24(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_24_ = value;
}

// optional int32 f_25 = 40;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_25() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_25_ = 0;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41::f_25() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_25)
  return _internal_f_25();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_25(::int32_t value) {
  _internal_set_f_25(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_25)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_25() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_25_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_25(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_25_ = value;
}

// optional fixed64 f_26 = 41;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_26() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_26() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_26_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M37_M41::f_26() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_26)
  return _internal_f_26();
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_f_26(::uint64_t value) {
  _internal_set_f_26(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_26)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M37_M41::_internal_f_26() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_26_;
}
inline void Message9_M5_M11_M23_M34_M37_M41::_internal_set_f_26(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_26_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M42 f_41 = 42;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_41() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_41_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_41() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_41_ != nullptr) _impl_.f_41_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42& Message9_M5_M11_M23_M34_M37_M41::_internal_f_41() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* p = _impl_.f_41_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M41_M42_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42& Message9_M5_M11_M23_M34_M37_M41::f_41() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_41)
  return _internal_f_41();
}
inline void Message9_M5_M11_M23_M34_M37_M41::unsafe_arena_set_allocated_f_41(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_41_);
  }
  _impl_.f_41_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_41)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* Message9_M5_M11_M23_M34_M37_M41::release_f_41() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* released = _impl_.f_41_;
  _impl_.f_41_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* Message9_M5_M11_M23_M34_M37_M41::unsafe_arena_release_f_41() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_41)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* temp = _impl_.f_41_;
  _impl_.f_41_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* Message9_M5_M11_M23_M34_M37_M41::_internal_mutable_f_41() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_41_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42>(GetArena());
    _impl_.f_41_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42*>(p);
  }
  return _impl_.f_41_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* Message9_M5_M11_M23_M34_M37_M41::mutable_f_41() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* _msg = _internal_mutable_f_41();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_41)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_allocated_f_41(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_41_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.f_41_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_41)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M43 f_42 = 44;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_42() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_42_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_42_ != nullptr) _impl_.f_42_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43& Message9_M5_M11_M23_M34_M37_M41::_internal_f_42() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* p = _impl_.f_42_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M41_M43_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43& Message9_M5_M11_M23_M34_M37_M41::f_42() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_42)
  return _internal_f_42();
}
inline void Message9_M5_M11_M23_M34_M37_M41::unsafe_arena_set_allocated_f_42(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_42_);
  }
  _impl_.f_42_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_42)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* Message9_M5_M11_M23_M34_M37_M41::release_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* released = _impl_.f_42_;
  _impl_.f_42_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* Message9_M5_M11_M23_M34_M37_M41::unsafe_arena_release_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_42)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* temp = _impl_.f_42_;
  _impl_.f_42_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* Message9_M5_M11_M23_M34_M37_M41::_internal_mutable_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_42_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43>(GetArena());
    _impl_.f_42_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43*>(p);
  }
  return _impl_.f_42_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* Message9_M5_M11_M23_M34_M37_M41::mutable_f_42() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* _msg = _internal_mutable_f_42();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_42)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_allocated_f_42(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_42_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.f_42_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M43*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_42)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.M44 f_44 = 45;
inline bool Message9_M5_M11_M23_M34_M37_M41::has_f_44() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_44_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37_M41::clear_f_44() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_44_ != nullptr) _impl_.f_44_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44& Message9_M5_M11_M23_M34_M37_M41::_internal_f_44() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* p = _impl_.f_44_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M41_M44_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44& Message9_M5_M11_M23_M34_M37_M41::f_44() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_44)
  return _internal_f_44();
}
inline void Message9_M5_M11_M23_M34_M37_M41::unsafe_arena_set_allocated_f_44(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_44_);
  }
  _impl_.f_44_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_44)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* Message9_M5_M11_M23_M34_M37_M41::release_f_44() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* released = _impl_.f_44_;
  _impl_.f_44_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* Message9_M5_M11_M23_M34_M37_M41::unsafe_arena_release_f_44() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_44)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* temp = _impl_.f_44_;
  _impl_.f_44_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* Message9_M5_M11_M23_M34_M37_M41::_internal_mutable_f_44() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_44_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44>(GetArena());
    _impl_.f_44_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44*>(p);
  }
  return _impl_.f_44_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* Message9_M5_M11_M23_M34_M37_M41::mutable_f_44() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* _msg = _internal_mutable_f_44();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_44)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37_M41::set_allocated_f_44(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_44_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.f_44_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41.f_44)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34_M37

// optional string f_0 = 1;
inline bool Message9_M5_M11_M23_M34_M37::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_0)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_0)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E26 f_1 = 2;
inline bool Message9_M5_M11_M23_M34_M37::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26 Message9_M5_M11_M23_M34_M37::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26 value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_1)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26 Message9_M5_M11_M23_M34_M37::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26>(_impl_.f_1_);
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_1(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26_IsValid(value));
  _impl_.f_1_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E27 f_2 = 3;
inline bool Message9_M5_M11_M23_M34_M37::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27 Message9_M5_M11_M23_M34_M37::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27 value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_2)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27 Message9_M5_M11_M23_M34_M37::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27>(_impl_.f_2_);
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27_IsValid(value));
  _impl_.f_2_ = value;
}

// optional int64 f_3 = 4;
inline bool Message9_M5_M11_M23_M34_M37::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_3(::int64_t value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_3)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_3(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional int32 f_4 = 6;
inline bool Message9_M5_M11_M23_M34_M37::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = 0;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_4)
  return _internal_f_4();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_4(::int32_t value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_4)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_4(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional fixed32 f_5 = 7;
inline bool Message9_M5_M11_M23_M34_M37::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = 0u;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37::f_5() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_5)
  return _internal_f_5();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_5(::uint32_t value) {
  _internal_set_f_5(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_5)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_5(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E28 f_6 = 9;
inline bool Message9_M5_M11_M23_M34_M37::has_f_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28 Message9_M5_M11_M23_M34_M37::f_6() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_6)
  return _internal_f_6();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28 value) {
  _internal_set_f_6(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_6)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28 Message9_M5_M11_M23_M34_M37::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28>(_impl_.f_6_);
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_6(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28_IsValid(value));
  _impl_.f_6_ = value;
}

// repeated int32 f_7 = 13 [packed = true];
inline int Message9_M5_M11_M23_M34_M37::_internal_f_7_size() const {
  return _internal_f_7().size();
}
inline int Message9_M5_M11_M23_M34_M37::f_7_size() const {
  return _internal_f_7_size();
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_.Clear();
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::f_7(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_7)
  return _internal_f_7().Get(index);
}
inline void Message9_M5_M11_M23_M34_M37::set_f_7(int index, ::int32_t value) {
  _internal_mutable_f_7()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_7)
}
inline void Message9_M5_M11_M23_M34_M37::add_f_7(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_7()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_7)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Message9_M5_M11_M23_M34_M37::f_7() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_7)
  return _internal_f_7();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M37::mutable_f_7()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_7)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_7();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Message9_M5_M11_M23_M34_M37::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_7_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_7() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_7_;
}

// optional string f_8 = 17;
inline bool Message9_M5_M11_M23_M34_M37::has_f_8() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_8() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_8)
  return _internal_f_8();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_8(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_8_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_8)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_8() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_8();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_8)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_8_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_8(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_8_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.f_8_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_8)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.f_8_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_8_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_8(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.f_8_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_8_.IsDefault()) {
          _impl_.f_8_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_8)
}

// optional int64 f_9 = 18;
inline bool Message9_M5_M11_M23_M34_M37::has_f_9() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::f_9() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_9)
  return _internal_f_9();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_9(::int64_t value) {
  _internal_set_f_9(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_9)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::_internal_f_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_9_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_9(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = value;
}

// optional int32 f_10 = 19;
inline bool Message9_M5_M11_M23_M34_M37::has_f_10() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_ = 0;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::f_10() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_10)
  return _internal_f_10();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_10(::int32_t value) {
  _internal_set_f_10(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_10)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::_internal_f_10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_10_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_10(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_ = value;
}

// optional string f_11 = 22;
inline bool Message9_M5_M11_M23_M34_M37::has_f_11() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_11_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_11() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_11)
  return _internal_f_11();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_11(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_11_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_11)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_11() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_11();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_11)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_11_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_11(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_11_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.f_11_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_11)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.f_11_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_11_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_11(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.f_11_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_11_.IsDefault()) {
          _impl_.f_11_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_11)
}

// optional string f_12 = 24;
inline bool Message9_M5_M11_M23_M34_M37::has_f_12() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_12() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_12)
  return _internal_f_12();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_12(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_12_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_12)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_12() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_12();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_12)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_12_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_12(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_12_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.f_12_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_12)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.f_12_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_12_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_12(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.f_12_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_12_.IsDefault()) {
          _impl_.f_12_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_12)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E29 f_13 = 26;
inline bool Message9_M5_M11_M23_M34_M37::has_f_13() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_ = 0;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29 Message9_M5_M11_M23_M34_M37::f_13() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_13)
  return _internal_f_13();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29 value) {
  _internal_set_f_13(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_13)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29 Message9_M5_M11_M23_M34_M37::_internal_f_13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29>(_impl_.f_13_);
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_13(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29_IsValid(value));
  _impl_.f_13_ = value;
}

// optional float f_14 = 28;
inline bool Message9_M5_M11_M23_M34_M37::has_f_14() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = 0;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline float Message9_M5_M11_M23_M34_M37::f_14() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_14)
  return _internal_f_14();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_14(float value) {
  _internal_set_f_14(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_14)
}
inline float Message9_M5_M11_M23_M34_M37::_internal_f_14() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_14_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_14(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = value;
}

// optional int64 f_15 = 30;
inline bool Message9_M5_M11_M23_M34_M37::has_f_15() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::f_15() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_15)
  return _internal_f_15();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_15(::int64_t value) {
  _internal_set_f_15(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_15)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::_internal_f_15() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_15_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_15(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = value;
}

// optional string f_16 = 31;
inline bool Message9_M5_M11_M23_M34_M37::has_f_16() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_16() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_16)
  return _internal_f_16();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_16(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_16_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_16)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_16() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_16();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_16)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_16_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_16(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_16_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.f_16_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_16)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.f_16_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_16_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_16(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.f_16_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_16_.IsDefault()) {
          _impl_.f_16_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_16)
}

// optional bool f_17 = 32;
inline bool Message9_M5_M11_M23_M34_M37::has_f_17() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_ = false;
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline bool Message9_M5_M11_M23_M34_M37::f_17() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_17)
  return _internal_f_17();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_17(bool value) {
  _internal_set_f_17(value);
  _impl_._has_bits_[0] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_17)
}
inline bool Message9_M5_M11_M23_M34_M37::_internal_f_17() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_17_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_17(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_ = value;
}

// optional fixed32 f_18 = 33;
inline bool Message9_M5_M11_M23_M34_M37::has_f_18() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_ = 0u;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37::f_18() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_18)
  return _internal_f_18();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_18(::uint32_t value) {
  _internal_set_f_18(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_18)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37::_internal_f_18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_18_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_18(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_ = value;
}

// optional bool f_19 = 34;
inline bool Message9_M5_M11_M23_M34_M37::has_f_19() const {
  bool value = (_impl_._has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = false;
  _impl_._has_bits_[0] &= ~0x40000000u;
}
inline bool Message9_M5_M11_M23_M34_M37::f_19() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_19)
  return _internal_f_19();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_19(bool value) {
  _internal_set_f_19(value);
  _impl_._has_bits_[0] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_19)
}
inline bool Message9_M5_M11_M23_M34_M37::_internal_f_19() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_19_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_19(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = value;
}

// repeated int64 f_20 = 35 [packed = true];
inline int Message9_M5_M11_M23_M34_M37::_internal_f_20_size() const {
  return _internal_f_20().size();
}
inline int Message9_M5_M11_M23_M34_M37::f_20_size() const {
  return _internal_f_20_size();
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_20() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_.Clear();
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::f_20(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_20)
  return _internal_f_20().Get(index);
}
inline void Message9_M5_M11_M23_M34_M37::set_f_20(int index, ::int64_t value) {
  _internal_mutable_f_20()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_20)
}
inline void Message9_M5_M11_M23_M34_M37::add_f_20(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_20()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_20)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& Message9_M5_M11_M23_M34_M37::f_20() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_20)
  return _internal_f_20();
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M5_M11_M23_M34_M37::mutable_f_20()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_20)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_20();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
Message9_M5_M11_M23_M34_M37::_internal_f_20() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_20_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_20() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_20_;
}

// optional int32 f_21 = 36;
inline bool Message9_M5_M11_M23_M34_M37::has_f_21() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = 0;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::f_21() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_21)
  return _internal_f_21();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_21(::int32_t value) {
  _internal_set_f_21(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_21)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::_internal_f_21() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_21_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_21(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_ = value;
}

// optional int64 f_22 = 37;
inline bool Message9_M5_M11_M23_M34_M37::has_f_22() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::f_22() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_22)
  return _internal_f_22();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_22(::int64_t value) {
  _internal_set_f_22(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_22)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::_internal_f_22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_22_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_22(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E30 f_23 = 40;
inline bool Message9_M5_M11_M23_M34_M37::has_f_23() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_23_ = 0;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30 Message9_M5_M11_M23_M34_M37::f_23() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_23)
  return _internal_f_23();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_23(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30 value) {
  _internal_set_f_23(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_23)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30 Message9_M5_M11_M23_M34_M37::_internal_f_23() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30>(_impl_.f_23_);
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_23(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30_IsValid(value));
  _impl_.f_23_ = value;
}

// repeated int32 f_24 = 42 [packed = true];
inline int Message9_M5_M11_M23_M34_M37::_internal_f_24_size() const {
  return _internal_f_24().size();
}
inline int Message9_M5_M11_M23_M34_M37::f_24_size() const {
  return _internal_f_24_size();
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_24() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_24_.Clear();
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::f_24(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_24)
  return _internal_f_24().Get(index);
}
inline void Message9_M5_M11_M23_M34_M37::set_f_24(int index, ::int32_t value) {
  _internal_mutable_f_24()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_24)
}
inline void Message9_M5_M11_M23_M34_M37::add_f_24(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_24()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_24)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Message9_M5_M11_M23_M34_M37::f_24() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_24)
  return _internal_f_24();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M37::mutable_f_24()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_24)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_24();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Message9_M5_M11_M23_M34_M37::_internal_f_24() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_24_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_24() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_24_;
}

// optional string f_25 = 44;
inline bool Message9_M5_M11_M23_M34_M37::has_f_25() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_25_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_25() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_25)
  return _internal_f_25();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_25(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_25_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_25)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_25() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_25();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_25)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_25() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_25_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_25(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_25_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.f_25_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_25)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.f_25_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_25_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_25(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.f_25_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_25_.IsDefault()) {
          _impl_.f_25_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_25)
}

// optional int64 f_26 = 45;
inline bool Message9_M5_M11_M23_M34_M37::has_f_26() const {
  bool value = (_impl_._has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_26() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_26_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x00000001u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::f_26() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_26)
  return _internal_f_26();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_26(::int64_t value) {
  _internal_set_f_26(value);
  _impl_._has_bits_[1] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_26)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::_internal_f_26() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_26_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_26(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_26_ = value;
}

// optional fixed32 f_27 = 46;
inline bool Message9_M5_M11_M23_M34_M37::has_f_27() const {
  bool value = (_impl_._has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_27_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000002u;
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37::f_27() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_27)
  return _internal_f_27();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_27(::uint32_t value) {
  _internal_set_f_27(value);
  _impl_._has_bits_[1] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_27)
}
inline ::uint32_t Message9_M5_M11_M23_M34_M37::_internal_f_27() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_27_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_27(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_27_ = value;
}

// optional string f_28 = 47;
inline bool Message9_M5_M11_M23_M34_M37::has_f_28() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_28_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_28() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_28)
  return _internal_f_28();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_28(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_28_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_28)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_28() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_28();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_28)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_28() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_28_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_28(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_28_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.f_28_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_28)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.f_28_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_28_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_28(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.f_28_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_28_.IsDefault()) {
          _impl_.f_28_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_28)
}

// optional string f_29 = 48;
inline bool Message9_M5_M11_M23_M34_M37::has_f_29() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_29() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_29_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_29() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_29)
  return _internal_f_29();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_29(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.f_29_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_29)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_29() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_29();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_29)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_29() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_29_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_29(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.f_29_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_29() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.f_29_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_29() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_29)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.f_29_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_29_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_29(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.f_29_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_29_.IsDefault()) {
          _impl_.f_29_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_29)
}

// optional string f_30 = 50;
inline bool Message9_M5_M11_M23_M34_M37::has_f_30() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_30_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_30() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_30)
  return _internal_f_30();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_30(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.f_30_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_30)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_30() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_30();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_30)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_30() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_30_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_30(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.f_30_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  return _impl_.f_30_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_30() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_30)
  if ((_impl_._has_bits_[0] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000100u;
  auto* released = _impl_.f_30_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_30_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_30(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.f_30_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_30_.IsDefault()) {
          _impl_.f_30_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_30)
}

// optional int64 f_31 = 51;
inline bool Message9_M5_M11_M23_M34_M37::has_f_31() const {
  bool value = (_impl_._has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_31() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_31_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x00000008u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::f_31() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_31)
  return _internal_f_31();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_31(::int64_t value) {
  _internal_set_f_31(value);
  _impl_._has_bits_[1] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_31)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::_internal_f_31() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_31_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_31(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_31_ = value;
}

// optional string f_32 = 52;
inline bool Message9_M5_M11_M23_M34_M37::has_f_32() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_32_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_32)
  return _internal_f_32();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_32(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.f_32_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_32)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_32();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_32)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_32_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_32(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.f_32_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000200u;
  return _impl_.f_32_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_32)
  if ((_impl_._has_bits_[0] & 0x00000200u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000200u;
  auto* released = _impl_.f_32_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_32_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_32(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  _impl_.f_32_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_32_.IsDefault()) {
          _impl_.f_32_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_32)
}

// optional int32 f_33 = 53;
inline bool Message9_M5_M11_M23_M34_M37::has_f_33() const {
  bool value = (_impl_._has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_33() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_33_ = 0;
  _impl_._has_bits_[1] &= ~0x00000004u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::f_33() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_33)
  return _internal_f_33();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_33(::int32_t value) {
  _internal_set_f_33(value);
  _impl_._has_bits_[1] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_33)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::_internal_f_33() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_33_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_33(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_33_ = value;
}

// repeated int32 f_34 = 54 [packed = true];
inline int Message9_M5_M11_M23_M34_M37::_internal_f_34_size() const {
  return _internal_f_34().size();
}
inline int Message9_M5_M11_M23_M34_M37::f_34_size() const {
  return _internal_f_34_size();
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_34() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_34_.Clear();
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::f_34(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_34)
  return _internal_f_34().Get(index);
}
inline void Message9_M5_M11_M23_M34_M37::set_f_34(int index, ::int32_t value) {
  _internal_mutable_f_34()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_34)
}
inline void Message9_M5_M11_M23_M34_M37::add_f_34(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_34()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_34)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Message9_M5_M11_M23_M34_M37::f_34() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_34)
  return _internal_f_34();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M37::mutable_f_34()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_34)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_34();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Message9_M5_M11_M23_M34_M37::_internal_f_34() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_34_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_34() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_34_;
}

// optional bool f_35 = 56;
inline bool Message9_M5_M11_M23_M34_M37::has_f_35() const {
  bool value = (_impl_._has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_35() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_35_ = false;
  _impl_._has_bits_[0] &= ~0x80000000u;
}
inline bool Message9_M5_M11_M23_M34_M37::f_35() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_35)
  return _internal_f_35();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_35(bool value) {
  _internal_set_f_35(value);
  _impl_._has_bits_[0] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_35)
}
inline bool Message9_M5_M11_M23_M34_M37::_internal_f_35() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_35_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_35(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_35_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.E31 f_36 = 57;
inline bool Message9_M5_M11_M23_M34_M37::has_f_36() const {
  bool value = (_impl_._has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_36() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_36_ = 0;
  _impl_._has_bits_[1] &= ~0x00000010u;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31 Message9_M5_M11_M23_M34_M37::f_36() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_36)
  return _internal_f_36();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_36(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31 value) {
  _internal_set_f_36(value);
  _impl_._has_bits_[1] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_36)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31 Message9_M5_M11_M23_M34_M37::_internal_f_36() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31>(_impl_.f_36_);
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_36(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31_IsValid(value));
  _impl_.f_36_ = value;
}

// optional int32 f_37 = 58;
inline bool Message9_M5_M11_M23_M34_M37::has_f_37() const {
  bool value = (_impl_._has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_37() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_37_ = 0;
  _impl_._has_bits_[1] &= ~0x00000020u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::f_37() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_37)
  return _internal_f_37();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_37(::int32_t value) {
  _internal_set_f_37(value);
  _impl_._has_bits_[1] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_37)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::_internal_f_37() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_37_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_37(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_37_ = value;
}

// optional int64 f_38 = 59;
inline bool Message9_M5_M11_M23_M34_M37::has_f_38() const {
  bool value = (_impl_._has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_38() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_38_ = ::int64_t{0};
  _impl_._has_bits_[1] &= ~0x00000040u;
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::f_38() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_38)
  return _internal_f_38();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_38(::int64_t value) {
  _internal_set_f_38(value);
  _impl_._has_bits_[1] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_38)
}
inline ::int64_t Message9_M5_M11_M23_M34_M37::_internal_f_38() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_38_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_38(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_38_ = value;
}

// optional string f_39 = 61;
inline bool Message9_M5_M11_M23_M34_M37::has_f_39() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_39() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_39_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_39() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_39)
  return _internal_f_39();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_39(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.f_39_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_39)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_39() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_39();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_39)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_39() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_39_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_39(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  _impl_.f_39_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_39() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000400u;
  return _impl_.f_39_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_39() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_39)
  if ((_impl_._has_bits_[0] & 0x00000400u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000400u;
  auto* released = _impl_.f_39_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_39_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_39(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  _impl_.f_39_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_39_.IsDefault()) {
          _impl_.f_39_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_39)
}

// optional uint64 f_40 = 62;
inline bool Message9_M5_M11_M23_M34_M37::has_f_40() const {
  bool value = (_impl_._has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_40() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_40_ = ::uint64_t{0u};
  _impl_._has_bits_[1] &= ~0x00000080u;
}
inline ::uint64_t Message9_M5_M11_M23_M34_M37::f_40() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_40)
  return _internal_f_40();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_40(::uint64_t value) {
  _internal_set_f_40(value);
  _impl_._has_bits_[1] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_40)
}
inline ::uint64_t Message9_M5_M11_M23_M34_M37::_internal_f_40() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_40_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_40(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_40_ = value;
}

// optional int32 f_41 = 66;
inline bool Message9_M5_M11_M23_M34_M37::has_f_41() const {
  bool value = (_impl_._has_bits_[1] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_41() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_41_ = 0;
  _impl_._has_bits_[1] &= ~0x00000100u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::f_41() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_41)
  return _internal_f_41();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_41(::int32_t value) {
  _internal_set_f_41(value);
  _impl_._has_bits_[1] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_41)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::_internal_f_41() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_41_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_41(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_41_ = value;
}

// optional string f_42 = 68;
inline bool Message9_M5_M11_M23_M34_M37::has_f_42() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_42_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::f_42() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_42)
  return _internal_f_42();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23_M34_M37::set_f_42(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.f_42_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_42)
}
inline std::string* Message9_M5_M11_M23_M34_M37::mutable_f_42() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_42();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_42)
  return _s;
}
inline const std::string& Message9_M5_M11_M23_M34_M37::_internal_f_42() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_42_.Get();
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_42(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  _impl_.f_42_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000800u;
  return _impl_.f_42_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23_M34_M37::release_f_42() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_42)
  if ((_impl_._has_bits_[0] & 0x00000800u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000800u;
  auto* released = _impl_.f_42_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_42_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_42(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  _impl_.f_42_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_42_.IsDefault()) {
          _impl_.f_42_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_42)
}

// optional int32 f_43 = 69;
inline bool Message9_M5_M11_M23_M34_M37::has_f_43() const {
  bool value = (_impl_._has_bits_[1] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_43() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_43_ = 0;
  _impl_._has_bits_[1] &= ~0x00000200u;
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::f_43() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_43)
  return _internal_f_43();
}
inline void Message9_M5_M11_M23_M34_M37::set_f_43(::int32_t value) {
  _internal_set_f_43(value);
  _impl_._has_bits_[1] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_43)
}
inline ::int32_t Message9_M5_M11_M23_M34_M37::_internal_f_43() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_43_;
}
inline void Message9_M5_M11_M23_M34_M37::_internal_set_f_43(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_43_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M38 f_69 = 70;
inline bool Message9_M5_M11_M23_M34_M37::has_f_69() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_69_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_69() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_69_ != nullptr) _impl_.f_69_->Clear();
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38& Message9_M5_M11_M23_M34_M37::_internal_f_69() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* p = _impl_.f_69_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M38_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38& Message9_M5_M11_M23_M34_M37::f_69() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_69)
  return _internal_f_69();
}
inline void Message9_M5_M11_M23_M34_M37::unsafe_arena_set_allocated_f_69(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_69_);
  }
  _impl_.f_69_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_69)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* Message9_M5_M11_M23_M34_M37::release_f_69() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* released = _impl_.f_69_;
  _impl_.f_69_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* Message9_M5_M11_M23_M34_M37::unsafe_arena_release_f_69() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_69)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* temp = _impl_.f_69_;
  _impl_.f_69_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_69() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_69_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38>(GetArena());
    _impl_.f_69_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38*>(p);
  }
  return _impl_.f_69_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* Message9_M5_M11_M23_M34_M37::mutable_f_69() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* _msg = _internal_mutable_f_69();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_69)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_69(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_69_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.f_69_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M38*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_69)
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M39 f_70 = 71;
inline bool Message9_M5_M11_M23_M34_M37::has_f_70() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_70_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_70() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_70_ != nullptr) _impl_.f_70_->Clear();
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39& Message9_M5_M11_M23_M34_M37::_internal_f_70() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* p = _impl_.f_70_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M37_M39_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39& Message9_M5_M11_M23_M34_M37::f_70() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_70)
  return _internal_f_70();
}
inline void Message9_M5_M11_M23_M34_M37::unsafe_arena_set_allocated_f_70(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_70_);
  }
  _impl_.f_70_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_70)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* Message9_M5_M11_M23_M34_M37::release_f_70() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* released = _impl_.f_70_;
  _impl_.f_70_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* Message9_M5_M11_M23_M34_M37::unsafe_arena_release_f_70() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_70)

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* temp = _impl_.f_70_;
  _impl_.f_70_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* Message9_M5_M11_M23_M34_M37::_internal_mutable_f_70() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_70_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39>(GetArena());
    _impl_.f_70_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39*>(p);
  }
  return _impl_.f_70_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* Message9_M5_M11_M23_M34_M37::mutable_f_70() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00002000u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* _msg = _internal_mutable_f_70();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_70)
  return _msg;
}
inline void Message9_M5_M11_M23_M34_M37::set_allocated_f_70(::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_70_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }

  _impl_.f_70_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M39*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_70)
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37.M41 f_71 = 72;
inline int Message9_M5_M11_M23_M34_M37::_internal_f_71_size() const {
  return _internal_f_71().size();
}
inline int Message9_M5_M11_M23_M34_M37::f_71_size() const {
  return _internal_f_71_size();
}
inline void Message9_M5_M11_M23_M34_M37::clear_f_71() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_71_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41* Message9_M5_M11_M23_M34_M37::mutable_f_71(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_71)
  return _internal_mutable_f_71()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41>* Message9_M5_M11_M23_M34_M37::mutable_f_71()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_71)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_71();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41& Message9_M5_M11_M23_M34_M37::f_71(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_71)
  return _internal_f_71().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41* Message9_M5_M11_M23_M34_M37::add_f_71() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41* _add = _internal_mutable_f_71()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_71)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41>& Message9_M5_M11_M23_M34_M37::f_71() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.M37.f_71)
  return _internal_f_71();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41>&
Message9_M5_M11_M23_M34_M37::_internal_f_71() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_71_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41>*
Message9_M5_M11_M23_M34_M37::_internal_mutable_f_71() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_71_;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23_M34

// optional int32 f_0 = 2;
inline bool Message9_M5_M11_M23_M34::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M23_M34::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t Message9_M5_M11_M23_M34::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M23_M34::set_f_0(::int32_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.M34.f_0)
}
inline ::int32_t Message9_M5_M11_M23_M34::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M23_M34::_internal_set_f_0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M23.M34.M36 f_2 = 3;
inline bool Message9_M5_M11_M23_M34::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_2_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M23_M34::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ != nullptr) _impl_.f_2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36& Message9_M5_M11_M23_M34::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* p = _impl_.f_2_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36&>(::fleetbench::proto::_Message9_M5_M11_M23_M34_M36_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M36& Message9_M5_M11_M23_M34::f_2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11_M23_M34::unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_2_);
  }
  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.f_2)
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* Message9_M5_M11_M23_M34::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* released = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* Message9_M5_M11_M23_M34::unsafe_arena_release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.M34.f_2)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* temp = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* Message9_M5_M11_M23_M34::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23_M34_M36>(GetArena());
    _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36*>(p);
  }
  return _impl_.f_2_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* Message9_M5_M11_M23_M34::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M36* _msg = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.f_2)
  return _msg;
}
inline void Message9_M5_M11_M23_M34::set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23_M34_M36* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23_M34_M36*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.M34.f_2)
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34.M37 f_3 = 5;
inline int Message9_M5_M11_M23_M34::_internal_f_3_size() const {
  return _internal_f_3().size();
}
inline int Message9_M5_M11_M23_M34::f_3_size() const {
  return _internal_f_3_size();
}
inline void Message9_M5_M11_M23_M34::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37* Message9_M5_M11_M23_M34::mutable_f_3(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.M34.f_3)
  return _internal_mutable_f_3()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37>* Message9_M5_M11_M23_M34::mutable_f_3()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.M34.f_3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_3();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34_M37& Message9_M5_M11_M23_M34::f_3(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.M34.f_3)
  return _internal_f_3().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34_M37* Message9_M5_M11_M23_M34::add_f_3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34_M37* _add = _internal_mutable_f_3()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.M34.f_3)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37>& Message9_M5_M11_M23_M34::f_3() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.M34.f_3)
  return _internal_f_3();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37>&
Message9_M5_M11_M23_M34::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34_M37>*
Message9_M5_M11_M23_M34::_internal_mutable_f_3() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_3_;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M23

// optional bytes f_0 = 2;
inline bool Message9_M5_M11_M23::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M23::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M23::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M23::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M23.f_0)
}
inline std::string* Message9_M5_M11_M23::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M23::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M23::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M23::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M23::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M23.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M23::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M23.f_0)
}

// repeated .fleetbench.proto.Message9.M5.M11.M23.M34 f_2 = 3;
inline int Message9_M5_M11_M23::_internal_f_2_size() const {
  return _internal_f_2().size();
}
inline int Message9_M5_M11_M23::f_2_size() const {
  return _internal_f_2_size();
}
inline void Message9_M5_M11_M23::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34* Message9_M5_M11_M23::mutable_f_2(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M23.f_2)
  return _internal_mutable_f_2()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34>* Message9_M5_M11_M23::mutable_f_2()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.M11.M23.f_2)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_2();
}
inline const ::fleetbench::proto::Message9_M5_M11_M23_M34& Message9_M5_M11_M23::f_2(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M23.f_2)
  return _internal_f_2().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11_M23_M34* Message9_M5_M11_M23::add_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11_M23_M34* _add = _internal_mutable_f_2()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.M11.M23.f_2)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34>& Message9_M5_M11_M23::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.M11.M23.f_2)
  return _internal_f_2();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34>&
Message9_M5_M11_M23::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11_M23_M34>*
Message9_M5_M11_M23::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_2_;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M25_M31

// optional int64 f_0 = 1;
inline bool Message9_M5_M11_M25_M31::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M25_M31::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Message9_M5_M11_M25_M31::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M25.M31.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M25_M31::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M25.M31.f_0)
}
inline ::int64_t Message9_M5_M11_M25_M31::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M25_M31::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M25.M31.E18 f_1 = 2;
inline bool Message9_M5_M11_M25_M31::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M25_M31::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::fleetbench::proto::Message9_M5_M11_M25_M31_E18 Message9_M5_M11_M25_M31::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M25.M31.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M25_M31::set_f_1(::fleetbench::proto::Message9_M5_M11_M25_M31_E18 value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M25.M31.f_1)
}
inline ::fleetbench::proto::Message9_M5_M11_M25_M31_E18 Message9_M5_M11_M25_M31::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M25_M31_E18>(_impl_.f_1_);
}
inline void Message9_M5_M11_M25_M31::_internal_set_f_1(::fleetbench::proto::Message9_M5_M11_M25_M31_E18 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M25_M31_E18_IsValid(value));
  _impl_.f_1_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11_M25

// optional string f_0 = 1;
inline bool Message9_M5_M11_M25::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M25::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M25::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M25.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M25::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M25.f_0)
}
inline std::string* Message9_M5_M11_M25::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M25.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11_M25::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11_M25::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M25::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M25::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M25.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M25::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M25.f_0)
}

// optional .fleetbench.proto.Message9.M5.M11.M25.M31 f_1 = 2;
inline bool Message9_M5_M11_M25::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_1_ != nullptr);
  return value;
}
inline void Message9_M5_M11_M25::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ != nullptr) _impl_.f_1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M25_M31& Message9_M5_M11_M25::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M25_M31* p = _impl_.f_1_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M25_M31&>(::fleetbench::proto::_Message9_M5_M11_M25_M31_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M25_M31& Message9_M5_M11_M25::f_1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M25.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M25::unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M25_M31* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_1_);
  }
  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M25_M31*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.M25.f_1)
}
inline ::fleetbench::proto::Message9_M5_M11_M25_M31* Message9_M5_M11_M25::release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M25_M31* released = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M25_M31* Message9_M5_M11_M25::unsafe_arena_release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M25.f_1)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M25_M31* temp = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M25_M31* Message9_M5_M11_M25::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M25_M31>(GetArena());
    _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M25_M31*>(p);
  }
  return _impl_.f_1_;
}
inline ::fleetbench::proto::Message9_M5_M11_M25_M31* Message9_M5_M11_M25::mutable_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M25_M31* _msg = _internal_mutable_f_1();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M25.f_1)
  return _msg;
}
inline void Message9_M5_M11_M25::set_allocated_f_1(::fleetbench::proto::Message9_M5_M11_M25_M31* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M25_M31*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M25.f_1)
}

// -------------------------------------------------------------------

// Message9_M5_M11_M30

// optional int32 f_0 = 2;
inline bool Message9_M5_M11_M30::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t Message9_M5_M11_M30::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_0)
  return _internal_f_0();
}
inline void Message9_M5_M11_M30::set_f_0(::int32_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_0)
}
inline ::int32_t Message9_M5_M11_M30::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5_M11_M30::_internal_set_f_0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional int32 f_1 = 4;
inline bool Message9_M5_M11_M30::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t Message9_M5_M11_M30::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_1)
  return _internal_f_1();
}
inline void Message9_M5_M11_M30::set_f_1(::int32_t value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_1)
}
inline ::int32_t Message9_M5_M11_M30::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M5_M11_M30::_internal_set_f_1(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// optional bytes f_2 = 5;
inline bool Message9_M5_M11_M30::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11_M30::f_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_2)
  return _internal_f_2();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M30::set_f_2(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_2_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_2)
}
inline std::string* Message9_M5_M11_M30::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M30.f_2)
  return _s;
}
inline const std::string& Message9_M5_M11_M30::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_.Get();
}
inline void Message9_M5_M11_M30::_internal_set_f_2(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_2_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M30::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_2_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M30::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M30.f_2)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_2_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_2_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M30::set_allocated_f_2(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_2_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_2_.IsDefault()) {
          _impl_.f_2_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M30.f_2)
}

// optional int64 f_3 = 6;
inline bool Message9_M5_M11_M30::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int64_t Message9_M5_M11_M30::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11_M30::set_f_3(::int64_t value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_3)
}
inline ::int64_t Message9_M5_M11_M30::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M5_M11_M30::_internal_set_f_3(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional string f_4 = 7;
inline bool Message9_M5_M11_M30::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Message9_M5_M11_M30::f_4() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_4)
  return _internal_f_4();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M30::set_f_4(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_4_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_4)
}
inline std::string* Message9_M5_M11_M30::mutable_f_4() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_4();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M30.f_4)
  return _s;
}
inline const std::string& Message9_M5_M11_M30::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_.Get();
}
inline void Message9_M5_M11_M30::_internal_set_f_4(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.f_4_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M30::_internal_mutable_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.f_4_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M30::release_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M30.f_4)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.f_4_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_4_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M30::set_allocated_f_4(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.f_4_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_4_.IsDefault()) {
          _impl_.f_4_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M30.f_4)
}

// optional int32 f_5 = 8;
inline bool Message9_M5_M11_M30::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int32_t Message9_M5_M11_M30::f_5() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_5)
  return _internal_f_5();
}
inline void Message9_M5_M11_M30::set_f_5(::int32_t value) {
  _internal_set_f_5(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_5)
}
inline ::int32_t Message9_M5_M11_M30::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_;
}
inline void Message9_M5_M11_M30::_internal_set_f_5(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = value;
}

// optional fixed32 f_6 = 9;
inline bool Message9_M5_M11_M30::has_f_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::uint32_t Message9_M5_M11_M30::f_6() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_6)
  return _internal_f_6();
}
inline void Message9_M5_M11_M30::set_f_6(::uint32_t value) {
  _internal_set_f_6(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_6)
}
inline ::uint32_t Message9_M5_M11_M30::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_6_;
}
inline void Message9_M5_M11_M30::_internal_set_f_6(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = value;
}

// optional int32 f_7 = 10;
inline bool Message9_M5_M11_M30::has_f_7() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int32_t Message9_M5_M11_M30::f_7() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_7)
  return _internal_f_7();
}
inline void Message9_M5_M11_M30::set_f_7(::int32_t value) {
  _internal_set_f_7(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_7)
}
inline ::int32_t Message9_M5_M11_M30::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_7_;
}
inline void Message9_M5_M11_M30::_internal_set_f_7(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_ = value;
}

// optional int64 f_8 = 11;
inline bool Message9_M5_M11_M30::has_f_8() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_8() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int64_t Message9_M5_M11_M30::f_8() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_8)
  return _internal_f_8();
}
inline void Message9_M5_M11_M30::set_f_8(::int64_t value) {
  _internal_set_f_8(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_8)
}
inline ::int64_t Message9_M5_M11_M30::_internal_f_8() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_8_;
}
inline void Message9_M5_M11_M30::_internal_set_f_8(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_8_ = value;
}

// optional int32 f_9 = 13;
inline bool Message9_M5_M11_M30::has_f_9() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_9() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int32_t Message9_M5_M11_M30::f_9() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_9)
  return _internal_f_9();
}
inline void Message9_M5_M11_M30::set_f_9(::int32_t value) {
  _internal_set_f_9(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_9)
}
inline ::int32_t Message9_M5_M11_M30::_internal_f_9() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_9_;
}
inline void Message9_M5_M11_M30::_internal_set_f_9(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_9_ = value;
}

// optional string f_10 = 14;
inline bool Message9_M5_M11_M30::has_f_10() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Message9_M5_M11_M30::f_10() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_10)
  return _internal_f_10();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M30::set_f_10(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_10_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_10)
}
inline std::string* Message9_M5_M11_M30::mutable_f_10() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_10();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M30.f_10)
  return _s;
}
inline const std::string& Message9_M5_M11_M30::_internal_f_10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_10_.Get();
}
inline void Message9_M5_M11_M30::_internal_set_f_10(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.f_10_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M30::_internal_mutable_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.f_10_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M30::release_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M30.f_10)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.f_10_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_10_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M30::set_allocated_f_10(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.f_10_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_10_.IsDefault()) {
          _impl_.f_10_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M30.f_10)
}

// optional string f_11 = 15;
inline bool Message9_M5_M11_M30::has_f_11() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_11_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Message9_M5_M11_M30::f_11() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_11)
  return _internal_f_11();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M30::set_f_11(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_11_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_11)
}
inline std::string* Message9_M5_M11_M30::mutable_f_11() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_11();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M30.f_11)
  return _s;
}
inline const std::string& Message9_M5_M11_M30::_internal_f_11() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_11_.Get();
}
inline void Message9_M5_M11_M30::_internal_set_f_11(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.f_11_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M30::_internal_mutable_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.f_11_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M30::release_f_11() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M30.f_11)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.f_11_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_11_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M30::set_allocated_f_11(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.f_11_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_11_.IsDefault()) {
          _impl_.f_11_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M30.f_11)
}

// optional uint64 f_12 = 16;
inline bool Message9_M5_M11_M30::has_f_12() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_12() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::uint64_t Message9_M5_M11_M30::f_12() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_12)
  return _internal_f_12();
}
inline void Message9_M5_M11_M30::set_f_12(::uint64_t value) {
  _internal_set_f_12(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_12)
}
inline ::uint64_t Message9_M5_M11_M30::_internal_f_12() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_12_;
}
inline void Message9_M5_M11_M30::_internal_set_f_12(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_12_ = value;
}

// optional int64 f_13 = 17;
inline bool Message9_M5_M11_M30::has_f_13() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int64_t Message9_M5_M11_M30::f_13() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_13)
  return _internal_f_13();
}
inline void Message9_M5_M11_M30::set_f_13(::int64_t value) {
  _internal_set_f_13(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_13)
}
inline ::int64_t Message9_M5_M11_M30::_internal_f_13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_13_;
}
inline void Message9_M5_M11_M30::_internal_set_f_13(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_ = value;
}

// optional uint64 f_14 = 19;
inline bool Message9_M5_M11_M30::has_f_14() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_14() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::uint64_t Message9_M5_M11_M30::f_14() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_14)
  return _internal_f_14();
}
inline void Message9_M5_M11_M30::set_f_14(::uint64_t value) {
  _internal_set_f_14(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_14)
}
inline ::uint64_t Message9_M5_M11_M30::_internal_f_14() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_14_;
}
inline void Message9_M5_M11_M30::_internal_set_f_14(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_14_ = value;
}

// optional int64 f_15 = 20;
inline bool Message9_M5_M11_M30::has_f_15() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_15() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::int64_t Message9_M5_M11_M30::f_15() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_15)
  return _internal_f_15();
}
inline void Message9_M5_M11_M30::set_f_15(::int64_t value) {
  _internal_set_f_15(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_15)
}
inline ::int64_t Message9_M5_M11_M30::_internal_f_15() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_15_;
}
inline void Message9_M5_M11_M30::_internal_set_f_15(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_15_ = value;
}

// optional int32 f_16 = 22;
inline bool Message9_M5_M11_M30::has_f_16() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::int32_t Message9_M5_M11_M30::f_16() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_16)
  return _internal_f_16();
}
inline void Message9_M5_M11_M30::set_f_16(::int32_t value) {
  _internal_set_f_16(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_16)
}
inline ::int32_t Message9_M5_M11_M30::_internal_f_16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_16_;
}
inline void Message9_M5_M11_M30::_internal_set_f_16(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_ = value;
}

// optional int32 f_17 = 23;
inline bool Message9_M5_M11_M30::has_f_17() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_17() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_ = 0;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::int32_t Message9_M5_M11_M30::f_17() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_17)
  return _internal_f_17();
}
inline void Message9_M5_M11_M30::set_f_17(::int32_t value) {
  _internal_set_f_17(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_17)
}
inline ::int32_t Message9_M5_M11_M30::_internal_f_17() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_17_;
}
inline void Message9_M5_M11_M30::_internal_set_f_17(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_17_ = value;
}

// optional string f_18 = 24;
inline bool Message9_M5_M11_M30::has_f_18() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_18_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Message9_M5_M11_M30::f_18() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_18)
  return _internal_f_18();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M30::set_f_18(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_18_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_18)
}
inline std::string* Message9_M5_M11_M30::mutable_f_18() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_18();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M30.f_18)
  return _s;
}
inline const std::string& Message9_M5_M11_M30::_internal_f_18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_18_.Get();
}
inline void Message9_M5_M11_M30::_internal_set_f_18(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.f_18_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M30::_internal_mutable_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.f_18_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M30::release_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M30.f_18)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.f_18_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_18_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M30::set_allocated_f_18(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.f_18_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_18_.IsDefault()) {
          _impl_.f_18_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M30.f_18)
}

// optional int64 f_19 = 25;
inline bool Message9_M5_M11_M30::has_f_19() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_19() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline ::int64_t Message9_M5_M11_M30::f_19() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_19)
  return _internal_f_19();
}
inline void Message9_M5_M11_M30::set_f_19(::int64_t value) {
  _internal_set_f_19(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_19)
}
inline ::int64_t Message9_M5_M11_M30::_internal_f_19() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_19_;
}
inline void Message9_M5_M11_M30::_internal_set_f_19(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_19_ = value;
}

// optional bool f_20 = 26;
inline bool Message9_M5_M11_M30::has_f_20() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_20() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_ = false;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline bool Message9_M5_M11_M30::f_20() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_20)
  return _internal_f_20();
}
inline void Message9_M5_M11_M30::set_f_20(bool value) {
  _internal_set_f_20(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_20)
}
inline bool Message9_M5_M11_M30::_internal_f_20() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_20_;
}
inline void Message9_M5_M11_M30::_internal_set_f_20(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_ = value;
}

// optional string f_21 = 27;
inline bool Message9_M5_M11_M30::has_f_21() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& Message9_M5_M11_M30::f_21() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_21)
  return _internal_f_21();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M30::set_f_21(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_21_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_21)
}
inline std::string* Message9_M5_M11_M30::mutable_f_21() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_21();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M30.f_21)
  return _s;
}
inline const std::string& Message9_M5_M11_M30::_internal_f_21() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_21_.Get();
}
inline void Message9_M5_M11_M30::_internal_set_f_21(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.f_21_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M30::_internal_mutable_f_21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.f_21_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M30::release_f_21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M30.f_21)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.f_21_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_21_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M30::set_allocated_f_21(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.f_21_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_21_.IsDefault()) {
          _impl_.f_21_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M30.f_21)
}

// optional float f_22 = 28;
inline bool Message9_M5_M11_M30::has_f_22() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = 0;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline float Message9_M5_M11_M30::f_22() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_22)
  return _internal_f_22();
}
inline void Message9_M5_M11_M30::set_f_22(float value) {
  _internal_set_f_22(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_22)
}
inline float Message9_M5_M11_M30::_internal_f_22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_22_;
}
inline void Message9_M5_M11_M30::_internal_set_f_22(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_22_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M30.E16 f_23 = 30;
inline bool Message9_M5_M11_M30::has_f_23() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_23() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_23_ = 0;
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M30_E16 Message9_M5_M11_M30::f_23() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_23)
  return _internal_f_23();
}
inline void Message9_M5_M11_M30::set_f_23(::fleetbench::proto::Message9_M5_M11_M30_E16 value) {
  _internal_set_f_23(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_23)
}
inline ::fleetbench::proto::Message9_M5_M11_M30_E16 Message9_M5_M11_M30::_internal_f_23() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M30_E16>(_impl_.f_23_);
}
inline void Message9_M5_M11_M30::_internal_set_f_23(::fleetbench::proto::Message9_M5_M11_M30_E16 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M30_E16_IsValid(value));
  _impl_.f_23_ = value;
}

// optional .fleetbench.proto.Message9.M5.M11.M30.E17 f_24 = 32;
inline bool Message9_M5_M11_M30::has_f_24() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_24() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_24_ = 0;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline ::fleetbench::proto::Message9_M5_M11_M30_E17 Message9_M5_M11_M30::f_24() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_24)
  return _internal_f_24();
}
inline void Message9_M5_M11_M30::set_f_24(::fleetbench::proto::Message9_M5_M11_M30_E17 value) {
  _internal_set_f_24(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_24)
}
inline ::fleetbench::proto::Message9_M5_M11_M30_E17 Message9_M5_M11_M30::_internal_f_24() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M5_M11_M30_E17>(_impl_.f_24_);
}
inline void Message9_M5_M11_M30::_internal_set_f_24(::fleetbench::proto::Message9_M5_M11_M30_E17 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M5_M11_M30_E17_IsValid(value));
  _impl_.f_24_ = value;
}

// optional int64 f_25 = 33;
inline bool Message9_M5_M11_M30::has_f_25() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_25_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline ::int64_t Message9_M5_M11_M30::f_25() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_25)
  return _internal_f_25();
}
inline void Message9_M5_M11_M30::set_f_25(::int64_t value) {
  _internal_set_f_25(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_25)
}
inline ::int64_t Message9_M5_M11_M30::_internal_f_25() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_25_;
}
inline void Message9_M5_M11_M30::_internal_set_f_25(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_25_ = value;
}

// optional int64 f_26 = 34;
inline bool Message9_M5_M11_M30::has_f_26() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_26() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_26_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline ::int64_t Message9_M5_M11_M30::f_26() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_26)
  return _internal_f_26();
}
inline void Message9_M5_M11_M30::set_f_26(::int64_t value) {
  _internal_set_f_26(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_26)
}
inline ::int64_t Message9_M5_M11_M30::_internal_f_26() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_26_;
}
inline void Message9_M5_M11_M30::_internal_set_f_26(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_26_ = value;
}

// optional string f_27 = 35;
inline bool Message9_M5_M11_M30::has_f_27() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_27_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& Message9_M5_M11_M30::f_27() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_27)
  return _internal_f_27();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11_M30::set_f_27(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_27_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_27)
}
inline std::string* Message9_M5_M11_M30::mutable_f_27() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_27();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.M30.f_27)
  return _s;
}
inline const std::string& Message9_M5_M11_M30::_internal_f_27() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_27_.Get();
}
inline void Message9_M5_M11_M30::_internal_set_f_27(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.f_27_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11_M30::_internal_mutable_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.f_27_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11_M30::release_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.M30.f_27)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.f_27_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_27_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11_M30::set_allocated_f_27(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.f_27_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_27_.IsDefault()) {
          _impl_.f_27_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.M30.f_27)
}

// optional int64 f_28 = 37;
inline bool Message9_M5_M11_M30::has_f_28() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void Message9_M5_M11_M30::clear_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_28_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline ::int64_t Message9_M5_M11_M30::f_28() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.M30.f_28)
  return _internal_f_28();
}
inline void Message9_M5_M11_M30::set_f_28(::int64_t value) {
  _internal_set_f_28(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.M30.f_28)
}
inline ::int64_t Message9_M5_M11_M30::_internal_f_28() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_28_;
}
inline void Message9_M5_M11_M30::_internal_set_f_28(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_28_ = value;
}

// -------------------------------------------------------------------

// Message9_M5_M11

// optional string f_0 = 2;
inline bool Message9_M5_M11::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5_M11::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M5_M11::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M5_M11::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.M11.f_0)
}
inline std::string* Message9_M5_M11::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.f_0)
  return _s;
}
inline const std::string& Message9_M5_M11::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M5_M11::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M5_M11::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M5_M11::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M5_M11::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.f_0)
}

// optional .fleetbench.proto.Message9.M5.M11.M23 f_2 = 3;
inline bool Message9_M5_M11::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_2_ != nullptr);
  return value;
}
inline void Message9_M5_M11::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ != nullptr) _impl_.f_2_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M23& Message9_M5_M11::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M23* p = _impl_.f_2_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M23&>(::fleetbench::proto::_Message9_M5_M11_M23_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M23& Message9_M5_M11::f_2() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.f_2)
  return _internal_f_2();
}
inline void Message9_M5_M11::unsafe_arena_set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_2_);
  }
  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.f_2)
}
inline ::fleetbench::proto::Message9_M5_M11_M23* Message9_M5_M11::release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23* released = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M23* Message9_M5_M11::unsafe_arena_release_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.f_2)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23* temp = _impl_.f_2_;
  _impl_.f_2_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M23* Message9_M5_M11::_internal_mutable_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_2_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M23>(GetArena());
    _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23*>(p);
  }
  return _impl_.f_2_;
}
inline ::fleetbench::proto::Message9_M5_M11_M23* Message9_M5_M11::mutable_f_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M5_M11_M23* _msg = _internal_mutable_f_2();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.f_2)
  return _msg;
}
inline void Message9_M5_M11::set_allocated_f_2(::fleetbench::proto::Message9_M5_M11_M23* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_2_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_2_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M23*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.f_2)
}

// optional .fleetbench.proto.Message9.M5.M11.M25 f_3 = 5;
inline bool Message9_M5_M11::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_3_ != nullptr);
  return value;
}
inline void Message9_M5_M11::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ != nullptr) _impl_.f_3_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M25& Message9_M5_M11::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M25* p = _impl_.f_3_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M25&>(::fleetbench::proto::_Message9_M5_M11_M25_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M25& Message9_M5_M11::f_3() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.f_3)
  return _internal_f_3();
}
inline void Message9_M5_M11::unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M25* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_3_);
  }
  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M25*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.f_3)
}
inline ::fleetbench::proto::Message9_M5_M11_M25* Message9_M5_M11::release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M25* released = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M25* Message9_M5_M11::unsafe_arena_release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.f_3)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M25* temp = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M25* Message9_M5_M11::_internal_mutable_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M25>(GetArena());
    _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M25*>(p);
  }
  return _impl_.f_3_;
}
inline ::fleetbench::proto::Message9_M5_M11_M25* Message9_M5_M11::mutable_f_3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::fleetbench::proto::Message9_M5_M11_M25* _msg = _internal_mutable_f_3();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.f_3)
  return _msg;
}
inline void Message9_M5_M11::set_allocated_f_3(::fleetbench::proto::Message9_M5_M11_M25* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_3_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M25*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.f_3)
}

// optional .fleetbench.proto.Message9.M5.M11.M30 f_5 = 6;
inline bool Message9_M5_M11::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_5_ != nullptr);
  return value;
}
inline void Message9_M5_M11::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_5_ != nullptr) _impl_.f_5_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::fleetbench::proto::Message9_M5_M11_M30& Message9_M5_M11::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M5_M11_M30* p = _impl_.f_5_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M5_M11_M30&>(::fleetbench::proto::_Message9_M5_M11_M30_default_instance_);
}
inline const ::fleetbench::proto::Message9_M5_M11_M30& Message9_M5_M11::f_5() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.M11.f_5)
  return _internal_f_5();
}
inline void Message9_M5_M11::unsafe_arena_set_allocated_f_5(::fleetbench::proto::Message9_M5_M11_M30* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_5_);
  }
  _impl_.f_5_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M30*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M5.M11.f_5)
}
inline ::fleetbench::proto::Message9_M5_M11_M30* Message9_M5_M11::release_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::fleetbench::proto::Message9_M5_M11_M30* released = _impl_.f_5_;
  _impl_.f_5_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M5_M11_M30* Message9_M5_M11::unsafe_arena_release_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M5.M11.f_5)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::fleetbench::proto::Message9_M5_M11_M30* temp = _impl_.f_5_;
  _impl_.f_5_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M5_M11_M30* Message9_M5_M11::_internal_mutable_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_5_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M5_M11_M30>(GetArena());
    _impl_.f_5_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M30*>(p);
  }
  return _impl_.f_5_;
}
inline ::fleetbench::proto::Message9_M5_M11_M30* Message9_M5_M11::mutable_f_5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::fleetbench::proto::Message9_M5_M11_M30* _msg = _internal_mutable_f_5();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.M11.f_5)
  return _msg;
}
inline void Message9_M5_M11::set_allocated_f_5(::fleetbench::proto::Message9_M5_M11_M30* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_5_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.f_5_ = reinterpret_cast<::fleetbench::proto::Message9_M5_M11_M30*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M5.M11.f_5)
}

// -------------------------------------------------------------------

// Message9_M5

// optional int64 f_0 = 3;
inline bool Message9_M5::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M5::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Message9_M5::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.f_0)
  return _internal_f_0();
}
inline void Message9_M5::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M5.f_0)
}
inline ::int64_t Message9_M5::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M5::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// repeated .fleetbench.proto.Message9.M5.M11 f_3 = 4;
inline int Message9_M5::_internal_f_3_size() const {
  return _internal_f_3().size();
}
inline int Message9_M5::f_3_size() const {
  return _internal_f_3_size();
}
inline void Message9_M5::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_.Clear();
}
inline ::fleetbench::proto::Message9_M5_M11* Message9_M5::mutable_f_3(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M5.f_3)
  return _internal_mutable_f_3()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11>* Message9_M5::mutable_f_3()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M5.f_3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_3();
}
inline const ::fleetbench::proto::Message9_M5_M11& Message9_M5::f_3(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M5.f_3)
  return _internal_f_3().Get(index);
}
inline ::fleetbench::proto::Message9_M5_M11* Message9_M5::add_f_3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5_M11* _add = _internal_mutable_f_3()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M5.f_3)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11>& Message9_M5::f_3() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M5.f_3)
  return _internal_f_3();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11>&
Message9_M5::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5_M11>*
Message9_M5::_internal_mutable_f_3() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_3_;
}

// -------------------------------------------------------------------

// Message9_M6_M12

// optional float f_0 = 1;
inline bool Message9_M6_M12::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M6_M12::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float Message9_M6_M12::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.M12.f_0)
  return _internal_f_0();
}
inline void Message9_M6_M12::set_f_0(float value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M6.M12.f_0)
}
inline float Message9_M6_M12::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M6_M12::_internal_set_f_0(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional int64 f_1 = 3;
inline bool Message9_M6_M12::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M6_M12::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Message9_M6_M12::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.M12.f_1)
  return _internal_f_1();
}
inline void Message9_M6_M12::set_f_1(::int64_t value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M6.M12.f_1)
}
inline ::int64_t Message9_M6_M12::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M6_M12::_internal_set_f_1(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// optional bool f_2 = 4;
inline bool Message9_M6_M12::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M6_M12::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool Message9_M6_M12::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.M12.f_2)
  return _internal_f_2();
}
inline void Message9_M6_M12::set_f_2(bool value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M6.M12.f_2)
}
inline bool Message9_M6_M12::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline void Message9_M6_M12::_internal_set_f_2(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = value;
}

// optional bool f_3 = 5;
inline bool Message9_M6_M12::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M6_M12::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool Message9_M6_M12::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.M12.f_3)
  return _internal_f_3();
}
inline void Message9_M6_M12::set_f_3(bool value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M6.M12.f_3)
}
inline bool Message9_M6_M12::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M6_M12::_internal_set_f_3(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional int64 f_4 = 7;
inline bool Message9_M6_M12::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M6_M12::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t Message9_M6_M12::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.M12.f_4)
  return _internal_f_4();
}
inline void Message9_M6_M12::set_f_4(::int64_t value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M6.M12.f_4)
}
inline ::int64_t Message9_M6_M12::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M6_M12::_internal_set_f_4(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional fixed64 f_5 = 9;
inline bool Message9_M6_M12::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M6_M12::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint64_t Message9_M6_M12::f_5() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.M12.f_5)
  return _internal_f_5();
}
inline void Message9_M6_M12::set_f_5(::uint64_t value) {
  _internal_set_f_5(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M6.M12.f_5)
}
inline ::uint64_t Message9_M6_M12::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_;
}
inline void Message9_M6_M12::_internal_set_f_5(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = value;
}

// optional int64 f_6 = 10;
inline bool Message9_M6_M12::has_f_6() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9_M6_M12::clear_f_6() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t Message9_M6_M12::f_6() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.M12.f_6)
  return _internal_f_6();
}
inline void Message9_M6_M12::set_f_6(::int64_t value) {
  _internal_set_f_6(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M6.M12.f_6)
}
inline ::int64_t Message9_M6_M12::_internal_f_6() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_6_;
}
inline void Message9_M6_M12::_internal_set_f_6(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_6_ = value;
}

// -------------------------------------------------------------------

// Message9_M6_M15

// optional fixed64 f_0 = 3;
inline bool Message9_M6_M15::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M6_M15::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t Message9_M6_M15::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.M15.f_0)
  return _internal_f_0();
}
inline void Message9_M6_M15::set_f_0(::uint64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M6.M15.f_0)
}
inline ::uint64_t Message9_M6_M15::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M6_M15::_internal_set_f_0(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M6_M17_M22

// optional .fleetbench.proto.Message9.M6.M17.M22.E7 f_0 = 1;
inline bool Message9_M6_M17_M22::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M6_M17_M22::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::fleetbench::proto::Message9_M6_M17_M22_E7 Message9_M6_M17_M22::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.M17.M22.f_0)
  return _internal_f_0();
}
inline void Message9_M6_M17_M22::set_f_0(::fleetbench::proto::Message9_M6_M17_M22_E7 value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M6.M17.M22.f_0)
}
inline ::fleetbench::proto::Message9_M6_M17_M22_E7 Message9_M6_M17_M22::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M6_M17_M22_E7>(_impl_.f_0_);
}
inline void Message9_M6_M17_M22::_internal_set_f_0(::fleetbench::proto::Message9_M6_M17_M22_E7 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M6_M17_M22_E7_IsValid(value));
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M6_M17

// optional int32 f_0 = 1;
inline bool Message9_M6_M17::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M6_M17::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t Message9_M6_M17::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.M17.f_0)
  return _internal_f_0();
}
inline void Message9_M6_M17::set_f_0(::int32_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M6.M17.f_0)
}
inline ::int32_t Message9_M6_M17::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M6_M17::_internal_set_f_0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M6.M17.M22 f_1 = 2;
inline bool Message9_M6_M17::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_1_ != nullptr);
  return value;
}
inline void Message9_M6_M17::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ != nullptr) _impl_.f_1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M6_M17_M22& Message9_M6_M17::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M6_M17_M22* p = _impl_.f_1_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M6_M17_M22&>(::fleetbench::proto::_Message9_M6_M17_M22_default_instance_);
}
inline const ::fleetbench::proto::Message9_M6_M17_M22& Message9_M6_M17::f_1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.M17.f_1)
  return _internal_f_1();
}
inline void Message9_M6_M17::unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M6_M17_M22* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_1_);
  }
  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M6_M17_M22*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M6.M17.f_1)
}
inline ::fleetbench::proto::Message9_M6_M17_M22* Message9_M6_M17::release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M6_M17_M22* released = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M6_M17_M22* Message9_M6_M17::unsafe_arena_release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M6.M17.f_1)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M6_M17_M22* temp = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M6_M17_M22* Message9_M6_M17::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M6_M17_M22>(GetArena());
    _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M6_M17_M22*>(p);
  }
  return _impl_.f_1_;
}
inline ::fleetbench::proto::Message9_M6_M17_M22* Message9_M6_M17::mutable_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M6_M17_M22* _msg = _internal_mutable_f_1();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M6.M17.f_1)
  return _msg;
}
inline void Message9_M6_M17::set_allocated_f_1(::fleetbench::proto::Message9_M6_M17_M22* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M6_M17_M22*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M6.M17.f_1)
}

// -------------------------------------------------------------------

// Message9_M6

// optional bytes f_0 = 3;
inline bool Message9_M6::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M6::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Message9_M6::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.f_0)
  return _internal_f_0();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message9_M6::set_f_0(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M6.f_0)
}
inline std::string* Message9_M6::mutable_f_0() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_f_0();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M6.f_0)
  return _s;
}
inline const std::string& Message9_M6::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_.Get();
}
inline void Message9_M6::_internal_set_f_0(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.f_0_.Set(value, GetArena());
}
inline std::string* Message9_M6::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.f_0_.Mutable( GetArena());
}
inline std::string* Message9_M6::release_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M6.f_0)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.f_0_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.f_0_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Message9_M6::set_allocated_f_0(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.f_0_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.f_0_.IsDefault()) {
          _impl_.f_0_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M6.f_0)
}

// optional .fleetbench.proto.Message9.M6.M12 f_3 = 5;
inline bool Message9_M6::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_3_ != nullptr);
  return value;
}
inline void Message9_M6::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ != nullptr) _impl_.f_3_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M6_M12& Message9_M6::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M6_M12* p = _impl_.f_3_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M6_M12&>(::fleetbench::proto::_Message9_M6_M12_default_instance_);
}
inline const ::fleetbench::proto::Message9_M6_M12& Message9_M6::f_3() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.f_3)
  return _internal_f_3();
}
inline void Message9_M6::unsafe_arena_set_allocated_f_3(::fleetbench::proto::Message9_M6_M12* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_3_);
  }
  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M6_M12*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M6.f_3)
}
inline ::fleetbench::proto::Message9_M6_M12* Message9_M6::release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M6_M12* released = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M6_M12* Message9_M6::unsafe_arena_release_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M6.f_3)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M6_M12* temp = _impl_.f_3_;
  _impl_.f_3_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M6_M12* Message9_M6::_internal_mutable_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_3_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M6_M12>(GetArena());
    _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M6_M12*>(p);
  }
  return _impl_.f_3_;
}
inline ::fleetbench::proto::Message9_M6_M12* Message9_M6::mutable_f_3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M6_M12* _msg = _internal_mutable_f_3();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M6.f_3)
  return _msg;
}
inline void Message9_M6::set_allocated_f_3(::fleetbench::proto::Message9_M6_M12* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_3_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_3_ = reinterpret_cast<::fleetbench::proto::Message9_M6_M12*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M6.f_3)
}

// optional .fleetbench.proto.Message9.M6.M15 f_5 = 7;
inline bool Message9_M6::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_5_ != nullptr);
  return value;
}
inline void Message9_M6::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_5_ != nullptr) _impl_.f_5_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::fleetbench::proto::Message9_M6_M15& Message9_M6::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M6_M15* p = _impl_.f_5_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M6_M15&>(::fleetbench::proto::_Message9_M6_M15_default_instance_);
}
inline const ::fleetbench::proto::Message9_M6_M15& Message9_M6::f_5() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.f_5)
  return _internal_f_5();
}
inline void Message9_M6::unsafe_arena_set_allocated_f_5(::fleetbench::proto::Message9_M6_M15* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_5_);
  }
  _impl_.f_5_ = reinterpret_cast<::fleetbench::proto::Message9_M6_M15*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M6.f_5)
}
inline ::fleetbench::proto::Message9_M6_M15* Message9_M6::release_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M6_M15* released = _impl_.f_5_;
  _impl_.f_5_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M6_M15* Message9_M6::unsafe_arena_release_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M6.f_5)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M6_M15* temp = _impl_.f_5_;
  _impl_.f_5_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M6_M15* Message9_M6::_internal_mutable_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_5_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M6_M15>(GetArena());
    _impl_.f_5_ = reinterpret_cast<::fleetbench::proto::Message9_M6_M15*>(p);
  }
  return _impl_.f_5_;
}
inline ::fleetbench::proto::Message9_M6_M15* Message9_M6::mutable_f_5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::fleetbench::proto::Message9_M6_M15* _msg = _internal_mutable_f_5();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M6.f_5)
  return _msg;
}
inline void Message9_M6::set_allocated_f_5(::fleetbench::proto::Message9_M6_M15* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_5_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.f_5_ = reinterpret_cast<::fleetbench::proto::Message9_M6_M15*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M6.f_5)
}

// repeated .fleetbench.proto.Message9.M6.M17 f_7 = 8;
inline int Message9_M6::_internal_f_7_size() const {
  return _internal_f_7().size();
}
inline int Message9_M6::f_7_size() const {
  return _internal_f_7_size();
}
inline void Message9_M6::clear_f_7() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_7_.Clear();
}
inline ::fleetbench::proto::Message9_M6_M17* Message9_M6::mutable_f_7(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M6.f_7)
  return _internal_mutable_f_7()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M6_M17>* Message9_M6::mutable_f_7()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M6.f_7)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_7();
}
inline const ::fleetbench::proto::Message9_M6_M17& Message9_M6::f_7(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M6.f_7)
  return _internal_f_7().Get(index);
}
inline ::fleetbench::proto::Message9_M6_M17* Message9_M6::add_f_7() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M6_M17* _add = _internal_mutable_f_7()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M6.f_7)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M6_M17>& Message9_M6::f_7() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M6.f_7)
  return _internal_f_7();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M6_M17>&
Message9_M6::_internal_f_7() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_7_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M6_M17>*
Message9_M6::_internal_mutable_f_7() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_7_;
}

// -------------------------------------------------------------------

// Message9_M7_M16_M26_M32

// optional int64 f_0 = 1;
inline bool Message9_M7_M16_M26_M32::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M7_M16_M26_M32::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t Message9_M7_M16_M26_M32::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.M26.M32.f_0)
  return _internal_f_0();
}
inline void Message9_M7_M16_M26_M32::set_f_0(::int64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.M16.M26.M32.f_0)
}
inline ::int64_t Message9_M7_M16_M26_M32::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M7_M16_M26_M32::_internal_set_f_0(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M7_M16_M26_M33

// optional double f_0 = 2;
inline bool Message9_M7_M16_M26_M33::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M7_M16_M26_M33::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Message9_M7_M16_M26_M33::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.M26.M33.f_0)
  return _internal_f_0();
}
inline void Message9_M7_M16_M26_M33::set_f_0(double value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.M16.M26.M33.f_0)
}
inline double Message9_M7_M16_M26_M33::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M7_M16_M26_M33::_internal_set_f_0(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional int64 f_1 = 4;
inline bool Message9_M7_M16_M26_M33::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M7_M16_M26_M33::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t Message9_M7_M16_M26_M33::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.M26.M33.f_1)
  return _internal_f_1();
}
inline void Message9_M7_M16_M26_M33::set_f_1(::int64_t value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.M16.M26.M33.f_1)
}
inline ::int64_t Message9_M7_M16_M26_M33::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M7_M16_M26_M33::_internal_set_f_1(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// -------------------------------------------------------------------

// Message9_M7_M16_M26

// optional .fleetbench.proto.Message9.M7.M16.M26.E14 f_0 = 1;
inline bool Message9_M7_M16_M26::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M7_M16_M26::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::fleetbench::proto::Message9_M7_M16_M26_E14 Message9_M7_M16_M26::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.M26.f_0)
  return _internal_f_0();
}
inline void Message9_M7_M16_M26::set_f_0(::fleetbench::proto::Message9_M7_M16_M26_E14 value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.M16.M26.f_0)
}
inline ::fleetbench::proto::Message9_M7_M16_M26_E14 Message9_M7_M16_M26::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M7_M16_M26_E14>(_impl_.f_0_);
}
inline void Message9_M7_M16_M26::_internal_set_f_0(::fleetbench::proto::Message9_M7_M16_M26_E14 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M7_M16_M26_E14_IsValid(value));
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.M7.M16.M26.M32 f_1 = 3;
inline bool Message9_M7_M16_M26::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_1_ != nullptr);
  return value;
}
inline void Message9_M7_M16_M26::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ != nullptr) _impl_.f_1_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M7_M16_M26_M32& Message9_M7_M16_M26::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M7_M16_M26_M32* p = _impl_.f_1_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M7_M16_M26_M32&>(::fleetbench::proto::_Message9_M7_M16_M26_M32_default_instance_);
}
inline const ::fleetbench::proto::Message9_M7_M16_M26_M32& Message9_M7_M16_M26::f_1() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.M26.f_1)
  return _internal_f_1();
}
inline void Message9_M7_M16_M26::unsafe_arena_set_allocated_f_1(::fleetbench::proto::Message9_M7_M16_M26_M32* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_1_);
  }
  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M7_M16_M26_M32*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M7.M16.M26.f_1)
}
inline ::fleetbench::proto::Message9_M7_M16_M26_M32* Message9_M7_M16_M26::release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M7_M16_M26_M32* released = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M7_M16_M26_M32* Message9_M7_M16_M26::unsafe_arena_release_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M7.M16.M26.f_1)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M7_M16_M26_M32* temp = _impl_.f_1_;
  _impl_.f_1_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M7_M16_M26_M32* Message9_M7_M16_M26::_internal_mutable_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_1_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M7_M16_M26_M32>(GetArena());
    _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M7_M16_M26_M32*>(p);
  }
  return _impl_.f_1_;
}
inline ::fleetbench::proto::Message9_M7_M16_M26_M32* Message9_M7_M16_M26::mutable_f_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M7_M16_M26_M32* _msg = _internal_mutable_f_1();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M7.M16.M26.f_1)
  return _msg;
}
inline void Message9_M7_M16_M26::set_allocated_f_1(::fleetbench::proto::Message9_M7_M16_M26_M32* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_1_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_1_ = reinterpret_cast<::fleetbench::proto::Message9_M7_M16_M26_M32*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M7.M16.M26.f_1)
}

// repeated .fleetbench.proto.Message9.M7.M16.M26.M33 f_3 = 4;
inline int Message9_M7_M16_M26::_internal_f_3_size() const {
  return _internal_f_3().size();
}
inline int Message9_M7_M16_M26::f_3_size() const {
  return _internal_f_3_size();
}
inline void Message9_M7_M16_M26::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_.Clear();
}
inline ::fleetbench::proto::Message9_M7_M16_M26_M33* Message9_M7_M16_M26::mutable_f_3(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M7.M16.M26.f_3)
  return _internal_mutable_f_3()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26_M33>* Message9_M7_M16_M26::mutable_f_3()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M7.M16.M26.f_3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_3();
}
inline const ::fleetbench::proto::Message9_M7_M16_M26_M33& Message9_M7_M16_M26::f_3(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.M26.f_3)
  return _internal_f_3().Get(index);
}
inline ::fleetbench::proto::Message9_M7_M16_M26_M33* Message9_M7_M16_M26::add_f_3() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M7_M16_M26_M33* _add = _internal_mutable_f_3()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M7.M16.M26.f_3)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26_M33>& Message9_M7_M16_M26::f_3() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M7.M16.M26.f_3)
  return _internal_f_3();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26_M33>&
Message9_M7_M16_M26::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26_M33>*
Message9_M7_M16_M26::_internal_mutable_f_3() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_3_;
}

// -------------------------------------------------------------------

// Message9_M7_M16

// optional .fleetbench.proto.Message9.M7.M16.E5 f_0 = 2;
inline bool Message9_M7_M16::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M7_M16::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::fleetbench::proto::Message9_M7_M16_E5 Message9_M7_M16::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.f_0)
  return _internal_f_0();
}
inline void Message9_M7_M16::set_f_0(::fleetbench::proto::Message9_M7_M16_E5 value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.M16.f_0)
}
inline ::fleetbench::proto::Message9_M7_M16_E5 Message9_M7_M16::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M7_M16_E5>(_impl_.f_0_);
}
inline void Message9_M7_M16::_internal_set_f_0(::fleetbench::proto::Message9_M7_M16_E5 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M7_M16_E5_IsValid(value));
  _impl_.f_0_ = value;
}

// optional bool f_1 = 3;
inline bool Message9_M7_M16::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M7_M16::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool Message9_M7_M16::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.f_1)
  return _internal_f_1();
}
inline void Message9_M7_M16::set_f_1(bool value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.M16.f_1)
}
inline bool Message9_M7_M16::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M7_M16::_internal_set_f_1(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// optional fixed32 f_2 = 6;
inline bool Message9_M7_M16::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M7_M16::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t Message9_M7_M16::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.f_2)
  return _internal_f_2();
}
inline void Message9_M7_M16::set_f_2(::uint32_t value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.M16.f_2)
}
inline ::uint32_t Message9_M7_M16::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline void Message9_M7_M16::_internal_set_f_2(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = value;
}

// optional double f_3 = 8;
inline bool Message9_M7_M16::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M7_M16::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double Message9_M7_M16::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.f_3)
  return _internal_f_3();
}
inline void Message9_M7_M16::set_f_3(double value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.M16.f_3)
}
inline double Message9_M7_M16::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M7_M16::_internal_set_f_3(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional int32 f_4 = 10;
inline bool Message9_M7_M16::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M7_M16::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t Message9_M7_M16::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.f_4)
  return _internal_f_4();
}
inline void Message9_M7_M16::set_f_4(::int32_t value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.M16.f_4)
}
inline ::int32_t Message9_M7_M16::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M7_M16::_internal_set_f_4(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// repeated .fleetbench.proto.Message9.M7.M16.M26 f_10 = 12;
inline int Message9_M7_M16::_internal_f_10_size() const {
  return _internal_f_10().size();
}
inline int Message9_M7_M16::f_10_size() const {
  return _internal_f_10_size();
}
inline void Message9_M7_M16::clear_f_10() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_10_.Clear();
}
inline ::fleetbench::proto::Message9_M7_M16_M26* Message9_M7_M16::mutable_f_10(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M7.M16.f_10)
  return _internal_mutable_f_10()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26>* Message9_M7_M16::mutable_f_10()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M7.M16.f_10)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_10();
}
inline const ::fleetbench::proto::Message9_M7_M16_M26& Message9_M7_M16::f_10(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.M16.f_10)
  return _internal_f_10().Get(index);
}
inline ::fleetbench::proto::Message9_M7_M16_M26* Message9_M7_M16::add_f_10() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M7_M16_M26* _add = _internal_mutable_f_10()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M7.M16.f_10)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26>& Message9_M7_M16::f_10() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M7.M16.f_10)
  return _internal_f_10();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26>&
Message9_M7_M16::_internal_f_10() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_10_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M7_M16_M26>*
Message9_M7_M16::_internal_mutable_f_10() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_10_;
}

// -------------------------------------------------------------------

// Message9_M7

// repeated int32 f_0 = 2 [packed = true];
inline int Message9_M7::_internal_f_0_size() const {
  return _internal_f_0().size();
}
inline int Message9_M7::f_0_size() const {
  return _internal_f_0_size();
}
inline void Message9_M7::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_.Clear();
}
inline ::int32_t Message9_M7::f_0(int index) const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.f_0)
  return _internal_f_0().Get(index);
}
inline void Message9_M7::set_f_0(int index, ::int32_t value) {
  _internal_mutable_f_0()->Set(index, value);
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.f_0)
}
inline void Message9_M7::add_f_0(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_f_0()->Add(value);
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.M7.f_0)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Message9_M7::f_0() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.M7.f_0)
  return _internal_f_0();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M7::mutable_f_0()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.M7.f_0)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_0();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Message9_M7::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Message9_M7::_internal_mutable_f_0() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_0_;
}

// optional int64 f_1 = 3;
inline bool Message9_M7::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M7::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t Message9_M7::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.f_1)
  return _internal_f_1();
}
inline void Message9_M7::set_f_1(::int64_t value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.f_1)
}
inline ::int64_t Message9_M7::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M7::_internal_set_f_1(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// optional bool f_2 = 5;
inline bool Message9_M7::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M7::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool Message9_M7::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.f_2)
  return _internal_f_2();
}
inline void Message9_M7::set_f_2(bool value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M7.f_2)
}
inline bool Message9_M7::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline void Message9_M7::_internal_set_f_2(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = value;
}

// optional .fleetbench.proto.Message9.M7.M16 f_5 = 7;
inline bool Message9_M7::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_5_ != nullptr);
  return value;
}
inline void Message9_M7::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_5_ != nullptr) _impl_.f_5_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M7_M16& Message9_M7::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M7_M16* p = _impl_.f_5_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M7_M16&>(::fleetbench::proto::_Message9_M7_M16_default_instance_);
}
inline const ::fleetbench::proto::Message9_M7_M16& Message9_M7::f_5() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M7.f_5)
  return _internal_f_5();
}
inline void Message9_M7::unsafe_arena_set_allocated_f_5(::fleetbench::proto::Message9_M7_M16* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_5_);
  }
  _impl_.f_5_ = reinterpret_cast<::fleetbench::proto::Message9_M7_M16*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.M7.f_5)
}
inline ::fleetbench::proto::Message9_M7_M16* Message9_M7::release_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M7_M16* released = _impl_.f_5_;
  _impl_.f_5_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M7_M16* Message9_M7::unsafe_arena_release_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.M7.f_5)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M7_M16* temp = _impl_.f_5_;
  _impl_.f_5_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M7_M16* Message9_M7::_internal_mutable_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_5_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M7_M16>(GetArena());
    _impl_.f_5_ = reinterpret_cast<::fleetbench::proto::Message9_M7_M16*>(p);
  }
  return _impl_.f_5_;
}
inline ::fleetbench::proto::Message9_M7_M16* Message9_M7::mutable_f_5() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M7_M16* _msg = _internal_mutable_f_5();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.M7.f_5)
  return _msg;
}
inline void Message9_M7::set_allocated_f_5(::fleetbench::proto::Message9_M7_M16* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_5_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_5_ = reinterpret_cast<::fleetbench::proto::Message9_M7_M16*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.M7.f_5)
}

// -------------------------------------------------------------------

// Message9_M8

// optional double f_0 = 1;
inline bool Message9_M8::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M8::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double Message9_M8::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M8.f_0)
  return _internal_f_0();
}
inline void Message9_M8::set_f_0(double value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M8.f_0)
}
inline double Message9_M8::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M8::_internal_set_f_0(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// -------------------------------------------------------------------

// Message9_M9

// optional uint64 f_0 = 1;
inline bool Message9_M9::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Message9_M9::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t Message9_M9::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M9.f_0)
  return _internal_f_0();
}
inline void Message9_M9::set_f_0(::uint64_t value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M9.f_0)
}
inline ::uint64_t Message9_M9::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9_M9::_internal_set_f_0(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional int64 f_1 = 2;
inline bool Message9_M9::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Message9_M9::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t Message9_M9::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M9.f_1)
  return _internal_f_1();
}
inline void Message9_M9::set_f_1(::int64_t value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M9.f_1)
}
inline ::int64_t Message9_M9::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_1_;
}
inline void Message9_M9::_internal_set_f_1(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = value;
}

// optional int64 f_2 = 3;
inline bool Message9_M9::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Message9_M9::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t Message9_M9::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M9.f_2)
  return _internal_f_2();
}
inline void Message9_M9::set_f_2(::int64_t value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M9.f_2)
}
inline ::int64_t Message9_M9::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline void Message9_M9::_internal_set_f_2(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = value;
}

// optional int64 f_3 = 5;
inline bool Message9_M9::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Message9_M9::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int64_t Message9_M9::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M9.f_3)
  return _internal_f_3();
}
inline void Message9_M9::set_f_3(::int64_t value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M9.f_3)
}
inline ::int64_t Message9_M9::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_3_;
}
inline void Message9_M9::_internal_set_f_3(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = value;
}

// optional int32 f_4 = 8;
inline bool Message9_M9::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Message9_M9::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t Message9_M9::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M9.f_4)
  return _internal_f_4();
}
inline void Message9_M9::set_f_4(::int32_t value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M9.f_4)
}
inline ::int32_t Message9_M9::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9_M9::_internal_set_f_4(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional .fleetbench.proto.Message9.M9.E4 f_5 = 10;
inline bool Message9_M9::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9_M9::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::fleetbench::proto::Message9_M9_E4 Message9_M9::f_5() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.M9.f_5)
  return _internal_f_5();
}
inline void Message9_M9::set_f_5(::fleetbench::proto::Message9_M9_E4 value) {
  _internal_set_f_5(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.M9.f_5)
}
inline ::fleetbench::proto::Message9_M9_E4 Message9_M9::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_M9_E4>(_impl_.f_5_);
}
inline void Message9_M9::_internal_set_f_5(::fleetbench::proto::Message9_M9_E4 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_M9_E4_IsValid(value));
  _impl_.f_5_ = value;
}

// -------------------------------------------------------------------

// Message9

// optional bool f_0 = 3;
inline bool Message9::has_f_0() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Message9::clear_f_0() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool Message9::f_0() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_0)
  return _internal_f_0();
}
inline void Message9::set_f_0(bool value) {
  _internal_set_f_0(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.f_0)
}
inline bool Message9::_internal_f_0() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_0_;
}
inline void Message9::_internal_set_f_0(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_0_ = value;
}

// optional .fleetbench.proto.Message9.E1 f_1 = 4;
inline bool Message9::has_f_1() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Message9::clear_f_1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_1_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::fleetbench::proto::Message9_E1 Message9::f_1() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_1)
  return _internal_f_1();
}
inline void Message9::set_f_1(::fleetbench::proto::Message9_E1 value) {
  _internal_set_f_1(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.f_1)
}
inline ::fleetbench::proto::Message9_E1 Message9::_internal_f_1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_E1>(_impl_.f_1_);
}
inline void Message9::_internal_set_f_1(::fleetbench::proto::Message9_E1 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_E1_IsValid(value));
  _impl_.f_1_ = value;
}

// optional int64 f_2 = 6;
inline bool Message9::has_f_2() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Message9::clear_f_2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int64_t Message9::f_2() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_2)
  return _internal_f_2();
}
inline void Message9::set_f_2(::int64_t value) {
  _internal_set_f_2(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.f_2)
}
inline ::int64_t Message9::_internal_f_2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_2_;
}
inline void Message9::_internal_set_f_2(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_2_ = value;
}

// optional .fleetbench.proto.Message9.E2 f_3 = 9;
inline bool Message9::has_f_3() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void Message9::clear_f_3() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_3_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::fleetbench::proto::Message9_E2 Message9::f_3() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_3)
  return _internal_f_3();
}
inline void Message9::set_f_3(::fleetbench::proto::Message9_E2 value) {
  _internal_set_f_3(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.f_3)
}
inline ::fleetbench::proto::Message9_E2 Message9::_internal_f_3() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::fleetbench::proto::Message9_E2>(_impl_.f_3_);
}
inline void Message9::_internal_set_f_3(::fleetbench::proto::Message9_E2 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::fleetbench::proto::Message9_E2_IsValid(value));
  _impl_.f_3_ = value;
}

// optional int64 f_4 = 12;
inline bool Message9::has_f_4() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void Message9::clear_f_4() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int64_t Message9::f_4() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_4)
  return _internal_f_4();
}
inline void Message9::set_f_4(::int64_t value) {
  _internal_set_f_4(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.f_4)
}
inline ::int64_t Message9::_internal_f_4() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_4_;
}
inline void Message9::_internal_set_f_4(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_4_ = value;
}

// optional int32 f_5 = 13;
inline bool Message9::has_f_5() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void Message9::clear_f_5() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t Message9::f_5() const {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_5)
  return _internal_f_5();
}
inline void Message9::set_f_5(::int32_t value) {
  _internal_set_f_5(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:fleetbench.proto.Message9.f_5)
}
inline ::int32_t Message9::_internal_f_5() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_5_;
}
inline void Message9::_internal_set_f_5(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_5_ = value;
}

// repeated .fleetbench.proto.Message9.M1 f_13 = 16;
inline int Message9::_internal_f_13_size() const {
  return _internal_f_13().size();
}
inline int Message9::f_13_size() const {
  return _internal_f_13_size();
}
inline void Message9::clear_f_13() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_13_.Clear();
}
inline ::fleetbench::proto::Message9_M1* Message9::mutable_f_13(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.f_13)
  return _internal_mutable_f_13()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M1>* Message9::mutable_f_13()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.f_13)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_13();
}
inline const ::fleetbench::proto::Message9_M1& Message9::f_13(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_13)
  return _internal_f_13().Get(index);
}
inline ::fleetbench::proto::Message9_M1* Message9::add_f_13() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M1* _add = _internal_mutable_f_13()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.f_13)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M1>& Message9::f_13() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.f_13)
  return _internal_f_13();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M1>&
Message9::_internal_f_13() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_13_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M1>*
Message9::_internal_mutable_f_13() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_13_;
}

// repeated .fleetbench.proto.Message9.M2 f_16 = 18;
inline int Message9::_internal_f_16_size() const {
  return _internal_f_16().size();
}
inline int Message9::f_16_size() const {
  return _internal_f_16_size();
}
inline void Message9::clear_f_16() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_16_.Clear();
}
inline ::fleetbench::proto::Message9_M2* Message9::mutable_f_16(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.f_16)
  return _internal_mutable_f_16()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M2>* Message9::mutable_f_16()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.f_16)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_16();
}
inline const ::fleetbench::proto::Message9_M2& Message9::f_16(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_16)
  return _internal_f_16().Get(index);
}
inline ::fleetbench::proto::Message9_M2* Message9::add_f_16() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M2* _add = _internal_mutable_f_16()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.f_16)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M2>& Message9::f_16() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.f_16)
  return _internal_f_16();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M2>&
Message9::_internal_f_16() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_16_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M2>*
Message9::_internal_mutable_f_16() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_16_;
}

// optional .fleetbench.proto.Message9.M3 f_18 = 20;
inline bool Message9::has_f_18() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_18_ != nullptr);
  return value;
}
inline void Message9::clear_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_18_ != nullptr) _impl_.f_18_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::fleetbench::proto::Message9_M3& Message9::_internal_f_18() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M3* p = _impl_.f_18_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M3&>(::fleetbench::proto::_Message9_M3_default_instance_);
}
inline const ::fleetbench::proto::Message9_M3& Message9::f_18() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_18)
  return _internal_f_18();
}
inline void Message9::unsafe_arena_set_allocated_f_18(::fleetbench::proto::Message9_M3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_18_);
  }
  _impl_.f_18_ = reinterpret_cast<::fleetbench::proto::Message9_M3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.f_18)
}
inline ::fleetbench::proto::Message9_M3* Message9::release_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M3* released = _impl_.f_18_;
  _impl_.f_18_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M3* Message9::unsafe_arena_release_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.f_18)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::fleetbench::proto::Message9_M3* temp = _impl_.f_18_;
  _impl_.f_18_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M3* Message9::_internal_mutable_f_18() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_18_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M3>(GetArena());
    _impl_.f_18_ = reinterpret_cast<::fleetbench::proto::Message9_M3*>(p);
  }
  return _impl_.f_18_;
}
inline ::fleetbench::proto::Message9_M3* Message9::mutable_f_18() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::fleetbench::proto::Message9_M3* _msg = _internal_mutable_f_18();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.f_18)
  return _msg;
}
inline void Message9::set_allocated_f_18(::fleetbench::proto::Message9_M3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_18_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.f_18_ = reinterpret_cast<::fleetbench::proto::Message9_M3*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.f_18)
}

// repeated .fleetbench.proto.Message9.M4 f_20 = 21;
inline int Message9::_internal_f_20_size() const {
  return _internal_f_20().size();
}
inline int Message9::f_20_size() const {
  return _internal_f_20_size();
}
inline void Message9::clear_f_20() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_20_.Clear();
}
inline ::fleetbench::proto::Message9_M4* Message9::mutable_f_20(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.f_20)
  return _internal_mutable_f_20()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M4>* Message9::mutable_f_20()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.f_20)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_20();
}
inline const ::fleetbench::proto::Message9_M4& Message9::f_20(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_20)
  return _internal_f_20().Get(index);
}
inline ::fleetbench::proto::Message9_M4* Message9::add_f_20() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M4* _add = _internal_mutable_f_20()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.f_20)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M4>& Message9::f_20() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.f_20)
  return _internal_f_20();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M4>&
Message9::_internal_f_20() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_20_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M4>*
Message9::_internal_mutable_f_20() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_20_;
}

// repeated .fleetbench.proto.Message9.M5 f_21 = 22;
inline int Message9::_internal_f_21_size() const {
  return _internal_f_21().size();
}
inline int Message9::f_21_size() const {
  return _internal_f_21_size();
}
inline void Message9::clear_f_21() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.f_21_.Clear();
}
inline ::fleetbench::proto::Message9_M5* Message9::mutable_f_21(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.f_21)
  return _internal_mutable_f_21()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5>* Message9::mutable_f_21()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:fleetbench.proto.Message9.f_21)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_f_21();
}
inline const ::fleetbench::proto::Message9_M5& Message9::f_21(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_21)
  return _internal_f_21().Get(index);
}
inline ::fleetbench::proto::Message9_M5* Message9::add_f_21() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::fleetbench::proto::Message9_M5* _add = _internal_mutable_f_21()->Add();
  // @@protoc_insertion_point(field_add:fleetbench.proto.Message9.f_21)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5>& Message9::f_21() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:fleetbench.proto.Message9.f_21)
  return _internal_f_21();
}
inline const ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5>&
Message9::_internal_f_21() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.f_21_;
}
inline ::google::protobuf::RepeatedPtrField<::fleetbench::proto::Message9_M5>*
Message9::_internal_mutable_f_21() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.f_21_;
}

// optional .fleetbench.proto.Message9.M6 f_22 = 25;
inline bool Message9::has_f_22() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_22_ != nullptr);
  return value;
}
inline void Message9::clear_f_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_22_ != nullptr) _impl_.f_22_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::fleetbench::proto::Message9_M6& Message9::_internal_f_22() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M6* p = _impl_.f_22_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M6&>(::fleetbench::proto::_Message9_M6_default_instance_);
}
inline const ::fleetbench::proto::Message9_M6& Message9::f_22() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_22)
  return _internal_f_22();
}
inline void Message9::unsafe_arena_set_allocated_f_22(::fleetbench::proto::Message9_M6* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_22_);
  }
  _impl_.f_22_ = reinterpret_cast<::fleetbench::proto::Message9_M6*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.f_22)
}
inline ::fleetbench::proto::Message9_M6* Message9::release_f_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M6* released = _impl_.f_22_;
  _impl_.f_22_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M6* Message9::unsafe_arena_release_f_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.f_22)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::fleetbench::proto::Message9_M6* temp = _impl_.f_22_;
  _impl_.f_22_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M6* Message9::_internal_mutable_f_22() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_22_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M6>(GetArena());
    _impl_.f_22_ = reinterpret_cast<::fleetbench::proto::Message9_M6*>(p);
  }
  return _impl_.f_22_;
}
inline ::fleetbench::proto::Message9_M6* Message9::mutable_f_22() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::fleetbench::proto::Message9_M6* _msg = _internal_mutable_f_22();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.f_22)
  return _msg;
}
inline void Message9::set_allocated_f_22(::fleetbench::proto::Message9_M6* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_22_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.f_22_ = reinterpret_cast<::fleetbench::proto::Message9_M6*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.f_22)
}

// optional .fleetbench.proto.Message9.M7 f_25 = 27;
inline bool Message9::has_f_25() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_25_ != nullptr);
  return value;
}
inline void Message9::clear_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_25_ != nullptr) _impl_.f_25_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::fleetbench::proto::Message9_M7& Message9::_internal_f_25() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M7* p = _impl_.f_25_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M7&>(::fleetbench::proto::_Message9_M7_default_instance_);
}
inline const ::fleetbench::proto::Message9_M7& Message9::f_25() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_25)
  return _internal_f_25();
}
inline void Message9::unsafe_arena_set_allocated_f_25(::fleetbench::proto::Message9_M7* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_25_);
  }
  _impl_.f_25_ = reinterpret_cast<::fleetbench::proto::Message9_M7*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.f_25)
}
inline ::fleetbench::proto::Message9_M7* Message9::release_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M7* released = _impl_.f_25_;
  _impl_.f_25_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M7* Message9::unsafe_arena_release_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.f_25)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::fleetbench::proto::Message9_M7* temp = _impl_.f_25_;
  _impl_.f_25_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M7* Message9::_internal_mutable_f_25() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_25_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M7>(GetArena());
    _impl_.f_25_ = reinterpret_cast<::fleetbench::proto::Message9_M7*>(p);
  }
  return _impl_.f_25_;
}
inline ::fleetbench::proto::Message9_M7* Message9::mutable_f_25() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::fleetbench::proto::Message9_M7* _msg = _internal_mutable_f_25();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.f_25)
  return _msg;
}
inline void Message9::set_allocated_f_25(::fleetbench::proto::Message9_M7* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_25_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.f_25_ = reinterpret_cast<::fleetbench::proto::Message9_M7*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.f_25)
}

// optional .fleetbench.proto.Message9.M8 f_27 = 28;
inline bool Message9::has_f_27() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_27_ != nullptr);
  return value;
}
inline void Message9::clear_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_27_ != nullptr) _impl_.f_27_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::fleetbench::proto::Message9_M8& Message9::_internal_f_27() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M8* p = _impl_.f_27_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M8&>(::fleetbench::proto::_Message9_M8_default_instance_);
}
inline const ::fleetbench::proto::Message9_M8& Message9::f_27() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_27)
  return _internal_f_27();
}
inline void Message9::unsafe_arena_set_allocated_f_27(::fleetbench::proto::Message9_M8* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_27_);
  }
  _impl_.f_27_ = reinterpret_cast<::fleetbench::proto::Message9_M8*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.f_27)
}
inline ::fleetbench::proto::Message9_M8* Message9::release_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::fleetbench::proto::Message9_M8* released = _impl_.f_27_;
  _impl_.f_27_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M8* Message9::unsafe_arena_release_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.f_27)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::fleetbench::proto::Message9_M8* temp = _impl_.f_27_;
  _impl_.f_27_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M8* Message9::_internal_mutable_f_27() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_27_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M8>(GetArena());
    _impl_.f_27_ = reinterpret_cast<::fleetbench::proto::Message9_M8*>(p);
  }
  return _impl_.f_27_;
}
inline ::fleetbench::proto::Message9_M8* Message9::mutable_f_27() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::fleetbench::proto::Message9_M8* _msg = _internal_mutable_f_27();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.f_27)
  return _msg;
}
inline void Message9::set_allocated_f_27(::fleetbench::proto::Message9_M8* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_27_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.f_27_ = reinterpret_cast<::fleetbench::proto::Message9_M8*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.f_27)
}

// optional .fleetbench.proto.Message9.M9 f_28 = 29;
inline bool Message9::has_f_28() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.f_28_ != nullptr);
  return value;
}
inline void Message9::clear_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_28_ != nullptr) _impl_.f_28_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::fleetbench::proto::Message9_M9& Message9::_internal_f_28() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::fleetbench::proto::Message9_M9* p = _impl_.f_28_;
  return p != nullptr ? *p : reinterpret_cast<const ::fleetbench::proto::Message9_M9&>(::fleetbench::proto::_Message9_M9_default_instance_);
}
inline const ::fleetbench::proto::Message9_M9& Message9::f_28() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:fleetbench.proto.Message9.f_28)
  return _internal_f_28();
}
inline void Message9::unsafe_arena_set_allocated_f_28(::fleetbench::proto::Message9_M9* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.f_28_);
  }
  _impl_.f_28_ = reinterpret_cast<::fleetbench::proto::Message9_M9*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fleetbench.proto.Message9.f_28)
}
inline ::fleetbench::proto::Message9_M9* Message9::release_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::fleetbench::proto::Message9_M9* released = _impl_.f_28_;
  _impl_.f_28_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::fleetbench::proto::Message9_M9* Message9::unsafe_arena_release_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:fleetbench.proto.Message9.f_28)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::fleetbench::proto::Message9_M9* temp = _impl_.f_28_;
  _impl_.f_28_ = nullptr;
  return temp;
}
inline ::fleetbench::proto::Message9_M9* Message9::_internal_mutable_f_28() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.f_28_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::fleetbench::proto::Message9_M9>(GetArena());
    _impl_.f_28_ = reinterpret_cast<::fleetbench::proto::Message9_M9*>(p);
  }
  return _impl_.f_28_;
}
inline ::fleetbench::proto::Message9_M9* Message9::mutable_f_28() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::fleetbench::proto::Message9_M9* _msg = _internal_mutable_f_28();
  // @@protoc_insertion_point(field_mutable:fleetbench.proto.Message9.f_28)
  return _msg;
}
inline void Message9::set_allocated_f_28(::fleetbench::proto::Message9_M9* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.f_28_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.f_28_ = reinterpret_cast<::fleetbench::proto::Message9_M9*>(value);
  // @@protoc_insertion_point(field_set_allocated:fleetbench.proto.Message9.f_28)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace fleetbench


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::fleetbench::proto::Message9_M1_M18_E6> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M1_M18_E6>() {
  return ::fleetbench::proto::Message9_M1_M18_E6_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M2_E3> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M2_E3>() {
  return ::fleetbench::proto::Message9_M2_E3_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_M35_E19> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_M35_E19>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_M35_E19_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_M35_E20> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_M35_E20>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_M35_E20_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_M35_E21> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_M35_E21>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_M35_E21_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_M35_E22> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_M35_E22>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_M35_E22_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_M35_E23> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_M35_E23>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_M35_E23_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_M35_E24> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_M35_E24>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_M35_E24_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_M35_E25> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_M35_E25>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_M35_E25_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_E8> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_E8>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_E8_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_E9> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_E9>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_E9_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_E10> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_E10>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_E10_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_E11> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_E11>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_E11_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_E12> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_E12>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_E12_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M13_M24_E13> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M13_M24_E13>() {
  return ::fleetbench::proto::Message9_M3_M13_M24_E13_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M3_M20_M29_E15> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M3_M20_M29_E15>() {
  return ::fleetbench::proto::Message9_M3_M20_M29_E15_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M48_E37_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E54_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E55_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E56_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E57_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E58_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E59_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E60_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E61_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E62_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E63_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E64_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E65_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E66_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E67_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E68_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E69_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E70_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E71_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E72_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E73_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E74_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E75_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E76_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E77_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E78_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E79_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E80_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E81_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E82_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E83_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E84_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E85_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E86_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E87_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E88_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E89_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E90_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E91_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E92_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E93_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E94_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E95_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E96_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_M73_E97_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E50_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E51_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E52_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_M65_M67_M69_M70_M71_M72_E53_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_M63_E49_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_M59_E48_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E40_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E41_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E42_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E43_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E44_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E45_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E46_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_M58_E47_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M36_M40_M51_E38_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M42_E36_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_M44_M55_E39_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E32_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E33_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E34_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_M41_E35_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E26_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E27_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E28_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E29_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E30_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31>() {
  return ::fleetbench::proto::Message9_M5_M11_M23_M34_M37_E31_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M25_M31_E18> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M25_M31_E18>() {
  return ::fleetbench::proto::Message9_M5_M11_M25_M31_E18_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M30_E16> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M30_E16>() {
  return ::fleetbench::proto::Message9_M5_M11_M30_E16_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M5_M11_M30_E17> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M5_M11_M30_E17>() {
  return ::fleetbench::proto::Message9_M5_M11_M30_E17_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M6_M17_M22_E7> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M6_M17_M22_E7>() {
  return ::fleetbench::proto::Message9_M6_M17_M22_E7_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M7_M16_M26_E14> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M7_M16_M26_E14>() {
  return ::fleetbench::proto::Message9_M7_M16_M26_E14_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M7_M16_E5> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M7_M16_E5>() {
  return ::fleetbench::proto::Message9_M7_M16_E5_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_M9_E4> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_M9_E4>() {
  return ::fleetbench::proto::Message9_M9_E4_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_E1> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_E1>() {
  return ::fleetbench::proto::Message9_E1_descriptor();
}
template <>
struct is_proto_enum<::fleetbench::proto::Message9_E2> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::fleetbench::proto::Message9_E2>() {
  return ::fleetbench::proto::Message9_E2_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_protos_2fMessage9_2eproto_2epb_2eh
